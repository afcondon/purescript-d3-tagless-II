/* Generated by Spago v0.93.44 */
(() => {
  // output/Control.Apply/foreign.js
  var arrayApply = function(fs) {
    return function(xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l * k);
      var n = 0;
      for (var i2 = 0; i2 < l; i2++) {
        var f = fs[i2];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g) {
        return function(x8) {
          return f(g(x8));
        };
      };
    }
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x8) {
      return x8;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var on = function(f) {
    return function(g) {
      return function(x8) {
        return function(y7) {
          return f(g(x8))(g(y7));
        };
      };
    };
  };
  var flip = function(f) {
    return function(b2) {
      return function(a2) {
        return f(a2)(b2);
      };
    };
  };
  var $$const = function(a2) {
    return function(v) {
      return a2;
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ (function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  })();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map116 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map116(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map116 = map(dictFunctor);
    return function(f) {
      return function(x8) {
        return map116($$const(x8))(f);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map116 = map(dictFunctor);
    return function(x8) {
      return map116($$const(x8));
    };
  };
  var functorArray = {
    map: arrayMap
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var applyArray = {
    apply: arrayApply,
    Functor0: function() {
      return functorArray;
    }
  };
  var apply = function(dict) {
    return dict.apply;
  };
  var applyFirst = function(dictApply) {
    var apply1 = apply(dictApply);
    var map50 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply1(map50($$const)(a2))(b2);
      };
    };
  };
  var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map50 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply1(map50($$const(identity2))(a2))(b2);
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure111 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (!v) {
          return v1;
        }
        ;
        if (v) {
          return pure111(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure111 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1;
        }
        ;
        if (!v) {
          return pure111(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    var pure111 = pure(dictApplicative);
    return function(f) {
      return function(a2) {
        return apply6(pure111(f))(a2);
      };
    };
  };
  var applicativeArray = {
    pure: function(x8) {
      return [x8];
    },
    Apply0: function() {
      return applyArray;
    }
  };

  // output/Control.Bind/foreign.js
  var arrayBind = function(arr) {
    return function(f) {
      var result = [];
      for (var i2 = 0, l = arr.length; i2 < l; i2++) {
        Array.prototype.push.apply(result, f(arr[i2]));
      }
      return result;
    };
  };

  // output/Control.Bind/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var discard = function(dict) {
    return dict.discard;
  };
  var bindArray = {
    bind: arrayBind,
    Apply0: function() {
      return applyArray;
    }
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped12 = bindFlipped(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bindFlipped12(f)(g(a2));
        };
      };
    };
  };
  var composeKleisli = function(dictBind) {
    var bind111 = bind(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bind111(f(a2))(g);
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };
  var join = function(dictBind) {
    var bind111 = bind(dictBind);
    return function(m) {
      return bind111(m)(identity3);
    };
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq5) {
      return function(gt) {
        return function(x8) {
          return function(y7) {
            return x8 < y7 ? lt : x8 === y7 ? eq5 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r2) {
      return r1 === r2;
    };
  };
  var eqBooleanImpl = refEq;
  var eqIntImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Record.Unsafe/foreign.js
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };
  var unsafeSet = function(label5) {
    return function(value15) {
      return function(rec) {
        var copy2 = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy2[key] = rec[key];
          }
        }
        copy2[label5] = value15;
        return copy2;
      };
    };
  };

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eqBoolean = {
    eq: eqBooleanImpl
  };
  var eq = function(dict) {
    return dict.eq;
  };
  var eq2 = /* @__PURE__ */ eq(eqBoolean);
  var notEq = function(dictEq) {
    var eq32 = eq(dictEq);
    return function(x8) {
      return function(y7) {
        return eq2(eq32(x8)(y7))(false);
      };
    };
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ (function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  })();
  var GT = /* @__PURE__ */ (function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  })();
  var EQ = /* @__PURE__ */ (function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  })();

  // output/Data.Ring/foreign.js
  var intSub = function(x8) {
    return function(y7) {
      return x8 - y7 | 0;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x8) {
    return function(y7) {
      return x8 + y7 | 0;
    };
  };
  var intMul = function(x8) {
    return function(y7) {
      return x8 * y7 | 0;
    };
  };
  var numAdd = function(n1) {
    return function(n2) {
      return n1 + n2;
    };
  };
  var numMul = function(n1) {
    return function(n2) {
      return n1 * n2;
    };
  };

  // output/Data.Semiring/index.js
  var zero = function(dict) {
    return dict.zero;
  };
  var semiringNumber = {
    add: numAdd,
    zero: 0,
    mul: numMul,
    one: 1
  };
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };
  var one = function(dict) {
    return dict.one;
  };
  var mul = function(dict) {
    return dict.mul;
  };
  var add = function(dict) {
    return dict.add;
  };

  // output/Data.Ring/index.js
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };

  // output/Data.Ord/index.js
  var ordUnit = {
    compare: function(v) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ (function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  })();
  var ordInt = /* @__PURE__ */ (function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  })();
  var ordChar = /* @__PURE__ */ (function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  })();
  var compare = function(dict) {
    return dict.compare;
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
  var showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c, i2) {
        switch (c) {
          case '"':
          case "\\":
            return "\\" + c;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i2 + 1;
        var empty8 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty8;
      }
    ) + '"';
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showNumber = {
    show: showNumberImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var show = function(dict) {
    return dict.show;
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a2) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a2))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
      ff: function(v) {
        return ff1;
      },
      tt: function(v) {
        return tt1;
      },
      implies: function(f) {
        return function(g) {
          return function(a2) {
            return implies1(f(a2))(g(a2));
          };
        };
      },
      conj: function(f) {
        return function(g) {
          return function(a2) {
            return conj1(f(a2))(g(a2));
          };
        };
      },
      disj: function(f) {
        return function(g) {
          return function(a2) {
            return disj1(f(a2))(g(a2));
          };
        };
      },
      not: function(f) {
        return function(a2) {
          return not1(f(a2));
        };
      }
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x8) {
    return Math.min(Math.abs(x8), 2147483647);
  };
  var intDiv = function(x8) {
    return function(y7) {
      if (y7 === 0) return 0;
      return y7 > 0 ? Math.floor(x8 / y7) : -Math.floor(x8 / -y7);
    };
  };
  var intMod = function(x8) {
    return function(y7) {
      if (y7 === 0) return 0;
      var yy = Math.abs(y7);
      return (x8 % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };
  var semigroupFn = function(dictSemigroup) {
    var append18 = append(dictSemigroup);
    return {
      append: function(f) {
        return function(g) {
          return function(x8) {
            return append18(f(x8))(g(x8));
          };
        };
      }
    };
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var monoidArray = {
    mempty: [],
    Semigroup0: function() {
      return semigroupArray;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };
  var monoidFn = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var semigroupFn2 = semigroupFn(dictMonoid.Semigroup0());
    return {
      mempty: function(v) {
        return mempty1;
      },
      Semigroup0: function() {
        return semigroupFn2;
      }
    };
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ (function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  })();
  var snd = function(v) {
    return v.value1;
  };
  var functorTuple = {
    map: function(f) {
      return function(m) {
        return new Tuple(m.value0, f(m.value1));
      };
    }
  };
  var fst = function(v) {
    return v.value0;
  };
  var eqTuple = function(dictEq) {
    var eq5 = eq(dictEq);
    return function(dictEq1) {
      var eq12 = eq(dictEq1);
      return {
        eq: function(x8) {
          return function(y7) {
            return eq5(x8.value0)(y7.value0) && eq12(x8.value1)(y7.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare2 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare12 = compare(dictOrd1);
      var eqTuple2 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x8) {
          return function(y7) {
            var v = compare2(x8.value0)(y7.value0);
            if (v instanceof LT) {
              return LT.value;
            }
            ;
            if (v instanceof GT) {
              return GT.value;
            }
            ;
            return compare12(x8.value1)(y7.value1);
          };
        },
        Eq0: function() {
          return eqTuple2;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var modify_ = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(unit, f(s));
      });
    };
  };
  var modify = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        var s$prime = f(s);
        return new Tuple(s$prime, s$prime);
      });
    };
  };
  var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(f(s), s);
      });
    };
  };
  var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
      return new Tuple(s, s);
    });
  };

  // output/Control.Alt/index.js
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Data.Maybe/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ (function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  })();
  var Just = /* @__PURE__ */ (function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  })();
  var maybe = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v;
        }
        ;
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a2) {
    return maybe(a2)(identity4);
  };
  var fromJust = function() {
    return function(v) {
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
    };
  };
  var applyMaybe = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return map2(v.value0)(v1);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v1(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ (function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  })();
  var altMaybe = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Nothing) {
          return v1;
        }
        ;
        return v;
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var plusMaybe = /* @__PURE__ */ (function() {
    return {
      empty: Nothing.value,
      Alt0: function() {
        return altMaybe;
      }
    };
  })();
  var alternativeMaybe = {
    Applicative0: function() {
      return applicativeMaybe;
    },
    Plus1: function() {
      return plusMaybe;
    }
  };

  // output/Debug/foreign.js
  var req = typeof module === "undefined" ? void 0 : module.require;
  var util = (function() {
    try {
      return req === void 0 ? void 0 : req("util");
    } catch (e) {
      return void 0;
    }
  })();
  function _trace(x8, k) {
    if (util !== void 0) {
      console.log(util.inspect(x8, { depth: null, colors: true }));
    } else {
      console.log(x8);
    }
    return k({});
  }
  function _spy(tag, x8) {
    if (util !== void 0) {
      console.log(tag + ":", util.inspect(x8, { depth: null, colors: true }));
    } else {
      console.log(tag + ":", x8);
    }
    return x8;
  }
  var now = (function() {
    var perf;
    if (typeof performance !== "undefined") {
      perf = performance;
    } else if (req) {
      try {
        perf = req("perf_hooks").performance;
      } catch (e) {
      }
    }
    return (function() {
      return (perf || Date).now();
    });
  })();

  // output/Data.Function.Uncurried/foreign.js
  var mkFn2 = function(fn) {
    return function(a2, b2) {
      return fn(a2)(b2);
    };
  };
  var runFn3 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return fn(a2, b2, c);
        };
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return function(d2) {
            return fn(a2, b2, c, d2);
          };
        };
      };
    };
  };

  // output/Debug/index.js
  var trace = function() {
    return function(a2) {
      return function(k) {
        return _trace(a2, k);
      };
    };
  };
  var spy = function() {
    return function(tag) {
      return function(a2) {
        return _spy(tag, a2);
      };
    };
  };

  // output/Effect.Aff/foreign.js
  var Aff = (function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error5) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error5) {
        setTimeout(function() {
          throw error5;
        }, 0);
      }
    }
    function runSync(left2, right2, eff) {
      try {
        return right2(eff());
      } catch (error5) {
        return left2(error5);
      }
    }
    function runAsync(left2, eff, k) {
      try {
        return eff(k)();
      } catch (error5) {
        k(left2(error5))();
        return nonCanceler2;
      }
    }
    var Scheduler = (function() {
      var limit = 1024;
      var size5 = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size5 !== 0) {
          size5--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size5 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix + size5) % limit] = cb;
          size5++;
          if (!draining) {
            drain();
          }
        }
      };
    })();
    function Supervisor(util2) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill2(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util2.isLeft(result) && util2.fromLeft(result)) {
                    setTimeout(function() {
                      throw util2.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill2(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error5) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util2, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step5 = aff;
      var fail3 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run3(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step5 = bhead(step5);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail3 = util2.left(e);
                step5 = null;
              }
              break;
            case STEP_RESULT:
              if (util2.isLeft(step5)) {
                status = RETURN;
                fail3 = step5;
                step5 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step5 = util2.fromRight(step5);
              }
              break;
            case CONTINUE:
              switch (step5.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step5._2;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step5 = util2.right(step5._1);
                  } else {
                    status = STEP_BIND;
                    step5 = step5._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step5 = runSync(util2.left, util2.right, step5._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step5 = runAsync(util2.left, step5._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step5 = result2;
                        run3(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail3 = util2.left(step5._1);
                  step5 = null;
                  break;
                // Enqueue the Catch so that we can call the error handler later on
                // in case of an exception.
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                // Enqueue the Bracket so that we can call the appropriate handlers
                // after resource acquisition.
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util2, supervisor, step5._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step5._1) {
                    tmp.run();
                  }
                  step5 = util2.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step5 = sequential3(util2, supervisor, step5._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step5 = interrupt || fail3 || step5;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  // We cannot recover from an unmasked interrupt. Otherwise we should
                  // continue stepping, or run the exception handler if an exception
                  // was raised.
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail3) {
                      status = CONTINUE;
                      step5 = attempt._2(util2.fromLeft(fail3));
                      fail3 = null;
                    }
                    break;
                  // We cannot resume from an unmasked interrupt or exception.
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail3) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step5 = util2.fromRight(step5);
                    }
                    break;
                  // If we have a bracket, we should enqueue the handlers,
                  // and continue with the success branch only if the fiber has
                  // not been interrupted. If the bracket acquisition failed, we
                  // should not run either.
                  case BRACKET:
                    bracketCount--;
                    if (fail3 === null) {
                      result = util2.fromRight(step5);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step5 = attempt._3(result);
                      }
                    }
                    break;
                  // Enqueue the appropriate handler. We increase the bracket count
                  // because it should not be cancelled.
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail3), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step5 = attempt._1.killed(util2.fromLeft(interrupt))(attempt._2);
                    } else if (fail3) {
                      step5 = attempt._1.failed(util2.fromLeft(fail3))(attempt._2);
                    } else {
                      step5 = attempt._1.completed(util2.fromRight(step5))(attempt._2);
                    }
                    fail3 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail3), attempts, interrupt);
                    status = CONTINUE;
                    step5 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step5 = attempt._1;
                    fail3 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step5));
                }
              }
              joins = null;
              if (interrupt && fail3) {
                setTimeout(function() {
                  throw util2.fromLeft(fail3);
                }, 0);
              } else if (util2.isLeft(step5) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util2.fromLeft(step5);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join5) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join5.rethrow;
            join5.handler(step5)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join5;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill2(error5, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util2.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util2.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util2.left(error5);
              status = COMPLETED;
              step5 = interrupt;
              run3(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util2.left(error5);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step5(error5)), attempts, interrupt);
                }
                status = RETURN;
                step5 = null;
                fail3 = null;
                run3(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util2.left(error5);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step5 = null;
                fail3 = null;
              }
          }
          return canceler;
        };
      }
      function join4(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run3(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill2,
        join: join4,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run3(runTick);
              });
            } else {
              run3(runTick);
            }
          }
        }
      };
    }
    function runPar(util2, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root2 = EMPTY;
      function kill2(error5, par2, cb2) {
        var step5 = par2;
        var head7 = null;
        var tail2 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop: while (true) {
          tmp = null;
          switch (step5.tag) {
            case FORKED:
              if (step5._3 === EMPTY) {
                tmp = fibers[step5._1];
                kills2[count++] = tmp.kill(error5, function(result) {
                  return function() {
                    count--;
                    if (count === 0) {
                      cb2(result)();
                    }
                  };
                });
              }
              if (head7 === null) {
                break loop;
              }
              step5 = head7._2;
              if (tail2 === null) {
                head7 = null;
              } else {
                head7 = tail2._1;
                tail2 = tail2._2;
              }
              break;
            case MAP:
              step5 = step5._2;
              break;
            case APPLY:
            case ALT:
              if (head7) {
                tail2 = new Aff2(CONS, head7, tail2);
              }
              head7 = step5;
              step5 = step5._1;
              break;
          }
        }
        if (count === 0) {
          cb2(util2.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join4(result, head7, tail2) {
        var fail3, step5, lhs, rhs, tmp, kid;
        if (util2.isLeft(result)) {
          fail3 = result;
          step5 = null;
        } else {
          step5 = result;
          fail3 = null;
        }
        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;
          if (interrupt !== null) {
            return;
          }
          if (head7 === null) {
            cb(fail3 || step5)();
            return;
          }
          if (head7._3 !== EMPTY) {
            return;
          }
          switch (head7.tag) {
            case MAP:
              if (fail3 === null) {
                head7._3 = util2.right(head7._1(util2.fromRight(step5)));
                step5 = head7._3;
              } else {
                head7._3 = fail3;
              }
              break;
            case APPLY:
              lhs = head7._1._3;
              rhs = head7._2._3;
              if (fail3) {
                head7._3 = fail3;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, fail3 === lhs ? head7._2 : head7._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail2 === null) {
                      join4(fail3, null, null);
                    } else {
                      join4(fail3, tail2._1, tail2._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                return;
              } else {
                step5 = util2.right(util2.fromRight(lhs)(util2.fromRight(rhs)));
                head7._3 = step5;
              }
              break;
            case ALT:
              lhs = head7._1._3;
              rhs = head7._2._3;
              if (lhs === EMPTY && util2.isLeft(rhs) || rhs === EMPTY && util2.isLeft(lhs)) {
                return;
              }
              if (lhs !== EMPTY && util2.isLeft(lhs) && rhs !== EMPTY && util2.isLeft(rhs)) {
                fail3 = step5 === lhs ? rhs : lhs;
                step5 = null;
                head7._3 = fail3;
              } else {
                head7._3 = step5;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, step5 === lhs ? head7._2 : head7._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail2 === null) {
                      join4(step5, null, null);
                    } else {
                      join4(step5, tail2._1, tail2._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              }
              break;
          }
          if (tail2 === null) {
            head7 = null;
          } else {
            head7 = tail2._1;
            tail2 = tail2._2;
          }
        }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join4(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run3() {
        var status = CONTINUE;
        var step5 = par;
        var head7 = null;
        var tail2 = null;
        var tmp, fid;
        loop: while (true) {
          tmp = null;
          fid = null;
          switch (status) {
            case CONTINUE:
              switch (step5.tag) {
                case MAP:
                  if (head7) {
                    tail2 = new Aff2(CONS, head7, tail2);
                  }
                  head7 = new Aff2(MAP, step5._1, EMPTY, EMPTY);
                  step5 = step5._2;
                  break;
                case APPLY:
                  if (head7) {
                    tail2 = new Aff2(CONS, head7, tail2);
                  }
                  head7 = new Aff2(APPLY, EMPTY, step5._2, EMPTY);
                  step5 = step5._1;
                  break;
                case ALT:
                  if (head7) {
                    tail2 = new Aff2(CONS, head7, tail2);
                  }
                  head7 = new Aff2(ALT, EMPTY, step5._2, EMPTY);
                  step5 = step5._1;
                  break;
                default:
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step5;
                  step5 = new Aff2(FORKED, fid, new Aff2(CONS, head7, tail2), EMPTY);
                  tmp = Fiber(util2, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step5)
                  })();
                  fibers[fid] = tmp;
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
              }
              break;
            case RETURN:
              if (head7 === null) {
                break loop;
              }
              if (head7._1 === EMPTY) {
                head7._1 = step5;
                status = CONTINUE;
                step5 = head7._2;
                head7._2 = EMPTY;
              } else {
                head7._2 = step5;
                step5 = head7;
                if (tail2 === null) {
                  head7 = null;
                } else {
                  head7 = tail2._1;
                  tail2 = tail2._2;
                }
              }
          }
        }
        root2 = step5;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error5, cb2) {
        interrupt = util2.left(error5);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill2(error5, root2, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run3();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util2, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util2, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  })();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value15) {
          return Aff.Pure(f(value15));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k) {
        return Aff.Bracket(acquire, options2, k);
      };
    };
  }
  function _makeFiber(util2, aff) {
    return function() {
      return Aff.Fiber(util2, null, aff);
    };
  }
  var _delay = /* @__PURE__ */ (function() {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }
    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }
    return function(right2, ms) {
      return Aff.Async(function(cb) {
        return function() {
          var timer = setDelay(ms, cb(right2()));
          return function() {
            return Aff.Sync(function() {
              return right2(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  })();
  var _sequential = Aff.Seq;

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind22 = bind(dictMonad.Bind1());
    var unless2 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m) {
        return bind22(mb)(function(b2) {
          return unless2(b2)(m);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind22 = bind(dictMonad.Bind1());
    var pure30 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a2) {
        return bind22(f)(function(f$prime) {
          return bind22(a2)(function(a$prime) {
            return pure30(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ (function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  })();
  var Right = /* @__PURE__ */ (function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  })();
  var note = function(a2) {
    return maybe(new Left(a2))(Right.create);
  };
  var functorEither = {
    map: function(f) {
      return function(m) {
        if (m instanceof Left) {
          return new Left(m.value0);
        }
        ;
        if (m instanceof Right) {
          return new Right(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var either = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var hush = /* @__PURE__ */ (function() {
    return either($$const(Nothing.value))(Just.create);
  })();
  var applyEither = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof Right) {
          return map3(v.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };

  // output/Effect/foreign.js
  var pureE = function(a2) {
    return function() {
      return a2;
    };
  };
  var bindE = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);
  var applyEffect = /* @__PURE__ */ $lazy_applyEffect(23);

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function message(e) {
    return e.message;
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map50 = map(Monad0.Bind1().Apply0().Functor0());
    var pure30 = pure(Monad0.Applicative0());
    return function(a2) {
      return catchError1(map50(Right.create)(a2))(function($52) {
        return pure30(Left.create($52));
      });
    };
  };

  // output/Data.Identity/index.js
  var Identity = function(x8) {
    return x8;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m) {
        return f(m);
      };
    }
  };
  var applyIdentity = {
    apply: function(v) {
      return function(v1) {
        return v(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v) {
      return function(f) {
        return f(v);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref2) {
      return function() {
        var t = f(ref2.value);
        ref2.value = t.state;
        return t.value;
      };
    };
  };
  var write = function(val) {
    return function(ref2) {
      return function() {
        ref2.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify2 = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_2 = function(f) {
    return function(s) {
      return $$void2(modify2(f)(s));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ (function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  })();
  var Done = /* @__PURE__ */ (function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  })();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var tailRecM2 = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    return function(f) {
      return function(a2) {
        return function(b2) {
          return tailRecM1(function(o) {
            return f(o.a)(o.b);
          })({
            a: a2,
            b: b2
          });
        };
      };
    };
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a2) {
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [v.constructor.name]);
        };
        return function __do3() {
          var r = bindFlipped2($$new)(f(a2))();
          (function() {
            while (!(function __do4() {
              var v = read(r)();
              if (v instanceof Loop) {
                var e = f(v.value0)();
                write(e)(r)();
                return false;
              }
              ;
              if (v instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [v.constructor.name]);
            })()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read(r))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };
  var forever = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    var voidRight4 = voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    return function(ma) {
      return tailRecM1(function(u2) {
        return voidRight4(new Loop(u2))(ma);
      })(unit);
    };
  };

  // output/Control.Monad.Trans.Class/index.js
  var lift = function(dict) {
    return dict.lift;
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x8) {
    return x8;
  };
  var runExceptT = function(v) {
    return v;
  };
  var mapExceptT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map116 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map116(map5(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind22 = bind(dictMonad.Bind1());
    var pure30 = pure(dictMonad.Applicative0());
    return {
      bind: function(v) {
        return function(k) {
          return bind22(v)(either(function($187) {
            return pure30(Left.create($187));
          })(function(a2) {
            var v1 = k(a2);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: (function() {
        var $188 = pure(dictMonad.Applicative0());
        return function($189) {
          return ExceptT($188(Right.create($189)));
        };
      })(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: (function() {
        var $198 = pure(dictMonad.Applicative0());
        return function($199) {
          return ExceptT($198(Left.create($199)));
        };
      })(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var altExceptT = function(dictSemigroup) {
    var append18 = append(dictSemigroup);
    return function(dictMonad) {
      var Bind1 = dictMonad.Bind1();
      var bind22 = bind(Bind1);
      var pure30 = pure(dictMonad.Applicative0());
      var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
      return {
        alt: function(v) {
          return function(v1) {
            return bind22(v)(function(rm) {
              if (rm instanceof Right) {
                return pure30(new Right(rm.value0));
              }
              ;
              if (rm instanceof Left) {
                return bind22(v1)(function(rn) {
                  if (rn instanceof Right) {
                    return pure30(new Right(rn.value0));
                  }
                  ;
                  if (rn instanceof Left) {
                    return pure30(new Left(append18(rm.value0)(rn.value0)));
                  }
                  ;
                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
                });
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
            });
          };
        },
        Functor0: function() {
          return functorExceptT1;
        }
      };
    };
  };

  // output/Control.Plus/index.js
  var empty = function(dict) {
    return dict.empty;
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x8) {
    return x8;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var unwrap = function() {
    return coerce2;
  };
  var alaF = function() {
    return function() {
      return function() {
        return function() {
          return function(v) {
            return coerce2;
          };
        };
      };
    };
  };

  // output/Data.Profunctor/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var profunctorFn = {
    dimap: function(a2b) {
      return function(c2d) {
        return function(b2c) {
          return function($18) {
            return c2d(b2c(a2b($18)));
          };
        };
      };
    }
  };
  var dimap = function(dict) {
    return dict.dimap;
  };
  var rmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(b2c) {
      return dimap1(identity5)(b2c);
    };
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init3) {
      return function(xs) {
        var acc = init3;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Data.Bifunctor/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var bimap = function(dict) {
    return dict.bimap;
  };
  var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
      return bimap1(f)(identity6);
    };
  };
  var rmap2 = function(dictBifunctor) {
    return bimap(dictBifunctor)(identity6);
  };
  var bifunctorTuple = {
    bimap: function(f) {
      return function(g) {
        return function(v) {
          return new Tuple(f(v.value0), g(v.value1));
        };
      };
    }
  };

  // output/Data.Monoid.Disj/index.js
  var Disj = function(x8) {
    return x8;
  };
  var semigroupDisj = function(dictHeytingAlgebra) {
    var disj2 = disj(dictHeytingAlgebra);
    return {
      append: function(v) {
        return function(v1) {
          return disj2(v)(v1);
        };
      }
    };
  };
  var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
      mempty: ff(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupDisj1;
      }
    };
  };

  // output/Data.Foldable/index.js
  var alaF2 = /* @__PURE__ */ alaF()()()();
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond3 = applySecond(dictApplicative.Apply0());
    var pure30 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond3(f($454));
        })(pure30(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_14 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_14(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var indexl = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(idx) {
      var go2 = function(cursor3) {
        return function(a2) {
          if (cursor3.elem instanceof Just) {
            return cursor3;
          }
          ;
          var $296 = cursor3.pos === idx;
          if ($296) {
            return {
              elem: new Just(a2),
              pos: cursor3.pos
            };
          }
          ;
          return {
            pos: cursor3.pos + 1 | 0,
            elem: cursor3.elem
          };
        };
      };
      var $455 = foldl22(go2)({
        elem: Nothing.value,
        pos: 0
      });
      return function($456) {
        return (function(v) {
          return v.elem;
        })($455($456));
      };
    };
  };
  var intercalate2 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append18 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v) {
            return function(v1) {
              if (v.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append18(v.acc)(append18(sep)(v1))
              };
            };
          };
          return foldl22(go2)({
            init: true,
            acc: mempty2
          })(xs).acc;
        };
      };
    };
  };
  var sum = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      return foldl22(add(dictSemiring))(zero(dictSemiring));
    };
  };
  var foldableMaybe = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty2;
          }
          ;
          if (v1 instanceof Just) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldableEither = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Left) {
            return mempty2;
          }
          ;
          if (v1 instanceof Right) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append18 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x8) {
          return function(acc) {
            return append18(f(x8))(acc);
          };
        })(mempty2);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var any = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Disj)(foldMap22(monoidDisj(dictHeytingAlgebra)));
    };
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = /* @__PURE__ */ (function() {
    function array1(a2) {
      return [a2];
    }
    function array2(a2) {
      return function(b2) {
        return [a2, b2];
      };
    }
    function array3(a2) {
      return function(b2) {
        return function(c) {
          return [a2, b2, c];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply6) {
      return function(map50) {
        return function(pure30) {
          return function(f) {
            return function(array) {
              function go2(bot, top4) {
                switch (top4 - bot) {
                  case 0:
                    return pure30([]);
                  case 1:
                    return map50(array1)(f(array[bot]));
                  case 2:
                    return apply6(map50(array2)(f(array[bot])))(f(array[bot + 1]));
                  case 3:
                    return apply6(apply6(map50(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top4 - bot) / 4) * 2;
                    return apply6(map50(concat2)(go2(bot, pivot)))(go2(pivot, top4));
                }
              }
              return go2(0, array.length);
            };
          };
        };
      };
    };
  })();

  // output/Data.Traversable/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse22 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse22(dictApplicative)(identity7);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };
  var sequence = function(dict) {
    return dict.sequence;
  };

  // output/Control.Parallel/index.js
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var traverse_7 = traverse_(dictParallel.Applicative1());
    var parallel3 = parallel(dictParallel);
    return function(dictFoldable) {
      var traverse_14 = traverse_7(dictFoldable);
      return function(f) {
        var $48 = traverse_14(function($50) {
          return parallel3(f($50));
        });
        return function($49) {
          return sequential3($48($49));
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictFoldable) {
      return parTraverse_1(dictFoldable)(identity8);
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy2 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void3 = /* @__PURE__ */ $$void(functorEffect);
  var map6 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x8) {
    return x8;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ (function() {
    var unsafeFromRight = function(v) {
      if (v instanceof Right) {
        return v.value0;
      }
      ;
      if (v instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 21 - line 409, column 54): " + [v.constructor.name]);
    };
    var unsafeFromLeft = function(v) {
      if (v instanceof Left) {
        return v.value0;
      }
      ;
      if (v instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 20 - line 404, column 55): " + [v.constructor.name]);
    };
    var isLeft = function(v) {
      if (v instanceof Left) {
        return true;
      }
      ;
      if (v instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 397, column 12 - line 399, column 21): " + [v.constructor.name]);
    };
    return {
      isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  })();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do3() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var delay = function(v) {
    return _delay(Right.create, v);
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy2("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a2) {
      return bracket(pure22(unit))($$const(fin))($$const(a2));
    };
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($74) {
    return Canceler($$const(liftEffect2($74)));
  };
  var joinFiber = function(v) {
    return makeAff(function(k) {
      return map6(effectCanceler)(v.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
      };
    }
  };
  var killFiber = function(e) {
    return function(v) {
      return bind1(liftEffect2(v.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void3(v.kill(e, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map6(effectCanceler)(v.kill(e, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped3(function($77) {
        return liftEffect2(k($77));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void3(runAff(k)(aff));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Monad0: function() {
      return monadAff;
    },
    Applicative1: function() {
      return $lazy_applicativeParAff(0);
    }
  };
  var $lazy_applicativeParAff = /* @__PURE__ */ $runtime_lazy2("applicativeParAff", "Effect.Aff", function() {
    return {
      pure: (function() {
        var $79 = parallel(parallelAff);
        return function($80) {
          return $79(pure22($80));
        };
      })(),
      Apply0: function() {
        return applyParAff;
      }
    };
  });
  var applicativeParAff = /* @__PURE__ */ $lazy_applicativeParAff(131);
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a2) {
        return bind1(k(a2))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));

  // output/Control.Monad.State.Trans/index.js
  var runStateT = function(v) {
    return v;
  };
  var monadTransStateT = {
    lift: function(dictMonad) {
      var bind22 = bind(dictMonad.Bind1());
      var pure30 = pure(dictMonad.Applicative0());
      return function(m) {
        return function(s) {
          return bind22(m)(function(x8) {
            return pure30(new Tuple(x8, s));
          });
        };
      };
    }
  };
  var lift3 = /* @__PURE__ */ lift(monadTransStateT);
  var functorStateT = function(dictFunctor) {
    var map50 = map(dictFunctor);
    return {
      map: function(f) {
        return function(v) {
          return function(s) {
            return map50(function(v1) {
              return new Tuple(f(v1.value0), v1.value1);
            })(v(s));
          };
        };
      }
    };
  };
  var monadStateT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeStateT(dictMonad);
      },
      Bind1: function() {
        return bindStateT(dictMonad);
      }
    };
  };
  var bindStateT = function(dictMonad) {
    var bind22 = bind(dictMonad.Bind1());
    return {
      bind: function(v) {
        return function(f) {
          return function(s) {
            return bind22(v(s))(function(v1) {
              var v3 = f(v1.value0);
              return v3(v1.value1);
            });
          };
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var applyStateT = function(dictMonad) {
    var functorStateT1 = functorStateT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadStateT(dictMonad)),
      Functor0: function() {
        return functorStateT1;
      }
    };
  };
  var applicativeStateT = function(dictMonad) {
    var pure30 = pure(dictMonad.Applicative0());
    return {
      pure: function(a2) {
        return function(s) {
          return pure30(new Tuple(a2, s));
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var monadEffectState = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadStateT1 = monadStateT(Monad0);
    return {
      liftEffect: (function() {
        var $197 = lift3(Monad0);
        var $198 = liftEffect(dictMonadEffect);
        return function($199) {
          return $197($198($199));
        };
      })(),
      Monad0: function() {
        return monadStateT1;
      }
    };
  };
  var monadStateStateT = function(dictMonad) {
    var pure30 = pure(dictMonad.Applicative0());
    var monadStateT1 = monadStateT(dictMonad);
    return {
      state: function(f) {
        return function($200) {
          return pure30(f($200));
        };
      },
      Monad0: function() {
        return monadStateT1;
      }
    };
  };

  // output/Effect.Aff.Class/index.js
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a2, r, f) {
    return a2 == null ? r : f(a2);
  }
  function notNull(x8) {
    return x8;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Web.DOM.ParentNode/index.js
  var map7 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map7(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener(type) {
    return function(listener) {
      return function(useCapture) {
        return function(target6) {
          return function() {
            return target6.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.Common/index.js
  var ClassName = function(x8) {
    return x8;
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return function() {
      return doc.readyState;
    };
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ (function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  })();
  var Interactive = /* @__PURE__ */ (function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  })();
  var Complete = /* @__PURE__ */ (function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  })();
  var parse = function(v) {
    if (v === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map8 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = /* @__PURE__ */ (function() {
    var $2 = map8((function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse($5));
      };
    })());
    return function($3) {
      return $2(_readyState($3));
    };
  })();

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value15) {
    var tag = Object.prototype.toString.call(value15);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value15);
    } else {
      return nothing;
    }
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode = unsafeCoerce2;
  var fromElement = function(x8) {
    return _read(Nothing.value, Just.create, x8);
  };

  // output/Effect.Uncurried/foreign.js
  var mkEffectFn3 = function mkEffectFn32(fn) {
    return function(a2, b2, c) {
      return fn(a2)(b2)(c)();
    };
  };

  // output/Data.Enum/foreign.js
  function toCharCode(c) {
    return c.charCodeAt(0);
  }
  function fromCharCode(c) {
    return String.fromCharCode(c);
  }

  // output/Control.Alternative/index.js
  var guard = function(dictAlternative) {
    var pure30 = pure(dictAlternative.Applicative0());
    var empty8 = empty(dictAlternative.Plus1());
    return function(v) {
      if (v) {
        return pure30(unit);
      }
      ;
      if (!v) {
        return empty8;
      }
      ;
      throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
    };
  };

  // output/Data.Unfoldable/foreign.js
  var unfoldrArrayImpl = function(isNothing2) {
    return function(fromJust7) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value15 = b2;
              while (true) {
                var maybe2 = f(value15);
                if (isNothing2(maybe2)) return result;
                var tuple = fromJust7(maybe2);
                result.push(fst2(tuple));
                value15 = snd2(tuple);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/foreign.js
  var unfoldr1ArrayImpl = function(isNothing2) {
    return function(fromJust7) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value15 = b2;
              while (true) {
                var tuple = f(value15);
                result.push(fst2(tuple));
                var maybe2 = snd2(tuple);
                if (isNothing2(maybe2)) return result;
                value15 = fromJust7(maybe2);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var unfoldable1Array = {
    unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
  };

  // output/Data.Unfoldable/index.js
  var fromJust3 = /* @__PURE__ */ fromJust();
  var unfoldr = function(dict) {
    return dict.unfoldr;
  };
  var unfoldableArray = {
    unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
    Unfoldable10: function() {
      return unfoldable1Array;
    }
  };

  // output/Data.Enum/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom1 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x8) {
          var v = toEnum1(x8);
          if (v instanceof Just) {
            return v.value0;
          }
          ;
          if (v instanceof Nothing) {
            var $140 = x8 < fromEnum1(bottom1);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v) {
    if (v >= bottom2 && v <= top2) {
      return new Just(fromCharCode(v));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ (function() {
    return {
      cardinality: toCharCode(top(boundedChar)) - toCharCode(bottom(boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  })();

  // output/Web.HTML.Location/foreign.js
  function hash(location2) {
    return function() {
      return location2.hash;
    };
  }
  function setHash(hash2) {
    return function(location2) {
      return function() {
        location2.hash = hash2;
      };
    };
  }

  // output/Web.HTML.Window/foreign.js
  function document2(window2) {
    return function() {
      return window2.document;
    };
  }
  function location(window2) {
    return function() {
      return window2.location;
    };
  }
  function innerWidth(window2) {
    return function() {
      return window2.innerWidth;
    };
  }
  function innerHeight(window2) {
    return function() {
      return window2.innerHeight;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget = unsafeCoerce2;

  // output/Web.HTML.Event.EventTypes/index.js
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";

  // output/Halogen.Aff.Util/index.js
  var bind2 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure3 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure1 = /* @__PURE__ */ pure(applicativeEffect);
  var map9 = /* @__PURE__ */ map(functorEffect);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var throwError2 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query2) {
    return bind2(liftEffect3(bindFlipped4(composeKleisliFlipped2((function() {
      var $16 = querySelector(query2);
      return function($17) {
        return $16(toParentNode($17));
      };
    })())(document2))(windowImpl)))(function(mel) {
      return pure3(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure1(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do3() {
      var rs = bindFlipped4(readyState)(bindFlipped4(document2)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map9(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return callback(new Right(unit));
        })();
        addEventListener(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard2(bindAff)(awaitLoad)(function() {
    return bind2(selectElement("body"))(function(body2) {
      return maybe(throwError2(error("Could not find body")))(pure3)(body2);
    });
  });

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ (function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  })();
  var unCoyoneda = function(f) {
    return function(v) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(i2)(xs[i2]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.FoldableWithIndex/index.js
  var foldr8 = /* @__PURE__ */ foldr(foldableArray);
  var mapWithIndex2 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var foldl8 = /* @__PURE__ */ foldl(foldableArray);
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
  };
  var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
      var append18 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldrWithIndex1(function(i2) {
          return function(x8) {
            return function(acc) {
              return append18(f(i2)(x8))(acc);
            };
          };
        })(mempty2);
      };
    };
  };
  var foldableWithIndexArray = {
    foldrWithIndex: function(f) {
      return function(z) {
        var $291 = foldr8(function(v) {
          return function(y7) {
            return f(v.value0)(v.value1)(y7);
          };
        })(z);
        var $292 = mapWithIndex2(Tuple.create);
        return function($293) {
          return $291($292($293));
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        var $294 = foldl8(function(y7) {
          return function(v) {
            return f(v.value0)(y7)(v.value1);
          };
        })(z);
        var $295 = mapWithIndex2(Tuple.create);
        return function($296) {
          return $294($295($296));
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
    },
    Foldable0: function() {
      return foldableArray;
    }
  };
  var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ (function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  })();
  var singleton2 = function(dictPlus) {
    var empty8 = empty(dictPlus);
    return function(a2) {
      return new NonEmpty(a2, empty8);
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ (function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  })();
  var Cons = /* @__PURE__ */ (function() {
    function Cons3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons3.create = function(value0) {
      return function(value1) {
        return new Cons3(value0, value1);
      };
    };
    return Cons3;
  })();
  var NonEmptyList = function(x8) {
    return x8;
  };
  var toList = function(v) {
    return new Cons(v.value0, v.value1);
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v2) {
            if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
              return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
            }
            ;
            if (v2 instanceof Cons && v2.value1 instanceof Nil) {
              return new Cons(f(v2.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v2, v3) {
                if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v2.value1;
                  $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var map10 = /* @__PURE__ */ map(functorList);
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = (function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        })();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_b = f(b2)(v.value0);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append22 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append22(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty2);
      };
    }
  };
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var semigroupNonEmptyList = {
    append: function(v) {
      return function(as$prime) {
        return new NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
      };
    }
  };
  var applyList = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(map10(v.value0)(v1))(apply(applyList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorList;
    }
  };
  var bindList = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(v1(v.value0))(bind(bindList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyList;
    }
  };
  var applicativeList = {
    pure: function(a2) {
      return new Cons(a2, Nil.value);
    },
    Apply0: function() {
      return applyList;
    }
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ (function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  })();

  // output/Data.List/index.js
  var map11 = /* @__PURE__ */ map(functorMaybe);
  var singleton3 = function(a2) {
    return new Cons(a2, Nil.value);
  };
  var reverse = /* @__PURE__ */ (function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  })();
  var unsnoc = function(lst) {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v instanceof Nil) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Cons && v.value1 instanceof Nil) {
            $tco_done = true;
            return new Just({
              revInit: v1,
              last: v.value0
            });
          }
          ;
          if (v instanceof Cons) {
            $tco_var_v = v.value1;
            $copy_v1 = new Cons(v.value0, v1);
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 21): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return map11(function(h) {
      return {
        init: reverse(h.revInit),
        last: h.last
      };
    })(go2(lst)(Nil.value));
  };
  var $$null = function(v) {
    if (v instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var fromFoldable = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };

  // output/Data.Map.Internal/index.js
  var Leaf = /* @__PURE__ */ (function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  })();
  var Two = /* @__PURE__ */ (function() {
    function Two2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Two2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Two2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Two2;
  })();
  var Three = /* @__PURE__ */ (function() {
    function Three2(value0, value1, value22, value32, value42, value52, value62) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
    }
    ;
    Three2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return new Three2(value0, value1, value22, value32, value42, value52, value62);
                };
              };
            };
          };
        };
      };
    };
    return Three2;
  })();
  var TwoLeft = /* @__PURE__ */ (function() {
    function TwoLeft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    TwoLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new TwoLeft2(value0, value1, value22);
        };
      };
    };
    return TwoLeft2;
  })();
  var TwoRight = /* @__PURE__ */ (function() {
    function TwoRight2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    TwoRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new TwoRight2(value0, value1, value22);
        };
      };
    };
    return TwoRight2;
  })();
  var ThreeLeft = /* @__PURE__ */ (function() {
    function ThreeLeft2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeLeft2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeLeft2;
  })();
  var ThreeMiddle = /* @__PURE__ */ (function() {
    function ThreeMiddle2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeMiddle2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeMiddle2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeMiddle2;
  })();
  var ThreeRight = /* @__PURE__ */ (function() {
    function ThreeRight2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeRight2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeRight2;
  })();
  var KickUp = /* @__PURE__ */ (function() {
    function KickUp2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    KickUp2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new KickUp2(value0, value1, value22, value32);
          };
        };
      };
    };
    return KickUp2;
  })();
  var singleton4 = function(k) {
    return function(v) {
      return new Two(Leaf.value, k, v, Leaf.value);
    };
  };
  var toUnfoldable = function(dictUnfoldable) {
    var unfoldr3 = unfoldr(dictUnfoldable);
    return function(m) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof Leaf) {
              $copy_v = v.value1;
              return;
            }
            ;
            if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), v.value1));
            }
            ;
            if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), new Cons(v.value0.value3, v.value1)));
            }
            ;
            if (v.value0 instanceof Two) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton4(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, v.value1)));
              return;
            }
            ;
            if (v.value0 instanceof Three) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton4(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, new Cons(singleton4(v.value0.value4)(v.value0.value5), new Cons(v.value0.value6, v.value1)))));
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return unfoldr3(go2)(new Cons(m, Nil.value));
    };
  };
  var lookup = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Two) {
            var v2 = compare2(k)(v.value1);
            if (v2 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            if (v2 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          if (v instanceof Three) {
            var v3 = compare2(k)(v.value1);
            if (v3 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            var v4 = compare2(k)(v.value4);
            if (v4 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value5);
            }
            ;
            if (v3 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            if (v4 instanceof GT) {
              $copy_v = v.value6;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var member = function(dictOrd) {
    var lookup13 = lookup(dictOrd);
    return function(k) {
      return function(m) {
        return isJust(lookup13(k)(m));
      };
    };
  };
  var functorMap = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v1 instanceof Two) {
          return new Two(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3));
        }
        ;
        if (v1 instanceof Three) {
          return new Three(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), map(functorMap)(v)(v1.value6));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 116, column 1 - line 119, column 110): " + [v.constructor.name, v1.constructor.name]);
      };
    }
  };
  var fromZipper = function($copy_dictOrd) {
    return function($copy_v) {
      return function($copy_v1) {
        var $tco_var_dictOrd = $copy_dictOrd;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(dictOrd, v, v1) {
          if (v instanceof Nil) {
            $tco_done = true;
            return v1;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof TwoLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1, v.value0.value2);
              return;
            }
            ;
            if (v.value0 instanceof TwoRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1);
              return;
            }
            ;
            if (v.value0 instanceof ThreeLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeMiddle) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
  };
  var insert = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare2 = compare(dictOrd);
    return function(k) {
      return function(v) {
        var up = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v1 instanceof Nil) {
                $tco_done = true;
                return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
              }
              ;
              if (v1 instanceof Cons) {
                if (v1.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                }
                ;
                if (v1.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                }
                ;
                if (v1.value0 instanceof ThreeLeft) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeMiddle) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeRight) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        var down = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v2 instanceof Leaf) {
                $tco_done1 = true;
                return up(v1)(new KickUp(Leaf.value, k, v, Leaf.value));
              }
              ;
              if (v2 instanceof Two) {
                var v3 = compare2(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Two(v2.value0, k, v, v2.value3));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new TwoLeft(v2.value1, v2.value2, v2.value3), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new TwoRight(v2.value0, v2.value1, v2.value2), v1);
                $copy_v2 = v2.value3;
                return;
              }
              ;
              if (v2 instanceof Three) {
                var v3 = compare2(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, k, v, v2.value3, v2.value4, v2.value5, v2.value6));
                }
                ;
                var v4 = compare2(k)(v2.value4);
                if (v4 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, k, v, v2.value6));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeLeft(v2.value1, v2.value2, v2.value3, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                if (v3 instanceof GT && v4 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeMiddle(v2.value0, v2.value1, v2.value2, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value3;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new ThreeRight(v2.value0, v2.value1, v2.value2, v2.value3, v2.value4, v2.value5), v1);
                $copy_v2 = v2.value6;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        return down(Nil.value);
      };
    };
  };
  var pop = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare2 = compare(dictOrd);
    return function(k) {
      var up = function($copy_ctxs) {
        return function($copy_tree) {
          var $tco_var_ctxs = $copy_ctxs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(ctxs, tree2) {
            if (ctxs instanceof Nil) {
              $tco_done = true;
              return tree2;
            }
            ;
            if (ctxs instanceof Cons) {
              if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree2 instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree2 instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree2);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree2)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree2 instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree2 instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree2 instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree2), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree2, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree2)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree2), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree2, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree2)));
              }
              ;
              $tco_done = true;
              return unsafeCrashWith("The impossible happened in partial function `up`.");
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): " + [ctxs.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
          }
          ;
          return $tco_result;
        };
      };
      var removeMaxNode = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
              $tco_done1 = true;
              return up(ctx)(Leaf.value);
            }
            ;
            if (m instanceof Two) {
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
              $tco_done1 = true;
              return up(new Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
            }
            ;
            if (m instanceof Three) {
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            $tco_done1 = true;
            return unsafeCrashWith("The impossible happened in partial function `removeMaxNode`.");
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      var maxNode = function($copy_m) {
        var $tco_done2 = false;
        var $tco_result;
        function $tco_loop(m) {
          if (m instanceof Two && m.value3 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value1,
              value: m.value2
            };
          }
          ;
          if (m instanceof Two) {
            $copy_m = m.value3;
            return;
          }
          ;
          if (m instanceof Three && m.value6 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value4,
              value: m.value5
            };
          }
          ;
          if (m instanceof Three) {
            $copy_m = m.value6;
            return;
          }
          ;
          $tco_done2 = true;
          return unsafeCrashWith("The impossible happened in partial function `maxNode`.");
        }
        ;
        while (!$tco_done2) {
          $tco_result = $tco_loop($copy_m);
        }
        ;
        return $tco_result;
      };
      var down = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done3 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Leaf) {
              $tco_done3 = true;
              return Nothing.value;
            }
            ;
            if (m instanceof Two) {
              var v = compare2(k)(m.value1);
              if (m.value3 instanceof Leaf && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, up(ctx)(Leaf.value)));
              }
              ;
              if (v instanceof EQ) {
                var max7 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new TwoLeft(max7.key, max7.value, m.value3), ctx))(m.value0)));
              }
              ;
              if (v instanceof LT) {
                $tco_var_ctx = new Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three) {
              var leaves = (function() {
                if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                  return true;
                }
                ;
                return false;
              })();
              var v = compare2(k)(m.value4);
              var v3 = compare2(k)(m.value1);
              if (leaves && v3 instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, fromZipper1(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
              }
              ;
              if (leaves && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, fromZipper1(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
              }
              ;
              if (v3 instanceof EQ) {
                var max7 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new ThreeLeft(max7.key, max7.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
              }
              ;
              if (v instanceof EQ) {
                var max7 = maxNode(m.value3);
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, removeMaxNode(new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max7.key, max7.value, m.value6), ctx))(m.value3)));
              }
              ;
              if (v3 instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              if (v3 instanceof GT && v instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value3;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): " + [m.constructor.name]);
          }
          ;
          while (!$tco_done3) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      return down(Nil.value);
    };
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(f(m.value5)(foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldl: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      var append22 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty2;
          }
          ;
          if (m instanceof Two) {
            return append22(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append22(f(m.value2))(foldMap(foldableMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append22(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append22(f(m.value2))(append22(foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append22(f(m.value5))(foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): " + [m.constructor.name]);
        };
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      var append22 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty2;
          }
          ;
          if (m instanceof Two) {
            return append22(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append22(f(m.value1)(m.value2))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append22(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append22(f(m.value1)(m.value2))(append22(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append22(f(m.value4)(m.value5))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): " + [m.constructor.name]);
        };
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var foldrWithIndex2 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexMap);
  var keys = /* @__PURE__ */ (function() {
    return foldrWithIndex2(function(k) {
      return function(v) {
        return function(acc) {
          return new Cons(k, acc);
        };
      };
    })(Nil.value);
  })();
  var empty2 = /* @__PURE__ */ (function() {
    return Leaf.value;
  })();
  var fromFoldable2 = function(dictOrd) {
    var insert13 = insert(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(function(m) {
        return function(v) {
          return insert13(v.value0)(v.value1)(m);
        };
      })(empty2);
    };
  };
  var $$delete = function(dictOrd) {
    var pop12 = pop(dictOrd);
    return function(k) {
      return function(m) {
        return maybe(m)(snd)(pop12(k)(m));
      };
    };
  };
  var alter = function(dictOrd) {
    var lookup13 = lookup(dictOrd);
    var delete1 = $$delete(dictOrd);
    var insert13 = insert(dictOrd);
    return function(f) {
      return function(k) {
        return function(m) {
          var v = f(lookup13(k)(m));
          if (v instanceof Nothing) {
            return delete1(k)(m);
          }
          ;
          if (v instanceof Just) {
            return insert13(k)(v.value0)(m);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): " + [v.constructor.name]);
        };
      };
    };
  };
  var fromFoldableWith = function(dictOrd) {
    var alter1 = alter(dictOrd);
    return function(dictFoldable) {
      var foldl12 = foldl(dictFoldable);
      return function(f) {
        var combine = function(v) {
          return function(v1) {
            if (v1 instanceof Just) {
              return new Just(f(v)(v1.value0));
            }
            ;
            if (v1 instanceof Nothing) {
              return new Just(v);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 613, column 3 - line 613, column 38): " + [v.constructor.name, v1.constructor.name]);
          };
        };
        return foldl12(function(m) {
          return function(v) {
            return alter1(combine(v.value1))(v.value0)(m);
          };
        })(empty2);
      };
    };
  };

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ (function() {
    function OrdBox2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new OrdBox2(value0, value1, value22);
        };
      };
    };
    return OrdBox2;
  })();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v) {
      return function(v1) {
        return v.value0(v.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v) {
      return function(v1) {
        return v.value1(v.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop(ordTuple2);
  var lookup1 = /* @__PURE__ */ lookup(ordTuple2);
  var insert1 = /* @__PURE__ */ insert(ordTuple2);
  var pop2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(v) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(v);
            };
          };
        };
      };
    };
  };
  var lookup2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(v) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(v);
            };
          };
        };
      };
    };
  };
  var insert2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(val) {
              return function(v) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(val)(v);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMap);
    return function(v) {
      return function(k) {
        return traverse_7(function($54) {
          return k($54);
        })(v);
      };
    };
  };
  var empty3 = empty2;

  // output/Data.String.Common/foreign.js
  var split = function(sep) {
    return function(s) {
      return s.split(sep);
    };
  };
  var joinWith = function(s) {
    return function(xs) {
      return xs.join(s);
    };
  };

  // output/Data.String.Common/index.js
  var $$null2 = function(s) {
    return s === "";
  };

  // output/DOM.HTML.Indexed.InputType/index.js
  var InputButton = /* @__PURE__ */ (function() {
    function InputButton2() {
    }
    ;
    InputButton2.value = new InputButton2();
    return InputButton2;
  })();
  var InputCheckbox = /* @__PURE__ */ (function() {
    function InputCheckbox2() {
    }
    ;
    InputCheckbox2.value = new InputCheckbox2();
    return InputCheckbox2;
  })();
  var InputColor = /* @__PURE__ */ (function() {
    function InputColor2() {
    }
    ;
    InputColor2.value = new InputColor2();
    return InputColor2;
  })();
  var InputDate = /* @__PURE__ */ (function() {
    function InputDate2() {
    }
    ;
    InputDate2.value = new InputDate2();
    return InputDate2;
  })();
  var InputDatetimeLocal = /* @__PURE__ */ (function() {
    function InputDatetimeLocal2() {
    }
    ;
    InputDatetimeLocal2.value = new InputDatetimeLocal2();
    return InputDatetimeLocal2;
  })();
  var InputEmail = /* @__PURE__ */ (function() {
    function InputEmail2() {
    }
    ;
    InputEmail2.value = new InputEmail2();
    return InputEmail2;
  })();
  var InputFile = /* @__PURE__ */ (function() {
    function InputFile2() {
    }
    ;
    InputFile2.value = new InputFile2();
    return InputFile2;
  })();
  var InputHidden = /* @__PURE__ */ (function() {
    function InputHidden2() {
    }
    ;
    InputHidden2.value = new InputHidden2();
    return InputHidden2;
  })();
  var InputImage = /* @__PURE__ */ (function() {
    function InputImage2() {
    }
    ;
    InputImage2.value = new InputImage2();
    return InputImage2;
  })();
  var InputMonth = /* @__PURE__ */ (function() {
    function InputMonth2() {
    }
    ;
    InputMonth2.value = new InputMonth2();
    return InputMonth2;
  })();
  var InputNumber = /* @__PURE__ */ (function() {
    function InputNumber2() {
    }
    ;
    InputNumber2.value = new InputNumber2();
    return InputNumber2;
  })();
  var InputPassword = /* @__PURE__ */ (function() {
    function InputPassword2() {
    }
    ;
    InputPassword2.value = new InputPassword2();
    return InputPassword2;
  })();
  var InputRadio = /* @__PURE__ */ (function() {
    function InputRadio2() {
    }
    ;
    InputRadio2.value = new InputRadio2();
    return InputRadio2;
  })();
  var InputRange = /* @__PURE__ */ (function() {
    function InputRange2() {
    }
    ;
    InputRange2.value = new InputRange2();
    return InputRange2;
  })();
  var InputReset = /* @__PURE__ */ (function() {
    function InputReset2() {
    }
    ;
    InputReset2.value = new InputReset2();
    return InputReset2;
  })();
  var InputSearch = /* @__PURE__ */ (function() {
    function InputSearch2() {
    }
    ;
    InputSearch2.value = new InputSearch2();
    return InputSearch2;
  })();
  var InputSubmit = /* @__PURE__ */ (function() {
    function InputSubmit2() {
    }
    ;
    InputSubmit2.value = new InputSubmit2();
    return InputSubmit2;
  })();
  var InputTel = /* @__PURE__ */ (function() {
    function InputTel2() {
    }
    ;
    InputTel2.value = new InputTel2();
    return InputTel2;
  })();
  var InputText = /* @__PURE__ */ (function() {
    function InputText2() {
    }
    ;
    InputText2.value = new InputText2();
    return InputText2;
  })();
  var InputTime = /* @__PURE__ */ (function() {
    function InputTime2() {
    }
    ;
    InputTime2.value = new InputTime2();
    return InputTime2;
  })();
  var InputUrl = /* @__PURE__ */ (function() {
    function InputUrl2() {
    }
    ;
    InputUrl2.value = new InputUrl2();
    return InputUrl2;
  })();
  var InputWeek = /* @__PURE__ */ (function() {
    function InputWeek2() {
    }
    ;
    InputWeek2.value = new InputWeek2();
    return InputWeek2;
  })();
  var renderInputType = function(v) {
    if (v instanceof InputButton) {
      return "button";
    }
    ;
    if (v instanceof InputCheckbox) {
      return "checkbox";
    }
    ;
    if (v instanceof InputColor) {
      return "color";
    }
    ;
    if (v instanceof InputDate) {
      return "date";
    }
    ;
    if (v instanceof InputDatetimeLocal) {
      return "datetime-local";
    }
    ;
    if (v instanceof InputEmail) {
      return "email";
    }
    ;
    if (v instanceof InputFile) {
      return "file";
    }
    ;
    if (v instanceof InputHidden) {
      return "hidden";
    }
    ;
    if (v instanceof InputImage) {
      return "image";
    }
    ;
    if (v instanceof InputMonth) {
      return "month";
    }
    ;
    if (v instanceof InputNumber) {
      return "number";
    }
    ;
    if (v instanceof InputPassword) {
      return "password";
    }
    ;
    if (v instanceof InputRadio) {
      return "radio";
    }
    ;
    if (v instanceof InputRange) {
      return "range";
    }
    ;
    if (v instanceof InputReset) {
      return "reset";
    }
    ;
    if (v instanceof InputSearch) {
      return "search";
    }
    ;
    if (v instanceof InputSubmit) {
      return "submit";
    }
    ;
    if (v instanceof InputTel) {
      return "tel";
    }
    ;
    if (v instanceof InputText) {
      return "text";
    }
    ;
    if (v instanceof InputTime) {
      return "time";
    }
    ;
    if (v instanceof InputUrl) {
      return "url";
    }
    ;
    if (v instanceof InputWeek) {
      return "week";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 33, column 19 - line 55, column 22): " + [v.constructor.name]);
  };

  // output/DOM.HTML.Indexed.StepValue/index.js
  var show2 = /* @__PURE__ */ show(showNumber);
  var Any = /* @__PURE__ */ (function() {
    function Any2() {
    }
    ;
    Any2.value = new Any2();
    return Any2;
  })();
  var Step = /* @__PURE__ */ (function() {
    function Step4(value0) {
      this.value0 = value0;
    }
    ;
    Step4.create = function(value0) {
      return new Step4(value0);
    };
    return Step4;
  })();
  var renderStepValue = function(v) {
    if (v instanceof Any) {
      return "any";
    }
    ;
    if (v instanceof Step) {
      return show2(v.value0);
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 13, column 19 - line 15, column 19): " + [v.constructor.name]);
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ (function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  })();
  var Action = /* @__PURE__ */ (function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  })();

  // output/Data.Array/foreign.js
  var range2 = function(start4) {
    return function(end2) {
      var step5 = start4 > end2 ? -1 : 1;
      var result = new Array(step5 * (end2 - start4) + 1);
      var i2 = start4, n = 0;
      while (i2 !== end2) {
        result[n++] = i2;
        i2 += step5;
      }
      result[n] = i2;
      return result;
    };
  };
  var replicateFill = function(count) {
    return function(value15) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value15);
    };
  };
  var replicatePolyfill = function(count) {
    return function(value15) {
      var result = [];
      var n = 0;
      for (var i2 = 0; i2 < count; i2++) {
        result[n++] = value15;
      }
      return result;
    };
  };
  var replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = /* @__PURE__ */ (function() {
    function Cons3(head7, tail2) {
      this.head = head7;
      this.tail = tail2;
    }
    var emptyList = {};
    function curryCons(head7) {
      return function(tail2) {
        return new Cons3(head7, tail2);
      };
    }
    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr5) {
      return function(xs) {
        return listToArray(foldr5(curryCons)(emptyList)(xs));
      };
    };
  })();
  var length4 = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty8) {
    return function(next2) {
      return function(xs) {
        return xs.length === 0 ? empty8({}) : next2(xs[0])(xs.slice(1));
      };
    };
  };
  var indexImpl = function(just) {
    return function(nothing) {
      return function(xs) {
        return function(i2) {
          return i2 < 0 || i2 >= xs.length ? nothing : just(xs[i2]);
        };
      };
    };
  };
  var findIndexImpl = function(just) {
    return function(nothing) {
      return function(f) {
        return function(xs) {
          for (var i2 = 0, l = xs.length; i2 < l; i2++) {
            if (f(xs[i2])) return just(i2);
          }
          return nothing;
        };
      };
    };
  };
  var _deleteAt = function(just) {
    return function(nothing) {
      return function(i2) {
        return function(l) {
          if (i2 < 0 || i2 >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i2, 1);
          return just(l1);
        };
      };
    };
  };
  var reverse2 = function(l) {
    return l.slice().reverse();
  };
  var filter2 = function(f) {
    return function(xs) {
      return xs.filter(f);
    };
  };
  var partition = function(f) {
    return function(xs) {
      var yes = [];
      var no = [];
      for (var i2 = 0; i2 < xs.length; i2++) {
        var x8 = xs[i2];
        if (f(x8))
          yes.push(x8);
        else
          no.push(x8);
      }
      return { yes, no };
    };
  };
  var sortByImpl = /* @__PURE__ */ (function() {
    function mergeFromTo(compare2, fromOrdering, xs1, xs2, from2, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x8;
      var y7;
      var c;
      mid = from2 + (to2 - from2 >> 1);
      if (mid - from2 > 1) mergeFromTo(compare2, fromOrdering, xs2, xs1, from2, mid);
      if (to2 - mid > 1) mergeFromTo(compare2, fromOrdering, xs2, xs1, mid, to2);
      i2 = from2;
      j = mid;
      k = from2;
      while (i2 < mid && j < to2) {
        x8 = xs2[i2];
        y7 = xs2[j];
        c = fromOrdering(compare2(x8)(y7));
        if (c > 0) {
          xs1[k++] = y7;
          ++j;
        } else {
          xs1[k++] = x8;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare2) {
      return function(fromOrdering) {
        return function(xs) {
          var out;
          if (xs.length < 2) return xs;
          out = xs.slice(0);
          mergeFromTo(compare2, fromOrdering, out, xs.slice(0), 0, xs.length);
          return out;
        };
      };
    };
  })();
  var zipWith = function(f) {
    return function(xs) {
      return function(ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i2 = 0; i2 < l; i2++) {
          result[i2] = f(xs[i2])(ys[i2]);
        }
        return result;
      };
    };
  };
  var any2 = function(p2) {
    return function(xs) {
      var len = xs.length;
      for (var i2 = 0; i2 < len; i2++) {
        if (p2(xs[i2])) return true;
      }
      return false;
    };
  };
  var unsafeIndexImpl = function(xs) {
    return function(n) {
      return xs[n];
    };
  };

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a2) {
      return function() {
        return f(a2());
      };
    };
  };
  var pure_ = function(a2) {
    return function() {
      return a2;
    };
  };
  var bind_ = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };
  function whileST(f) {
    return function(a2) {
      return function() {
        while (f()) {
          a2();
        }
      };
    };
  }
  var foreach = function(as) {
    return function(f) {
      return function() {
        for (var i2 = 0, l = as.length; i2 < l; i2++) {
          f(as[i2])();
        }
      };
    };
  };
  function newSTRef(val) {
    return function() {
      return { value: val };
    };
  }
  var read2 = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl2 = function(f) {
    return function(ref2) {
      return function() {
        var t = f(ref2.value);
        ref2.value = t.state;
        return t.value;
      };
    };
  };
  var write2 = function(a2) {
    return function(ref2) {
      return function() {
        return ref2.value = a2;
      };
    };
  };

  // output/Control.Monad.ST.Internal/index.js
  var $runtime_lazy3 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var modify$prime2 = modifyImpl2;
  var modify3 = function(f) {
    return modify$prime2(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var functorST = {
    map: map_
  };
  var map12 = /* @__PURE__ */ map(functorST);
  var $$void4 = /* @__PURE__ */ $$void(functorST);
  var monadST = {
    Applicative0: function() {
      return applicativeST;
    },
    Bind1: function() {
      return bindST;
    }
  };
  var bindST = {
    bind: bind_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var applicativeST = {
    pure: pure_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var $lazy_applyST = /* @__PURE__ */ $runtime_lazy3("applyST", "Control.Monad.ST.Internal", function() {
    return {
      apply: ap(monadST),
      Functor0: function() {
        return functorST;
      }
    };
  });
  var bind3 = /* @__PURE__ */ bind(bindST);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindST);
  var discard3 = /* @__PURE__ */ discard(discardUnit)(bindST);
  var pure4 = /* @__PURE__ */ pure(applicativeST);
  var monadRecST = {
    tailRecM: function(f) {
      return function(a2) {
        var isLooping = function(v) {
          if (v instanceof Loop) {
            return true;
          }
          ;
          return false;
        };
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [v.constructor.name]);
        };
        return bind3(bindFlipped5(newSTRef)(f(a2)))(function(r) {
          return discard3(whileST(map12(isLooping)(read2(r)))(bind3(read2(r))(function(v) {
            if (v instanceof Loop) {
              return bind3(f(v.value0))(function(e) {
                return $$void4(write2(e)(r));
              });
            }
            ;
            if (v instanceof Done) {
              return pure4(unit);
            }
            ;
            throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [v.constructor.name]);
          })))(function() {
            return map12(fromDone)(read2(r));
          });
        });
      };
    },
    Monad0: function() {
      return monadST;
    }
  };

  // output/Data.Array.ST/foreign.js
  function newSTArray() {
    return [];
  }
  var pushAll = function(as) {
    return function(xs) {
      return function() {
        return xs.push.apply(xs, as);
      };
    };
  };
  var unsafeFreeze = function(xs) {
    return function() {
      return xs;
    };
  };
  function copyImpl(xs) {
    return function() {
      return xs.slice();
    };
  }
  var thaw = copyImpl;

  // output/Data.Array.ST/index.js
  var withArray = function(f) {
    return function(xs) {
      return function __do3() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = function(a2) {
    return pushAll([a2]);
  };

  // output/Data.Array.ST.Iterator/index.js
  var map13 = /* @__PURE__ */ map(functorST);
  var not2 = /* @__PURE__ */ not(heytingAlgebraBoolean);
  var $$void5 = /* @__PURE__ */ $$void(functorST);
  var Iterator = /* @__PURE__ */ (function() {
    function Iterator2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Iterator2.create = function(value0) {
      return function(value1) {
        return new Iterator2(value0, value1);
      };
    };
    return Iterator2;
  })();
  var peek = function(v) {
    return function __do3() {
      var i2 = read2(v.value1)();
      return v.value0(i2);
    };
  };
  var next = function(v) {
    return function __do3() {
      var i2 = read2(v.value1)();
      modify3(function(v1) {
        return v1 + 1 | 0;
      })(v.value1)();
      return v.value0(i2);
    };
  };
  var pushWhile = function(p2) {
    return function(iter) {
      return function(array) {
        return function __do3() {
          var $$break = newSTRef(false)();
          while (map13(not2)(read2($$break))()) {
            (function __do4() {
              var mx = peek(iter)();
              if (mx instanceof Just && p2(mx.value0)) {
                push(mx.value0)(array)();
                return $$void5(next(iter))();
              }
              ;
              return $$void5(write2(true)($$break))();
            })();
          }
          ;
          return {};
        };
      };
    };
  };
  var iterator = function(f) {
    return map13(Iterator.create(f))(newSTRef(0));
  };
  var iterate = function(iter) {
    return function(f) {
      return function __do3() {
        var $$break = newSTRef(false)();
        while (map13(not2)(read2($$break))()) {
          (function __do4() {
            var mx = next(iter)();
            if (mx instanceof Just) {
              return f(mx.value0)();
            }
            ;
            if (mx instanceof Nothing) {
              return $$void5(write2(true)($$break))();
            }
            ;
            throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
          })();
        }
        ;
        return {};
      };
    };
  };

  // output/Data.Array/index.js
  var map14 = /* @__PURE__ */ map(functorST);
  var when2 = /* @__PURE__ */ when(applicativeST);
  var $$void6 = /* @__PURE__ */ $$void(functorST);
  var intercalate1 = /* @__PURE__ */ intercalate2(foldableArray);
  var map15 = /* @__PURE__ */ map(functorMaybe);
  var fromJust4 = /* @__PURE__ */ fromJust();
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var zip = /* @__PURE__ */ (function() {
    return zipWith(Tuple.create);
  })();
  var unsafeIndex = function() {
    return unsafeIndexImpl;
  };
  var unsafeIndex1 = /* @__PURE__ */ unsafeIndex();
  var uncons = /* @__PURE__ */ (function() {
    return unconsImpl($$const(Nothing.value))(function(x8) {
      return function(xs) {
        return new Just({
          head: x8,
          tail: xs
        });
      };
    });
  })();
  var sortBy = function(comp) {
    return sortByImpl(comp)(function(v) {
      if (v instanceof GT) {
        return 1;
      }
      ;
      if (v instanceof EQ) {
        return 0;
      }
      ;
      if (v instanceof LT) {
        return -1 | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 829, column 31 - line 832, column 11): " + [v.constructor.name]);
    });
  };
  var snoc = function(xs) {
    return function(x8) {
      return withArray(push(x8))(xs)();
    };
  };
  var singleton5 = function(a2) {
    return [a2];
  };
  var $$null3 = function(xs) {
    return length4(xs) === 0;
  };
  var nubByEq = function(eq23) {
    return function(xs) {
      return (function __do3() {
        var arr = newSTArray();
        foreach(xs)(function(x8) {
          return function __do4() {
            var e = map14((function() {
              var $179 = any2(function(v) {
                return eq23(v)(x8);
              });
              return function($180) {
                return !$179($180);
              };
            })())(unsafeFreeze(arr))();
            return when2(e)($$void6(push(x8)(arr)))();
          };
        })();
        return unsafeFreeze(arr)();
      })();
    };
  };
  var mapWithIndex3 = function(f) {
    return function(xs) {
      return zipWith(f)(range2(0)(length4(xs) - 1 | 0))(xs);
    };
  };
  var intercalate3 = function(dictMonoid) {
    return intercalate1(dictMonoid);
  };
  var index2 = /* @__PURE__ */ (function() {
    return indexImpl(Just.create)(Nothing.value);
  })();
  var head2 = function(xs) {
    return index2(xs)(0);
  };
  var groupBy = function(op) {
    return function(xs) {
      return (function __do3() {
        var result = newSTArray();
        var iter = iterator(function(v) {
          return index2(xs)(v);
        })();
        iterate(iter)(function(x8) {
          return $$void6(function __do4() {
            var sub1 = newSTArray();
            push(x8)(sub1)();
            pushWhile(op(x8))(iter)(sub1)();
            var grp = unsafeFreeze(sub1)();
            return push(grp)(result)();
          });
        })();
        return unsafeFreeze(result)();
      })();
    };
  };
  var fromFoldable3 = function(dictFoldable) {
    return fromFoldableImpl(foldr(dictFoldable));
  };
  var foldl2 = /* @__PURE__ */ foldl(foldableArray);
  var findIndex = /* @__PURE__ */ (function() {
    return findIndexImpl(Just.create)(Nothing.value);
  })();
  var find2 = function(f) {
    return function(xs) {
      return map15(unsafeIndex1(xs))(findIndex(f)(xs));
    };
  };
  var elemIndex = function(dictEq) {
    var eq23 = eq(dictEq);
    return function(x8) {
      return findIndex(function(v) {
        return eq23(v)(x8);
      });
    };
  };
  var elem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a2) {
      return function(arr) {
        return isJust(elemIndex1(a2)(arr));
      };
    };
  };
  var deleteAt = /* @__PURE__ */ (function() {
    return _deleteAt(Just.create)(Nothing.value);
  })();
  var deleteBy = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2.length === 0) {
          return [];
        }
        ;
        return maybe(v2)(function(i2) {
          return fromJust4(deleteAt(i2)(v2));
        })(findIndex(v(v1))(v2));
      };
    };
  };
  var cons3 = function(x8) {
    return function(xs) {
      return append2([x8])(xs);
    };
  };
  var concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
  var mapMaybe = function(f) {
    return concatMap((function() {
      var $187 = maybe([])(singleton5);
      return function($188) {
        return $187(f($188));
      };
    })());
  };
  var catMaybes = /* @__PURE__ */ mapMaybe(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.VDom.Machine/index.js
  var Step2 = /* @__PURE__ */ (function() {
    function Step4(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step4.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step4(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step4;
  })();
  var unStep = unsafeCoerce2;
  var step3 = function(v, a2) {
    return v.value2(v.value1, a2);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v) {
    return v.value3(v.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v) {
    return v.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map16 = /* @__PURE__ */ map(functorArray);
  var map17 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ (function() {
    function Text3(value0) {
      this.value0 = value0;
    }
    ;
    Text3.create = function(value0) {
      return new Text3(value0);
    };
    return Text3;
  })();
  var Elem = /* @__PURE__ */ (function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  })();
  var Keyed = /* @__PURE__ */ (function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  })();
  var Widget = /* @__PURE__ */ (function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  })();
  var Grafted = /* @__PURE__ */ (function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  })();
  var Graft = /* @__PURE__ */ (function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  })();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g) {
        return unGraft(function(v) {
          return graft(new Graft(function($63) {
            return f(v.value0($63));
          }, function($64) {
            return g(v.value1($64));
          }, v.value2));
        });
      };
    }
  };
  var bimap2 = /* @__PURE__ */ bimap(bifunctorGraft);
  var runGraft = /* @__PURE__ */ unGraft(function(v) {
    var go2 = function(v2) {
      if (v2 instanceof Text) {
        return new Text(v2.value0);
      }
      ;
      if (v2 instanceof Elem) {
        return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map16(go2)(v2.value3));
      }
      ;
      if (v2 instanceof Keyed) {
        return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map16(map17(go2))(v2.value3));
      }
      ;
      if (v2 instanceof Widget) {
        return new Widget(v.value1(v2.value0));
      }
      ;
      if (v2 instanceof Grafted) {
        return new Grafted(bimap2(v.value0)(v.value1)(v2.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v2.constructor.name]);
    };
    return go2(v.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key, obj) {
    return obj[key];
  }
  function unsafeHasAny(key, obj) {
    return obj.hasOwnProperty(key);
  }
  function unsafeSetAny(key, val, obj) {
    obj[key] = val;
  }
  function forE2(a2, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a2.length; i2++) {
      b2.push(f(i2, a2[i2]));
    }
    return b2;
  }
  function forEachE(a2, f) {
    for (var i2 = 0; i2 < a2.length; i2++) {
      f(a2[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a2[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a2[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      o[k] = f(k, i2, a2);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a2);
      } else {
        o2[k] = f3(k, i2, a2);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a2, b2) {
    return a2 === b2;
  }
  function createTextNode(s, doc) {
    return doc.createTextNode(s);
  }
  function setTextContent(s, n) {
    n.textContent = s;
  }
  function createElement(ns, name16, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name16);
    } else {
      return doc.createElement(name16);
    }
  }
  function insertChildIx(i2, a2, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a2) {
      b2.insertBefore(a2, n);
    }
  }
  function removeChild(a2, b2) {
    if (b2 && a2.parentNode === b2) {
      b2.removeChild(a2);
    }
  }
  function parentNode(a2) {
    return a2.parentNode;
  }
  function setAttribute(ns, attr3, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr3, val);
    } else {
      el.setAttribute(attr3, val);
    }
  }
  function removeAttribute(ns, attr3, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns, attr3, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener2(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener2(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name16) {
    return function(doctype) {
      return doctype[name16];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");

  // output/Web.DOM.Element/index.js
  var toNode2 = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy4 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var haltWidget = function(v) {
    return halt(v.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy4("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step3(state3.widget, vdom.value0);
        var res$prime = unStep(function(v) {
          return mkStep(new Step2(v.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v) {
    var parent2 = parentNode(v.node);
    return removeChild(v.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy4("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step2(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step2(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forInE(v.children, function(v1, s) {
      return halt(s);
    });
    return halt(v.attrs);
  };
  var haltElem = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forEachE(v.children, halt);
    return halt(v.attrs);
  };
  var eqElemSpec = function(ns1, v, ns2, v1) {
    var $63 = v === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy4("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length4(vdom.value3);
        var v1 = length4(state3.children);
        if (v1 === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step2(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(ix, s, v2) {
          var res = step3(s, v2);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix, v2) {
          var res = state3.build(v2);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2
        };
        return mkStep(new Step2(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy4("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length4(vdom.value3);
        if (state3.length === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step2(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(v2, ix$prime, s, v3) {
          var res = step3(s, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v2, ix, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children2 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children2,
          length: v
        };
        return mkStep(new Step2(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v, build, w) {
    var res = v.buildWidget(v)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step2(v1.value0, {
        build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v, build, s) {
    var node = createTextNode(s, v.document);
    var state3 = {
      build,
      node,
      value: s
    };
    return mkStep(new Step2(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(v1, ix, v2) {
      var res = build(v2.value1);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2,
      length: length4(ch1)
    };
    return mkStep(new Step2(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(ix, child) {
      var res = build(child);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children2 = forE2(ch1, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children2
    };
    return mkStep(new Step2(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy4("build", "Halogen.VDom.DOM", function() {
      return function(v) {
        if (v instanceof Text) {
          return buildText(spec, $lazy_build(59), v.value0);
        }
        ;
        if (v instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v.value0);
        }
        ;
        if (v instanceof Grafted) {
          return $lazy_build(63)(runGraft(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
      };
    });
    var build = $lazy_build(58);
    return build;
  };

  // output/Foreign/foreign.js
  function typeOf(value15) {
    return typeof value15;
  }
  function tagOf(value15) {
    return Object.prototype.toString.call(value15).slice(8, -1);
  }
  var isArray = Array.isArray || function(value15) {
    return Object.prototype.toString.call(value15) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
  var toNumber = function(n) {
    return n;
  };
  var fromStringAsImpl = function(just) {
    return function(nothing) {
      return function(radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern2 = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function(s) {
          if (pattern2.test(s)) {
            var i2 = parseInt(s, radix);
            return (i2 | 0) === i2 ? just(i2) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };

  // output/Data.Number/foreign.js
  var infinity = Infinity;
  var isFiniteImpl = isFinite;
  var ceil = Math.ceil;
  var cos = Math.cos;
  var floor = Math.floor;
  var remainder = function(n) {
    return function(m) {
      return n % m;
    };
  };
  var sin = Math.sin;
  var sqrt = Math.sqrt;

  // output/Data.Number/index.js
  var pi = 3.141592653589793;

  // output/Data.Int/index.js
  var top3 = /* @__PURE__ */ top(boundedInt);
  var bottom3 = /* @__PURE__ */ bottom(boundedInt);
  var fromStringAs = /* @__PURE__ */ (function() {
    return fromStringAsImpl(Just.create)(Nothing.value);
  })();
  var fromString = /* @__PURE__ */ fromStringAs(10);
  var fromNumber = /* @__PURE__ */ (function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  })();
  var unsafeClamp = function(x8) {
    if (!isFiniteImpl(x8)) {
      return 0;
    }
    ;
    if (x8 >= toNumber(top3)) {
      return top3;
    }
    ;
    if (x8 <= toNumber(bottom3)) {
      return bottom3;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x8));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x8.constructor.name]);
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };

  // output/Data.List.NonEmpty/index.js
  var singleton6 = /* @__PURE__ */ (function() {
    var $200 = singleton2(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  })();
  var head3 = function(v) {
    return v.value0;
  };
  var cons4 = function(y7) {
    return function(v) {
      return new NonEmpty(y7, new Cons(v.value0, v.value1));
    };
  };

  // output/Data.String.CodeUnits/foreign.js
  var toCharArray = function(s) {
    return s.split("");
  };
  var singleton7 = function(c) {
    return c;
  };
  var length5 = function(s) {
    return s.length;
  };
  var _indexOf = function(just) {
    return function(nothing) {
      return function(x8) {
        return function(s) {
          var i2 = s.indexOf(x8);
          return i2 === -1 ? nothing : just(i2);
        };
      };
    };
  };
  var take2 = function(n) {
    return function(s) {
      return s.substr(0, n);
    };
  };
  var drop2 = function(n) {
    return function(s) {
      return s.substring(n);
    };
  };
  var splitAt = function(i2) {
    return function(s) {
      return { before: s.substring(0, i2), after: s.substring(i2) };
    };
  };

  // output/Data.String.Unsafe/foreign.js
  var charAt = function(i2) {
    return function(s) {
      if (i2 >= 0 && i2 < s.length) return s.charAt(i2);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };

  // output/Data.String.CodeUnits/index.js
  var stripPrefix = function(v) {
    return function(str) {
      var v1 = splitAt(length5(v))(str);
      var $20 = v1.before === v;
      if ($20) {
        return new Just(v1.after);
      }
      ;
      return Nothing.value;
    };
  };
  var indexOf = /* @__PURE__ */ (function() {
    return _indexOf(Just.create)(Nothing.value);
  })();

  // output/Foreign/index.js
  var show3 = /* @__PURE__ */ show(showString);
  var show1 = /* @__PURE__ */ show(showInt);
  var ForeignError = /* @__PURE__ */ (function() {
    function ForeignError2(value0) {
      this.value0 = value0;
    }
    ;
    ForeignError2.create = function(value0) {
      return new ForeignError2(value0);
    };
    return ForeignError2;
  })();
  var TypeMismatch = /* @__PURE__ */ (function() {
    function TypeMismatch2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TypeMismatch2.create = function(value0) {
      return function(value1) {
        return new TypeMismatch2(value0, value1);
      };
    };
    return TypeMismatch2;
  })();
  var ErrorAtIndex = /* @__PURE__ */ (function() {
    function ErrorAtIndex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtIndex2.create = function(value0) {
      return function(value1) {
        return new ErrorAtIndex2(value0, value1);
      };
    };
    return ErrorAtIndex2;
  })();
  var ErrorAtProperty = /* @__PURE__ */ (function() {
    function ErrorAtProperty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtProperty2.create = function(value0) {
      return function(value1) {
        return new ErrorAtProperty2(value0, value1);
      };
    };
    return ErrorAtProperty2;
  })();
  var unsafeToForeign = unsafeCoerce2;
  var unsafeFromForeign = unsafeCoerce2;
  var renderForeignError = function(v) {
    if (v instanceof ForeignError) {
      return v.value0;
    }
    ;
    if (v instanceof ErrorAtIndex) {
      return "Error at array index " + (show1(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof ErrorAtProperty) {
      return "Error at property " + (show3(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof TypeMismatch) {
      return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    }
    ;
    throw new Error("Failed pattern match at Foreign (line 78, column 1 - line 78, column 45): " + [v.constructor.name]);
  };
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton6($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure111 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value15) {
        if (tagOf(value15) === tag) {
          return pure111(unsafeFromForeign(value15));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value15)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value15.constructor.name]);
      };
    };
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Foreign.Object/foreign.js
  var empty4 = {};
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
  var keys2 = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Foreign.Object/index.js
  var lookup3 = /* @__PURE__ */ (function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  })();

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy5 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var Created = /* @__PURE__ */ (function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  })();
  var Removed = /* @__PURE__ */ (function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  })();
  var Attribute = /* @__PURE__ */ (function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  })();
  var Property = /* @__PURE__ */ (function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  })();
  var Handler = /* @__PURE__ */ (function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  })();
  var Ref = /* @__PURE__ */ (function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  })();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key, el) {
    var v = hasAttribute(nullImpl, key, el);
    if (v) {
      return removeAttribute(nullImpl, key, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key, el));
    if (v1 === "string") {
      return unsafeSetAny(key, "", el);
    }
    ;
    if (key === "rowSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    if (key === "colSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    return unsafeSetAny(key, jsUndefined, el);
  };
  var propToStrKey = function(v) {
    if (v instanceof Attribute && v.value0 instanceof Just) {
      return "attr/" + (v.value0.value0 + (":" + v.value1));
    }
    ;
    if (v instanceof Attribute) {
      return "attr/:" + v.value1;
    }
    ;
    if (v instanceof Property) {
      return "prop/" + v.value0;
    }
    ;
    if (v instanceof Handler) {
      return "handler/" + v.value0;
    }
    ;
    if (v instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var propFromNumber = unsafeCoerce2;
  var propFromBoolean = unsafeCoerce2;
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener2(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v) {
        if (v instanceof Just) {
          return emit(v.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v = lookup3("ref")(state3.props);
        if (v instanceof Just && v.value0 instanceof Ref) {
          return mbEmit(v.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v, v1, v11, v2) {
          if (v11 instanceof Attribute && v2 instanceof Attribute) {
            var $66 = v11.value2 === v2.value2;
            if ($66) {
              return v2;
            }
            ;
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v11 instanceof Property && v2 instanceof Property) {
            var v4 = refEq2(v11.value1, v2.value1);
            if (v4) {
              return v2;
            }
            ;
            if (v2.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v2.value1);
              if ($75) {
                return v2;
              }
              ;
              setProperty(v2.value0, v2.value1, el);
              return v2;
            }
            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v11 instanceof Handler && v2 instanceof Handler) {
            var handler3 = unsafeLookup(v2.value0, prevEvents);
            write(v2.value1)(snd(handler3))();
            pokeMutMap(v2.value0, handler3, events);
            return v2;
          }
          ;
          return v2;
        };
      };
      var applyProp = function(events) {
        return function(v, v1, v2) {
          if (v2 instanceof Attribute) {
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v2 instanceof Property) {
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v2 instanceof Handler) {
            var v3 = unsafeGetAny(v2.value0, events);
            if (unsafeHasAny(v2.value0, events)) {
              write(v2.value1)(snd(v3))();
              return v2;
            }
            ;
            var ref2 = $$new(v2.value1)();
            var listener = eventListener(function(ev) {
              return function __do3() {
                var f$prime = read(ref2)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v2.value0, new Tuple(listener, ref2), events);
            addEventListener2(v2.value0, listener, el);
            return v2;
          }
          ;
          if (v2 instanceof Ref) {
            mbEmit(v2.value0(new Created(el)));
            return v2;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v2.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy5("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step2(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step2(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var HTML = function(x8) {
    return x8;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text5 = function($29) {
    return HTML(Text.create($29));
  };
  var prop = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v) {
      var $31 = Property.create(v);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var isPropStepValue = {
    toPropValue: function($36) {
      return propFromString(renderStepValue($36));
    }
  };
  var isPropNumber = {
    toPropValue: propFromNumber
  };
  var isPropInputType = {
    toPropValue: function($45) {
      return propFromString(renderInputType($45));
    }
  };
  var isPropBoolean = {
    toPropValue: propFromBoolean
  };
  var handler = /* @__PURE__ */ (function() {
    return Handler.create;
  })();
  var element = function(ns) {
    return function(name16) {
      return function(props) {
        return function(children2) {
          return new Elem(ns, name16, props, children2);
        };
      };
    };
  };
  var attr = function(ns) {
    return function(v) {
      return Attribute.create(ns)(v);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ (function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  })();
  var Lift = /* @__PURE__ */ (function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  })();
  var Ap = /* @__PURE__ */ (function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  })();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ (function() {
    return Lift.create;
  })();
  var goLeft = function(dictApplicative) {
    var pure30 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure30(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons4(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply6(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x8) {
        return mkAp(new Pure(f))(x8);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure30 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.value1.value0 instanceof Pure) {
              var v1 = goApply1(v.value0)(v.value1.value1)(pure30(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Lift) {
              var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v.value1.value0.value1, v.value1.value1);
              $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton6(z)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity9);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ (function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  })();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ (function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  })();
  var uncons3 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse(v.value1), Nil.value);
        return;
      }
      ;
      if (v.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc3 = function(v) {
    return function(a2) {
      return new CatQueue(v.value0, new Cons(a2, v.value1));
    };
  };
  var $$null4 = function(v) {
    if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ (function() {
    return new CatQueue(Nil.value, Nil.value);
  })();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ (function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  })();
  var CatCons = /* @__PURE__ */ (function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  })();
  var link = function(v) {
    return function(v1) {
      if (v instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v;
      }
      ;
      if (v instanceof CatCons) {
        return new CatCons(v.value0, snoc3(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var foldr3 = function(k) {
    return function(b2) {
      return function(q2) {
        var foldl7 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (v2 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v2 instanceof Cons) {
                  $tco_var_v = v;
                  $tco_var_v1 = v(v1)(v2.value0);
                  $copy_v2 = v2.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v = uncons3(xs);
              if (v instanceof Nothing) {
                $tco_done1 = true;
                return foldl7(function(x8) {
                  return function(i2) {
                    return i2(x8);
                  };
                })(b2)(ys);
              }
              ;
              if (v instanceof Just) {
                $tco_var_xs = v.value0.value1;
                $copy_ys = new Cons(k(v.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q2)(Nil.value);
      };
    };
  };
  var uncons4 = function(v) {
    if (v instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v instanceof CatCons) {
      return new Just(new Tuple(v.value0, (function() {
        var $66 = $$null4(v.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr3(link)(CatNil.value)(v.value1);
      })()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ (function() {
    return CatNil.value;
  })();
  var append3 = link;
  var semigroupCatList = {
    append: append3
  };
  var snoc4 = function(cat) {
    return function(a2) {
      return append3(cat)(new CatCons(a2, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy6 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var append4 = /* @__PURE__ */ append(semigroupCatList);
  var Free = /* @__PURE__ */ (function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  })();
  var Return = /* @__PURE__ */ (function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  })();
  var Bind = /* @__PURE__ */ (function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  })();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      var runExpF = function(v22) {
        return v22;
      };
      var concatF = function(v22) {
        return function(r) {
          return new Free(v22.value0, append4(v22.value1)(r));
        };
      };
      if (v.value0 instanceof Return) {
        var v2 = uncons4(v.value1);
        if (v2 instanceof Nothing) {
          $tco_done = true;
          return new Return(v.value0.value0);
        }
        ;
        if (v2 instanceof Just) {
          $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
      }
      ;
      if (v.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v.value0.value0, function(a2) {
          return concatF(v.value0.value1(a2))(v.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)((function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        })())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v) {
      return function(k) {
        return new Free(v.value0, snoc4(v.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy6("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var pure5 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure5($192);
    }));
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map116 = map(Monad0.Bind1().Apply0().Functor0());
    var pure111 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v = toView(f);
        if (v instanceof Return) {
          return map116(Done.create)(pure111(v.value0));
        }
        ;
        if (v instanceof Bind) {
          return map116(function($199) {
            return Loop.create(v.value1($199));
          })(k(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
      };
      return tailRecM4(go2);
    };
  };

  // output/Halogen.Query.ChildQuery/index.js
  var unChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a2) {
    return function(b2) {
      return a2 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void7 = /* @__PURE__ */ $$void(functorEffect);
  var coerce3 = /* @__PURE__ */ coerce();
  var bind4 = /* @__PURE__ */ bind(bindEffect);
  var append5 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v) {
    return v;
  };
  var subscribe = function(v) {
    return function(k) {
      return v(function($76) {
        return $$void7(k($76));
      });
    };
  };
  var notify = function(v) {
    return function(a2) {
      return v(a2);
    };
  };
  var makeEmitter = coerce3;
  var create3 = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do3() {
          modify_2(function(v) {
            return append5(v)([k]);
          })(subscribers)();
          return modify_2(deleteBy(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a2) {
        return bind4(read(subscribers))(traverse_1(function(k) {
          return k(a2);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var SubscriptionId = function(x8) {
    return x8;
  };
  var ForkId = function(x8) {
    return x8;
  };
  var State = /* @__PURE__ */ (function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  })();
  var Subscribe = /* @__PURE__ */ (function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  })();
  var Unsubscribe = /* @__PURE__ */ (function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  })();
  var Lift2 = /* @__PURE__ */ (function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  })();
  var ChildQuery2 = /* @__PURE__ */ (function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  })();
  var Raise = /* @__PURE__ */ (function() {
    function Raise3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise3.create = function(value0) {
      return function(value1) {
        return new Raise3(value0, value1);
      };
    };
    return Raise3;
  })();
  var Par = /* @__PURE__ */ (function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  })();
  var Fork = /* @__PURE__ */ (function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  })();
  var Join = /* @__PURE__ */ (function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  })();
  var Kill = /* @__PURE__ */ (function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  })();
  var GetRef = /* @__PURE__ */ (function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  })();
  var HalogenM = function(x8) {
    return x8;
  };
  var subscribe2 = function(es) {
    return liftF(new Subscribe(function(v) {
      return es;
    }, identity10));
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var monadEffectHalogenM = function(dictMonadEffect) {
    return {
      liftEffect: (function() {
        var $186 = liftEffect(dictMonadEffect);
        return function($187) {
          return HalogenM(liftF(Lift2.create($186($187))));
        };
      })(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var monadAffHalogenM = function(dictMonadAff) {
    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    return {
      liftAff: (function() {
        var $188 = liftAff(dictMonadAff);
        return function($189) {
          return HalogenM(liftF(Lift2.create($188($189))));
        };
      })(),
      MonadEffect0: function() {
        return monadEffectHalogenM1;
      }
    };
  };
  var functorHalogenM = freeFunctor;
  var bindHalogenM = freeBind;
  var applicativeHalogenM = freeApplicative;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ (function() {
    function Initialize9(value0) {
      this.value0 = value0;
    }
    ;
    Initialize9.create = function(value0) {
      return new Initialize9(value0);
    };
    return Initialize9;
  })();
  var Finalize = /* @__PURE__ */ (function() {
    function Finalize5(value0) {
      this.value0 = value0;
    }
    ;
    Finalize5.create = function(value0) {
      return new Finalize5(value0);
    };
    return Finalize5;
  })();
  var Receive = /* @__PURE__ */ (function() {
    function Receive2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive2.create = function(value0) {
      return function(value1) {
        return new Receive2(value0, value1);
      };
    };
    return Receive2;
  })();
  var Action2 = /* @__PURE__ */ (function() {
    function Action3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action3.create = function(value0) {
      return function(value1) {
        return new Action3(value0, value1);
      };
    };
    return Action3;
  })();
  var Query = /* @__PURE__ */ (function() {
    function Query3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query3.create = function(value0) {
      return function(value1) {
        return new Query3(value0, value1);
      };
    };
    return Query3;
  })();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy7 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var unsafeEqThunk = function(v, v1) {
    return refEq2(v.value0, v1.value0) && (refEq2(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var runThunk = function(v) {
    return v.value2(v.value3);
  };
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy7("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step2(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step3(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step2(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t)));
        return mkStep(new Step2(extract2(vdom), {
          thunk: t,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map18 = /* @__PURE__ */ map(functorHalogenM);
  var pure6 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup4 = /* @__PURE__ */ lookup2();
  var pop3 = /* @__PURE__ */ pop2();
  var insert3 = /* @__PURE__ */ insert2();
  var ComponentSlot = /* @__PURE__ */ (function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  })();
  var ThunkSlot = /* @__PURE__ */ (function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  })();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v) {
      if (v instanceof Initialize) {
        return voidLeft2(traverse_3(args.handleAction)(args.initialize))(v.value0);
      }
      ;
      if (v instanceof Finalize) {
        return voidLeft2(traverse_3(args.handleAction)(args.finalize))(v.value0);
      }
      ;
      if (v instanceof Receive) {
        return voidLeft2(traverse_3(args.handleAction)(args.receive(v.value0)))(v.value1);
      }
      ;
      if (v instanceof Action2) {
        return voidLeft2(args.handleAction(v.value0))(v.value1);
      }
      ;
      if (v instanceof Query) {
        return unCoyoneda(function(g) {
          var $45 = map18(maybe(v.value1(unit))(g));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce2;
  var mkComponent = unsafeCoerce2;
  var defaultEval = /* @__PURE__ */ (function() {
    return {
      handleAction: $$const(pure6(unit)),
      handleQuery: $$const(pure6(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  })();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup13 = lookup4(dictIsSymbol);
      var pop12 = pop3(dictIsSymbol);
      var insert13 = insert3(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup13(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert13(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup23(label5)(p2),
                    pop: pop22(label5)(p2),
                    set: insert22(label5)(p2),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.HTML.Elements/index.js
  var pure7 = /* @__PURE__ */ pure(applicativeMaybe);
  var elementNS = function($15) {
    return element(pure7($15));
  };
  var element2 = /* @__PURE__ */ (function() {
    return element(Nothing.value);
  })();
  var h1 = /* @__PURE__ */ element2("h1");
  var h1_ = /* @__PURE__ */ h1([]);
  var h2 = /* @__PURE__ */ element2("h2");
  var h2_ = /* @__PURE__ */ h2([]);
  var h3 = /* @__PURE__ */ element2("h3");
  var h3_ = /* @__PURE__ */ h3([]);
  var h4 = /* @__PURE__ */ element2("h4");
  var input2 = function(props) {
    return element2("input")(props)([]);
  };
  var label4 = /* @__PURE__ */ element2("label");
  var li = /* @__PURE__ */ element2("li");
  var li_ = /* @__PURE__ */ li([]);
  var main = /* @__PURE__ */ element2("main");
  var p = /* @__PURE__ */ element2("p");
  var p_ = /* @__PURE__ */ p([]);
  var pre = /* @__PURE__ */ element2("pre");
  var section = /* @__PURE__ */ element2("section");
  var span3 = /* @__PURE__ */ element2("span");
  var ul = /* @__PURE__ */ element2("ul");
  var ul_ = /* @__PURE__ */ ul([]);
  var div2 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div2([]);
  var code = /* @__PURE__ */ element2("code");
  var code_ = /* @__PURE__ */ code([]);
  var button = /* @__PURE__ */ element2("button");
  var a = /* @__PURE__ */ element2("a");

  // output/Halogen.HTML.Properties/index.js
  var unwrap2 = /* @__PURE__ */ unwrap();
  var prop2 = function(dictIsProp) {
    return prop(dictIsProp);
  };
  var prop1 = /* @__PURE__ */ prop2(isPropBoolean);
  var prop22 = /* @__PURE__ */ prop2(isPropString);
  var prop4 = /* @__PURE__ */ prop2(isPropNumber);
  var step4 = /* @__PURE__ */ prop2(isPropStepValue)("step");
  var type_17 = function(dictIsProp) {
    return prop2(dictIsProp)("type");
  };
  var value12 = function(dictIsProp) {
    return prop2(dictIsProp)("value");
  };
  var min5 = /* @__PURE__ */ prop4("min");
  var max6 = /* @__PURE__ */ prop4("max");
  var id2 = /* @__PURE__ */ prop22("id");
  var href4 = /* @__PURE__ */ prop22("href");
  var $$for = /* @__PURE__ */ prop22("htmlFor");
  var classes = /* @__PURE__ */ (function() {
    var $32 = prop22("className");
    var $33 = joinWith(" ");
    var $34 = map(functorArray)(unwrap2);
    return function($35) {
      return $32($33($34($35)));
    };
  })();
  var class_ = /* @__PURE__ */ (function() {
    var $36 = prop22("className");
    return function($37) {
      return $36(unwrap2($37));
    };
  })();
  var checked2 = /* @__PURE__ */ prop1("checked");
  var attr2 = /* @__PURE__ */ (function() {
    return attr(Nothing.value);
  })();

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var slot_ = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component10) {
              return function(input3) {
                return widget(new ComponentSlot(componentSlot22(label5)(p2)(component10)(input3)($$const(Nothing.value))));
              };
            };
          };
        };
      };
    };
  };
  var fromPlainHTML = unsafeCoerce2;

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork = function(dict) {
    return dict.fork;
  };

  // output/Effect.Console/foreign.js
  var log2 = function(s) {
    return function() {
      console.log(s);
    };
  };
  var warn = function(s) {
    return function() {
      console.warn(s);
    };
  };

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_7(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var initDriverState = function(component10) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do3() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty3)();
            var childrenOut = $$new(empty3)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty2))();
            var forks = $$new(empty2)();
            var ds = {
              component: component10,
              state: component10.initialState(input3),
              refs: empty2,
              children: empty3,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup5 = /* @__PURE__ */ lookup(ordSubscriptionId);
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard4 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard4(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork(monadForkAff);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var pure8 = /* @__PURE__ */ pure(applicativeAff);
  var map20 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var map110 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map22 = /* @__PURE__ */ map(functorMaybe);
  var insert4 = /* @__PURE__ */ insert(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete2 = /* @__PURE__ */ $$delete(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert12 = /* @__PURE__ */ insert(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup12 = /* @__PURE__ */ lookup(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter2 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref2) {
      return function __do3() {
        var v = read(ref2)();
        var subs = read(v.subscriptions)();
        return traverse_4(unsubscribe)(bindFlipped6(lookup5(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref2) {
    return function(au) {
      return bind12(liftEffect4(read(ref2)))(function(v) {
        if (v instanceof Nothing) {
          return au;
        }
        ;
        if (v instanceof Just) {
          return liftEffect4(write(new Just(new Cons(au, v.value0)))(ref2));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard1(liftEffect4(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind12(liftEffect4(f))(function(result) {
          return bind12(liftEffect4(read(lchs)))(function(v) {
            return discard1(traverse_22(fork3)(v.finalizers))(function() {
              return discard1(parSequence_2(v.initializers))(function() {
                return pure8(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref2) {
      return bind12(liftEffect4(read(ref2)))(function(v) {
        return liftEffect4(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v.fresh));
      });
    };
  };
  var evalQ = function(render9) {
    return function(ref2) {
      return function(q2) {
        return bind12(liftEffect4(read(ref2)))(function(v) {
          return evalM(render9)(ref2)(v["component"]["eval"](new Query(map20(Just.create)(liftCoyoneda(q2)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render9) {
    return function(initRef) {
      return function(v) {
        var evalChildQuery = function(ref2) {
          return function(cqb) {
            return bind12(liftEffect4(read(ref2)))(function(v1) {
              return unChildQueryBox(function(v2) {
                var evalChild = function(v3) {
                  return parallel2(bind12(liftEffect4(read(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render9)(ds.selfRef)(v2.value1);
                    })(dsx);
                  }));
                };
                return map110(v2.value2)(sequential2(v2.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref2) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                var v3 = v1.value0(v2.state);
                if (unsafeRefEq(v2.state)(v3.value1)) {
                  return pure8(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard1(liftEffect4(write({
                    component: v2.component,
                    refs: v2.refs,
                    children: v2.children,
                    childrenIn: v2.childrenIn,
                    childrenOut: v2.childrenOut,
                    selfRef: v2.selfRef,
                    handlerRef: v2.handlerRef,
                    pendingQueries: v2.pendingQueries,
                    pendingOuts: v2.pendingOuts,
                    pendingHandlers: v2.pendingHandlers,
                    rendering: v2.rendering,
                    fresh: v2.fresh,
                    subscriptions: v2.subscriptions,
                    forks: v2.forks,
                    lifecycleHandlers: v2.lifecycleHandlers,
                    state: v3.value1
                  })(ref2)))(function() {
                    return discard1(handleLifecycle(v2.lifecycleHandlers)(render9(v2.lifecycleHandlers)(ref2)))(function() {
                      return pure8(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind12(fresh(SubscriptionId)(ref2))(function(sid) {
                return bind12(liftEffect4(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render9)(ref2)(new Action(act)));
                })))(function(finalize) {
                  return bind12(liftEffect4(read(ref2)))(function(v2) {
                    return discard1(liftEffect4(modify_2(map22(insert4(sid)(finalize)))(v2.subscriptions)))(function() {
                      return pure8(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard1(liftEffect4(unsubscribe3(v1.value0)(ref2)))(function() {
                return pure8(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref2)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return bind12(liftEffect4(read(v2.handlerRef)))(function(handler3) {
                  return discard1(queueOrRun(v2.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure8(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp((function() {
                var $118 = evalM(render9)(ref2);
                return function($119) {
                  return parallel2($118($119));
                };
              })())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind12(fresh(ForkId)(ref2))(function(fid) {
                return bind12(liftEffect4(read(ref2)))(function(v2) {
                  return bind12(liftEffect4($$new(false)))(function(doneRef) {
                    return bind12(fork3($$finally(liftEffect4(function __do3() {
                      modify_2($$delete2(fid))(v2.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render9)(ref2)(v1.value0))))(function(fiber) {
                      return discard1(liftEffect4(unlessM2(read(doneRef))(modify_2(insert12(fid)(fiber))(v2.forks))))(function() {
                        return pure8(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return bind12(liftEffect4(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(joinFiber)(lookup12(v1.value0)(forkMap)))(function() {
                    return pure8(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return bind12(liftEffect4(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(killFiber(error("Cancelled")))(lookup12(v1.value0)(forkMap)))(function() {
                    return pure8(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return pure8(v1.value1(lookup22(v1.value0)(v2.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v);
      };
    };
  };
  var evalF = function(render9) {
    return function(ref2) {
      return function(v) {
        if (v instanceof RefUpdate) {
          return liftEffect4(flip(modify_2)(ref2)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter2($$const(v.value1))(v.value0)(st.refs)
            };
          })));
        }
        ;
        if (v instanceof Action) {
          return bind12(liftEffect4(read(ref2)))(function(v1) {
            return evalM(render9)(ref2)(v1["component"]["eval"](new Action2(v.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind5 = /* @__PURE__ */ bind(bindEffect);
  var discard5 = /* @__PURE__ */ discard(discardUnit);
  var for_2 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork(monadForkAff);
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard22 = /* @__PURE__ */ discard5(bindAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure9 = /* @__PURE__ */ pure(applicativeEffect);
  var map21 = /* @__PURE__ */ map(functorEffect);
  var pure12 = /* @__PURE__ */ pure(applicativeAff);
  var when3 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void8 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind13 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ (function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  })();
  var handlePending = function(ref2) {
    return function __do3() {
      var queue = read(ref2)();
      write(Nothing.value)(ref2)();
      return for_2(queue)((function() {
        var $58 = traverse_5(fork4);
        return function($59) {
          return handleAff($58(reverse($59)));
        };
      })())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v) {
    return function __do3() {
      bindFlipped7(traverse_23(traverse_33(unsubscribe)))(read(v.subscriptions))();
      write(Nothing.value)(v.subscriptions)();
      bindFlipped7(traverse_33((function() {
        var $60 = killFiber(error("finalized"));
        return function($61) {
          return handleAff($60($61));
        };
      })()))(read(v.forks))();
      return write(empty2)(v.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component10) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render9)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_2(function(handlers) {
                return {
                  initializers: new Cons(discard22(parSequence_3(reverse(handlers.initializers)))(function() {
                    return discard22(parentInitializer)(function() {
                      return liftEffect5(function __do3() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j) {
              return unComponent(function(c) {
                return function __do3() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c)(j)(handler3)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped7(unDriverStateX((function() {
                    var $62 = render9(lchs);
                    return function($63) {
                      return $62((function(v) {
                        return v.selfRef;
                      })($63));
                    };
                  })()))(read($$var2))();
                  bindFlipped7(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot) {
                  return function __do3() {
                    var childrenIn = map21(slot.pop)(read(childrenInRef))();
                    var $$var2 = (function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do4() {
                            flip(write)(st.handlerRef)((function() {
                              var $64 = maybe(pure12(unit))(handler3);
                              return function($65) {
                                return $64(slot.output($65));
                              };
                            })())();
                            return handleAff(evalM(render9)(st.selfRef)(st["component"]["eval"](new Receive(slot.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)((function() {
                          var $66 = maybe(pure12(unit))(handler3);
                          return function($67) {
                            return $66(slot.output($67));
                          };
                        })())(slot.input)(slot.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    })();
                    var isDuplicate = map21(function($68) {
                      return isJust(slot.get($68));
                    })(read(childrenOutRef))();
                    when3(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_2(slot.set($$var2))(childrenOutRef)();
                    return bind5(read($$var2))(renderStateX2(function(v) {
                      if (v instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v instanceof Just) {
                        return pure9(renderSpec2.renderChild(v.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render9 = function(lchs) {
          return function($$var2) {
            return function __do3() {
              var v = read($$var2)();
              var shouldProcessHandlers = map21(isNothing)(read(v.pendingHandlers))();
              when3(shouldProcessHandlers)(write(new Just(Nil.value))(v.pendingHandlers))();
              write(empty3)(v.childrenOut)();
              write(v.children)(v.childrenIn)();
              var handler3 = (function() {
                var $69 = queueOrRun(v.pendingHandlers);
                var $70 = evalF(render9)(v.selfRef);
                return function($71) {
                  return $69($$void8($70($71)));
                };
              })();
              var childHandler = (function() {
                var $72 = queueOrRun(v.pendingQueries);
                return function($73) {
                  return $72(handler3(Action.create($73)));
                };
              })();
              var rendering = renderSpec2.render(function($74) {
                return handleAff(handler3($74));
              })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
              var children2 = read(v.childrenOut)();
              var childrenIn = read(v.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do4() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_2)(v.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children2
                };
              }))();
              return when3(shouldProcessHandlers)(flip(tailRecM3)(unit)(function(v1) {
                return function __do4() {
                  var handlers = read(v.pendingHandlers)();
                  write(new Just(Nil.value))(v.pendingHandlers)();
                  traverse_23((function() {
                    var $75 = traverse_5(fork4);
                    return function($76) {
                      return handleAff($75(reverse($76)));
                    };
                  })())(handlers)();
                  var mmore = read(v.pendingHandlers)();
                  var $51 = maybe(false)($$null)(mmore);
                  if ($51) {
                    return voidLeft3(write(Nothing.value)(v.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do3() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render9)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_2(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v) {
                return function __do4() {
                  var dsx = read(v)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref2) {
            return function(q2) {
              return bind13(liftEffect5(read(disposed)))(function(v) {
                if (v) {
                  return pure12(Nothing.value);
                }
                ;
                return evalQ(render9)(ref2)(q2);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do3() {
                var v = read(disposed)();
                if (v) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do4() {
                    var v2 = liftEffect1(read(v1.selfRef))();
                    return for_2(v2.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind13(liftEffect5(newLifecycleHandlers))(function(lchs) {
          return bind13(liftEffect5($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do3() {
              var sio = create3();
              var dsx = bindFlipped7(read)(runComponent(lchs)((function() {
                var $77 = notify(sio.listener);
                return function($78) {
                  return liftEffect5($77($78));
                };
              })())(i2)(component10))();
              return unDriverStateX(function(st) {
                return pure9({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map23 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ (function() {
    var $6 = map23(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  })();
  var nextSibling = /* @__PURE__ */ (function() {
    var $15 = map23(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  })();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy8 = function(name16, moduleName, init3) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init3();
      state3 = 2;
      return val;
    };
  };
  var $$void9 = /* @__PURE__ */ $$void(functorEffect);
  var pure10 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap3 = /* @__PURE__ */ unwrap();
  var when4 = /* @__PURE__ */ when(applicativeEffect);
  var not3 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var bind14 = /* @__PURE__ */ bind(bindAff);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map24 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v) {
    return function(v1) {
      return function(v2) {
        if (v1 instanceof Just && v2 instanceof Just) {
          return $$void9(insertBefore(v)(v1.value0)(v2.value0));
        }
        ;
        if (v1 instanceof Nothing && v2 instanceof Just) {
          return $$void9(appendChild(v)(v2.value0));
        }
        ;
        return pure10(unit);
      };
    };
  };
  var removeChild3 = function(v) {
    return function __do3() {
      var npn = parentNode2(v.node)();
      return traverse_6(function(pn) {
        return removeChild2(v.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document3) {
        var getNode = unRenderStateX(function(v) {
          return v.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap3)(spec);
          var $lazy_patch = $runtime_lazy8("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot) {
              if (st instanceof Just) {
                if (slot instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot.value0);
                }
                ;
                if (slot instanceof ThunkSlot) {
                  var step$prime = step3(st.value0, slot.value0);
                  return mkStep(new Step2(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot);
            };
          });
          var $lazy_render = $runtime_lazy8("render", "Halogen.VDom.Driver", function() {
            return function(slot) {
              if (slot instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot.value0);
              }
              ;
              if (slot instanceof ThunkSlot) {
                var step5 = buildThunk2(slot.value0);
                return mkStep(new Step2(extract2(step5), new Just(step5), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy8("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step2(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch2 = $lazy_patch(91);
          var render9 = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render9;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document3
        };
      };
    };
  };
  var renderSpec = function(document3) {
    return function(container) {
      var render9 = function(handler3) {
        return function(child) {
          return function(v) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do3() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler3)(renderChildRef)(document3);
                  var machine = buildVDom(spec)(v);
                  var node = extract2(machine);
                  $$void9(appendChild(node)(toNode(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do3() {
                  write(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step3(v1.value0.machine, v);
                  var newNode = extract2(machine$prime);
                  when4(not3(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render: render9,
        renderChild: identity11,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component10) {
    return function(i2) {
      return function(element3) {
        return bind14(liftEffect6(map24(toDocument)(bindFlipped8(document2)(windowImpl))))(function(document3) {
          return runUI(renderSpec(document3)(element3))(component10)(i2);
        });
      };
    };
  };

  // output/Affjax/foreign.js
  function _ajax(platformSpecificDriver, timeoutErrorMessageIdent, requestFailedMessageIdent, mkHeader, options2) {
    return function(errback, callback) {
      var xhr = platformSpecificDriver.newXHR();
      var fixedUrl = platformSpecificDriver.fixupUrl(options2.url, xhr);
      xhr.open(options2.method || "GET", fixedUrl, true, options2.username, options2.password);
      if (options2.headers) {
        try {
          for (var i2 = 0, header2; (header2 = options2.headers[i2]) != null; i2++) {
            xhr.setRequestHeader(header2.field, header2.value);
          }
        } catch (e) {
          errback(e);
        }
      }
      var onerror = function(msgIdent) {
        return function() {
          errback(new Error(msgIdent));
        };
      };
      xhr.onerror = onerror(requestFailedMessageIdent);
      xhr.ontimeout = onerror(timeoutErrorMessageIdent);
      xhr.onload = function() {
        callback({
          status: xhr.status,
          statusText: xhr.statusText,
          headers: xhr.getAllResponseHeaders().split("\r\n").filter(function(header3) {
            return header3.length > 0;
          }).map(function(header3) {
            var i3 = header3.indexOf(":");
            return mkHeader(header3.substring(0, i3))(header3.substring(i3 + 2));
          }),
          body: xhr.response
        });
      };
      xhr.responseType = options2.responseType;
      xhr.withCredentials = options2.withCredentials;
      xhr.timeout = options2.timeout;
      xhr.send(options2.content);
      return function(error5, cancelErrback, cancelCallback) {
        try {
          xhr.abort();
        } catch (e) {
          return cancelErrback(e);
        }
        return cancelCallback();
      };
    };
  }

  // output/Data.MediaType.Common/index.js
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";

  // output/Affjax.RequestBody/index.js
  var ArrayView = /* @__PURE__ */ (function() {
    function ArrayView2(value0) {
      this.value0 = value0;
    }
    ;
    ArrayView2.create = function(value0) {
      return new ArrayView2(value0);
    };
    return ArrayView2;
  })();
  var Blob = /* @__PURE__ */ (function() {
    function Blob3(value0) {
      this.value0 = value0;
    }
    ;
    Blob3.create = function(value0) {
      return new Blob3(value0);
    };
    return Blob3;
  })();
  var Document = /* @__PURE__ */ (function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  })();
  var $$String = /* @__PURE__ */ (function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  })();
  var FormData = /* @__PURE__ */ (function() {
    function FormData2(value0) {
      this.value0 = value0;
    }
    ;
    FormData2.create = function(value0) {
      return new FormData2(value0);
    };
    return FormData2;
  })();
  var FormURLEncoded = /* @__PURE__ */ (function() {
    function FormURLEncoded2(value0) {
      this.value0 = value0;
    }
    ;
    FormURLEncoded2.create = function(value0) {
      return new FormURLEncoded2(value0);
    };
    return FormURLEncoded2;
  })();
  var Json = /* @__PURE__ */ (function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  })();
  var toMediaType = function(v) {
    if (v instanceof FormURLEncoded) {
      return new Just(applicationFormURLEncoded);
    }
    ;
    if (v instanceof Json) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };

  // output/Affjax.RequestHeader/index.js
  var unwrap4 = /* @__PURE__ */ unwrap();
  var Accept = /* @__PURE__ */ (function() {
    function Accept2(value0) {
      this.value0 = value0;
    }
    ;
    Accept2.create = function(value0) {
      return new Accept2(value0);
    };
    return Accept2;
  })();
  var ContentType = /* @__PURE__ */ (function() {
    function ContentType2(value0) {
      this.value0 = value0;
    }
    ;
    ContentType2.create = function(value0) {
      return new ContentType2(value0);
    };
    return ContentType2;
  })();
  var RequestHeader = /* @__PURE__ */ (function() {
    function RequestHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RequestHeader2.create = function(value0) {
      return function(value1) {
        return new RequestHeader2(value0, value1);
      };
    };
    return RequestHeader2;
  })();
  var value13 = function(v) {
    if (v instanceof Accept) {
      return unwrap4(v.value0);
    }
    ;
    if (v instanceof ContentType) {
      return unwrap4(v.value0);
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value1;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
  };
  var name15 = function(v) {
    if (v instanceof Accept) {
      return "Accept";
    }
    ;
    if (v instanceof ContentType) {
      return "Content-Type";
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
  };

  // output/Affjax.ResponseFormat/index.js
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var $$ArrayBuffer = /* @__PURE__ */ (function() {
    function $$ArrayBuffer2(value0) {
      this.value0 = value0;
    }
    ;
    $$ArrayBuffer2.create = function(value0) {
      return new $$ArrayBuffer2(value0);
    };
    return $$ArrayBuffer2;
  })();
  var Blob2 = /* @__PURE__ */ (function() {
    function Blob3(value0) {
      this.value0 = value0;
    }
    ;
    Blob3.create = function(value0) {
      return new Blob3(value0);
    };
    return Blob3;
  })();
  var Document2 = /* @__PURE__ */ (function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  })();
  var Json2 = /* @__PURE__ */ (function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  })();
  var $$String2 = /* @__PURE__ */ (function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  })();
  var Ignore = /* @__PURE__ */ (function() {
    function Ignore2(value0) {
      this.value0 = value0;
    }
    ;
    Ignore2.create = function(value0) {
      return new Ignore2(value0);
    };
    return Ignore2;
  })();
  var toResponseType = function(v) {
    if (v instanceof $$ArrayBuffer) {
      return "arraybuffer";
    }
    ;
    if (v instanceof Blob2) {
      return "blob";
    }
    ;
    if (v instanceof Document2) {
      return "document";
    }
    ;
    if (v instanceof Json2) {
      return "text";
    }
    ;
    if (v instanceof $$String2) {
      return "text";
    }
    ;
    if (v instanceof Ignore) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at Affjax.ResponseFormat (line 44, column 3 - line 50, column 19): " + [v.constructor.name]);
  };
  var toMediaType2 = function(v) {
    if (v instanceof Json2) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };
  var string = /* @__PURE__ */ (function() {
    return new $$String2(identity12);
  })();
  var ignore = /* @__PURE__ */ (function() {
    return new Ignore(identity12);
  })();

  // output/Affjax.ResponseHeader/index.js
  var ResponseHeader = /* @__PURE__ */ (function() {
    function ResponseHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseHeader2.create = function(value0) {
      return function(value1) {
        return new ResponseHeader2(value0, value1);
      };
    };
    return ResponseHeader2;
  })();

  // output/Control.Monad.Except/index.js
  var unwrap5 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap5(runExceptT($3));
  };

  // output/Data.Argonaut.Core/foreign.js
  function id3(x8) {
    return x8;
  }
  function stringify(j) {
    return JSON.stringify(j);
  }

  // output/Data.Argonaut.Core/index.js
  var jsonEmptyObject = /* @__PURE__ */ id3(empty4);

  // output/Data.Argonaut.Parser/foreign.js
  function _jsonParser(fail3, succ, s) {
    try {
      return succ(JSON.parse(s));
    } catch (e) {
      return fail3(e.message);
    }
  }

  // output/Data.Argonaut.Parser/index.js
  var jsonParser = function(j) {
    return _jsonParser(Left.create, Right.create, j);
  };

  // output/JSURI/foreign.js
  function toRFC3896(input3) {
    return input3.replace(/[!'()*]/g, function(c) {
      return "%" + c.charCodeAt(0).toString(16);
    });
  }
  var _encodeFormURLComponent = function encode(fail3, succeed, input3) {
    try {
      return succeed(toRFC3896(encodeURIComponent(input3)).replace(/%20/g, "+"));
    } catch (err) {
      return fail3(err);
    }
  };
  function _decodeURIComponent(fail3, succeed, input3) {
    try {
      return succeed(decodeURIComponent(input3));
    } catch (err) {
      return fail3(err);
    }
  }

  // output/JSURI/index.js
  var encodeFormURLComponent = /* @__PURE__ */ (function() {
    return runFn3(_encodeFormURLComponent)($$const(Nothing.value))(Just.create);
  })();
  var $$decodeURIComponent = /* @__PURE__ */ (function() {
    return runFn3(_decodeURIComponent)($$const(Nothing.value))(Just.create);
  })();

  // output/Data.FormURLEncoded/index.js
  var apply2 = /* @__PURE__ */ apply(applyMaybe);
  var map25 = /* @__PURE__ */ map(functorMaybe);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeMaybe);
  var toArray = function(v) {
    return v;
  };
  var encode2 = /* @__PURE__ */ (function() {
    var encodePart = function(v) {
      if (v.value1 instanceof Nothing) {
        return encodeFormURLComponent(v.value0);
      }
      ;
      if (v.value1 instanceof Just) {
        return apply2(map25(function(key) {
          return function(val) {
            return key + ("=" + val);
          };
        })(encodeFormURLComponent(v.value0)))(encodeFormURLComponent(v.value1.value0));
      }
      ;
      throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 16 - line 39, column 114): " + [v.constructor.name]);
    };
    var $37 = map25(joinWith("&"));
    var $38 = traverse2(encodePart);
    return function($39) {
      return $37($38(toArray($39)));
    };
  })();

  // output/Data.HTTP.Method/index.js
  var OPTIONS = /* @__PURE__ */ (function() {
    function OPTIONS2() {
    }
    ;
    OPTIONS2.value = new OPTIONS2();
    return OPTIONS2;
  })();
  var GET2 = /* @__PURE__ */ (function() {
    function GET3() {
    }
    ;
    GET3.value = new GET3();
    return GET3;
  })();
  var HEAD = /* @__PURE__ */ (function() {
    function HEAD2() {
    }
    ;
    HEAD2.value = new HEAD2();
    return HEAD2;
  })();
  var POST2 = /* @__PURE__ */ (function() {
    function POST3() {
    }
    ;
    POST3.value = new POST3();
    return POST3;
  })();
  var PUT = /* @__PURE__ */ (function() {
    function PUT2() {
    }
    ;
    PUT2.value = new PUT2();
    return PUT2;
  })();
  var DELETE = /* @__PURE__ */ (function() {
    function DELETE2() {
    }
    ;
    DELETE2.value = new DELETE2();
    return DELETE2;
  })();
  var TRACE = /* @__PURE__ */ (function() {
    function TRACE2() {
    }
    ;
    TRACE2.value = new TRACE2();
    return TRACE2;
  })();
  var CONNECT = /* @__PURE__ */ (function() {
    function CONNECT2() {
    }
    ;
    CONNECT2.value = new CONNECT2();
    return CONNECT2;
  })();
  var PROPFIND = /* @__PURE__ */ (function() {
    function PROPFIND2() {
    }
    ;
    PROPFIND2.value = new PROPFIND2();
    return PROPFIND2;
  })();
  var PROPPATCH = /* @__PURE__ */ (function() {
    function PROPPATCH2() {
    }
    ;
    PROPPATCH2.value = new PROPPATCH2();
    return PROPPATCH2;
  })();
  var MKCOL = /* @__PURE__ */ (function() {
    function MKCOL2() {
    }
    ;
    MKCOL2.value = new MKCOL2();
    return MKCOL2;
  })();
  var COPY = /* @__PURE__ */ (function() {
    function COPY2() {
    }
    ;
    COPY2.value = new COPY2();
    return COPY2;
  })();
  var MOVE = /* @__PURE__ */ (function() {
    function MOVE2() {
    }
    ;
    MOVE2.value = new MOVE2();
    return MOVE2;
  })();
  var LOCK = /* @__PURE__ */ (function() {
    function LOCK2() {
    }
    ;
    LOCK2.value = new LOCK2();
    return LOCK2;
  })();
  var UNLOCK = /* @__PURE__ */ (function() {
    function UNLOCK2() {
    }
    ;
    UNLOCK2.value = new UNLOCK2();
    return UNLOCK2;
  })();
  var PATCH = /* @__PURE__ */ (function() {
    function PATCH2() {
    }
    ;
    PATCH2.value = new PATCH2();
    return PATCH2;
  })();
  var unCustomMethod = function(v) {
    return v;
  };
  var showMethod = {
    show: function(v) {
      if (v instanceof OPTIONS) {
        return "OPTIONS";
      }
      ;
      if (v instanceof GET2) {
        return "GET";
      }
      ;
      if (v instanceof HEAD) {
        return "HEAD";
      }
      ;
      if (v instanceof POST2) {
        return "POST";
      }
      ;
      if (v instanceof PUT) {
        return "PUT";
      }
      ;
      if (v instanceof DELETE) {
        return "DELETE";
      }
      ;
      if (v instanceof TRACE) {
        return "TRACE";
      }
      ;
      if (v instanceof CONNECT) {
        return "CONNECT";
      }
      ;
      if (v instanceof PROPFIND) {
        return "PROPFIND";
      }
      ;
      if (v instanceof PROPPATCH) {
        return "PROPPATCH";
      }
      ;
      if (v instanceof MKCOL) {
        return "MKCOL";
      }
      ;
      if (v instanceof COPY) {
        return "COPY";
      }
      ;
      if (v instanceof MOVE) {
        return "MOVE";
      }
      ;
      if (v instanceof LOCK) {
        return "LOCK";
      }
      ;
      if (v instanceof UNLOCK) {
        return "UNLOCK";
      }
      ;
      if (v instanceof PATCH) {
        return "PATCH";
      }
      ;
      throw new Error("Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): " + [v.constructor.name]);
    }
  };
  var print6 = /* @__PURE__ */ either(/* @__PURE__ */ show(showMethod))(unCustomMethod);

  // output/Effect.Aff.Compat/index.js
  var fromEffectFnAff = function(v) {
    return makeAff(function(k) {
      return function __do3() {
        var v1 = v(function($9) {
          return k(Left.create($9))();
        }, function($10) {
          return k(Right.create($10))();
        });
        return function(e) {
          return makeAff(function(k2) {
            return function __do4() {
              v1(e, function($11) {
                return k2(Left.create($11))();
              }, function($12) {
                return k2(Right.create($12))();
              });
              return nonCanceler;
            };
          });
        };
      };
    });
  };

  // output/Affjax/index.js
  var pure11 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeExceptT(monadIdentity));
  var fail2 = /* @__PURE__ */ fail(monadIdentity);
  var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
  var alt5 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var map26 = /* @__PURE__ */ map(functorMaybe);
  var any3 = /* @__PURE__ */ any(foldableArray)(heytingAlgebraBoolean);
  var eq3 = /* @__PURE__ */ eq(eqString);
  var bindFlipped9 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var map111 = /* @__PURE__ */ map(functorArray);
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorAff);
  var $$try3 = /* @__PURE__ */ $$try(monadErrorAff);
  var pure13 = /* @__PURE__ */ pure(applicativeAff);
  var RequestContentError = /* @__PURE__ */ (function() {
    function RequestContentError2(value0) {
      this.value0 = value0;
    }
    ;
    RequestContentError2.create = function(value0) {
      return new RequestContentError2(value0);
    };
    return RequestContentError2;
  })();
  var ResponseBodyError = /* @__PURE__ */ (function() {
    function ResponseBodyError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseBodyError2.create = function(value0) {
      return function(value1) {
        return new ResponseBodyError2(value0, value1);
      };
    };
    return ResponseBodyError2;
  })();
  var TimeoutError = /* @__PURE__ */ (function() {
    function TimeoutError2() {
    }
    ;
    TimeoutError2.value = new TimeoutError2();
    return TimeoutError2;
  })();
  var RequestFailedError = /* @__PURE__ */ (function() {
    function RequestFailedError2() {
    }
    ;
    RequestFailedError2.value = new RequestFailedError2();
    return RequestFailedError2;
  })();
  var XHROtherError = /* @__PURE__ */ (function() {
    function XHROtherError2(value0) {
      this.value0 = value0;
    }
    ;
    XHROtherError2.create = function(value0) {
      return new XHROtherError2(value0);
    };
    return XHROtherError2;
  })();
  var request2 = function(driver2) {
    return function(req2) {
      var parseJSON = function(v2) {
        if (v2 === "") {
          return pure11(jsonEmptyObject);
        }
        ;
        return either(function($74) {
          return fail2(ForeignError.create($74));
        })(pure11)(jsonParser(v2));
      };
      var fromResponse = (function() {
        if (req2.responseFormat instanceof $$ArrayBuffer) {
          return unsafeReadTagged2("ArrayBuffer");
        }
        ;
        if (req2.responseFormat instanceof Blob2) {
          return unsafeReadTagged2("Blob");
        }
        ;
        if (req2.responseFormat instanceof Document2) {
          return function(x8) {
            return alt5(unsafeReadTagged2("Document")(x8))(alt5(unsafeReadTagged2("XMLDocument")(x8))(unsafeReadTagged2("HTMLDocument")(x8)));
          };
        }
        ;
        if (req2.responseFormat instanceof Json2) {
          return composeKleisliFlipped3(function($75) {
            return req2.responseFormat.value0(parseJSON($75));
          })(unsafeReadTagged2("String"));
        }
        ;
        if (req2.responseFormat instanceof $$String2) {
          return unsafeReadTagged2("String");
        }
        ;
        if (req2.responseFormat instanceof Ignore) {
          return $$const(req2.responseFormat.value0(pure11(unit)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 274, column 18 - line 283, column 57): " + [req2.responseFormat.constructor.name]);
      })();
      var extractContent = function(v2) {
        if (v2 instanceof ArrayView) {
          return new Right(v2.value0(unsafeToForeign));
        }
        ;
        if (v2 instanceof Blob) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof Document) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof $$String) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormData) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormURLEncoded) {
          return note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(map26(unsafeToForeign)(encode2(v2.value0)));
        }
        ;
        if (v2 instanceof Json) {
          return new Right(unsafeToForeign(stringify(v2.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 235, column 20 - line 250, column 69): " + [v2.constructor.name]);
      };
      var addHeader = function(mh) {
        return function(hs) {
          if (mh instanceof Just && !any3(on(eq3)(name15)(mh.value0))(hs)) {
            return snoc(hs)(mh.value0);
          }
          ;
          return hs;
        };
      };
      var headers = function(reqContent) {
        return addHeader(map26(ContentType.create)(bindFlipped9(toMediaType)(reqContent)))(addHeader(map26(Accept.create)(toMediaType2(req2.responseFormat)))(req2.headers));
      };
      var ajaxRequest = function(v2) {
        return {
          method: print6(req2.method),
          url: req2.url,
          headers: map111(function(h) {
            return {
              field: name15(h),
              value: value13(h)
            };
          })(headers(req2.content)),
          content: v2,
          responseType: toResponseType(req2.responseFormat),
          username: toNullable(req2.username),
          password: toNullable(req2.password),
          withCredentials: req2.withCredentials,
          timeout: fromMaybe(0)(map26(function(v1) {
            return v1;
          })(req2.timeout))
        };
      };
      var send = function(content4) {
        return mapFlipped2($$try3(fromEffectFnAff(_ajax(driver2, "AffjaxTimeoutErrorMessageIdent", "AffjaxRequestFailedMessageIdent", ResponseHeader.create, ajaxRequest(content4)))))(function(v2) {
          if (v2 instanceof Right) {
            var v1 = runExcept(fromResponse(v2.value0.body));
            if (v1 instanceof Left) {
              return new Left(new ResponseBodyError(head3(v1.value0), v2.value0));
            }
            ;
            if (v1 instanceof Right) {
              return new Right({
                headers: v2.value0.headers,
                status: v2.value0.status,
                statusText: v2.value0.statusText,
                body: v1.value0
              });
            }
            ;
            throw new Error("Failed pattern match at Affjax (line 209, column 9 - line 211, column 52): " + [v1.constructor.name]);
          }
          ;
          if (v2 instanceof Left) {
            return new Left((function() {
              var message2 = message(v2.value0);
              var $61 = message2 === "AffjaxTimeoutErrorMessageIdent";
              if ($61) {
                return TimeoutError.value;
              }
              ;
              var $62 = message2 === "AffjaxRequestFailedMessageIdent";
              if ($62) {
                return RequestFailedError.value;
              }
              ;
              return new XHROtherError(v2.value0);
            })());
          }
          ;
          throw new Error("Failed pattern match at Affjax (line 207, column 144 - line 219, column 28): " + [v2.constructor.name]);
        });
      };
      if (req2.content instanceof Nothing) {
        return send(toNullable(Nothing.value));
      }
      ;
      if (req2.content instanceof Just) {
        var v = extractContent(req2.content.value0);
        if (v instanceof Right) {
          return send(toNullable(new Just(v.value0)));
        }
        ;
        if (v instanceof Left) {
          return pure13(new Left(new RequestContentError(v.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 199, column 7 - line 203, column 48): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Affjax (line 195, column 3 - line 203, column 48): " + [req2.content.constructor.name]);
    };
  };
  var printError = function(v) {
    if (v instanceof RequestContentError) {
      return "There was a problem with the request content: " + v.value0;
    }
    ;
    if (v instanceof ResponseBodyError) {
      return "There was a problem with the response body: " + renderForeignError(v.value0);
    }
    ;
    if (v instanceof TimeoutError) {
      return "There was a problem making the request: timeout";
    }
    ;
    if (v instanceof RequestFailedError) {
      return "There was a problem making the request: request failed";
    }
    ;
    if (v instanceof XHROtherError) {
      return "There was a problem making the request: " + message(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Affjax (line 113, column 14 - line 123, column 66): " + [v.constructor.name]);
  };
  var defaultRequest = /* @__PURE__ */ (function() {
    return {
      method: new Left(GET2.value),
      url: "/",
      headers: [],
      content: Nothing.value,
      username: Nothing.value,
      password: Nothing.value,
      withCredentials: false,
      responseFormat: ignore,
      timeout: Nothing.value
    };
  })();
  var get2 = function(driver2) {
    return function(rf) {
      return function(u2) {
        return request2(driver2)({
          method: defaultRequest.method,
          headers: defaultRequest.headers,
          content: defaultRequest.content,
          username: defaultRequest.username,
          password: defaultRequest.password,
          withCredentials: defaultRequest.withCredentials,
          timeout: defaultRequest.timeout,
          url: u2,
          responseFormat: rf
        });
      };
    };
  };

  // output/Affjax.Web/foreign.js
  var driver = {
    newXHR: function() {
      return new XMLHttpRequest();
    },
    fixupUrl: function(url) {
      return url || "/";
    }
  };

  // output/Affjax.Web/index.js
  var get3 = /* @__PURE__ */ get2(driver);

  // output/PSD3.About/index.js
  var prop3 = /* @__PURE__ */ prop2(isPropString);
  var discard6 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_3 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var bind6 = /* @__PURE__ */ bind(bindHalogenM);
  var pure14 = /* @__PURE__ */ pure(applicativeHalogenM);
  var Initialize2 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var LoadContent = /* @__PURE__ */ (function() {
    function LoadContent2() {
    }
    ;
    LoadContent2.value = new LoadContent2();
    return LoadContent2;
  })();
  var LoadTOC = /* @__PURE__ */ (function() {
    function LoadTOC2() {
    }
    ;
    LoadTOC2.value = new LoadTOC2();
    return LoadTOC2;
  })();
  var render = function(state3) {
    return div2([classes(["about-page"])])([(function() {
      if (state3.toc instanceof Just) {
        return div2([classes(["about-page__toc-container"]), prop3("innerHTML")(state3.toc.value0)])([]);
      }
      ;
      if (state3.toc instanceof Nothing) {
        return text5("");
      }
      ;
      throw new Error("Failed pattern match at PSD3.About (line 55, column 7 - line 62, column 30): " + [state3.toc.constructor.name]);
    })(), div2([classes(["about-page__container", "editorial"])])([div2([classes(["about-page__header"])])([]), div2([classes(["about-page__content"])])([(function() {
      if (state3.content instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["about-page__loading"])])([text5("Loading...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["about-page__error"])])([text5("Error loading content: " + state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return text5("");
        }
        ;
        throw new Error("Failed pattern match at PSD3.About (line 78, column 26 - line 82, column 44): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.content instanceof Just) {
        return div2([classes(["about-page__markdown"]), prop3("innerHTML")(state3.content.value0)])([]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.About (line 72, column 15 - line 89, column 23): " + [state3.content.constructor.name]);
    })()])])]);
  };
  var initialState = /* @__PURE__ */ (function() {
    return {
      content: Nothing.value,
      toc: Nothing.value,
      loading: true,
      error: Nothing.value
    };
  })();
  var handleAction = function(dictMonadAff) {
    var liftAff2 = liftAff(monadAffHalogenM(dictMonadAff));
    return function(v) {
      if (v instanceof Initialize2) {
        return discard6(handleAction(dictMonadAff)(LoadContent.value))(function() {
          return handleAction(dictMonadAff)(LoadTOC.value);
        });
      }
      ;
      if (v instanceof LoadContent) {
        return discard6(modify_3(function(v1) {
          var $26 = {};
          for (var $27 in v1) {
            if ({}.hasOwnProperty.call(v1, $27)) {
              $26[$27] = v1[$27];
            }
            ;
          }
          ;
          $26.loading = true;
          $26.error = Nothing.value;
          return $26;
        }))(function() {
          return bind6(liftAff2(get3(string)("about-content.html")))(function(result) {
            if (result instanceof Left) {
              return modify_3(function(v1) {
                var $30 = {};
                for (var $31 in v1) {
                  if ({}.hasOwnProperty.call(v1, $31)) {
                    $30[$31] = v1[$31];
                  }
                  ;
                }
                ;
                $30.loading = false;
                $30.error = new Just(printError(result.value0));
                return $30;
              });
            }
            ;
            if (result instanceof Right) {
              return modify_3(function(v1) {
                var $34 = {};
                for (var $35 in v1) {
                  if ({}.hasOwnProperty.call(v1, $35)) {
                    $34[$35] = v1[$35];
                  }
                  ;
                }
                ;
                $34.loading = false;
                $34.content = new Just(result.value0.body);
                $34.error = Nothing.value;
                return $34;
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.About (line 103, column 5 - line 114, column 12): " + [result.constructor.name]);
          });
        });
      }
      ;
      if (v instanceof LoadTOC) {
        return bind6(liftAff2(get3(string)("about-toc.html")))(function(result) {
          if (result instanceof Left) {
            return pure14(unit);
          }
          ;
          if (result instanceof Right) {
            return modify_3(function(v1) {
              var $40 = {};
              for (var $41 in v1) {
                if ({}.hasOwnProperty.call(v1, $41)) {
                  $40[$41] = v1[$41];
                }
                ;
              }
              ;
              $40.toc = new Just(result.value0.body);
              return $40;
            });
          }
          ;
          throw new Error("Failed pattern match at PSD3.About (line 118, column 5 - line 121, column 49): " + [result.constructor.name]);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.About (line 95, column 16 - line 121, column 49): " + [v.constructor.name]);
    };
  };
  var component = function(dictMonadAff) {
    return mkComponent({
      initialState: $$const(initialState),
      render,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction(dictMonadAff),
        initialize: new Just(Initialize2.value)
      })
    });
  };

  // output/D3.Attributes.Instances/index.js
  var Static = /* @__PURE__ */ (function() {
    function Static2(value0) {
      this.value0 = value0;
    }
    ;
    Static2.create = function(value0) {
      return new Static2(value0);
    };
    return Static2;
  })();
  var Fn = /* @__PURE__ */ (function() {
    function Fn2(value0) {
      this.value0 = value0;
    }
    ;
    Fn2.create = function(value0) {
      return new Fn2(value0);
    };
    return Fn2;
  })();
  var FnI = /* @__PURE__ */ (function() {
    function FnI2(value0) {
      this.value0 = value0;
    }
    ;
    FnI2.create = function(value0) {
      return new FnI2(value0);
    };
    return FnI2;
  })();
  var StringAttr = /* @__PURE__ */ (function() {
    function StringAttr2(value0) {
      this.value0 = value0;
    }
    ;
    StringAttr2.create = function(value0) {
      return new StringAttr2(value0);
    };
    return StringAttr2;
  })();
  var NumberAttr = /* @__PURE__ */ (function() {
    function NumberAttr2(value0) {
      this.value0 = value0;
    }
    ;
    NumberAttr2.create = function(value0) {
      return new NumberAttr2(value0);
    };
    return NumberAttr2;
  })();
  var ArrayAttr = /* @__PURE__ */ (function() {
    function ArrayAttr2(value0) {
      this.value0 = value0;
    }
    ;
    ArrayAttr2.create = function(value0) {
      return new ArrayAttr2(value0);
    };
    return ArrayAttr2;
  })();
  var AttributeSetter = /* @__PURE__ */ (function() {
    function AttributeSetter2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AttributeSetter2.create = function(value0) {
      return function(value1) {
        return new AttributeSetter2(value0, value1);
      };
    };
    return AttributeSetter2;
  })();
  var unboxAttr = function(v) {
    if (v instanceof StringAttr && v.value0 instanceof Static) {
      return v.value0.value0;
    }
    ;
    if (v instanceof StringAttr && v.value0 instanceof Fn) {
      return v.value0.value0;
    }
    ;
    if (v instanceof StringAttr && v.value0 instanceof FnI) {
      return v.value0.value0;
    }
    ;
    if (v instanceof NumberAttr && v.value0 instanceof Static) {
      return v.value0.value0;
    }
    ;
    if (v instanceof NumberAttr && v.value0 instanceof Fn) {
      return v.value0.value0;
    }
    ;
    if (v instanceof NumberAttr && v.value0 instanceof FnI) {
      return v.value0.value0;
    }
    ;
    if (v instanceof ArrayAttr && v.value0 instanceof Static) {
      return v.value0.value0;
    }
    ;
    if (v instanceof ArrayAttr && v.value0 instanceof Fn) {
      return v.value0.value0;
    }
    ;
    if (v instanceof ArrayAttr && v.value0 instanceof FnI) {
      return v.value0.value0;
    }
    ;
    throw new Error("Failed pattern match at D3.Attributes.Instances (line 49, column 3 - line 60, column 46): " + [v.constructor.name]);
  };
  var toAttrStringFn = {
    toAttr: function($36) {
      return StringAttr.create(Fn.create($36));
    }
  };
  var toAttrString = {
    toAttr: function($37) {
      return StringAttr.create(Static.create($37));
    }
  };
  var toAttrNumberFnI = {
    toAttr: function($38) {
      return NumberAttr.create(FnI.create(mkFn2($38)));
    }
  };
  var toAttrNumberFn = {
    toAttr: function($39) {
      return NumberAttr.create(Fn.create($39));
    }
  };
  var toAttrNumber = {
    toAttr: function($40) {
      return NumberAttr.create(Static.create($40));
    }
  };
  var toAttr = function(dict) {
    return dict.toAttr;
  };

  // output/D3.Data.Types/index.js
  var MouseEnter = /* @__PURE__ */ (function() {
    function MouseEnter2() {
    }
    ;
    MouseEnter2.value = new MouseEnter2();
    return MouseEnter2;
  })();
  var MouseLeave = /* @__PURE__ */ (function() {
    function MouseLeave2() {
    }
    ;
    MouseLeave2.value = new MouseLeave2();
    return MouseLeave2;
  })();
  var MouseClick = /* @__PURE__ */ (function() {
    function MouseClick2() {
    }
    ;
    MouseClick2.value = new MouseClick2();
    return MouseClick2;
  })();
  var MouseDown = /* @__PURE__ */ (function() {
    function MouseDown2() {
    }
    ;
    MouseDown2.value = new MouseDown2();
    return MouseDown2;
  })();
  var MouseUp = /* @__PURE__ */ (function() {
    function MouseUp2() {
    }
    ;
    MouseUp2.value = new MouseUp2();
    return MouseUp2;
  })();
  var Div = /* @__PURE__ */ (function() {
    function Div2() {
    }
    ;
    Div2.value = new Div2();
    return Div2;
  })();
  var Svg = /* @__PURE__ */ (function() {
    function Svg2() {
    }
    ;
    Svg2.value = new Svg2();
    return Svg2;
  })();
  var Circle = /* @__PURE__ */ (function() {
    function Circle2() {
    }
    ;
    Circle2.value = new Circle2();
    return Circle2;
  })();
  var Line = /* @__PURE__ */ (function() {
    function Line2() {
    }
    ;
    Line2.value = new Line2();
    return Line2;
  })();
  var Group = /* @__PURE__ */ (function() {
    function Group2() {
    }
    ;
    Group2.value = new Group2();
    return Group2;
  })();
  var Text2 = /* @__PURE__ */ (function() {
    function Text3() {
    }
    ;
    Text3.value = new Text3();
    return Text3;
  })();
  var Path = /* @__PURE__ */ (function() {
    function Path3() {
    }
    ;
    Path3.value = new Path3();
    return Path3;
  })();
  var Rect = /* @__PURE__ */ (function() {
    function Rect2() {
    }
    ;
    Rect2.value = new Rect2();
    return Rect2;
  })();
  var DefaultCubic = /* @__PURE__ */ (function() {
    function DefaultCubic2() {
    }
    ;
    DefaultCubic2.value = new DefaultCubic2();
    return DefaultCubic2;
  })();
  var showMouseEvent = {
    show: function(v) {
      if (v instanceof MouseEnter) {
        return "mouseenter";
      }
      ;
      if (v instanceof MouseLeave) {
        return "mouseleave";
      }
      ;
      if (v instanceof MouseClick) {
        return "click";
      }
      ;
      if (v instanceof MouseDown) {
        return "mousedown";
      }
      ;
      if (v instanceof MouseUp) {
        return "mouseup";
      }
      ;
      throw new Error("Failed pattern match at D3.Data.Types (line 46, column 1 - line 51, column 30): " + [v.constructor.name]);
    }
  };
  var showElement = {
    show: function(v) {
      if (v instanceof Div) {
        return "div";
      }
      ;
      if (v instanceof Svg) {
        return "svg";
      }
      ;
      if (v instanceof Circle) {
        return "circle";
      }
      ;
      if (v instanceof Line) {
        return "line";
      }
      ;
      if (v instanceof Group) {
        return "g";
      }
      ;
      if (v instanceof Text2) {
        return "text";
      }
      ;
      if (v instanceof Path) {
        return "path";
      }
      ;
      if (v instanceof Rect) {
        return "rect";
      }
      ;
      throw new Error("Failed pattern match at D3.Data.Types (line 25, column 1 - line 33, column 23): " + [v.constructor.name]);
    }
  };

  // output/D3.FFI/foreign.js
  function d3Append_(element3) {
    return (selection) => {
      return selection.append(element3);
    };
  }
  function d3DataWithKeyFunction_(data) {
    return (keyFn) => (selection) => {
      return selection.data(data, keyFn);
    };
  }
  function d3EnterAndAppend_(element3) {
    return (selection) => {
      return selection.enter().append(element3);
    };
  }
  function d3GetExitSelection_(selection) {
    return selection.exit();
  }
  function d3GetEnterSelection_(selection) {
    return selection.enter();
  }
  function d3GetSelectionData_(selection) {
    return selection.data();
  }
  function d3FilterSelection_(selection) {
    return (selector) => selection.filter(selector);
  }
  function d3LowerSelection_(selection) {
    return selection.lower();
  }
  function d3MergeSelectionWith_(enter) {
    return (update3) => {
      return enter.merge(update3);
    };
  }
  function d3OrderSelection_(selection) {
    return selection.order();
  }
  function d3RaiseSelection_(selection) {
    return selection.raise();
  }
  function d3RemoveSelection_(selection) {
    return selection.remove();
  }
  function d3SelectAllInDOM_(selector) {
    return d3.selectAll(selector);
  }
  function d3SelectFirstInDOM_(selector) {
    return d3.select(selector);
  }
  function d3SelectionIsEmpty_(selection) {
    return selection.empty();
  }
  function d3SelectionSelect_(selector) {
    return (selection) => {
      return selection.select(selector);
    };
  }
  function d3SelectionSelectAll_(selector) {
    return (selection) => {
      return selection.selectAll(selector);
    };
  }
  function d3SetAttr_(name16) {
    return (value15) => (selection) => {
      return selection.attr(name16, value15);
    };
  }
  function d3SetHTML_(value15) {
    return (selection) => {
      return selection.html(value15);
    };
  }
  function d3SetProperty_(value15) {
    return (selection) => {
      return selection.property(value15);
    };
  }
  function d3SetText_(value15) {
    return (selection) => {
      return selection.text(value15);
    };
  }
  function d3SortSelection_(selection) {
    return (compare2) => selection.sort(compare2);
  }
  function simulationDrag_(label5) {
    return (selection) => (simulation) => (dragFn) => selection.call(dragFn(label5, simulation));
  }
  function disableDrag_(selection) {
    return selection.on(".drag", null);
  }
  function getIndexFromDatum_(datum) {
    return typeof datum.index == `undefined` ? "?" : datum.index;
  }
  function selectionOn_(selection) {
    return (event) => (callback) => {
      return selection.on(event, callback);
    };
  }
  function d3AddTransition_(selection) {
    return (transition) => {
      var handle;
      if (transition.name == "") {
        handle = selection.transition();
        if (transition.duration != 0) {
          handle.duration(transition.duration);
        }
        if (transition.delay != 0) {
          handle.delay(transition.delay);
        }
      } else {
        handle = selection.transition(transition.name);
      }
      return handle;
    };
  }
  function simdrag(label5, simulation) {
    function dragstarted(event) {
      if (!event.active) simulation.alphaTarget(0.3).restart();
      event.subject.fx = event.subject.x;
      event.subject.fy = event.subject.y;
    }
    function dragged(event) {
      event.subject.fx = event.x;
      event.subject.fy = event.y;
    }
    function dragended(event) {
      if (!event.active) simulation.alphaTarget(0);
      event.subject.fx = null;
      event.subject.fy = null;
    }
    return d3.drag().on("start." + label5, dragstarted).on("drag." + label5, dragged).on("end." + label5, dragended);
  }
  var linksForceName = "links";
  function disableTick_(simulation) {
    return (name16) => {
      return simulation.on("tick." + name16, () => null);
    };
  }
  function forceCenter_() {
    return d3.forceCenter();
  }
  function forceCollideFn_() {
    return d3.forceCollide();
  }
  function forceLink_() {
    return d3.forceLink().id((d2) => d2.id);
  }
  function forceMany_() {
    return d3.forceManyBody();
  }
  function forceRadial_() {
    return d3.forceRadial();
  }
  function forceX_() {
    return d3.forceX();
  }
  function forceY_() {
    return d3.forceY();
  }
  function getNodes_(simulation) {
    return simulation.nodes();
  }
  function keyIsID_(d2) {
    return d2.id;
  }
  function setAlpha_(simulation) {
    return (alpha) => {
      console.log(`FFI: setting simulation.alpha to ${alpha}`);
      simulation.alpha(alpha);
    };
  }
  function setAlphaDecay_(simulation) {
    return (alphaDecay) => simulation.alphaDecay(alphaDecay);
  }
  function setAlphaMin_(simulation) {
    return (alphaMin) => simulation.alphaMin(alphaMin);
  }
  function setAlphaTarget_(simulation) {
    return (alphaTarget) => simulation.alphaTarget(alphaTarget);
  }
  function setAsNullForceInSimulation_(simulation) {
    return (label5) => simulation.force(label5, null);
  }
  function setForceDistance_(force2) {
    return (attr3) => force2.distance(attr3);
  }
  function setForceDistanceMax_(force2) {
    return (attr3) => force2.distanceMax(attr3);
  }
  function setForceDistanceMin_(force2) {
    return (attr3) => force2.distanceMin(attr3);
  }
  function setForceIterations_(force2) {
    return (attr3) => force2.iterations(attr3);
  }
  function setForceRadius_(force2) {
    return (attr3) => force2.radius(attr3);
  }
  function setForceStrength_(force2) {
    return (attr3) => force2.strength(attr3);
  }
  function setForceTheta_(force2) {
    return (attr3) => force2.theta(attr3);
  }
  function setForceX_(force2) {
    return (attr3) => force2.x(attr3);
  }
  function setForceY_(force2) {
    return (attr3) => force2.y(attr3);
  }
  function setVelocityDecay_(simulation) {
    return (velocityDecay) => simulation.velocityDecay(velocityDecay);
  }
  function startSimulation_(simulation) {
    console.log(`FFI: restarting the simulation, alpha is: ${simulation.alpha()}`);
    simulation.restart();
  }
  function stopSimulation_(simulation) {
    return simulation.stop();
  }
  function initSimulation_(config) {
    return (keyFn) => {
      const simulation = d3.forceSimulation([]).force(linksForceName, d3.forceLink([]).id(keyFn)).alpha(config.alpha).alphaTarget(config.alphaTarget).alphaMin(config.alphaMin).alphaDecay(config.alphaDecay).velocityDecay(config.velocityDecay);
      if (true) {
        console.log(`FFI: initSimulation${simulation}`);
      }
      return simulation;
    };
  }
  function readSimulationVariables(simulation) {
    return {
      alpha: simulation.alpha(),
      alphaTarget: simulation.alphaTarget(),
      alphaMin: simulation.alphaMin(),
      alphaDecay: simulation.alphaDecay(),
      velocityDecay: simulation.velocityDecay()
    };
  }
  unpin = (d2) => {
    d2.fx = null;
    d2.fy = null;
    return d2;
  };
  getBaseForAssign = (newNodeMap, key) => {
    let newnode = newNodeMap.get(key);
    if (newnode) {
      var updatedCount;
      if (typeof newnode.updatedCount === "undefined") {
        updatedCount = 0;
      } else {
        updatedCount = newnode.updatedCount + 1;
      }
      return { fx: newnode.fx, fy: newnode.fy, updatedCount };
    } else {
      return d;
    }
  };
  function d3PreserveSimulationPositions_(selection) {
    return (nodedata) => (keyFn) => {
      const oldNodeMap = new Map(selection.data().map((d2) => [keyFn(d2), d2]));
      const newNodeMap = new Map(nodedata.map((d2) => [keyFn(d2), d2]));
      console.log(`FFI: d3PreserveSimulationPositions_ given ${nodedata.length} nodes, in selection ${selection.data().length}`);
      let updatedNodeData = nodedata.map((d2) => {
        let id4 = keyFn(d2);
        let newNode = newNodeMap.get(id4);
        let shell = {};
        if (newNode) {
          console.log(`FFI: copying fx/fy from incoming node to old object (if present)`);
          shell = { fx: newNode.fx, fy: newNode.fy, gridXY: newNode.gridXY, updated: true };
        }
        return Object.assign(oldNodeMap.get(id4) || d2, shell);
      });
      return updatedNodeData;
    };
  }
  function d3PreserveLinkReferences_(link3) {
    return (links) => {
      const old = new Map(link3.data().map((d2) => [getLinkID_(d2), d2]));
      let updatedLinkData = links.map((d2) => Object.assign(old.get(getLinkID_(d2)) || d2, {}));
      return updatedLinkData;
    };
  }
  function getIDsFromNodes_(nodes) {
    return (keyFn) => {
      const keys4 = [];
      for (let i2 = 0; i2 < nodes.length; i2++) {
        keys4[i2] = keyFn(nodes[i2]);
      }
      return keys4;
    };
  }
  function setNodes_(simulation) {
    return (nodes) => {
      console.log(`FFI: setting nodes in simulation, there are ${nodes.length} nodes`);
      simulation.nodes(nodes);
      return simulation.nodes();
    };
  }
  function setLinks_(simulation) {
    return (links) => {
      console.log(`FFI: setting links in simulation, there are ${links.length} links`);
      simulation.force(linksForceName).links(links);
    };
  }
  function swizzleLinks_(links) {
    return (simNodes) => (keyFn) => {
      console.log(`FFI: swizzling links in simulation, there are ${links.length} links`);
      const nodeById = new Map(simNodes.map((d2) => [keyFn(d2), d2]));
      const swizzledLinks = links.filter((link3, index5, arr) => {
        if (typeof link3.source !== "object") {
          link3.source = nodeById.get(link3.source);
        } else {
          link3.source = nodeById.get(keyFn(link3.source));
        }
        if (typeof link3.target !== "object") {
          link3.target = nodeById.get(link3.target);
        } else {
          link3.target = nodeById.get(keyFn(link3.target));
        }
        if (typeof link3.source === "undefined" || link3.target === "undefined") {
          return false;
        } else {
          link3.id = keyFn(link3.source) + "-" + keyFn(link3.target);
          return true;
        }
      });
      return swizzledLinks;
    };
  }
  function unsetLinks_(simulation) {
    const linkForce = d3.forceLink([]);
    console.log("FFI: removing all links from simulation");
    simulation.force(linksForceName, linkForce);
    return simulation;
  }
  function getLinkID_(keyFn) {
    return (link3) => {
      const sourceID = typeof link3.source == `object` ? keyFn(link3.source) : link3.source;
      const targetID = typeof link3.target == `object` ? keyFn(link3.target) : link3.target;
      return sourceID + "-" + targetID;
    };
  }
  function getLinkIDs_(keyFn) {
    return (link3) => {
      const sourceID = typeof link3.source == `object` ? keyFn(link3.source) : link3.source;
      const targetID = typeof link3.target == `object` ? keyFn(link3.target) : link3.target;
      return { sourceID, targetID };
    };
  }
  function getLinksFromSimulation_(simulation) {
    linksForce = simulation.force(linksForceName);
    if (typeof linksForce === `undefined`) {
      return [];
    }
    const result = linksForce.links();
    if (typeof result === `undefined`) {
      return [];
    }
    return result;
  }
  function onTick_(simulation) {
    return (name16) => (tickFn) => {
      var result = simulation.on("tick." + name16, () => {
        tickFn();
      });
      return result;
    };
  }
  function putForceInSimulation_(simulation) {
    return (label5) => (force2) => {
      simulation.force(label5, force2);
    };
  }
  function descendants_(tree2) {
    return tree2.descendants();
  }
  function getClusterLayoutFn_() {
    return d3.cluster();
  }
  function getTreeLayoutFn_() {
    return d3.tree();
  }
  function hasChildren_(d2) {
    return d2.children === "undefined" ? false : true;
  }
  function getHierarchyChildren_(d2) {
    return !d2.children ? [] : d2.children;
  }
  function hierarchyFromJSON_(json) {
    return d3.hierarchy(json);
  }
  function hNodeHeight_(node) {
    return node.height;
  }
  function runLayoutFn_(layout) {
    return (root2) => layout(root2);
  }
  function treeSetNodeSize_(tree2) {
    return (widthHeight) => tree2.nodeSize(widthHeight);
  }
  function treeSortForTree_Spago(root2) {
    return root2.sum(function(d2) {
      return d2.value;
    }).sort(function(a2, b2) {
      const result = b2.height - a2.height || a2.data.name.localeCompare(b2.data.name);
      return result;
    });
  }
  var linkHorizontal_ = d3.linkHorizontal().x((d2) => d2.y).y((d2) => d2.x);
  var linkHorizontal2_ = d3.linkHorizontal().x((d2) => d2.x).y((d2) => d2.y);
  var linkVertical_ = d3.linkVertical().x((d2) => d2.x).y((d2) => d2.y);
  function d3AttachZoomDefaultExtent_(selection) {
    return (config) => {
      function zoomed({ transform }) {
        config.target.attr("transform", transform);
      }
      return selection.call(
        d3.zoom().scaleExtent(config.scaleExtent).on(`zoom.${config.name}`, zoomed)
      );
    };
  }
  function d3AttachZoom_(selection) {
    return (config) => {
      selection.call(
        d3.zoom().extent(config.extent).scaleExtent(config.scaleExtent).on(`zoom.${config.name}`, (event) => {
          config.target.attr("transform", event.transform);
        })
      );
      return selection;
    };
  }

  // output/D3.Data.Tree/foreign.js
  function idTreeLeaf_(obj) {
    const treeObj = Object.assign({}, obj);
    treeObj.isTreeLeaf = true;
    return treeObj;
  }
  function idTreeParent_(obj) {
    return (children2) => {
      const treeObj = Object.assign({}, obj);
      treeObj.isTreeLeaf = false;
      treeObj.children = children2;
      return treeObj;
    };
  }
  var emptyTreeJson_ = {};

  // output/D3.Data.Tree/index.js
  var lookup6 = /* @__PURE__ */ lookup(ordInt);
  var map27 = /* @__PURE__ */ map(functorArray);
  var fromFoldable4 = /* @__PURE__ */ fromFoldable3(foldableList);
  var TidyTree = /* @__PURE__ */ (function() {
    function TidyTree2() {
    }
    ;
    TidyTree2.value = new TidyTree2();
    return TidyTree2;
  })();
  var Dendrogram = /* @__PURE__ */ (function() {
    function Dendrogram2() {
    }
    ;
    Dendrogram2.value = new Dendrogram2();
    return Dendrogram2;
  })();
  var Radial = /* @__PURE__ */ (function() {
    function Radial2() {
    }
    ;
    Radial2.value = new Radial2();
    return Radial2;
  })();
  var Horizontal = /* @__PURE__ */ (function() {
    function Horizontal2() {
    }
    ;
    Horizontal2.value = new Horizontal2();
    return Horizontal2;
  })();
  var Vertical = /* @__PURE__ */ (function() {
    function Vertical2() {
    }
    ;
    Vertical2.value = new Vertical2();
    return Vertical2;
  })();
  var makeD3TreeJSONFromTreeID = function(root2) {
    return function(nodesMap) {
      var go2 = function(v) {
        var v1 = lookup6(v.value0)(nodesMap);
        if (v1 instanceof Nothing) {
          return emptyTreeJson_;
        }
        ;
        if (v1 instanceof Just) {
          if (v.value1 instanceof Nil) {
            return idTreeLeaf_(v1.value0);
          }
          ;
          return idTreeParent_(v1.value0)(map27(go2)(fromFoldable4(v.value1)));
        }
        ;
        throw new Error("Failed pattern match at D3.Data.Tree (line 49, column 7 - line 53, column 84): " + [v1.constructor.name]);
      };
      return go2(root2);
    };
  };

  // output/D3.FFI/index.js
  var getLayout = function(layout) {
    if (layout instanceof TidyTree) {
      return getTreeLayoutFn_(unit);
    }
    ;
    if (layout instanceof Dendrogram) {
      return getClusterLayoutFn_(unit);
    }
    ;
    throw new Error("Failed pattern match at D3.FFI (line 260, column 3 - line 262, column 43): " + [layout.constructor.name]);
  };

  // output/D3.Selection/index.js
  var show4 = /* @__PURE__ */ show(showMouseEvent);
  var Order = /* @__PURE__ */ (function() {
    function Order2() {
    }
    ;
    Order2.value = new Order2();
    return Order2;
  })();
  var Sort = /* @__PURE__ */ (function() {
    function Sort2(value0) {
      this.value0 = value0;
    }
    ;
    Sort2.create = function(value0) {
      return new Sort2(value0);
    };
    return Sort2;
  })();
  var Raise2 = /* @__PURE__ */ (function() {
    function Raise3() {
    }
    ;
    Raise3.value = new Raise3();
    return Raise3;
  })();
  var Lower = /* @__PURE__ */ (function() {
    function Lower2() {
    }
    ;
    Lower2.value = new Lower2();
    return Lower2;
  })();
  var AttrT = /* @__PURE__ */ (function() {
    function AttrT2(value0) {
      this.value0 = value0;
    }
    ;
    AttrT2.create = function(value0) {
      return new AttrT2(value0);
    };
    return AttrT2;
  })();
  var TextT = /* @__PURE__ */ (function() {
    function TextT2(value0) {
      this.value0 = value0;
    }
    ;
    TextT2.create = function(value0) {
      return new TextT2(value0);
    };
    return TextT2;
  })();
  var HTMLT = /* @__PURE__ */ (function() {
    function HTMLT2(value0) {
      this.value0 = value0;
    }
    ;
    HTMLT2.create = function(value0) {
      return new HTMLT2(value0);
    };
    return HTMLT2;
  })();
  var PropertyT = /* @__PURE__ */ (function() {
    function PropertyT2(value0) {
      this.value0 = value0;
    }
    ;
    PropertyT2.create = function(value0) {
      return new PropertyT2(value0);
    };
    return PropertyT2;
  })();
  var OrderingT = /* @__PURE__ */ (function() {
    function OrderingT2(value0) {
      this.value0 = value0;
    }
    ;
    OrderingT2.create = function(value0) {
      return new OrderingT2(value0);
    };
    return OrderingT2;
  })();
  var TransitionT = /* @__PURE__ */ (function() {
    function TransitionT2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TransitionT2.create = function(value0) {
      return function(value1) {
        return new TransitionT2(value0, value1);
      };
    };
    return TransitionT2;
  })();
  var RemoveT = /* @__PURE__ */ (function() {
    function RemoveT2() {
    }
    ;
    RemoveT2.value = new RemoveT2();
    return RemoveT2;
  })();
  var OnT = /* @__PURE__ */ (function() {
    function OnT2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    OnT2.create = function(value0) {
      return function(value1) {
        return new OnT2(value0, value1);
      };
    };
    return OnT2;
  })();
  var OnT$prime = /* @__PURE__ */ (function() {
    function OnT$prime2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    OnT$prime2.create = function(value0) {
      return function(value1) {
        return new OnT$prime2(value0, value1);
      };
    };
    return OnT$prime2;
  })();
  var DefaultDrag = /* @__PURE__ */ (function() {
    function DefaultDrag2() {
    }
    ;
    DefaultDrag2.value = new DefaultDrag2();
    return DefaultDrag2;
  })();
  var NoDrag = /* @__PURE__ */ (function() {
    function NoDrag2() {
    }
    ;
    NoDrag2.value = new NoDrag2();
    return NoDrag2;
  })();
  var CustomDrag = /* @__PURE__ */ (function() {
    function CustomDrag2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CustomDrag2.create = function(value0) {
      return function(value1) {
        return new CustomDrag2(value0, value1);
      };
    };
    return CustomDrag2;
  })();
  var Drag = /* @__PURE__ */ (function() {
    function Drag2(value0) {
      this.value0 = value0;
    }
    ;
    Drag2.create = function(value0) {
      return new Drag2(value0);
    };
    return Drag2;
  })();
  var Zoom = /* @__PURE__ */ (function() {
    function Zoom2(value0) {
      this.value0 = value0;
    }
    ;
    Zoom2.create = function(value0) {
      return new Zoom2(value0);
    };
    return Zoom2;
  })();
  var applySelectionAttributeD3 = function(v) {
    return function(v1) {
      if (v1 instanceof AttrT) {
        return d3SetAttr_(v1.value0.value0)(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof TextT) {
        return d3SetText_(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof PropertyT) {
        return d3SetProperty_(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof HTMLT) {
        return d3SetHTML_(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof RemoveT) {
        var removed_ = d3RemoveSelection_(v);
        return removed_;
      }
      ;
      if (v1 instanceof TransitionT) {
        var tHandler = d3AddTransition_(v)(v1.value1);
        var v2 = foldl2(applySelectionAttributeD3)(tHandler)(v1.value0);
        return v;
      }
      ;
      if (v1 instanceof OnT) {
        return selectionOn_(v)(show4(v1.value0))(v1.value1);
      }
      ;
      if (v1 instanceof OnT$prime) {
        return selectionOn_(v)(show4(v1.value0))(v1.value1);
      }
      ;
      if (v1 instanceof OrderingT) {
        if (v1.value0 instanceof Order) {
          return d3OrderSelection_(v);
        }
        ;
        if (v1.value0 instanceof Sort) {
          return d3SortSelection_(v)(v1.value0.value0);
        }
        ;
        if (v1.value0 instanceof Raise2) {
          return d3RaiseSelection_(v);
        }
        ;
        if (v1.value0 instanceof Lower) {
          return d3LowerSelection_(v);
        }
        ;
        throw new Error("Failed pattern match at D3.Selection (line 108, column 3 - line 112, column 51): " + [v1.value0.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at D3.Selection (line 78, column 1 - line 78, column 80): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  // output/D3.Attributes.Sugar/index.js
  var toAttr2 = /* @__PURE__ */ toAttr(toAttrString);
  var intercalate4 = /* @__PURE__ */ intercalate3(monoidString);
  var map28 = /* @__PURE__ */ map(functorArray);
  var show5 = /* @__PURE__ */ show(showNumber);
  var append12 = /* @__PURE__ */ append(semigroupArray);
  var y2 = function(dictToAttr) {
    var $109 = AttributeSetter.create("y2");
    var $110 = toAttr(dictToAttr);
    return function($111) {
      return AttrT.create($109($110($111)));
    };
  };
  var y1 = function(dictToAttr) {
    var $112 = AttributeSetter.create("y1");
    var $113 = toAttr(dictToAttr);
    return function($114) {
      return AttrT.create($112($113($114)));
    };
  };
  var y = function(dictToAttr) {
    var $115 = AttributeSetter.create("y");
    var $116 = toAttr(dictToAttr);
    return function($117) {
      return AttrT.create($115($116($117)));
    };
  };
  var x2 = function(dictToAttr) {
    var $118 = AttributeSetter.create("x2");
    var $119 = toAttr(dictToAttr);
    return function($120) {
      return AttrT.create($118($119($120)));
    };
  };
  var x1 = function(dictToAttr) {
    var $121 = AttributeSetter.create("x1");
    var $122 = toAttr(dictToAttr);
    return function($123) {
      return AttrT.create($121($122($123)));
    };
  };
  var x = function(dictToAttr) {
    var $124 = AttributeSetter.create("x");
    var $125 = toAttr(dictToAttr);
    return function($126) {
      return AttrT.create($124($125($126)));
    };
  };
  var width8 = function(dictToAttr) {
    var $127 = AttributeSetter.create("width");
    var $128 = toAttr(dictToAttr);
    return function($129) {
      return AttrT.create($127($128($129)));
    };
  };
  var viewBox = function(xo) {
    return function(yo) {
      return function(w) {
        return function(h) {
          var vb = intercalate4(" ")(map28(show5)([xo, yo, w, h]));
          return AttrT.create(AttributeSetter.create("viewBox")(toAttr2(vb)));
        };
      };
    };
  };
  var transform$prime = /* @__PURE__ */ (function() {
    var $130 = AttributeSetter.create("transform");
    return function($131) {
      return AttrT.create($130(StringAttr.create(Fn.create($131))));
    };
  })();
  var to = function(v) {
    return function(v1) {
      if (v instanceof TransitionT && v.value0.length === 0) {
        return [new TransitionT(v1, v.value1)];
      }
      ;
      if (v instanceof TransitionT) {
        return [new TransitionT(append12(v.value0)(v1), v.value1)];
      }
      ;
      return cons3(v)(v1);
    };
  };
  var textAnchor = function(dictToAttr) {
    var $132 = AttributeSetter.create("text-anchor");
    var $133 = toAttr(dictToAttr);
    return function($134) {
      return AttrT.create($132($133($134)));
    };
  };
  var text6 = function(dictToAttr) {
    var $135 = AttributeSetter.create("text");
    var $136 = toAttr(dictToAttr);
    return function($137) {
      return TextT.create($135($136($137)));
    };
  };
  var strokeWidth = function(dictToAttr) {
    var $138 = AttributeSetter.create("stroke-width");
    var $139 = toAttr(dictToAttr);
    return function($140) {
      return AttrT.create($138($139($140)));
    };
  };
  var strokeColor = function(dictToAttr) {
    var $144 = AttributeSetter.create("stroke");
    var $145 = toAttr(dictToAttr);
    return function($146) {
      return AttrT.create($144($145($146)));
    };
  };
  var remove = /* @__PURE__ */ (function() {
    return RemoveT.value;
  })();
  var radius = function(dictToAttr) {
    var $156 = AttributeSetter.create("r");
    var $157 = toAttr(dictToAttr);
    return function($158) {
      return AttrT.create($156($157($158)));
    };
  };
  var opacity = function(dictToAttr) {
    var $168 = AttributeSetter.create("opacity");
    var $169 = toAttr(dictToAttr);
    return function($170) {
      return AttrT.create($168($169($170)));
    };
  };
  var onMouseEventEffectful = function(event) {
    return function(listener) {
      return new OnT$prime(event, mkEffectFn3(listener));
    };
  };
  var height8 = function(dictToAttr) {
    var $171 = AttributeSetter.create("height");
    var $172 = toAttr(dictToAttr);
    return function($173) {
      return AttrT.create($171($172($173)));
    };
  };
  var fontSize = function(dictToAttr) {
    var $174 = AttributeSetter.create("font-size");
    var $175 = toAttr(dictToAttr);
    return function($176) {
      return AttrT.create($174($175($176)));
    };
  };
  var fill = function(dictToAttr) {
    var $183 = AttributeSetter.create("fill");
    var $184 = toAttr(dictToAttr);
    return function($185) {
      return AttrT.create($183($184($185)));
    };
  };
  var defaultTransition = /* @__PURE__ */ (function() {
    return {
      name: "",
      delay: 0,
      duration: 0,
      easing: DefaultCubic.value
    };
  })();
  var transitionWithDuration = function(duration2) {
    return new TransitionT([], {
      name: defaultTransition.name,
      delay: defaultTransition.delay,
      easing: defaultTransition.easing,
      duration: duration2
    });
  };
  var cy = function(dictToAttr) {
    var $195 = AttributeSetter.create("cy");
    var $196 = toAttr(dictToAttr);
    return function($197) {
      return AttrT.create($195($196($197)));
    };
  };
  var cx = function(dictToAttr) {
    var $198 = AttributeSetter.create("cx");
    var $199 = toAttr(dictToAttr);
    return function($200) {
      return AttrT.create($198($199($200)));
    };
  };
  var cursor = function(dictToAttr) {
    var $201 = AttributeSetter.create("cursor");
    var $202 = toAttr(dictToAttr);
    return function($203) {
      return AttrT.create($201($202($203)));
    };
  };
  var classed = function(dictToAttr) {
    var $204 = AttributeSetter.create("class");
    var $205 = toAttr(dictToAttr);
    return function($206) {
      return AttrT.create($204($205($206)));
    };
  };
  var andThen = function(dictSemigroup) {
    return append(dictSemigroup);
  };

  // output/Data.Array.NonEmpty.Internal/index.js
  var functorNonEmptyArray = functorArray;

  // output/Data.Array.NonEmpty/index.js
  var fromJust5 = /* @__PURE__ */ fromJust();
  var toArray2 = function(v) {
    return v;
  };
  var adaptMaybe = function(f) {
    return function($123) {
      return fromJust5(f(toArray2($123)));
    };
  };
  var head5 = /* @__PURE__ */ adaptMaybe(head2);

  // output/Data.Lens.Internal.Forget/index.js
  var profunctorForget = {
    dimap: function(f) {
      return function(v) {
        return function(v1) {
          return function($36) {
            return v1(f($36));
          };
        };
      };
    }
  };
  var strongForget = {
    first: function(v) {
      return function($37) {
        return v(fst($37));
      };
    },
    second: function(v) {
      return function($38) {
        return v(snd($38));
      };
    },
    Profunctor0: function() {
      return profunctorForget;
    }
  };
  var choiceForget = function(dictMonoid) {
    var mempty2 = mempty(monoidFn(dictMonoid));
    return {
      left: function(v) {
        return either(v)(mempty2);
      },
      right: function(v) {
        return either(mempty2)(v);
      },
      Profunctor0: function() {
        return profunctorForget;
      }
    };
  };

  // output/Data.Profunctor.Choice/index.js
  var right = function(dict) {
    return dict.right;
  };
  var choiceFn = {
    left: function(v) {
      return function(v1) {
        if (v1 instanceof Left) {
          return new Left(v(v1.value0));
        }
        ;
        if (v1 instanceof Right) {
          return new Right(v1.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    right: /* @__PURE__ */ map(functorEither),
    Profunctor0: function() {
      return profunctorFn;
    }
  };

  // output/Data.Profunctor.Strong/index.js
  var strongFn = {
    first: function(a2b) {
      return function(v) {
        return new Tuple(a2b(v.value0), v.value1);
      };
    },
    second: /* @__PURE__ */ map(functorTuple),
    Profunctor0: function() {
      return profunctorFn;
    }
  };
  var first = function(dict) {
    return dict.first;
  };

  // output/Data.Lens.Iso/index.js
  var coerce4 = /* @__PURE__ */ coerce();
  var iso = function(f) {
    return function(g) {
      return function(dictProfunctor) {
        var dimap2 = dimap(dictProfunctor);
        return function(pab) {
          return dimap2(f)(g)(pab);
        };
      };
    };
  };
  var coerced = function() {
    return function() {
      return function(dictProfunctor) {
        return iso(coerce4)(coerce4)(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Iso.Newtype/index.js
  var coerced2 = /* @__PURE__ */ coerced()();
  var _Newtype = function() {
    return function() {
      return function(dictProfunctor) {
        return coerced2(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Lens/index.js
  var lens$prime = function(to2) {
    return function(dictStrong) {
      var dimap2 = dimap(dictStrong.Profunctor0());
      var first2 = first(dictStrong);
      return function(pab) {
        return dimap2(to2)(function(v) {
          return v.value1(v.value0);
        })(first2(pab));
      };
    };
  };
  var lens = function(get5) {
    return function(set3) {
      return function(dictStrong) {
        return lens$prime(function(s) {
          return new Tuple(get5(s), function(b2) {
            return set3(s)(b2);
          });
        })(dictStrong);
      };
    };
  };

  // output/Data.Lens.Prism/index.js
  var identity13 = /* @__PURE__ */ identity(categoryFn);
  var prism = function(to2) {
    return function(fro) {
      return function(dictChoice) {
        var Profunctor0 = dictChoice.Profunctor0();
        var dimap2 = dimap(Profunctor0);
        var right2 = right(dictChoice);
        var rmap4 = rmap(Profunctor0);
        return function(pab) {
          return dimap2(fro)(either(identity13)(identity13))(right2(rmap4(to2)(pab)));
        };
      };
    };
  };

  // output/Data.Lens.Prism.Maybe/index.js
  var _Just = function(dictChoice) {
    return prism(Just.create)(maybe(new Left(Nothing.value))(Right.create))(dictChoice);
  };

  // output/Data.Set/index.js
  var foldMap2 = /* @__PURE__ */ foldMap(foldableList);
  var foldl3 = /* @__PURE__ */ foldl(foldableList);
  var foldr4 = /* @__PURE__ */ foldr(foldableList);
  var fromFoldable1 = /* @__PURE__ */ fromFoldable3(foldableList);
  var unsafeIndex2 = /* @__PURE__ */ unsafeIndex();
  var bind7 = /* @__PURE__ */ bind(bindST);
  var pure15 = /* @__PURE__ */ pure(applicativeST);
  var tailRecM22 = /* @__PURE__ */ tailRecM2(monadRecST);
  var $$Set = function(x8) {
    return x8;
  };
  var toList2 = function(v) {
    return keys(v);
  };
  var member2 = function(dictOrd) {
    var member1 = member(dictOrd);
    return function(a2) {
      return function(v) {
        return member1(a2)(v);
      };
    };
  };
  var insert6 = function(dictOrd) {
    var insert13 = insert(dictOrd);
    return function(a2) {
      return function(v) {
        return insert13(a2)(unit)(v);
      };
    };
  };
  var fromMap = $$Set;
  var foldableSet = {
    foldMap: function(dictMonoid) {
      var foldMap12 = foldMap2(dictMonoid);
      return function(f) {
        var $129 = foldMap12(f);
        return function($130) {
          return $129(toList2($130));
        };
      };
    },
    foldl: function(f) {
      return function(x8) {
        var $131 = foldl3(f)(x8);
        return function($132) {
          return $131(toList2($132));
        };
      };
    },
    foldr: function(f) {
      return function(x8) {
        var $133 = foldr4(f)(x8);
        return function($134) {
          return $133(toList2($134));
        };
      };
    }
  };
  var empty7 = empty2;
  var fromFoldable5 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictOrd) {
      var insert13 = insert6(dictOrd);
      return foldl22(function(m) {
        return function(a2) {
          return insert13(a2)(m);
        };
      })(empty7);
    };
  };
  var fromFoldable22 = /* @__PURE__ */ fromFoldable5(foldableArray);
  var intersection = function(dictOrd) {
    var compare2 = compare(dictOrd);
    var fromFoldable32 = fromFoldable22(dictOrd);
    return function(s1) {
      return function(s2) {
        var toArray3 = function($135) {
          return fromFoldable1(toList2($135));
        };
        var rs = toArray3(s2);
        var rl = length4(rs);
        var ls = toArray3(s1);
        var ll = length4(ls);
        var intersect2 = function(acc) {
          var go2 = function(l) {
            return function(r) {
              var $122 = l < ll && r < rl;
              if ($122) {
                var v = compare2(unsafeIndex2(ls)(l))(unsafeIndex2(rs)(r));
                if (v instanceof EQ) {
                  return function __do3() {
                    push(unsafeIndex2(ls)(l))(acc)();
                    return new Loop({
                      a: l + 1 | 0,
                      b: r + 1 | 0
                    });
                  };
                }
                ;
                if (v instanceof LT) {
                  return pure15(new Loop({
                    a: l + 1 | 0,
                    b: r
                  }));
                }
                ;
                if (v instanceof GT) {
                  return pure15(new Loop({
                    a: l,
                    b: r + 1 | 0
                  }));
                }
                ;
                throw new Error("Failed pattern match at Data.Set (line 184, column 12 - line 189, column 43): " + [v.constructor.name]);
              }
              ;
              return pure15(new Done(acc));
            };
          };
          return tailRecM22(go2)(0)(0);
        };
        return fromFoldable32(bind7(bind7(newSTArray)(intersect2))(unsafeFreeze)());
      };
    };
  };
  var $$delete5 = function(dictOrd) {
    var delete1 = $$delete(dictOrd);
    return function(a2) {
      return function(v) {
        return delete1(a2)(v);
      };
    };
  };
  var difference2 = function(dictOrd) {
    var delete1 = $$delete5(dictOrd);
    return function(s1) {
      return function(s2) {
        return foldl3(flip(delete1))(s1)(toList2(s2));
      };
    };
  };

  // output/Data.Lens.Setter/index.js
  var over2 = function(l) {
    return l;
  };
  var set = function(l) {
    return function(b2) {
      return over2(l)($$const(b2));
    };
  };
  var modifying = function(dictMonadState) {
    var $$void11 = $$void(dictMonadState.Monad0().Bind1().Apply0().Functor0());
    var modify5 = modify(dictMonadState);
    return function(p2) {
      return function(f) {
        return $$void11(modify5(over2(p2)(f)));
      };
    };
  };
  var assign2 = function(dictMonadState) {
    var $$void11 = $$void(dictMonadState.Monad0().Bind1().Apply0().Functor0());
    var modify5 = modify(dictMonadState);
    return function(p2) {
      return function(b2) {
        return $$void11(modify5(set(p2)(b2)));
      };
    };
  };

  // output/Data.Lens.Getter/index.js
  var unwrap6 = /* @__PURE__ */ unwrap();
  var identity14 = /* @__PURE__ */ identity(categoryFn);
  var view = function(l) {
    return unwrap6(l(identity14));
  };
  var viewOn = function(s) {
    return function(l) {
      return view(l)(s);
    };
  };
  var use = function(dictMonadState) {
    var gets2 = gets(dictMonadState);
    return function(p2) {
      return gets2(function(v) {
        return viewOn(v)(p2);
      });
    };
  };

  // output/Record/index.js
  var set2 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l) {
          return function(b2) {
            return function(r) {
              return unsafeSet(reflectSymbol2(l))(b2)(r);
            };
          };
        };
      };
    };
  };
  var get4 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(l) {
        return function(r) {
          return unsafeGet(reflectSymbol2(l))(r);
        };
      };
    };
  };

  // output/Data.Lens.Record/index.js
  var prop5 = function(dictIsSymbol) {
    var get5 = get4(dictIsSymbol)();
    var set3 = set2(dictIsSymbol)()();
    return function() {
      return function() {
        return function(l) {
          return function(dictStrong) {
            return lens(get5(l))(flip(set3(l)))(dictStrong);
          };
        };
      };
    };
  };

  // output/D3.Simulation.Types/index.js
  var trace2 = /* @__PURE__ */ trace();
  var _Newtype2 = /* @__PURE__ */ _Newtype()();
  var prop6 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "velocityDecay";
    }
  })()();
  var prop32 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "status";
    }
  })()();
  var prop42 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "name";
    }
  })()();
  var prop11 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "simulation";
    }
  })()();
  var prop12 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "forceLibrary";
    }
  })()();
  var prop13 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "handle_";
    }
  })()();
  var prop15 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "alphaTarget";
    }
  })()();
  var prop16 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "alphaMin";
    }
  })()();
  var prop17 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "alphaDecay";
    }
  })()();
  var prop18 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "alpha";
    }
  })()();
  var Step3 = /* @__PURE__ */ (function() {
    function Step4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Step4.create = function(value0) {
      return function(value1) {
        return new Step4(value0, value1);
      };
    };
    return Step4;
  })();
  var StepTransformFFI = /* @__PURE__ */ (function() {
    function StepTransformFFI2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    StepTransformFFI2.create = function(value0) {
      return function(value1) {
        return new StepTransformFFI2(value0, value1);
      };
    };
    return StepTransformFFI2;
  })();
  var Alpha = /* @__PURE__ */ (function() {
    function Alpha2(value0) {
      this.value0 = value0;
    }
    ;
    Alpha2.create = function(value0) {
      return new Alpha2(value0);
    };
    return Alpha2;
  })();
  var AlphaTarget = /* @__PURE__ */ (function() {
    function AlphaTarget2(value0) {
      this.value0 = value0;
    }
    ;
    AlphaTarget2.create = function(value0) {
      return new AlphaTarget2(value0);
    };
    return AlphaTarget2;
  })();
  var AlphaMin = /* @__PURE__ */ (function() {
    function AlphaMin2(value0) {
      this.value0 = value0;
    }
    ;
    AlphaMin2.create = function(value0) {
      return new AlphaMin2(value0);
    };
    return AlphaMin2;
  })();
  var AlphaDecay = /* @__PURE__ */ (function() {
    function AlphaDecay2(value0) {
      this.value0 = value0;
    }
    ;
    AlphaDecay2.create = function(value0) {
      return new AlphaDecay2(value0);
    };
    return AlphaDecay2;
  })();
  var VelocityDecay = /* @__PURE__ */ (function() {
    function VelocityDecay2(value0) {
      this.value0 = value0;
    }
    ;
    VelocityDecay2.create = function(value0) {
      return new VelocityDecay2(value0);
    };
    return VelocityDecay2;
  })();
  var ForceManyBody = /* @__PURE__ */ (function() {
    function ForceManyBody2() {
    }
    ;
    ForceManyBody2.value = new ForceManyBody2();
    return ForceManyBody2;
  })();
  var ForceCenter = /* @__PURE__ */ (function() {
    function ForceCenter2() {
    }
    ;
    ForceCenter2.value = new ForceCenter2();
    return ForceCenter2;
  })();
  var ForceCollide = /* @__PURE__ */ (function() {
    function ForceCollide2() {
    }
    ;
    ForceCollide2.value = new ForceCollide2();
    return ForceCollide2;
  })();
  var ForceX = /* @__PURE__ */ (function() {
    function ForceX2() {
    }
    ;
    ForceX2.value = new ForceX2();
    return ForceX2;
  })();
  var ForceY = /* @__PURE__ */ (function() {
    function ForceY2() {
    }
    ;
    ForceY2.value = new ForceY2();
    return ForceY2;
  })();
  var ForceRadial = /* @__PURE__ */ (function() {
    function ForceRadial2() {
    }
    ;
    ForceRadial2.value = new ForceRadial2();
    return ForceRadial2;
  })();
  var RegularForce = /* @__PURE__ */ (function() {
    function RegularForce2(value0) {
      this.value0 = value0;
    }
    ;
    RegularForce2.create = function(value0) {
      return new RegularForce2(value0);
    };
    return RegularForce2;
  })();
  var LinkForce = /* @__PURE__ */ (function() {
    function LinkForce2() {
    }
    ;
    LinkForce2.value = new LinkForce2();
    return LinkForce2;
  })();
  var ForceActive = /* @__PURE__ */ (function() {
    function ForceActive2() {
    }
    ;
    ForceActive2.value = new ForceActive2();
    return ForceActive2;
  })();
  var ForceDisabled = /* @__PURE__ */ (function() {
    function ForceDisabled2() {
    }
    ;
    ForceDisabled2.value = new ForceDisabled2();
    return ForceDisabled2;
  })();
  var ForceFilter = /* @__PURE__ */ (function() {
    function ForceFilter2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ForceFilter2.create = function(value0) {
      return function(value1) {
        return new ForceFilter2(value0, value1);
      };
    };
    return ForceFilter2;
  })();
  var ForceT = function(x8) {
    return x8;
  };
  var showRegularForceType = {
    show: function(v) {
      if (v instanceof ForceManyBody) {
        return "ForceManyBody";
      }
      ;
      if (v instanceof ForceCenter) {
        return "ForceCenter";
      }
      ;
      if (v instanceof ForceCollide) {
        return "ForceCollide";
      }
      ;
      if (v instanceof ForceX) {
        return "ForceX";
      }
      ;
      if (v instanceof ForceY) {
        return "ForceY";
      }
      ;
      if (v instanceof ForceRadial) {
        return "ForceRadial";
      }
      ;
      throw new Error("Failed pattern match at D3.Simulation.Types (line 221, column 1 - line 227, column 46): " + [v.constructor.name]);
    }
  };
  var showForceFilter = function(v) {
    if (v instanceof Just) {
      return v.value0.value0;
    }
    ;
    if (v instanceof Nothing) {
      return " (no filter)";
    }
    ;
    throw new Error("Failed pattern match at D3.Simulation.Types (line 203, column 1 - line 203, column 47): " + [v.constructor.name]);
  };
  var eqForceStatus = {
    eq: function(x8) {
      return function(y7) {
        if (x8 instanceof ForceActive && y7 instanceof ForceActive) {
          return true;
        }
        ;
        if (x8 instanceof ForceDisabled && y7 instanceof ForceDisabled) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var defaultConfigSimulation = {
    alpha: 1,
    alphaTarget: 0,
    alphaMin: 1e-3,
    alphaDecay: 0.0228,
    velocityDecay: 0.4
  };
  var initialSimulationState = function(forces) {
    var v = trace2({
      simulation: "initialized",
      forceLibrary: forces
    })(function(v1) {
      return unit;
    });
    return {
      handle_: initSimulation_(defaultConfigSimulation)(keyIsID_),
      data: {
        nodes: [],
        links: []
      },
      key: keyIsID_,
      forceLibrary: forces,
      ticks: empty2,
      alpha: defaultConfigSimulation.alpha,
      alphaTarget: defaultConfigSimulation.alphaTarget,
      alphaMin: defaultConfigSimulation.alphaMin,
      alphaDecay: defaultConfigSimulation.alphaDecay,
      velocityDecay: defaultConfigSimulation.velocityDecay
    };
  };
  var allNodes = /* @__PURE__ */ (function() {
    return Nothing.value;
  })();
  var _velocityDecay = function(dictStrong) {
    var $225 = _Newtype2(dictStrong.Profunctor0());
    var $226 = prop6($$Proxy.value)(dictStrong);
    return function($227) {
      return $225($226($227));
    };
  };
  var _status = function(dictStrong) {
    var $238 = _Newtype2(dictStrong.Profunctor0());
    var $239 = prop32($$Proxy.value)(dictStrong);
    return function($240) {
      return $238($239($240));
    };
  };
  var _name = function(dictStrong) {
    var $241 = _Newtype2(dictStrong.Profunctor0());
    var $242 = prop42($$Proxy.value)(dictStrong);
    return function($243) {
      return $241($242($243));
    };
  };
  var _d3Simulation = function(dictStrong) {
    return prop11($$Proxy.value)(dictStrong);
  };
  var _forceLibrary = function(dictStrong) {
    var $265 = _d3Simulation(dictStrong);
    var $266 = _Newtype2(dictStrong.Profunctor0());
    var $267 = prop12($$Proxy.value)(dictStrong);
    return function($268) {
      return $265($266($267($268)));
    };
  };
  var _handle = function(dictStrong) {
    var $272 = _d3Simulation(dictStrong);
    var $273 = _Newtype2(dictStrong.Profunctor0());
    var $274 = prop13($$Proxy.value)(dictStrong);
    return function($275) {
      return $272($273($274($275)));
    };
  };
  var _alphaTarget = function(dictStrong) {
    var $279 = _Newtype2(dictStrong.Profunctor0());
    var $280 = prop15($$Proxy.value)(dictStrong);
    return function($281) {
      return $279($280($281));
    };
  };
  var _alphaMin = function(dictStrong) {
    var $282 = _Newtype2(dictStrong.Profunctor0());
    var $283 = prop16($$Proxy.value)(dictStrong);
    return function($284) {
      return $282($283($284));
    };
  };
  var _alphaDecay = function(dictStrong) {
    var $285 = _Newtype2(dictStrong.Profunctor0());
    var $286 = prop17($$Proxy.value)(dictStrong);
    return function($287) {
      return $285($286($287));
    };
  };
  var _alpha = function(dictStrong) {
    var $288 = _Newtype2(dictStrong.Profunctor0());
    var $289 = prop18($$Proxy.value)(dictStrong);
    return function($290) {
      return $288($289($290));
    };
  };

  // output/D3.Viz.Spago.Model/foreign.js
  var spotlitSelection;
  var spotlitNode;
  var sourcesSelection;
  var targetSelection;
  var spotlitID;
  var spotlit = false;
  spotlightNeighbours_ = (simulation, id4, nodetype) => {
    spotlit = true;
    spotlitID = id4;
    simulation.stop();
    svg = d3.select("div.svg-container svg");
    nodeSelection = svg.selectAll("g.nodes g");
    spotlitSelection = nodeSelection.filter((d2, i2) => d2.id == id4);
    spotlitNode = spotlitSelection.node();
    spotlitNode.__data__.fx = spotlitNode.__data__.fx || spotlitNode.__data__.x;
    spotlitNode.__data__.fy = spotlitNode.__data__.fy || spotlitNode.__data__.y;
    const targets = spotlitNode.__data__.links.targets;
    const sources = spotlitNode.__data__.links.sources;
    sourcesSelection = nodeSelection.filter((d2, i2) => sources.includes(d2.id));
    targetSelection = nodeSelection.filter((d2, i2) => targets.includes(d2.id));
    svg.classed("spotlight", true);
    sourcesSelection.classed("source", true);
    targetSelection.classed("target", true);
    spotlitSelection.classed("spotlight", true);
    spotlitSelection.classed("source target", false);
    simulation.force(
      "collide",
      d3.forceCollide().radius(
        (d2) => sources.includes(d2.id) || targets.includes(d2.id) ? d2.r * 4 : d2.id === d2.containerID ? 10 : d2.r
      )
    );
    simulation.alpha(1).restart();
  };
  unSpotlightNeighbours_ = (simulation) => {
    simulation.stop();
    svg.classed("spotlight", false);
    spotlitNode.__data__.fx = null;
    spotlitNode.__data__.fy = null;
    spotlitSelection.classed("spotlight", false);
    sourcesSelection.classed("source", false);
    targetSelection.classed("target", false);
    simulation.force(
      "collide",
      d3.forceCollide().radius((d2) => d2.id === d2.containerID ? 10 : d2.r)
    );
    simulation.restart();
    spotlit = false;
  };

  // output/D3.Scales/foreign.js
  var d3SchemeCategory10 = d3.scaleOrdinal(d3.schemeCategory10);
  function d3SchemeCategory10N_(number) {
    return d3SchemeCategory10(number);
  }
  var d3SchemePaired = d3.scaleOrdinal(d3.schemePaired);
  function d3SchemePairedN_(number) {
    return d3SchemePaired(number);
  }
  var d3SchemeDiverging10 = d3.scaleDiverging(d3.interpolateBrBG).domain([0, 250, 500]);
  var d3SchemeSequential10 = d3.scaleSequential().interpolator(d3.interpolateYlOrRd).domain([0, 5, 10]);
  function d3SchemeSequential10N_(number) {
    return d3SchemeSequential10(number);
  }

  // output/D3.Viz.Spago.Files/foreign.js
  function readSpago_Raw_JSON_(modulesBody) {
    return (packagesBody) => (lsdepsBody) => (locBody) => {
      const modules = decodeModulesFile(modulesBody);
      const packages = decodePackagesFile(packagesBody);
      const lsDeps = decodeLsDepsFile(lsdepsBody);
      const loc = decodeLOCFile(locBody);
      const pathToLOC = buildPathLookup(loc);
      const modulesWithLOC = modules.map((module2) => ({
        ...module2,
        loc: lookupLOC(module2.path, pathToLOC, loc)
      }));
      return { modules: modulesWithLOC, packages, lsDeps, loc };
    };
  }
  function buildPathLookup(locArray) {
    const lookup13 = {};
    for (const entry of locArray) {
      lookup13[entry.path] = entry.loc;
      const parts = entry.path.split("/");
      if (parts[0] === ".spago" && parts.length >= 4) {
        const pkg = parts[1];
        const relPath = parts.slice(3).join("/");
        lookup13[`${pkg}::${relPath}`] = entry.loc;
      }
    }
    return lookup13;
  }
  function lookupLOC(modulePath, pathToLOC, locArray) {
    if (pathToLOC[modulePath]) {
      return pathToLOC[modulePath];
    }
    const parts = modulePath.split("/");
    if (parts[0] === ".spago" && parts.length >= 4) {
      let pkg, relPath;
      if (parts[1] === "p" && parts.length >= 5) {
        pkg = parts[2];
        relPath = parts.slice(4).join("/");
      } else {
        pkg = parts[1];
        relPath = parts.slice(3).join("/");
      }
      const fuzzyKey = `${pkg}::${relPath}`;
      if (pathToLOC[fuzzyKey]) {
        return pathToLOC[fuzzyKey];
      }
    }
    return 10;
  }
  var decodeModulesFile = function(filecontents) {
    const json = JSON.parse(filecontents);
    const modules = Object.keys(json).map((key) => {
      return { key, depends: json[key].depends, path: json[key].path };
    });
    return modules;
  };
  var decodePackagesFile = function(filecontents) {
    const json = JSON.parse(filecontents);
    const packages = Object.keys(json).map((key) => {
      return { key, depends: json[key].depends };
    });
    return packages;
  };
  var decodeLOCFile = function(filecontents) {
    const json = JSON.parse(filecontents);
    return json.loc;
  };
  var decodeLsDepsFile = function(filecontents) {
    const jsonlines = splitIntoLines(filecontents);
    jsonlines.length = jsonlines.length - 1;
    var objectArray = jsonlines.map((d2) => JSON.parse(d2));
    return objectArray;
  };
  function splitIntoLines(str) {
    return str.split(/\r\n|[\n\v\f\r\u0085\u2028\u2029]/);
  }

  // output/Utility/index.js
  var map29 = /* @__PURE__ */ map(functorNonEmptyArray);
  var getWindowWidthHeight = function __do2() {
    var win = windowImpl();
    var w = innerWidth(win)();
    var h = innerHeight(win)();
    return new Tuple(toNumber(w), toNumber(h));
  };
  var equalSnd = function(dictEq) {
    var eq5 = eq(dictEq);
    return function(a2) {
      return function(b2) {
        return eq5(snd(a2))(snd(b2));
      };
    };
  };
  var compareSnd = function(dictOrd) {
    var compare2 = compare(dictOrd);
    return function(a2) {
      return function(b2) {
        return compare2(snd(a2))(snd(b2));
      };
    };
  };
  var chunk = function(tuples) {
    var $$package = snd(head5(tuples));
    var contains3 = toArray2(map29(fst)(tuples));
    return new Tuple($$package, contains3);
  };

  // output/D3.Viz.Spago.Files/index.js
  var append6 = /* @__PURE__ */ append(semigroupArray);
  var map30 = /* @__PURE__ */ map(functorArray);
  var fromFoldableWith2 = /* @__PURE__ */ fromFoldableWith(ordString)(foldableArray);
  var lookup7 = /* @__PURE__ */ lookup(ordString);
  var fromFoldable6 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var mapFlipped3 = /* @__PURE__ */ mapFlipped(functorArray);
  var bind8 = /* @__PURE__ */ bind(bindMaybe);
  var sum2 = /* @__PURE__ */ sum(foldableArray)(semiringNumber);
  var equalSnd2 = /* @__PURE__ */ equalSnd(eqString);
  var compareSnd2 = /* @__PURE__ */ compareSnd(ordString);
  var fromFoldable12 = /* @__PURE__ */ fromFoldable2(ordInt)(foldableArray);
  var PackageInfo = /* @__PURE__ */ (function() {
    function PackageInfo2(value0) {
      this.value0 = value0;
    }
    ;
    PackageInfo2.create = function(value0) {
      return new PackageInfo2(value0);
    };
    return PackageInfo2;
  })();
  var IsModule = /* @__PURE__ */ (function() {
    function IsModule2(value0) {
      this.value0 = value0;
    }
    ;
    IsModule2.create = function(value0) {
      return new IsModule2(value0);
    };
    return IsModule2;
  })();
  var IsPackage = /* @__PURE__ */ (function() {
    function IsPackage2(value0) {
      this.value0 = value0;
    }
    ;
    IsPackage2.create = function(value0) {
      return new IsPackage2(value0);
    };
    return IsPackage2;
  })();
  var M2M_Tree = /* @__PURE__ */ (function() {
    function M2M_Tree2() {
    }
    ;
    M2M_Tree2.value = new M2M_Tree2();
    return M2M_Tree2;
  })();
  var M2M_Graph = /* @__PURE__ */ (function() {
    function M2M_Graph2() {
    }
    ;
    M2M_Graph2.value = new M2M_Graph2();
    return M2M_Graph2;
  })();
  var P2P = /* @__PURE__ */ (function() {
    function P2P2() {
    }
    ;
    P2P2.value = new P2P2();
    return P2P2;
  })();
  var M2P = /* @__PURE__ */ (function() {
    function M2P2() {
    }
    ;
    M2P2.value = new M2P2();
    return M2P2;
  })();
  var eqLinkType = {
    eq: function(x8) {
      return function(y7) {
        if (x8 instanceof M2M_Tree && y7 instanceof M2M_Tree) {
          return true;
        }
        ;
        if (x8 instanceof M2M_Graph && y7 instanceof M2M_Graph) {
          return true;
        }
        ;
        if (x8 instanceof P2P && y7 instanceof P2P) {
          return true;
        }
        ;
        if (x8 instanceof M2P && y7 instanceof M2P) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq22 = /* @__PURE__ */ eq(eqLinkType);
  var showNodeType = {
    show: function(v) {
      if (v instanceof IsModule) {
        return "module";
      }
      ;
      if (v instanceof IsPackage) {
        return "package";
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Files (line 292, column 1 - line 294, column 47): " + [v.constructor.name]);
    }
  };
  var showLinkType = {
    show: function(v) {
      if (v instanceof M2M_Tree) {
        return "M2M-Tree";
      }
      ;
      if (v instanceof M2M_Graph) {
        return "M2M-Graph";
      }
      ;
      if (v instanceof P2P) {
        return "P2P";
      }
      ;
      if (v instanceof M2P) {
        return "module to package dependency";
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Files (line 295, column 1 - line 299, column 44): " + [v.constructor.name]);
    }
  };
  var isP2P_Link = function(v) {
    return eq22(v.linktype)(P2P.value);
  };
  var isM2P_Link = function(v) {
    return eq22(v.linktype)(M2P.value);
  };
  var isM2M_Tree_Link = function(v) {
    return eq22(v.linktype)(M2M_Tree.value);
  };
  var isM2M_Graph_Link = function(v) {
    return eq22(v.linktype)(M2M_Graph.value);
  };
  var getGraphJSONData = function(v) {
    var names = append6(map30(function(v1) {
      return v1.key;
    })(v.modules))(map30(function(v1) {
      return v1.key;
    })(v.packages));
    var makeModuleToPackageLink = function(m) {
      return {
        source: m.id,
        target: m.containerID,
        linktype: M2P.value,
        inSim: true
      };
    };
    var makeLink = function(linktype) {
      return function(v1) {
        return {
          source: v1.value0,
          target: v1.value1,
          linktype,
          inSim: true
        };
      };
    };
    var ids = range2(0)(length4(names) - 1 | 0);
    var name2ID = fromFoldableWith2(function(v1) {
      return function(v2) {
        return v1;
      };
    })(zip(names)(ids));
    var getId = function(s) {
      return fromMaybe(0)(lookup7(s)(name2ID));
    };
    var makeNodeFromModuleJSONPL = function(m) {
      var id4 = getId(m.key);
      return {
        id: id4,
        name: m.key,
        containerID: getId(m["package"]),
        containerName: m["package"],
        loc: m.loc,
        nodetype: new IsModule(m.path),
        inSim: true,
        links: {
          targets: map30(getId)(m.depends),
          sources: [],
          treeChildren: [],
          inPackage: [],
          outPackage: [],
          contains: []
        },
        connected: false,
        showChildren: false,
        containsMany: false,
        treeXY: nullImpl,
        treeDepth: nullImpl,
        gridXY: nullImpl
      };
    };
    var foldDepends = function(b2) {
      return function(a2) {
        var id4 = getId(a2.key);
        var makeTuple = function(s) {
          return new Tuple(id4, getId(s));
        };
        return append6(map30(makeTuple)(a2.depends))(b2);
      };
    };
    var moduleLinks = map30(makeLink(M2M_Graph.value))(foldl2(foldDepends)([])(v.modules));
    var packageLinks = map30(makeLink(P2P.value))(foldl2(foldDepends)([])(v.packages));
    var depsMap = fromFoldable6(mapFlipped3(v.lsDeps)(function(d2) {
      return new Tuple(d2.packageName, {
        version: d2.version,
        repo: d2.repo.contents
      });
    }));
    var makeNodeFromPackageJSONCL = function(p2) {
      var repo = fromMaybe({
        version: "not found",
        repo: "not found"
      })(lookup7(p2.key)(depsMap));
      var id4 = getId(p2.key);
      return {
        id: id4,
        name: p2.key,
        inSim: true,
        nodetype: new IsPackage(new PackageInfo(repo)),
        containerID: id4,
        containerName: p2.key,
        loc: p2.loc,
        links: {
          targets: map30(getId)(p2.depends),
          sources: [],
          treeChildren: [],
          inPackage: [],
          outPackage: [],
          contains: map30(getId)(p2.contains)
        },
        connected: true,
        showChildren: true,
        containsMany: length4(p2.contains) > 1,
        treeXY: nullImpl,
        treeDepth: nullImpl,
        gridXY: nullImpl
      };
    };
    var addPackageInfo = function(v1) {
      var packageName = (function() {
        var pieces = split("/")(v1.path);
        return bind8(index2(pieces)(0))(function(root2) {
          return bind8(index2(pieces)(1))(function(packageString) {
            if (root2 === ".spago") {
              var $63 = packageString === "p";
              if ($63) {
                return index2(pieces)(2);
              }
              ;
              return new Just(packageString);
            }
            ;
            if (root2 === "src") {
              return new Just("my-project");
            }
            ;
            return Nothing.value;
          });
        });
      })();
      var $$package = fromMaybe("")(packageName);
      return {
        key: v1.key,
        depends: v1.depends,
        path: v1.path,
        loc: v1.loc,
        "package": $$package
      };
    };
    var modulesPL = map30(addPackageInfo)(v.modules);
    var mapNamesToModules = fromFoldable6(map30(function(m) {
      return new Tuple(m.key, m);
    })(modulesPL));
    var maybeModules = function(ms) {
      return catMaybes(map30(function(k) {
        return lookup7(k)(mapNamesToModules);
      })(ms));
    };
    var rollUpLOC = function(ms) {
      return sum2(map30(function(v1) {
        return v1.loc;
      })(maybeModules(ms)));
    };
    var moduleNodes = map30(makeNodeFromModuleJSONPL)(modulesPL);
    var modulePackageLinks = map30(makeModuleToPackageLink)(moduleNodes);
    var links = append6(moduleLinks)(append6(packageLinks)(modulePackageLinks));
    var getSourceLinks = function(v1) {
      var sources = foldl2(function(acc) {
        return function(v2) {
          var $70 = v1.id === v2.target;
          if ($70) {
            return cons3(v2.source)(acc);
          }
          ;
          return acc;
        };
      })([])(links);
      return new Tuple(v1.id, sources);
    };
    var modulePackageTuples = map30(function(m) {
      return new Tuple(m.key, m["package"]);
    })(modulesPL);
    var packageContains = map30(chunk)(groupBy(equalSnd2)(sortBy(compareSnd2)(modulePackageTuples)));
    var packageContainsMap = fromFoldable6(packageContains);
    var packageLOC = map30(function(v1) {
      return new Tuple(v1.value0, rollUpLOC(v1.value1));
    })(packageContains);
    var packageLOCMap = fromFoldable6(packageLOC);
    var addRollUpLOC = function(v1) {
      return {
        key: v1.key,
        depends: v1.depends,
        contains: v1.contains,
        loc: fromMaybe(0)(lookup7(v1.key)(packageLOCMap))
      };
    };
    var addContains = function(v1) {
      return {
        key: v1.key,
        depends: v1.depends,
        contains: fromMaybe([])(lookup7(v1.key)(packageContainsMap))
      };
    };
    var packagesCL = map30(function($86) {
      return addRollUpLOC(addContains($86));
    })(v.packages);
    var packageNodes = map30(makeNodeFromPackageJSONCL)(packagesCL);
    var nodes = append6(moduleNodes)(packageNodes);
    var id2Node = fromFoldable12(mapFlipped3(nodes)(function(node) {
      return new Tuple(node.id, node);
    }));
    var sourceLinksMap = fromFoldable12(map30(getSourceLinks)(nodes));
    return {
      links,
      nodes,
      moduleNodes,
      packageNodes,
      moduleLinks,
      packageLinks,
      modulePackageLinks,
      sourceLinksMap,
      name2ID,
      id2Node,
      id2Name: empty2,
      id2Package: empty2,
      id2LOC: empty2
    };
  };

  // output/D3.Viz.Spago.Unsafe/index.js
  var unboxD3SimNode = function(datum) {
    return datum;
  };
  var unboxD3SimLink = function(datum) {
    return datum;
  };

  // output/Data.Graph/index.js
  var map112 = /* @__PURE__ */ map(functorMaybe);
  var Graph = function(x8) {
    return x8;
  };
  var lookup8 = function(dictOrd) {
    var lookup13 = lookup(dictOrd);
    return function(k) {
      return function(v) {
        return map112(fst)(lookup13(k)(v));
      };
    };
  };
  var fromMap2 = Graph;

  // output/D3.Viz.Spago.Model/index.js
  var lookup9 = /* @__PURE__ */ lookup(ordInt);
  var map31 = /* @__PURE__ */ map(functorArray);
  var append7 = /* @__PURE__ */ append(semigroupArray);
  var fromFoldable8 = /* @__PURE__ */ fromFoldable(foldableArray);
  var insert8 = /* @__PURE__ */ insert(ordInt);
  var mapFlipped4 = /* @__PURE__ */ mapFlipped(functorArray);
  var show6 = /* @__PURE__ */ show(showLinkType);
  var append13 = /* @__PURE__ */ append(semigroupString);
  var fromFoldable13 = /* @__PURE__ */ fromFoldable2(ordInt)(foldableArray);
  var foldlWithIndex2 = /* @__PURE__ */ foldlWithIndex(foldableWithIndexArray);
  var show12 = /* @__PURE__ */ show(showInt);
  var show22 = /* @__PURE__ */ show(showNumber);
  var show32 = /* @__PURE__ */ show(showNodeType);
  var upgradeSpagoNodeData = function(sourcesMap) {
    return function(node) {
      return {
        links: {
          contains: node.links.contains,
          inPackage: node.links.inPackage,
          outPackage: node.links.outPackage,
          targets: node.links.targets,
          treeChildren: node.links.treeChildren,
          sources: fromMaybe([])(lookup9(node.id)(sourcesMap))
        },
        id: node.id,
        cluster: node.containerID,
        connected: node.connected,
        showChildren: (function() {
          if (node.nodetype instanceof IsPackage) {
            return true;
          }
          ;
          if (node.nodetype instanceof IsModule) {
            return false;
          }
          ;
          throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 204, column 20 - line 206, column 45): " + [node.nodetype.constructor.name]);
        })(),
        containerID: node.containerID,
        containerName: node.containerName,
        containsMany: node.containsMany,
        focusX: 0,
        focusY: 0,
        fx: nullImpl,
        fy: nullImpl,
        inSim: true,
        loc: node.loc,
        name: node.name,
        nodetype: node.nodetype,
        r: sqrt(node.loc),
        treeXY: nullImpl,
        treeDepth: nullImpl,
        gridXY: nullImpl,
        vx: 0,
        vy: 0,
        x: 0,
        y: 0
      };
    };
  };
  var unpinAllNodes = function(nodes) {
    var unpin2 = function(v) {
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        fx: nullImpl,
        fy: nullImpl
      };
    };
    return map31(unpin2)(nodes);
  };
  var setTreeXYIncludingLeaves = function(v) {
    return function(v1) {
      return {
        id: v.id,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        fx: v.fx,
        fy: v.fy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        treeXY: notNull({
          x: v1.x,
          y: v1.y
        }),
        treeDepth: notNull(v1.depth),
        connected: true,
        links: {
          contains: v.links.contains,
          inPackage: v.links.inPackage,
          outPackage: v.links.outPackage,
          sources: v.links.sources,
          targets: v.links.targets,
          treeChildren: v1.childIDs
        }
      };
    };
  };
  var scalePoint = function(xFactor) {
    return function(yFactor) {
      return function(xy) {
        return {
          x: xy.x * xFactor,
          y: xy.y * yFactor
        };
      };
    };
  };
  var offsetXY = function(offset) {
    return function(xy) {
      return {
        x: xy.x + offset.x,
        y: xy.y + offset.y
      };
    };
  };
  var numberToGridPoint = function(columns) {
    return function(i2) {
      var d2 = toNumber(i2);
      var c = toNumber(columns);
      var x8 = remainder(d2)(c);
      var y7 = floor(d2 / c);
      return {
        x: x8,
        y: y7
      };
    };
  };
  var makeGraph = function(nodes) {
    var addNode = function(acc) {
      return function(node) {
        var depends = fromFoldable8(node.links.targets);
        return insert8(node.id)(new Tuple(node, depends))(acc);
      };
    };
    var graphMap = foldl2(addNode)(empty2)(nodes);
    return fromMap2(graphMap);
  };
  var makeSpagoGraphModel = function(json) {
    var v = getGraphJSONData(json);
    return {
      links: v.links,
      nodes: mapFlipped4(v.nodes)(upgradeSpagoNodeData(v.sourceLinksMap)),
      graph: makeGraph(v.nodes),
      tree: Nothing.value,
      maps: {
        name2ID: v.name2ID,
        id2Name: v.id2Name,
        id2Node: v.id2Node,
        id2Package: v.id2Package,
        id2LOC: v.id2LOC,
        id2TreeData: empty2
      }
    };
  };
  var link_ = {
    source: function($197) {
      return (function(v) {
        return v.source;
      })(unboxD3SimLink($197));
    },
    target: function($198) {
      return (function(v) {
        return v.target;
      })(unboxD3SimLink($198));
    },
    linkType: function($199) {
      return (function(v) {
        return v.linktype;
      })(unboxD3SimLink($199));
    },
    linkClass: function($200) {
      return show6((function(v) {
        return v.linktype;
      })(unboxD3SimLink($200)));
    },
    linkClass2: /* @__PURE__ */ (function() {
      var $201 = append13("updated ");
      return function($202) {
        return $201(show6((function(v) {
          return v.linktype;
        })(unboxD3SimLink($202))));
      };
    })(),
    color: function($203) {
      return d3SchemeCategory10N_(toNumber((function(v) {
        return v.target.containerID;
      })(unboxD3SimLink($203))));
    }
  };
  var sourcePackageIs = function(name16) {
    return function(link3) {
      return link_.source(link3).name === name16;
    };
  };
  var isUsedModule = function(v) {
    if (v.nodetype instanceof IsPackage) {
      return false;
    }
    ;
    if (v.nodetype instanceof IsModule) {
      if (v.connected) {
        return true;
      }
      ;
      return false;
    }
    ;
    throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 189, column 3 - line 193, column 31): " + [v.nodetype.constructor.name]);
  };
  var treeNodesToTreeXY_R = function(nodes) {
    var setXYtoTreeXY = function(v) {
      var treeXY = fromMaybe({
        x: v.x,
        y: v.y
      })(toMaybe(v.treeXY));
      var radialTranslate = function(p2) {
        var x8 = p2.x * cos(p2.y);
        var y7 = p2.x * sin(p2.y);
        return {
          x: x8,
          y: y7
        };
      };
      var radialXY = radialTranslate(treeXY);
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        fx: notNull(radialXY.x),
        fy: notNull(radialXY.y)
      };
    };
    var partitioned = partition(isUsedModule)(nodes);
    return append7(partitioned.no)(map31(setXYtoTreeXY)(partitioned.yes));
  };
  var isPackageOrVisibleModule = function(id4) {
    return function(v) {
      if (v.nodetype instanceof IsModule) {
        return v.containerID === id4;
      }
      ;
      if (v.nodetype instanceof IsPackage) {
        return true;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 179, column 3 - line 181, column 26): " + [v.nodetype.constructor.name]);
    };
  };
  var isPackage = function(v) {
    if (v.nodetype instanceof IsModule) {
      return false;
    }
    ;
    if (v.nodetype instanceof IsPackage) {
      return true;
    }
    ;
    throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 174, column 3 - line 176, column 26): " + [v.nodetype.constructor.name]);
  };
  var moduleNodesToContainerXY = function(nodes) {
    var partitioned = partition(isPackage)(nodes);
    var packagesIndexMap = fromFoldable13(foldl2(function(b2) {
      return function(v) {
        return cons3(new Tuple(v.id, v.gridXY))(b2);
      };
    })([])(partitioned.yes));
    var setModuleGridXY = function(v) {
      var v1 = lookup9(v.containerID)(packagesIndexMap);
      if (v1 instanceof Nothing) {
        return v;
      }
      ;
      if (v1 instanceof Just) {
        var v2 = toMaybe(v1.value0);
        if (v2 instanceof Nothing) {
          return {
            containerID: v.containerID,
            cluster: v.cluster,
            connected: v.connected,
            containerName: v.containerName,
            containsMany: v.containsMany,
            focusX: v.focusX,
            focusY: v.focusY,
            fx: v.fx,
            fy: v.fy,
            id: v.id,
            inSim: v.inSim,
            links: v.links,
            loc: v.loc,
            name: v.name,
            nodetype: v.nodetype,
            r: v.r,
            showChildren: v.showChildren,
            treeDepth: v.treeDepth,
            treeXY: v.treeXY,
            vx: v.vx,
            vy: v.vy,
            x: 0,
            y: 0,
            gridXY: v1.value0
          };
        }
        ;
        if (v2 instanceof Just) {
          return {
            containerID: v.containerID,
            cluster: v.cluster,
            connected: v.connected,
            containerName: v.containerName,
            containsMany: v.containsMany,
            focusX: v.focusX,
            focusY: v.focusY,
            fx: v.fx,
            fy: v.fy,
            id: v.id,
            inSim: v.inSim,
            links: v.links,
            loc: v.loc,
            name: v.name,
            nodetype: v.nodetype,
            r: v.r,
            showChildren: v.showChildren,
            treeDepth: v.treeDepth,
            treeXY: v.treeXY,
            vx: v.vx,
            vy: v.vy,
            x: v2.value0.x,
            y: v2.value0.y,
            gridXY: v1.value0
          };
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 286, column 11 - line 288, column 76): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 283, column 7 - line 288, column 76): " + [v1.constructor.name]);
    };
    var modulesWithGrid = map31(setModuleGridXY)(partitioned.no);
    return append7(modulesWithGrid)(partitioned.yes);
  };
  var packageNodesToGridXY = function(nodes) {
    var partitioned = partition(isPackage)(nodes);
    var packageCount = length4(partitioned.yes);
    var columns = floor2(ceil(sqrt(toNumber(packageCount))));
    var offset = -(toNumber(columns) / 2);
    var packagesWithGrid = (function() {
      var setGridXY = function(v) {
        return function(i2) {
          var gridXY = scalePoint(200)(200)(offsetXY({
            x: offset,
            y: offset
          })(numberToGridPoint(columns)(i2)));
          return {
            cluster: v.cluster,
            connected: v.connected,
            containerID: v.containerID,
            containerName: v.containerName,
            containsMany: v.containsMany,
            focusX: v.focusX,
            focusY: v.focusY,
            fx: v.fx,
            fy: v.fy,
            id: v.id,
            inSim: v.inSim,
            links: v.links,
            loc: v.loc,
            name: v.name,
            nodetype: v.nodetype,
            r: v.r,
            showChildren: v.showChildren,
            treeDepth: v.treeDepth,
            treeXY: v.treeXY,
            vx: v.vx,
            vy: v.vy,
            x: v.x,
            y: v.y,
            gridXY: notNull(gridXY)
          };
        };
      };
      return foldlWithIndex2(function(i2) {
        return function(b2) {
          return function(a2) {
            return cons3(setGridXY(a2)(i2))(b2);
          };
        };
      })([])(partitioned.yes);
    })();
    return append7(partitioned.no)(packagesWithGrid);
  };
  var initialRadius = 10;
  var initialAngle = /* @__PURE__ */ (function() {
    return pi * (3 - sqrt(5));
  })();
  var setForPhyllotaxis = function(index5) {
    return function(v) {
      var i2 = toNumber(index5);
      var radius6 = initialRadius * sqrt(0.5 + i2);
      var angle = i2 * initialAngle;
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        vx: v.vx,
        vy: v.vy,
        fx: v.fx,
        fy: v.fy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        x: radius6 * cos(angle),
        y: radius6 * sin(angle)
      };
    };
  };
  var nodesToPhyllotaxis = function(predicate) {
    return function(nodes) {
      var partitioned = partition(predicate)(nodes);
      return append7(partitioned.no)(mapWithIndex3(setForPhyllotaxis)(partitioned.yes));
    };
  };
  var packagesNodesToPhyllotaxis = /* @__PURE__ */ nodesToPhyllotaxis(isPackage);
  var fixNamedNodeTo = function(label5) {
    return function(point) {
      return function(nodes) {
        var fixNamedNode$prime = function(v) {
          var $168 = v.name === label5;
          if ($168) {
            return {
              name: v.name,
              cluster: v.cluster,
              connected: v.connected,
              containerID: v.containerID,
              containerName: v.containerName,
              containsMany: v.containsMany,
              focusX: v.focusX,
              focusY: v.focusY,
              gridXY: v.gridXY,
              id: v.id,
              inSim: v.inSim,
              links: v.links,
              loc: v.loc,
              nodetype: v.nodetype,
              r: v.r,
              showChildren: v.showChildren,
              treeDepth: v.treeDepth,
              treeXY: v.treeXY,
              vx: v.vx,
              vy: v.vy,
              x: v.x,
              y: v.y,
              fx: notNull(point.x),
              fy: notNull(point.y)
            };
          }
          ;
          return v;
        };
        return map31(fixNamedNode$prime)(nodes);
      };
    };
  };
  var datum_ = {
    radius: function($204) {
      return (function(v) {
        return v.r;
      })(unboxD3SimNode($204));
    },
    id: function($205) {
      return (function(v) {
        return v.id;
      })(unboxD3SimNode($205));
    },
    loc: function($206) {
      return (function(v) {
        return v.loc;
      })(unboxD3SimNode($206));
    },
    containerID: function($207) {
      return (function(v) {
        return v.containerID;
      })(unboxD3SimNode($207));
    },
    containerName: function($208) {
      return (function(v) {
        return v.containerName;
      })(unboxD3SimNode($208));
    },
    name: function($209) {
      return (function(v) {
        return v.name;
      })(unboxD3SimNode($209));
    },
    x: function($210) {
      return (function(v) {
        return v.x;
      })(unboxD3SimNode($210));
    },
    y: function($211) {
      return (function(v) {
        return v.y;
      })(unboxD3SimNode($211));
    },
    fx: function($212) {
      return (function(v) {
        return v.fx;
      })(unboxD3SimNode($212));
    },
    fy: function($213) {
      return (function(v) {
        return v.fy;
      })(unboxD3SimNode($213));
    },
    treeXY: function($214) {
      return (function(v) {
        return v.treeXY;
      })(unboxD3SimNode($214));
    },
    treeDepth: function($215) {
      return (function(v) {
        return v.treeDepth;
      })(unboxD3SimNode($215));
    },
    gridXY: function($216) {
      return (function(v) {
        return v.gridXY;
      })(unboxD3SimNode($216));
    },
    nodetype: function($217) {
      return (function(v) {
        return v.nodetype;
      })(unboxD3SimNode($217));
    },
    cluster: function($218) {
      return (function(v) {
        return v.cluster;
      })(unboxD3SimNode($218));
    },
    links: function($219) {
      return (function(v) {
        return v.links;
      })(unboxD3SimNode($219));
    },
    connected: function($220) {
      return (function(v) {
        return v.connected;
      })(unboxD3SimNode($220));
    },
    nameAndID: function(d2) {
      return unboxD3SimNode(d2).name + (" " + show12(unboxD3SimNode(d2).id));
    },
    indexAndID: function(d2) {
      return unboxD3SimNode(d2).name + (" " + (show12(getIndexFromDatum_(d2)) + (" " + show12(unboxD3SimNode(d2).id))));
    },
    namePos: function(d2) {
      return "(" + (show22(floor(datum_.x(d2))) + ("," + (show22(floor(datum_.y(d2))) + ")")));
    },
    gridPoint: function(d2) {
      return fromMaybe({
        x: datum_.x(d2),
        y: datum_.y(d2)
      })(toMaybe(datum_.gridXY(d2)));
    },
    gridPointX: function(d2) {
      return (function(v) {
        return v.x;
      })(datum_.gridPoint(d2));
    },
    gridPointY: function(d2) {
      return (function(v) {
        return v.y;
      })(datum_.gridPoint(d2));
    },
    treePoint: function(d2) {
      return fromMaybe({
        x: datum_.x(d2),
        y: datum_.y(d2)
      })(toMaybe(datum_.treeXY(d2)));
    },
    treePointX: function(d2) {
      return (function(v) {
        return v.x;
      })(datum_.treePoint(d2));
    },
    treePointY: function(d2) {
      return (function(v) {
        return v.y;
      })(datum_.treePoint(d2));
    },
    indexFunction: function($221) {
      return (function(v) {
        return v.id;
      })(unboxD3SimNode($221));
    },
    positionLabel: function(d2) {
      var v = datum_.nodetype(d2);
      if (v instanceof IsModule) {
        return -datum_.radius(d2);
      }
      ;
      if (v instanceof IsPackage) {
        return 0;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 105, column 11 - line 107, column 33): " + [v.constructor.name]);
    },
    collideRadius: function(d2) {
      var $174 = datum_.id(d2) === datum_.containerID(d2);
      if ($174) {
        return 10;
      }
      ;
      return datum_.radius(d2);
    },
    collideRadiusBig: function(d2) {
      return datum_.radius(d2) + 10;
    },
    nodeClass: function(d2) {
      return show32(datum_.nodetype(d2)) + (" " + (datum_.containerName(d2) + (" " + (datum_.name(d2) + (function() {
        var $175 = datum_.connected(d2);
        if ($175) {
          return " connected";
        }
        ;
        return "";
      })()))));
    },
    "nodeClass'": function(d2) {
      return "updated" + (show32(datum_.nodetype(d2)) + (" " + (datum_.containerName(d2) + (" " + (datum_.name(d2) + (function() {
        var $176 = datum_.connected(d2);
        if ($176) {
          return " connected";
        }
        ;
        return "";
      })())))));
    },
    colorByGroup: function(d2) {
      return d3SchemeCategory10N_(toNumber(datum_.cluster(d2)));
    },
    colorByDepth: function(d2) {
      var v = toMaybe(datum_.treeDepth(d2));
      if (v instanceof Nothing) {
        return "none";
      }
      ;
      if (v instanceof Just) {
        return d3SchemeSequential10N_(toNumber(v.value0));
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 125, column 13 - line 127, column 68): " + [v.constructor.name]);
    },
    fillByUsage: function(d2) {
      var $179 = datum_.connected(d2);
      if ($179) {
        return datum_.colorByGroup(d2);
      }
      ;
      return "none";
    },
    strokeByUsage: function(d2) {
      var $180 = datum_.connected(d2);
      if ($180) {
        return "none";
      }
      ;
      return datum_.colorByGroup(d2);
    },
    colorByUsage: function(d2) {
      var $181 = datum_.connected(d2);
      if ($181) {
        return "red";
      }
      ;
      return "blue";
    },
    opacityByType: function(d2) {
      var $182 = datum_.isPackage(d2);
      if ($182) {
        return 0.4;
      }
      ;
      return 0.7;
    },
    translateNode: function(d2) {
      return "translate(" + (show22(datum_.x(d2)) + ("," + (show22(datum_.y(d2)) + ")")));
    },
    isNamed: function(name16) {
      return function(v) {
        return function(d2) {
          return datum_.name(d2) === name16;
        };
      };
    },
    isPackage: function(d2) {
      var v = datum_.nodetype(d2);
      if (v instanceof IsModule) {
        return false;
      }
      ;
      if (v instanceof IsPackage) {
        return true;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 142, column 13 - line 144, column 36): " + [v.constructor.name]);
    },
    isModule: function(d2) {
      var v = datum_.nodetype(d2);
      if (v instanceof IsModule) {
        return true;
      }
      ;
      if (v instanceof IsPackage) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 146, column 13 - line 148, column 37): " + [v.constructor.name]);
    },
    isUnusedModule: function(d2) {
      var v = datum_.nodetype(d2);
      if (v instanceof IsPackage) {
        return false;
      }
      ;
      if (v instanceof IsModule) {
        var $191 = datum_.connected(d2);
        if ($191) {
          return false;
        }
        ;
        return true;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 150, column 13 - line 154, column 41): " + [v.constructor.name]);
    },
    isUsedModule: function(d2) {
      var v = datum_.nodetype(d2);
      if (v instanceof IsPackage) {
        return false;
      }
      ;
      if (v instanceof IsModule) {
        var $195 = datum_.connected(d2);
        if ($195) {
          return true;
        }
        ;
        return false;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 157, column 13 - line 161, column 42): " + [v.constructor.name]);
    },
    treeChildren: function(d2) {
      return datum_.links(d2).treeChildren;
    },
    isTreeParent: function(d2) {
      return !$$null3(datum_.treeChildren(d2));
    }
  };
  var convertFilesToGraphModel = function(moduleJSON) {
    return function(packageJSON) {
      return function(lsdepJSON) {
        return function(locJSON) {
          return makeSpagoGraphModel(readSpago_Raw_JSON_(moduleJSON.body)(packageJSON.body)(lsdepJSON.body)(locJSON.body));
        };
      };
    };
  };
  var allNodes2 = /* @__PURE__ */ $$const(true);

  // output/D3.Viz.Spago.Draw.Attributes/index.js
  var classed2 = /* @__PURE__ */ classed(toAttrStringFn);
  var radius2 = /* @__PURE__ */ radius(toAttrNumberFn);
  var fill2 = /* @__PURE__ */ fill(toAttrStringFn);
  var strokeColor2 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var strokeWidth2 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var classed1 = /* @__PURE__ */ classed(toAttrString);
  var x3 = /* @__PURE__ */ x(toAttrNumber);
  var text7 = /* @__PURE__ */ text6(toAttrStringFn);
  var width9 = /* @__PURE__ */ width8(toAttrNumber);
  var height9 = /* @__PURE__ */ height8(toAttrNumber);
  var cursor2 = /* @__PURE__ */ cursor(toAttrString);
  var opacity2 = /* @__PURE__ */ opacity(toAttrNumberFn);
  var y3 = /* @__PURE__ */ y(toAttrNumberFn);
  var textAnchor2 = /* @__PURE__ */ textAnchor(toAttrString);
  var updateAttrs = /* @__PURE__ */ (function() {
    return [classed2(datum_.nodeClass), transform$prime(datum_.translateNode)];
  })();
  var treeSceneAttributes = /* @__PURE__ */ (function() {
    return {
      circles: [radius2(datum_.radius), fill2(datum_.colorByDepth), strokeColor2(datum_.colorByGroup), strokeWidth2(3)],
      labels: [classed1("label"), x3(4), y(toAttrNumber)(2), text7(datum_.name)]
    };
  })();
  var svgAttrs = function(w) {
    return function(h) {
      return [viewBox(-w / 2.1)(-h / 2.05)(w)(h), classed1("overlay"), width9(w), height9(h), cursor2("grab")];
    };
  };
  var graphSceneAttributes = /* @__PURE__ */ (function() {
    return {
      circles: [radius2(datum_.radius), fill2(datum_.colorByGroup), opacity2(datum_.opacityByType)],
      labels: [classed1("label"), x3(0.2), y3(datum_.positionLabel), textAnchor2("middle"), text7(datum_.name)]
    };
  })();
  var enterAttrs = /* @__PURE__ */ (function() {
    return [classed2(datum_.nodeClass), transform$prime(datum_.translateNode)];
  })();
  var clusterSceneAttributes = /* @__PURE__ */ (function() {
    return {
      circles: [radius2(datum_.radius), fill2(datum_.fillByUsage), strokeColor2(datum_.strokeByUsage), strokeWidth2(3), opacity2(datum_.opacityByType)],
      labels: [classed1("label"), x3(0.2), y3(datum_.positionLabel), textAnchor2("middle"), text7(datum_.name)]
    };
  })();

  // output/D3.Zoom/index.js
  var DefaultZoomExtent = /* @__PURE__ */ (function() {
    function DefaultZoomExtent2() {
    }
    ;
    DefaultZoomExtent2.value = new DefaultZoomExtent2();
    return DefaultZoomExtent2;
  })();
  var ZoomExtent = /* @__PURE__ */ (function() {
    function ZoomExtent2(value0) {
      this.value0 = value0;
    }
    ;
    ZoomExtent2.create = function(value0) {
      return new ZoomExtent2(value0);
    };
    return ZoomExtent2;
  })();
  var ScaleExtent = /* @__PURE__ */ (function() {
    function ScaleExtent2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ScaleExtent2.create = function(value0) {
      return function(value1) {
        return new ScaleExtent2(value0, value1);
      };
    };
    return ScaleExtent2;
  })();

  // output/D3Tagless.Capabilities/index.js
  var updateJoin = function(dict) {
    return dict.updateJoin;
  };
  var stop = function(dict) {
    return dict.stop;
  };
  var start2 = function(dict) {
    return dict.start;
  };
  var simulationHandle = function(dict) {
    return dict.simulationHandle;
  };
  var simpleJoin = function(dict) {
    return dict.simpleJoin;
  };
  var setNodesFromSelection = function(dict) {
    return dict.setNodesFromSelection;
  };
  var setLinksFromSelection = function(dict) {
    return dict.setLinksFromSelection;
  };
  var setConfigVariable = function(dict) {
    return dict.setConfigVariable;
  };
  var setAttributes = function(dict) {
    return dict.setAttributes;
  };
  var selectUnder = function(dict) {
    return dict.selectUnder;
  };
  var openSelection = function(dict) {
    return dict.openSelection;
  };
  var on2 = function(dict) {
    return dict.on;
  };
  var mergeSelections = function(dict) {
    return dict.mergeSelections;
  };
  var mergeNewDataWithSim = function(dict) {
    return dict.mergeNewDataWithSim;
  };
  var attach = function(dict) {
    return dict.attach;
  };
  var appendTo = function(dict) {
    return dict.appendTo;
  };
  var addTickFunction = function(dict) {
    return dict.addTickFunction;
  };
  var actualizeForces = function(dict) {
    return dict.actualizeForces;
  };

  // output/PSD3.CodeExplorer.Actions/index.js
  var NodeClick = /* @__PURE__ */ (function() {
    function NodeClick2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NodeClick2.create = function(value0) {
      return function(value1) {
        return new NodeClick2(value0, value1);
      };
    };
    return NodeClick2;
  })();
  var TopLevelCSS = /* @__PURE__ */ (function() {
    function TopLevelCSS2(value0) {
      this.value0 = value0;
    }
    ;
    TopLevelCSS2.create = function(value0) {
      return new TopLevelCSS2(value0);
    };
    return TopLevelCSS2;
  })();
  var GraphStyle = /* @__PURE__ */ (function() {
    function GraphStyle2(value0) {
      this.value0 = value0;
    }
    ;
    GraphStyle2.create = function(value0) {
      return new GraphStyle2(value0);
    };
    return GraphStyle2;
  })();
  var PackageGrid = /* @__PURE__ */ (function() {
    function PackageGrid2() {
    }
    ;
    PackageGrid2.value = new PackageGrid2();
    return PackageGrid2;
  })();
  var PackageGraph = /* @__PURE__ */ (function() {
    function PackageGraph2() {
    }
    ;
    PackageGraph2.value = new PackageGraph2();
    return PackageGraph2;
  })();
  var ModuleTree = /* @__PURE__ */ (function() {
    function ModuleTree2(value0) {
      this.value0 = value0;
    }
    ;
    ModuleTree2.create = function(value0) {
      return new ModuleTree2(value0);
    };
    return ModuleTree2;
  })();
  var LayerSwarm = /* @__PURE__ */ (function() {
    function LayerSwarm2() {
    }
    ;
    LayerSwarm2.value = new LayerSwarm2();
    return LayerSwarm2;
  })();
  var LinkShowFilter = /* @__PURE__ */ (function() {
    function LinkShowFilter2(value0) {
      this.value0 = value0;
    }
    ;
    LinkShowFilter2.create = function(value0) {
      return new LinkShowFilter2(value0);
    };
    return LinkShowFilter2;
  })();
  var LinkForceFilter = /* @__PURE__ */ (function() {
    function LinkForceFilter2(value0) {
      this.value0 = value0;
    }
    ;
    LinkForceFilter2.create = function(value0) {
      return new LinkForceFilter2(value0);
    };
    return LinkForceFilter2;
  })();
  var NodeFilter = /* @__PURE__ */ (function() {
    function NodeFilter2(value0) {
      this.value0 = value0;
    }
    ;
    NodeFilter2.create = function(value0) {
      return new NodeFilter2(value0);
    };
    return NodeFilter2;
  })();
  var Initialize3 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var Finalize2 = /* @__PURE__ */ (function() {
    function Finalize5() {
    }
    ;
    Finalize5.value = new Finalize5();
    return Finalize5;
  })();
  var Scene = /* @__PURE__ */ (function() {
    function Scene2(value0) {
      this.value0 = value0;
    }
    ;
    Scene2.create = function(value0) {
      return new Scene2(value0);
    };
    return Scene2;
  })();
  var ToggleForce = /* @__PURE__ */ (function() {
    function ToggleForce2(value0) {
      this.value0 = value0;
    }
    ;
    ToggleForce2.create = function(value0) {
      return new ToggleForce2(value0);
    };
    return ToggleForce2;
  })();
  var Filter = /* @__PURE__ */ (function() {
    function Filter2(value0) {
      this.value0 = value0;
    }
    ;
    Filter2.create = function(value0) {
      return new Filter2(value0);
    };
    return Filter2;
  })();
  var ChangeStyling = /* @__PURE__ */ (function() {
    function ChangeStyling2(value0) {
      this.value0 = value0;
    }
    ;
    ChangeStyling2.create = function(value0) {
      return new ChangeStyling2(value0);
    };
    return ChangeStyling2;
  })();
  var ChangeSimConfig = /* @__PURE__ */ (function() {
    function ChangeSimConfig2(value0) {
      this.value0 = value0;
    }
    ;
    ChangeSimConfig2.create = function(value0) {
      return new ChangeSimConfig2(value0);
    };
    return ChangeSimConfig2;
  })();
  var StopSim = /* @__PURE__ */ (function() {
    function StopSim2() {
    }
    ;
    StopSim2.value = new StopSim2();
    return StopSim2;
  })();
  var StartSim = /* @__PURE__ */ (function() {
    function StartSim2() {
    }
    ;
    StartSim2.value = new StartSim2();
    return StartSim2;
  })();
  var EventFromVizualization = /* @__PURE__ */ (function() {
    function EventFromVizualization2(value0) {
      this.value0 = value0;
    }
    ;
    EventFromVizualization2.create = function(value0) {
      return new EventFromVizualization2(value0);
    };
    return EventFromVizualization2;
  })();
  var ToggleChildrenOfNode = /* @__PURE__ */ (function() {
    function ToggleChildrenOfNode2(value0) {
      this.value0 = value0;
    }
    ;
    ToggleChildrenOfNode2.create = function(value0) {
      return new ToggleChildrenOfNode2(value0);
    };
    return ToggleChildrenOfNode2;
  })();
  var SpotlightNode = /* @__PURE__ */ (function() {
    function SpotlightNode2(value0) {
      this.value0 = value0;
    }
    ;
    SpotlightNode2.create = function(value0) {
      return new SpotlightNode2(value0);
    };
    return SpotlightNode2;
  })();
  var UnToggleChildrenOfNode = /* @__PURE__ */ (function() {
    function UnToggleChildrenOfNode2(value0) {
      this.value0 = value0;
    }
    ;
    UnToggleChildrenOfNode2.create = function(value0) {
      return new UnToggleChildrenOfNode2(value0);
    };
    return UnToggleChildrenOfNode2;
  })();

  // output/D3.Viz.Spago.Draw/index.js
  var show7 = /* @__PURE__ */ show(showElement);
  var discard7 = /* @__PURE__ */ discard(discardUnit);
  var classed3 = /* @__PURE__ */ classed(toAttrStringFn);
  var strokeColor3 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var classed12 = /* @__PURE__ */ classed(toAttrString);
  var x12 = /* @__PURE__ */ x1(toAttrNumberFn);
  var y12 = /* @__PURE__ */ y1(toAttrNumberFn);
  var x22 = /* @__PURE__ */ x2(toAttrNumberFn);
  var y22 = /* @__PURE__ */ y2(toAttrNumberFn);
  var updateSimulation = function(dictEq) {
    return function(dictBind) {
      var bind22 = bind(dictBind);
      var discard19 = discard7(dictBind);
      var $$void11 = $$void(dictBind.Apply0().Functor0());
      return function(dictMonadEffect) {
        var pure30 = pure(dictMonadEffect.Monad0().Applicative0());
        return function(dictSelectionM) {
          var openSelection2 = openSelection(dictSelectionM);
          var updateJoin2 = updateJoin(dictSelectionM);
          var appendTo2 = appendTo(dictSelectionM);
          var setAttributes2 = setAttributes(dictSelectionM);
          var selectUnder2 = selectUnder(dictSelectionM);
          var mergeSelections2 = mergeSelections(dictSelectionM);
          var on3 = on2(dictSelectionM);
          return function(dictSimulationM) {
            var mergeNewDataWithSim2 = mergeNewDataWithSim(dictSimulationM)(dictEq);
            var setNodesFromSelection2 = setNodesFromSelection(dictSimulationM);
            var setLinksFromSelection2 = setLinksFromSelection(dictSimulationM);
            var addTickFunction2 = addTickFunction(dictSimulationM);
            return function(v) {
              return function(v1) {
                if (v.selections.nodes instanceof Just && v.selections.links instanceof Just) {
                  return bind22(openSelection2(v.selections.nodes.value0)(show7(Group.value)))(function(node) {
                    return bind22(openSelection2(v.selections.links.value0)(show7(Line.value)))(function(link3) {
                      return bind22(mergeNewDataWithSim2(node)(keyIsID_)(link3)(keyIsID_)(v.rawdata))(function(merged) {
                        return bind22(updateJoin2(node)(Group.value)(merged.nodes)(keyIsID_))(function(node$prime) {
                          return bind22(appendTo2(node$prime.enter)(Group.value)(enterAttrs))(function(nodeEnter) {
                            return bind22(appendTo2(nodeEnter)(Circle.value)(v1.circles))(function() {
                              return discard19($$void11(appendTo2(nodeEnter)(Text2.value)(v1.labels)))(function() {
                                return discard19(setAttributes2(node$prime.exit)([remove]))(function() {
                                  return discard19(setAttributes2(node$prime.update)(updateAttrs))(function() {
                                    return bind22(selectUnder2(node$prime.update)(show7(Circle.value)))(function(updateCirclesSelection) {
                                      return discard19(setAttributes2(updateCirclesSelection)(v1.circles))(function() {
                                        return bind22(selectUnder2(node$prime.update)(show7(Text2.value)))(function(updateLabelsSelection) {
                                          return discard19(setAttributes2(updateLabelsSelection)(v1.labels))(function() {
                                            return bind22(mergeSelections2(nodeEnter)(node$prime.update))(function(mergedNodeSelection) {
                                              return discard19($$void11(on3(mergedNodeSelection)(new Drag(new CustomDrag("spago", simdrag)))))(function() {
                                                return bind22(updateJoin2(link3)(Line.value)(merged.links)(keyIsID_))(function(link$prime) {
                                                  return bind22(appendTo2(link$prime.enter)(Line.value)([classed3(link_.linkClass), strokeColor3(link_.color)]))(function(linkEnter) {
                                                    return discard19(setAttributes2(linkEnter)([classed12("enter")]))(function() {
                                                      return discard19(setAttributes2(link$prime.exit)([remove]))(function() {
                                                        return discard19(setAttributes2(link$prime.update)([classed12("update")]))(function() {
                                                          return bind22(mergeSelections2(linkEnter)(link$prime.update))(function(mergedlinksShown) {
                                                            return discard19(setNodesFromSelection2(mergedNodeSelection))(function() {
                                                              return discard19(setLinksFromSelection2(mergedlinksShown)(v.linksWithForce))(function() {
                                                                return discard19(addTickFunction2("nodes")(new Step3(mergedNodeSelection, [transform$prime(datum_.translateNode)])))(function() {
                                                                  return addTickFunction2("links")(new Step3(mergedlinksShown, [x12(function($64) {
                                                                    return (function(v2) {
                                                                      return v2.x;
                                                                    })(link_.source($64));
                                                                  }), y12(function($65) {
                                                                    return (function(v2) {
                                                                      return v2.y;
                                                                    })(link_.source($65));
                                                                  }), x22(function($66) {
                                                                    return (function(v2) {
                                                                      return v2.x;
                                                                    })(link_.target($66));
                                                                  }), y22(function($67) {
                                                                    return (function(v2) {
                                                                      return v2.y;
                                                                    })(link_.target($67));
                                                                  })]));
                                                                });
                                                              });
                                                            });
                                                          });
                                                        });
                                                      });
                                                    });
                                                  });
                                                });
                                              });
                                            });
                                          });
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                }
                ;
                return pure30(unit);
              };
            };
          };
        };
      };
    };
  };
  var initialize = function(dictBind) {
    var bind22 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect10 = liftEffect(dictMonadEffect);
      var pure30 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictSimulationM) {
        return function(dictSelectionM) {
          var attach2 = attach(dictSelectionM);
          var appendTo2 = appendTo(dictSelectionM);
          var on3 = on2(dictSelectionM);
          return bind22(liftEffect10(getWindowWidthHeight))(function(v) {
            return bind22(attach2("div.svg-container"))(function(root2) {
              return bind22(appendTo2(root2)(Svg.value)(svgAttrs(v.value0)(v.value1)))(function(svg2) {
                return bind22(appendTo2(svg2)(Group.value)([]))(function(inner) {
                  return bind22(on3(inner)(new Drag(DefaultDrag.value)))(function() {
                    return bind22(on3(svg2)(new Zoom({
                      extent: new ZoomExtent({
                        top: 0,
                        left: 0,
                        bottom: v.value1,
                        right: v.value0
                      }),
                      scale: new ScaleExtent(0.1, 4),
                      name: "spago",
                      target: inner
                    })))(function() {
                      return bind22(appendTo2(inner)(Group.value)([classed12("links")]))(function(linksGroup) {
                        return bind22(appendTo2(inner)(Group.value)([classed12("nodes")]))(function(nodesGroup) {
                          return pure30({
                            nodes: new Just(nodesGroup),
                            links: new Just(linksGroup)
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        };
      };
    };
  };
  var getVizEventFromClick = function(e) {
    return function(d2) {
      return function(t) {
        return new NodeClick(datum_.nodetype(d2), datum_.id(d2));
      };
    };
  };

  // output/D3.Selection.Functions/index.js
  var spy2 = /* @__PURE__ */ spy();
  var foldl4 = /* @__PURE__ */ foldl(foldableArray);
  var show8 = /* @__PURE__ */ show(showElement);
  var discard8 = /* @__PURE__ */ discard(discardUnit);
  var selectionUpdateJoin = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(openSelection2) {
      return function(e) {
        return function(theData) {
          return function(keyFn) {
            var updateSelection = d3DataWithKeyFunction_(theData)(keyFn)(openSelection2);
            var exitSelection = d3GetExitSelection_(updateSelection);
            var enterSelection = d3GetEnterSelection_(updateSelection);
            return pure30({
              enter: enterSelection,
              exit: exitSelection,
              update: updateSelection
            });
          };
        };
      };
    };
  };
  var selectionSelectUnder = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection) {
      return function(selector) {
        return pure30(d3SelectionSelectAll_(selector)(selection));
      };
    };
  };
  var selectionOpenSelection = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection) {
      return function(selector) {
        var v = spy2("open selection: ")(selector);
        return pure30(d3SelectionSelectAll_(selector)(selection));
      };
    };
  };
  var selectionOn = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(v) {
      return function(v1) {
        if (v1 instanceof Drag) {
          return pure30(unit);
        }
        ;
        if (v1 instanceof Zoom) {
          var v2 = (function() {
            if (v1.value0.extent instanceof DefaultZoomExtent) {
              return d3AttachZoomDefaultExtent_(v)({
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v
              });
            }
            ;
            if (v1.value0.extent instanceof ZoomExtent) {
              return d3AttachZoom_(v)({
                extent: [[v1.value0.extent.value0.left, v1.value0.extent.value0.top], [v1.value0.extent.value0.right, v1.value0.extent.value0.bottom]],
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v
              });
            }
            ;
            throw new Error("Failed pattern match at D3.Selection.Functions (line 82, column 9 - line 96, column 14): " + [v1.value0.extent.constructor.name]);
          })();
          return pure30(unit);
        }
        ;
        throw new Error("Failed pattern match at D3.Selection.Functions (line 65, column 1 - line 65, column 104): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var selectionModifySelection = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection_) {
      return function(attributes) {
        var v = foldl4(applySelectionAttributeD3)(selection_)(attributes);
        return pure30(unit);
      };
    };
  };
  var selectionMergeSelections = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selectionA) {
      return function(selectionB) {
        return pure30(d3MergeSelectionWith_(selectionA)(selectionB));
      };
    };
  };
  var selectionJoin = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection) {
      return function(e) {
        return function(theData) {
          return function(keyFn) {
            var element3 = spy2("Join: ")(show8(e));
            var selectS = d3SelectionSelectAll_(element3)(selection);
            var dataSelection = d3DataWithKeyFunction_(theData)(keyFn)(selectS);
            var enterSelection = d3EnterAndAppend_(element3)(dataSelection);
            return pure30(enterSelection);
          };
        };
      };
    };
  };
  var selectionFilterSelection = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection_) {
      return function(selector) {
        return pure30(d3FilterSelection_(selection_)(selector));
      };
    };
  };
  var selectionAttach = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selector) {
      return pure30(d3SelectAllInDOM_(selector));
    };
  };
  var selectionAppendElement = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var discard19 = discard8(Monad0.Bind1());
    var selectionModifySelection1 = selectionModifySelection(dictSelectionM);
    var pure30 = pure(Monad0.Applicative0());
    return function(selection_) {
      return function(element3) {
        return function(attributes) {
          var appended_ = d3Append_(show8(element3))(selection_);
          return discard19(selectionModifySelection1(appended_)(attributes))(function() {
            return pure30(appended_);
          });
        };
      };
    };
  };

  // output/D3.Simulation.Forces/index.js
  var _status2 = /* @__PURE__ */ _status(strongFn);
  var show9 = /* @__PURE__ */ show(showRegularForceType);
  var _name2 = /* @__PURE__ */ _name(strongForget);
  var fromFoldable9 = /* @__PURE__ */ fromFoldable2(ordString);
  var elem3 = /* @__PURE__ */ elem2(eqString);
  var unwrap7 = /* @__PURE__ */ unwrap();
  var map113 = /* @__PURE__ */ map(functorArray);
  var showType = function(v) {
    if (v instanceof LinkForce) {
      return "linkForce";
    }
    ;
    if (v instanceof RegularForce) {
      return show9(v.value0);
    }
    ;
    throw new Error("Failed pattern match at D3.Simulation.Forces (line 32, column 3 - line 34, column 29): " + [v.constructor.name]);
  };
  var removeForceFromSimulation = function(v) {
    return function(simulation_) {
      if (v.type instanceof RegularForce) {
        return setAsNullForceInSimulation_(simulation_)(v.name);
      }
      ;
      if (v.type instanceof LinkForce) {
        return unsetLinks_(simulation_);
      }
      ;
      throw new Error("Failed pattern match at D3.Simulation.Forces (line 111, column 3 - line 114, column 46): " + [v.type.constructor.name]);
    };
  };
  var putForceInSimulation = function(v) {
    return function(simulation_) {
      if (v.type instanceof RegularForce) {
        return putForceInSimulation_(simulation_)(v.name)(v.force_);
      }
      ;
      if (v.type instanceof LinkForce) {
        return putForceInSimulation_(simulation_)(v.name)(v.force_);
      }
      ;
      throw new Error("Failed pattern match at D3.Simulation.Forces (line 102, column 3 - line 106, column 80): " + [v.type.constructor.name]);
    };
  };
  var initialize2 = function(dictFoldable) {
    var fromFoldable111 = fromFoldable9(dictFoldable);
    return function(dictFunctor) {
      var map211 = map(dictFunctor);
      return function(forces) {
        return fromFoldable111(map211(function(f) {
          return new Tuple(view(_name2)(f), f);
        })(forces));
      };
    };
  };
  var enableForce = /* @__PURE__ */ (function() {
    return set(_status2)(ForceActive.value);
  })();
  var enableByLabels = function(simulation) {
    return function(labels9) {
      return function(force2) {
        var $43 = elem3(view(_name2)(force2))(labels9);
        if ($43) {
          var v = putForceInSimulation(force2)(simulation);
          return enableForce(force2);
        }
        ;
        return force2;
      };
    };
  };
  var disableForce = /* @__PURE__ */ (function() {
    return set(_status2)(ForceDisabled.value);
  })();
  var disableByLabels = function(simulation) {
    return function(labels9) {
      return function(force2) {
        var $45 = elem3(view(_name2)(force2))(labels9);
        if ($45) {
          var v = removeForceFromSimulation(force2)(simulation);
          return disableForce(force2);
        }
        ;
        return force2;
      };
    };
  };
  var createRegularForce_ = function(v) {
    if (v instanceof ForceManyBody) {
      return forceMany_(unit);
    }
    ;
    if (v instanceof ForceCenter) {
      return forceCenter_(unit);
    }
    ;
    if (v instanceof ForceCollide) {
      return forceCollideFn_(unit);
    }
    ;
    if (v instanceof ForceX) {
      return forceX_(unit);
    }
    ;
    if (v instanceof ForceY) {
      return forceY_(unit);
    }
    ;
    if (v instanceof ForceRadial) {
      return forceRadial_(unit);
    }
    ;
    throw new Error("Failed pattern match at D3.Simulation.Forces (line 166, column 23 - line 172, column 52): " + [v.constructor.name]);
  };
  var createForce_ = function(v) {
    if (v instanceof RegularForce) {
      return createRegularForce_(v.value0);
    }
    ;
    if (v instanceof LinkForce) {
      return forceLink_(unit);
    }
    ;
    throw new Error("Failed pattern match at D3.Simulation.Forces (line 160, column 3 - line 162, column 38): " + [v.constructor.name]);
  };
  var createLinkForce = function(f) {
    return function(cs) {
      return {
        type: LinkForce.value,
        name: linksForceName,
        status: ForceDisabled.value,
        filter: f,
        attributes: cs,
        force_: createForce_(LinkForce.value)
      };
    };
  };
  var createForce = function(l) {
    return function(t) {
      return function(f) {
        return function(cs) {
          return {
            type: t,
            name: l,
            status: ForceDisabled.value,
            filter: f,
            attributes: cs,
            force_: createForce_(t)
          };
        };
      };
    };
  };
  var attrFilter = function(filter$prime) {
    return function(default$prime) {
      var addFilterToStatic = function(filter5) {
        return function(value15) {
          return function($$default) {
            return function(d2) {
              var $49 = filter5(d2);
              if ($49) {
                return value15;
              }
              ;
              return $$default;
            };
          };
        };
      };
      var addFilterToFn = function(filter5) {
        return function(fn) {
          return function($$default) {
            return function(d2) {
              var $50 = filter5(d2);
              if ($50) {
                return fn(d2);
              }
              ;
              return $$default;
            };
          };
        };
      };
      return function(v) {
        if (v instanceof StringAttr && v.value0 instanceof Static) {
          return new StringAttr(new Static(v.value0.value0));
        }
        ;
        if (v instanceof StringAttr && v.value0 instanceof Fn) {
          return new StringAttr(new Fn(v.value0.value0));
        }
        ;
        if (v instanceof StringAttr && v.value0 instanceof FnI) {
          return new StringAttr(new FnI(v.value0.value0));
        }
        ;
        if (v instanceof NumberAttr && v.value0 instanceof Static) {
          return new NumberAttr(new Fn(addFilterToStatic(filter$prime)(v.value0.value0)(default$prime)));
        }
        ;
        if (v instanceof NumberAttr && v.value0 instanceof Fn) {
          return new NumberAttr(new Fn(addFilterToFn(filter$prime)(v.value0.value0)(default$prime)));
        }
        ;
        if (v instanceof NumberAttr && v.value0 instanceof FnI) {
          return new NumberAttr(new FnI(v.value0.value0));
        }
        ;
        if (v instanceof ArrayAttr && v.value0 instanceof Static) {
          return new ArrayAttr(new Static(v.value0.value0));
        }
        ;
        if (v instanceof ArrayAttr && v.value0 instanceof Fn) {
          return new ArrayAttr(new Fn(v.value0.value0));
        }
        ;
        if (v instanceof ArrayAttr && v.value0 instanceof FnI) {
          return new ArrayAttr(new FnI(v.value0.value0));
        }
        ;
        throw new Error("Failed pattern match at D3.Simulation.Forces (line 211, column 3 - line 222, column 49): " + [v.constructor.name]);
      };
    };
  };
  var setForceAttr = function(force_) {
    return function(maybeFilter) {
      return function(v) {
        if (v.value0 === "strength") {
          if (maybeFilter instanceof Nothing) {
            return setForceStrength_(force_)(unboxAttr(v.value1));
          }
          ;
          if (maybeFilter instanceof Just) {
            return setForceStrength_(force_)(unboxAttr(attrFilter(maybeFilter.value0.value1)(0)(v.value1)));
          }
          ;
          throw new Error("Failed pattern match at D3.Simulation.Forces (line 181, column 7 - line 185, column 82): " + [maybeFilter.constructor.name]);
        }
        ;
        if (v.value0 === "radius") {
          return setForceRadius_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "theta") {
          return setForceTheta_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "distanceMin") {
          return setForceDistanceMin_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "distanceMax") {
          return setForceDistanceMax_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "iterations") {
          return setForceIterations_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "x") {
          return setForceX_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "y") {
          return setForceY_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "distance") {
          return setForceDistance_(force_)(unboxAttr(v.value1));
        }
        ;
        return force_;
      };
    };
  };
  var updateForceInSimulation = function(simulation) {
    return function(force2) {
      var f = unwrap7(force2);
      var v = map113(function(a2) {
        return setForceAttr(f.force_)(f.filter)(unwrap7(a2));
      })(f.attributes);
      if (f.status instanceof ForceActive) {
        return putForceInSimulation(force2)(simulation);
      }
      ;
      if (f.status instanceof ForceDisabled) {
        return removeForceFromSimulation(force2)(simulation);
      }
      ;
      throw new Error("Failed pattern match at D3.Simulation.Forces (line 95, column 5 - line 97, column 66): " + [f.status.constructor.name]);
    };
  };

  // output/Data.Map/index.js
  var keys3 = /* @__PURE__ */ (function() {
    var $38 = $$void(functorMap);
    return function($39) {
      return fromMap($38($39));
    };
  })();

  // output/D3.Simulation.Functions/index.js
  var _handle2 = /* @__PURE__ */ _handle(strongForget);
  var discard9 = /* @__PURE__ */ discard(discardUnit);
  var _forceLibrary2 = /* @__PURE__ */ _forceLibrary(strongFn);
  var _forceLibrary1 = /* @__PURE__ */ _forceLibrary(strongForget);
  var map32 = /* @__PURE__ */ map(functorMap);
  var _d3Simulation2 = /* @__PURE__ */ _d3Simulation(strongFn);
  var _alpha2 = /* @__PURE__ */ _alpha(strongFn);
  var _alphaTarget2 = /* @__PURE__ */ _alphaTarget(strongFn);
  var _alphaMin2 = /* @__PURE__ */ _alphaMin(strongFn);
  var _alphaDecay2 = /* @__PURE__ */ _alphaDecay(strongFn);
  var _velocityDecay2 = /* @__PURE__ */ _velocityDecay(strongFn);
  var fromFoldable10 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var difference4 = /* @__PURE__ */ difference2(ordString);
  var fromFoldable14 = /* @__PURE__ */ fromFoldable5(foldableSet)(ordString);
  var intersection3 = /* @__PURE__ */ intersection(ordString);
  var spy3 = /* @__PURE__ */ spy();
  var simulationStop = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var pure30 = pure(Monad0.Applicative0());
    return bind(Monad0.Bind1())(use(dictMonadState)(_handle2))(function(handle) {
      var v = stopSimulation_(handle);
      return pure30(unit);
    });
  };
  var simulationStart = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var Bind1 = Monad0.Bind1();
    var discard19 = discard9(Bind1);
    var modifying3 = modifying(dictMonadState);
    var pure30 = pure(Monad0.Applicative0());
    return bind(Bind1)(use(dictMonadState)(_handle2))(function(handle) {
      return discard19(modifying3(function($246) {
        return _d3Simulation2(_alpha2($246));
      })($$const(1)))(function() {
        return pure30(startSimulation_(handle));
      });
    });
  };
  var simulationSetVariable = function(dictMonadState) {
    var bind22 = bind(dictMonadState.Monad0().Bind1());
    var use2 = use(dictMonadState);
    var modifying3 = modifying(dictMonadState);
    return function(v) {
      return bind22(use2(_handle2))(function(handle) {
        if (v instanceof Alpha) {
          var v1 = setAlpha_(handle)(v.value0);
          return modifying3(function($247) {
            return _d3Simulation2(_alpha2($247));
          })($$const(v.value0));
        }
        ;
        if (v instanceof AlphaTarget) {
          var v1 = setAlphaTarget_(handle)(v.value0);
          return modifying3(function($248) {
            return _d3Simulation2(_alphaTarget2($248));
          })($$const(v.value0));
        }
        ;
        if (v instanceof AlphaMin) {
          var v1 = setAlphaMin_(handle)(v.value0);
          return modifying3(function($249) {
            return _d3Simulation2(_alphaMin2($249));
          })($$const(v.value0));
        }
        ;
        if (v instanceof AlphaDecay) {
          var v1 = setAlphaDecay_(handle)(v.value0);
          return modifying3(function($250) {
            return _d3Simulation2(_alphaDecay2($250));
          })($$const(v.value0));
        }
        ;
        if (v instanceof VelocityDecay) {
          var v1 = setVelocityDecay_(handle)(v.value0);
          return modifying3(function($251) {
            return _d3Simulation2(_velocityDecay2($251));
          })($$const(v.value0));
        }
        ;
        throw new Error("Failed pattern match at D3.Simulation.Functions (line 115, column 3 - line 130, column 52): " + [v.constructor.name]);
      });
    };
  };
  var simulationSetNodesFromSelection = function(dictBind) {
    var bind22 = bind(dictBind);
    return function(dictMonadState) {
      var use2 = use(dictMonadState);
      var pure30 = pure(dictMonadState.Monad0().Applicative0());
      return function(nodeSelection2) {
        return bind22(use2(_handle2))(function(handle) {
          var v = setNodes_(handle)(d3GetSelectionData_(nodeSelection2));
          return pure30(unit);
        });
      };
    };
  };
  var simulationSetNodes = function(dictBind) {
    var bind22 = bind(dictBind);
    return function(dictMonadState) {
      var use2 = use(dictMonadState);
      var pure30 = pure(dictMonadState.Monad0().Applicative0());
      return function(nodes) {
        return bind22(use2(_handle2))(function(handle) {
          var v = setNodes_(handle)(nodes);
          var opaqueNodes = getNodes_(handle);
          return pure30(opaqueNodes);
        });
      };
    };
  };
  var simulationSetLinksFromSelection = function(dictBind) {
    var bind22 = bind(dictBind);
    return function(dictMonadState) {
      var use2 = use(dictMonadState);
      var pure30 = pure(dictMonadState.Monad0().Applicative0());
      return function(linkSelection) {
        return function(filterFn) {
          return bind22(use2(_handle2))(function(handle) {
            var v = setLinks_(handle)(filter2(filterFn)(d3GetSelectionData_(linkSelection)));
            return pure30(unit);
          });
        };
      };
    };
  };
  var simulationSetLinks = function(dictEq) {
    return function(dictBind) {
      var bind22 = bind(dictBind);
      return function(dictMonadState) {
        var use2 = use(dictMonadState);
        var pure30 = pure(dictMonadState.Monad0().Applicative0());
        return function(links) {
          return function(nodes) {
            return function(keyFn) {
              return bind22(use2(_handle2))(function(handle) {
                var v = setLinks_(handle)(swizzleLinks_(links)(nodes)(keyFn));
                var swizzledLinks = getLinksFromSimulation_(handle);
                return pure30(swizzledLinks);
              });
            };
          };
        };
      };
    };
  };
  var simulationOn = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind22 = bind(Monad0.Bind1());
    var use2 = use(dictMonadState);
    var pure30 = pure(Monad0.Applicative0());
    return function(v) {
      return function(v1) {
        if (v1 instanceof Drag) {
          return bind22(use2(_handle2))(function(handle) {
            var v22 = (function() {
              if (v1.value0 instanceof DefaultDrag) {
                return simulationDrag_("default")(v)(handle)(simdrag);
              }
              ;
              if (v1.value0 instanceof NoDrag) {
                return disableDrag_(v);
              }
              ;
              if (v1.value0 instanceof CustomDrag) {
                return simulationDrag_(v1.value0.value0)(v)(handle)(v1.value0.value1);
              }
              ;
              throw new Error("Failed pattern match at D3.Simulation.Functions (line 305, column 11 - line 308, column 78): " + [v1.value0.constructor.name]);
            })();
            return pure30(unit);
          });
        }
        ;
        if (v1 instanceof Zoom) {
          var v2 = (function() {
            if (v1.value0.extent instanceof DefaultZoomExtent) {
              return d3AttachZoomDefaultExtent_(v)({
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v1.value0.target
              });
            }
            ;
            if (v1.value0.extent instanceof ZoomExtent) {
              return d3AttachZoom_(v)({
                extent: [[v1.value0.extent.value0.left, v1.value0.extent.value0.top], [v1.value0.extent.value0.right, v1.value0.extent.value0.bottom]],
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v1.value0.target
              });
            }
            ;
            throw new Error("Failed pattern match at D3.Simulation.Functions (line 316, column 9 - line 330, column 14): " + [v1.value0.extent.constructor.name]);
          })();
          return pure30(unit);
        }
        ;
        throw new Error("Failed pattern match at D3.Simulation.Functions (line 300, column 1 - line 302, column 51): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var simulationMergeNewData = function(dictEq) {
    var elem6 = elem2(dictEq);
    return function(dictBind) {
      return function(dictMonadState) {
        var pure30 = pure(dictMonadState.Monad0().Applicative0());
        return function(nodeSelection2) {
          return function(nodeKeyFn) {
            return function(linkSelection) {
              return function(linkKeyFn) {
                return function(rawdata) {
                  var updatedNodeData = d3PreserveSimulationPositions_(nodeSelection2)(rawdata.nodes)(nodeKeyFn);
                  var nodeIDs = getIDsFromNodes_(rawdata.nodes)(nodeKeyFn);
                  var validLink = function(l) {
                    var v = getLinkIDs_(linkKeyFn)(l);
                    return elem6(v.sourceID)(nodeIDs) && elem6(v.targetID)(nodeIDs);
                  };
                  var validNewLinks = filter2(validLink)(rawdata.links);
                  var updatedLinkData = d3PreserveLinkReferences_(linkSelection)(validNewLinks);
                  var swizzledLinkData = swizzleLinks_(updatedLinkData)(updatedNodeData)(nodeKeyFn);
                  return pure30({
                    nodes: updatedNodeData,
                    links: swizzledLinkData
                  });
                };
              };
            };
          };
        };
      };
    };
  };
  var simulationEnableForcesByLabel = function(dictMonadState) {
    var bind22 = bind(dictMonadState.Monad0().Bind1());
    var use2 = use(dictMonadState);
    var modifying3 = modifying(dictMonadState);
    return function(labels9) {
      return bind22(use2(_handle2))(function(handle) {
        return bind22(use2(_forceLibrary1))(function(forces) {
          return modifying3(_forceLibrary2)($$const(map32(enableByLabels(handle)(labels9))(forces)));
        });
      });
    };
  };
  var simulationDisableForcesByLabel = function(dictMonadState) {
    var bind22 = bind(dictMonadState.Monad0().Bind1());
    var use2 = use(dictMonadState);
    var modifying3 = modifying(dictMonadState);
    return function(labels9) {
      return bind22(use2(_handle2))(function(handle) {
        return bind22(use2(_forceLibrary1))(function(forces) {
          return modifying3(_forceLibrary2)($$const(map32(disableByLabels(handle)(labels9))(forces)));
        });
      });
    };
  };
  var simulationActualizeForces = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind22 = bind(Bind1);
    var use2 = use(dictMonadState);
    var discard19 = discard9(Bind1);
    var simulationEnableForcesByLabel1 = simulationEnableForcesByLabel(dictMonadState);
    var simulationDisableForcesByLabel1 = simulationDisableForcesByLabel(dictMonadState);
    var pure30 = pure(Monad0.Applicative0());
    return function(activeForces) {
      return bind22(use2(_handle2))(function(handle) {
        return bind22(use2(_forceLibrary1))(function(library) {
          var allLabels = keys3(library);
          var disableLabels = fromFoldable10(difference4(fromFoldable14(allLabels))(activeForces));
          var enableLabels = fromFoldable10(intersection3(activeForces)(fromFoldable14(allLabels)));
          var v = spy3("\u{1F527} actualizeForces - enabling")(enableLabels);
          var v1 = spy3("\u{1F527} actualizeForces - disabling")(disableLabels);
          return discard19(simulationEnableForcesByLabel1(enableLabels))(function() {
            return discard19(simulationDisableForcesByLabel1(disableLabels))(function() {
              return bind22(use2(_forceLibrary1))(function(updatedLibrary) {
                var v2 = map32(updateForceInSimulation(handle))(updatedLibrary);
                return pure30(unit);
              });
            });
          });
        });
      });
    };
  };

  // output/D3Tagless.Instance.Simulation/index.js
  var liftA12 = /* @__PURE__ */ liftA1(applicativeEffect);
  var discard10 = /* @__PURE__ */ discard(discardUnit);
  var mapFlipped5 = /* @__PURE__ */ mapFlipped(functorArray);
  var run_D3M_Simulation = function(simulation) {
    return function(v) {
      return runStateT(v)(simulation);
    };
  };
  var monadStateD3SimM = /* @__PURE__ */ monadStateStateT(monadEffect);
  var simulationOn2 = /* @__PURE__ */ simulationOn(monadStateD3SimM);
  var simulationSetVariable2 = /* @__PURE__ */ simulationSetVariable(monadStateD3SimM);
  var monadEffD3SimM = /* @__PURE__ */ monadEffectState(monadEffectEffect);
  var monadD3SimM = /* @__PURE__ */ monadStateT(monadEffect);
  var selectionMD3Selection_D3S = {
    appendTo: function(s_) {
      return selectionAppendElement(selectionMD3Selection_D3S)(s_);
    },
    selectUnder: function(s_) {
      return selectionSelectUnder(selectionMD3Selection_D3S)(s_);
    },
    attach: function(selector) {
      return selectionAttach(selectionMD3Selection_D3S)(selector);
    },
    filterSelection: function(s_) {
      return selectionFilterSelection(selectionMD3Selection_D3S)(s_);
    },
    mergeSelections: function(s_) {
      return selectionMergeSelections(selectionMD3Selection_D3S)(s_);
    },
    setAttributes: function(s_) {
      return selectionModifySelection(selectionMD3Selection_D3S)(s_);
    },
    on: function(s_) {
      return simulationOn2(s_);
    },
    openSelection: function(s_) {
      return selectionOpenSelection(selectionMD3Selection_D3S)(s_);
    },
    simpleJoin: function(s_) {
      return selectionJoin(selectionMD3Selection_D3S)(s_);
    },
    updateJoin: function(s_) {
      return selectionUpdateJoin(selectionMD3Selection_D3S)(s_);
    },
    Monad0: function() {
      return monadD3SimM;
    }
  };
  var exec_D3M_Simulation = function(simulation) {
    return function(v) {
      return liftA12(snd)(runStateT(v)(simulation));
    };
  };
  var runWithD3_Simulation = function(dictBind) {
    var bind111 = bind(dictBind);
    return function(dictMonadState) {
      var get5 = get(dictMonadState);
      var modify_6 = modify_(dictMonadState);
      return function(dictMonadEffect) {
        var liftEffect10 = liftEffect(dictMonadEffect);
        return function(state_T) {
          return bind111(get5)(function(state3) {
            return bind111(liftEffect10(exec_D3M_Simulation(state3)(state_T)))(function(state$prime) {
              return modify_6(function(v) {
                return state$prime;
              });
            });
          });
        };
      };
    };
  };
  var evalEffectSimulation = function(dictBind) {
    var bind111 = bind(dictBind);
    var discard19 = discard10(dictBind);
    return function(dictMonadState) {
      var get5 = get(dictMonadState);
      var modify_6 = modify_(dictMonadState);
      return function(dictMonadEffect) {
        var liftEffect10 = liftEffect(dictMonadEffect);
        var pure111 = pure(dictMonadEffect.Monad0().Applicative0());
        return function(state_T) {
          return bind111(get5)(function(state3) {
            return bind111(liftEffect10(run_D3M_Simulation(state3)(state_T)))(function(v) {
              return discard19(modify_6(function(v1) {
                return v.value1;
              }))(function() {
                return pure111(v.value0);
              });
            });
          });
        };
      };
    };
  };
  var bindD3SimM = /* @__PURE__ */ bindStateT(monadEffect);
  var simulationSetNodesFromSelection2 = /* @__PURE__ */ simulationSetNodesFromSelection(bindD3SimM)(monadStateD3SimM);
  var simulationSetLinksFromSelection2 = /* @__PURE__ */ simulationSetLinksFromSelection(bindD3SimM)(monadStateD3SimM);
  var bind9 = /* @__PURE__ */ bind(bindD3SimM);
  var applicativeD3SimM = /* @__PURE__ */ applicativeStateT(monadEffect);
  var pure16 = /* @__PURE__ */ pure(applicativeD3SimM);
  var simulationMD3Selection_D3 = {
    start: /* @__PURE__ */ simulationStart(monadStateD3SimM),
    stop: /* @__PURE__ */ simulationStop(monadStateD3SimM),
    setConfigVariable: function(v) {
      return simulationSetVariable2(v);
    },
    actualizeForces: /* @__PURE__ */ simulationActualizeForces(monadStateD3SimM),
    setNodes: /* @__PURE__ */ simulationSetNodes(bindD3SimM)(monadStateD3SimM),
    setLinks: function(dictEq) {
      return simulationSetLinks(dictEq)(bindD3SimM)(monadStateD3SimM);
    },
    mergeNewDataWithSim: function(dictEq) {
      var simulationMergeNewData2 = simulationMergeNewData(dictEq)(bindD3SimM)(monadStateD3SimM);
      return function(selection) {
        return simulationMergeNewData2(selection);
      };
    },
    setNodesFromSelection: function(selection) {
      return simulationSetNodesFromSelection2(selection);
    },
    setLinksFromSelection: function(selection) {
      return simulationSetLinksFromSelection2(selection);
    },
    addTickFunction: function(v) {
      return function(v1) {
        if (v1 instanceof StepTransformFFI) {
          return pure16(unit);
        }
        ;
        if (v1 instanceof Step3) {
          return bind9(simulationHandle(simulationMD3Selection_D3))(function(handle) {
            var makeTick = function(v22) {
              var v3 = mapFlipped5(v1.value1)(applySelectionAttributeD3(v1.value0));
              return unit;
            };
            var v2 = onTick_(handle)(v)(makeTick);
            return pure16(unit);
          });
        }
        ;
        throw new Error("Failed pattern match at D3Tagless.Instance.Simulation (line 84, column 1 - line 119, column 33): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    removeTickFunction: function(label5) {
      return bind9(simulationHandle(simulationMD3Selection_D3))(function(handle) {
        var v = disableTick_(handle)(label5);
        return pure16(unit);
      });
    },
    simulationHandle: /* @__PURE__ */ use(monadStateD3SimM)(/* @__PURE__ */ _handle(strongForget)),
    Monad0: function() {
      return monadD3SimM;
    },
    SelectionM1: function() {
      return selectionMD3Selection_D3S;
    }
  };

  // output/D3.Data.Graph/index.js
  var bind10 = /* @__PURE__ */ bind(bindMaybe);
  var mapFlipped6 = /* @__PURE__ */ mapFlipped(functorArray);
  var append8 = /* @__PURE__ */ append(semigroupArray);
  var getReachableNodes = function(dictOrd) {
    var lookup13 = lookup8(dictOrd);
    var elem6 = elem2(dictOrd.Eq0());
    return function(id4) {
      return function(graph) {
        var processNextOpenDepPath = function(searchRecord) {
          return bind10(uncons(searchRecord.openDepPaths))(function(x8) {
            return bind10(head2(x8.head))(function(firstID) {
              return bind10(lookup13(firstID)(graph))(function(firstNode) {
                var newDeps = partition(function(d2) {
                  return !elem6(d2)(searchRecord.nodes);
                })(firstNode.links.targets);
                var newOpenDepPaths = mapFlipped6(newDeps.yes)(function(d2) {
                  return cons3(d2)(x8.head);
                });
                var prunedLinks = mapFlipped6(newDeps.no)(function(d2) {
                  return new Tuple(firstID, d2);
                });
                var $12 = $$null3(newOpenDepPaths);
                if ($12) {
                  return new Just({
                    dependencyTree: searchRecord.dependencyTree,
                    nodes: searchRecord.nodes,
                    openDepPaths: x8.tail,
                    closedDepPaths: cons3(x8.head)(searchRecord.closedDepPaths),
                    redundantLinks: append8(searchRecord.redundantLinks)(prunedLinks)
                  });
                }
                ;
                return new Just({
                  closedDepPaths: searchRecord.closedDepPaths,
                  dependencyTree: searchRecord.dependencyTree,
                  openDepPaths: append8(x8.tail)(newOpenDepPaths),
                  nodes: append8(searchRecord.nodes)(newDeps.yes),
                  redundantLinks: append8(searchRecord.redundantLinks)(prunedLinks)
                });
              });
            });
          });
        };
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.openDepPaths.length === 0) {
              $tco_done = true;
              return v;
            }
            ;
            var v1 = processNextOpenDepPath(v);
            if (v1 instanceof Nothing) {
              $tco_done = true;
              return v;
            }
            ;
            if (v1 instanceof Just) {
              $copy_v = v1.value0;
              return;
            }
            ;
            throw new Error("Failed pattern match at D3.Data.Graph (line 26, column 7 - line 28, column 49): " + [v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2({
          nodes: [],
          openDepPaths: [[id4]],
          closedDepPaths: [],
          redundantLinks: [],
          dependencyTree: Nothing.value
        });
      };
    };
  };

  // output/Data.Tree/index.js
  var Node = /* @__PURE__ */ (function() {
    function Node2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Node2.create = function(value0) {
      return function(value1) {
        return new Node2(value0, value1);
      };
    };
    return Node2;
  })();

  // output/D3.Viz.Spago.Tree/index.js
  var lookup10 = /* @__PURE__ */ lookup(ordInt);
  var map33 = /* @__PURE__ */ map(functorArray);
  var fromFoldable11 = /* @__PURE__ */ fromFoldable(foldableArray);
  var foldl5 = /* @__PURE__ */ foldl(foldableList);
  var fromFoldable15 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var fromFoldable23 = /* @__PURE__ */ fromFoldable5(foldableList)(/* @__PURE__ */ ordTuple(ordInt)(ordInt));
  var insert9 = /* @__PURE__ */ insert(ordInt);
  var map114 = /* @__PURE__ */ map(functorList);
  var getReachableNodes2 = /* @__PURE__ */ getReachableNodes(ordInt);
  var elem4 = /* @__PURE__ */ elem2(eqInt);
  var elem1 = /* @__PURE__ */ elem2(/* @__PURE__ */ eqTuple(eqInt)(eqInt));
  var append9 = /* @__PURE__ */ append(semigroupArray);
  var tupleToLink = function(linktype) {
    return function(v) {
      return {
        source: v.value0,
        target: v.value1,
        linktype,
        inSim: true
      };
    };
  };
  var setNodeXY_ForHorizontalTree = function(nodes) {
    return function(treeDerivedDataMap) {
      var updateXY = function(v) {
        var v1 = lookup10(v.id)(treeDerivedDataMap);
        if (v1 instanceof Nothing) {
          return v;
        }
        ;
        if (v1 instanceof Just) {
          var $47 = {
            x: v1.value0.y - 1200,
            y: v1.value0.x
          };
          return setTreeXYIncludingLeaves(v)({
            x: $47.x,
            y: $47.y,
            depth: v1.value0.depth,
            isTreeLeaf: v1.value0.isTreeLeaf,
            childIDs: v1.value0.childIDs
          });
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.Spago.Tree (line 105, column 7 - line 112, column 134): " + [v1.constructor.name]);
      };
      return map33(updateXY)(nodes);
    };
  };
  var pathsAsLists = function(paths) {
    return fromFoldable11(map33(function($77) {
      return fromFoldable11(reverse2($77));
    })(paths));
  };
  var path2Tuples = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Nil) {
          $tco_done = true;
          return v;
        }
        ;
        if (v1 instanceof Cons && v1.value1 instanceof Nil) {
          $tco_done = true;
          return v;
        }
        ;
        if (v1 instanceof Cons && v1.value1 instanceof Cons) {
          $tco_var_v = new Cons(new Tuple(v1.value0, v1.value1.value0), v);
          $copy_v1 = new Cons(v1.value1.value0, v1.value1.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.Spago.Tree (line 144, column 1 - line 144, column 93): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var makeTreeLinkTuples = function(closedPaths) {
    var linkTuples = foldl5(path2Tuples)(Nil.value)(closedPaths);
    return fromFoldable15(fromFoldable23(linkTuples));
  };
  var getTreeDerivedData = function(root2) {
    return foldl2(function(acc) {
      return function(v) {
        return insert9(v.data.id)({
          x: v.x,
          y: v.y,
          depth: v.depth,
          isTreeLeaf: hasChildren_(v),
          childIDs: map33(function(v1) {
            return v1.id;
          })(getHierarchyChildren_(v))
        })(acc);
      };
    })(empty2)(descendants_(root2));
  };
  var changeLinkType = function(linktype) {
    return function(v) {
      var $71 = {};
      for (var $72 in v) {
        if ({}.hasOwnProperty.call(v, $72)) {
          $71[$72] = v[$72];
        }
        ;
      }
      ;
      $71.linktype = linktype;
      return $71;
    };
  };
  var buildTree = function(rootID) {
    return function(treelinks) {
      var unwrap9 = function(v) {
        return v;
      };
      var linksWhoseSourceIs = function(id4) {
        return fromFoldable11(map33(function(v) {
          return v.target;
        })(filter2(function(l) {
          return l.source === id4;
        })(map33(unwrap9)(treelinks))));
      };
      var go2 = function(childID) {
        return new Node(childID, map114(go2)(linksWhoseSourceIs(childID)));
      };
      return new Node(rootID, map114(go2)(linksWhoseSourceIs(rootID)));
    };
  };
  var treeReduction = function(rootID) {
    return function(model) {
      var reachable = getReachableNodes2(rootID)(model.graph);
      var treenodes = partition(function(v) {
        return elem4(v.id)(reachable.nodes) || v.id === rootID;
      })(model.nodes);
      var prunedTreeLinks = map33(tupleToLink(M2M_Graph.value))(reachable.redundantLinks);
      var onlyTreelinks = makeTreeLinkTuples(pathsAsLists(reachable.closedDepPaths));
      var partitionedLinks = partition(function(v) {
        return elem1(new Tuple(v.source, v.target))(onlyTreelinks);
      })(model.links);
      var treelinks = map33(changeLinkType(M2M_Tree.value))(partitionedLinks.yes);
      var onlyPackageLinks = filter2(isP2P_Link)(model.links);
      var links = append9(treelinks)(append9(prunedTreeLinks)(onlyPackageLinks));
      var idTree = buildTree(rootID)(treelinks);
      var jsontree = makeD3TreeJSONFromTreeID(idTree)(model.maps.id2Node);
      var rootTree = hierarchyFromJSON_(jsontree);
      var numberOfLevels = hNodeHeight_(rootTree) + 1;
      var layout = treeSetNodeSize_(getLayout(TidyTree.value))([8, 4e3 / numberOfLevels]);
      var sortedTree = treeSortForTree_Spago(rootTree);
      var laidOutRoot_ = runLayoutFn_(layout)(sortedTree);
      var tree2 = new Tuple(rootID, laidOutRoot_);
      var treeDerivedDataMap = getTreeDerivedData(laidOutRoot_);
      var positionedNodes = setNodeXY_ForHorizontalTree(treenodes.yes)(treeDerivedDataMap);
      return {
        graph: model.graph,
        links,
        nodes: append9(positionedNodes)(treenodes.no),
        tree: new Just(tree2),
        maps: {
          name2ID: model.maps.name2ID,
          id2Name: model.maps.id2Name,
          id2Node: model.maps.id2Node,
          id2Package: model.maps.id2Package,
          id2LOC: model.maps.id2LOC,
          id2TreeData: treeDerivedDataMap
        }
      };
    };
  };

  // output/PSD3.CodeExplorer.Data/index.js
  var bind11 = /* @__PURE__ */ bind(bindMaybe);
  var lookup11 = /* @__PURE__ */ lookup(ordString);
  var pure17 = /* @__PURE__ */ pure(applicativeMaybe);
  var bind15 = /* @__PURE__ */ bind(bindAff);
  var apply3 = /* @__PURE__ */ apply(applyEither);
  var map34 = /* @__PURE__ */ map(functorEither);
  var pure18 = /* @__PURE__ */ pure(applicativeAff);
  var addTreeToModel = function(rootName) {
    return function(maybeModel) {
      return bind11(maybeModel)(function(model) {
        return bind11(lookup11(rootName)(model.maps.name2ID))(function(rootID) {
          return pure17(treeReduction(rootID)(model));
        });
      });
    };
  };
  var readModelData = /* @__PURE__ */ (function() {
    return bind15(get3(string)("./data/spago-data/modules.json"))(function(moduleJSON) {
      return bind15(get3(string)("./data/spago-data/packages.json"))(function(packageJSON) {
        return bind15(get3(string)("./data/spago-data/lsdeps.jsonlines"))(function(lsdepJSON) {
          return bind15(get3(string)("./data/spago-data/LOC.json"))(function(locJSON) {
            var model = hush(apply3(apply3(apply3(map34(convertFilesToGraphModel)(moduleJSON))(packageJSON))(lsdepJSON))(locJSON));
            return pure18(addTreeToModel("PSD3.Main")(model));
          });
        });
      });
    });
  })();

  // output/D3.Simulation.Config/index.js
  var y4 = function(dictToAttr) {
    var $34 = AttributeSetter.create("y");
    var $35 = toAttr(dictToAttr);
    return function($36) {
      return ForceT($34($35($36)));
    };
  };
  var x4 = function(dictToAttr) {
    var $37 = AttributeSetter.create("x");
    var $38 = toAttr(dictToAttr);
    return function($39) {
      return ForceT($37($38($39)));
    };
  };
  var theta = function(dictToAttr) {
    var $40 = AttributeSetter.create("theta");
    var $41 = toAttr(dictToAttr);
    return function($42) {
      return ForceT($40($41($42)));
    };
  };
  var strength = function(dictToAttr) {
    var $45 = AttributeSetter.create("strength");
    var $46 = toAttr(dictToAttr);
    return function($47) {
      return ForceT($45($46($47)));
    };
  };
  var radius3 = function(dictToAttr) {
    var $48 = AttributeSetter.create("radius");
    var $49 = toAttr(dictToAttr);
    return function($50) {
      return ForceT($48($49($50)));
    };
  };
  var numKey = /* @__PURE__ */ (function() {
    var $51 = AttributeSetter.create("keyFn");
    return function($52) {
      return ForceT($51(NumberAttr.create(Fn.create($52))));
    };
  })();
  var distanceMin = function(dictToAttr) {
    var $65 = AttributeSetter.create("distanceMin");
    var $66 = toAttr(dictToAttr);
    return function($67) {
      return ForceT($65($66($67)));
    };
  };
  var distanceMax = function(dictToAttr) {
    var $68 = AttributeSetter.create("distanceMax");
    var $69 = toAttr(dictToAttr);
    return function($70) {
      return ForceT($68($69($70)));
    };
  };
  var distance = function(dictToAttr) {
    var $71 = AttributeSetter.create("distance");
    var $72 = toAttr(dictToAttr);
    return function($73) {
      return ForceT($71($72($73)));
    };
  };

  // output/PSD3.CodeExplorer.Forces/index.js
  var strength2 = /* @__PURE__ */ strength(toAttrNumber);
  var x5 = /* @__PURE__ */ x4(toAttrNumber);
  var y5 = /* @__PURE__ */ y4(toAttrNumber);
  var radius4 = /* @__PURE__ */ radius3(toAttrNumberFn);
  var theta2 = /* @__PURE__ */ theta(toAttrNumber);
  var distanceMin2 = /* @__PURE__ */ distanceMin(toAttrNumber);
  var distanceMax2 = /* @__PURE__ */ distanceMax(toAttrNumber);
  var x13 = /* @__PURE__ */ x4(toAttrNumberFn);
  var y13 = /* @__PURE__ */ y4(toAttrNumberFn);
  var radius1 = /* @__PURE__ */ radius3(toAttrNumber);
  var forceLibrary = /* @__PURE__ */ (function() {
    var usedModulesOnly = new Just(new ForceFilter("used modules only", datum_.isUsedModule));
    var useGridXY = function(d2) {
      return function(v) {
        return datum_.gridPoint(d2);
      };
    };
    var unusedModulesOnly = new Just(new ForceFilter("unused modules only", datum_.isUnusedModule));
    var treeXY = function(d2) {
      return function(v) {
        return datum_.treePoint(d2);
      };
    };
    var treeExceptLeaves = new Just(new ForceFilter("tree parent nodes only", datum_.isTreeParent));
    var packagesOnly = new Just(new ForceFilter("all packages", datum_.isPackage));
    var modulesOnly = new Just(new ForceFilter("all modules", datum_.isModule));
    var centerXY = function(v) {
      return function(v1) {
        return {
          x: 0,
          y: 0
        };
      };
    };
    return initialize2(foldableArray)(functorArray)([createForce("center")(new RegularForce(ForceCenter.value))(allNodes)([strength2(0.5), x5(0), y5(0)]), createForce("x")(new RegularForce(ForceX.value))(allNodes)([strength2(0.05), x5(0)]), createForce("y")(new RegularForce(ForceY.value))(allNodes)([strength2(0.07), y5(0)]), createForce("collide1")(new RegularForce(ForceCollide.value))(allNodes)([strength2(1), radius4(datum_.collideRadius)]), createForce("collide2")(new RegularForce(ForceCollide.value))(allNodes)([strength2(0.7), radius4(datum_.collideRadiusBig)]), createForce("charge1")(new RegularForce(ForceManyBody.value))(allNodes)([strength2(-50), theta2(0.9), distanceMin2(1), distanceMax2(infinity)]), createForce("charge2")(new RegularForce(ForceManyBody.value))(allNodes)([strength2(-100), theta2(0.9), distanceMin2(1), distanceMax2(400)]), createForce("chargetree")(new RegularForce(ForceManyBody.value))(treeExceptLeaves)([strength2(-100), theta2(0.9), distanceMin2(1), distanceMax2(400)]), createForce("clusterx_M")(new RegularForce(ForceX.value))(modulesOnly)([strength2(0.2), x13(datum_.gridPointX)]), createForce("clustery_M")(new RegularForce(ForceY.value))(modulesOnly)([strength2(0.2), y13(datum_.gridPointY)]), createForce("clusterx_P")(new RegularForce(ForceX.value))(packagesOnly)([strength2(0.8), x13(datum_.gridPointX)]), createForce("clustery_P")(new RegularForce(ForceY.value))(packagesOnly)([strength2(0.8), y13(datum_.gridPointY)]), createForce("htreeNodesX")(new RegularForce(ForceX.value))(new Just(new ForceFilter("tree only", function(d2) {
      return datum_.connected(d2);
    })))([strength2(0.4), x13(datum_.treePointX)]), createForce("htreeNodesY")(new RegularForce(ForceY.value))(new Just(new ForceFilter("tree only", function(d2) {
      return datum_.connected(d2);
    })))([strength2(0.4), y13(datum_.treePointY)]), createForce("vtreeNodesX")(new RegularForce(ForceX.value))(new Just(new ForceFilter("tree only", function(d2) {
      return datum_.connected(d2);
    })))([strength2(0.4), x13(datum_.treePointY)]), createForce("vtreeNodesY")(new RegularForce(ForceY.value))(new Just(new ForceFilter("tree only", function(d2) {
      return datum_.connected(d2);
    })))([strength2(0.4), y13(datum_.treePointX)]), createForce("packageOrbit")(new RegularForce(ForceRadial.value))(packagesOnly)([strength2(0.7), x5(0), y5(0), radius1(500)]), createForce("unusedOrbit")(new RegularForce(ForceRadial.value))(unusedModulesOnly)([strength2(0.8), x5(0), y5(0), radius1(900)]), createForce("moduleOrbit")(new RegularForce(ForceRadial.value))(usedModulesOnly)([strength2(0.8), x5(0), y5(0), radius1(600)]), createLinkForce(Nothing.value)([strength2(0.5), distance(toAttrNumber)(0), numKey(function($19) {
      return toNumber(datum_.id($19));
    })])]);
  })();

  // output/Foreign.Index/foreign.js
  function unsafeReadPropImpl(f, s, key, value15) {
    return value15 == null ? f : s(value15[key]);
  }

  // output/Foreign.Index/index.js
  var unsafeReadProp = function(dictMonad) {
    var fail3 = fail(dictMonad);
    var pure30 = pure(applicativeExceptT(dictMonad));
    return function(k) {
      return function(value15) {
        return unsafeReadPropImpl(fail3(new TypeMismatch("object", typeOf(value15))), pure30, k, value15);
      };
    };
  };
  var readProp = function(dictMonad) {
    return unsafeReadProp(dictMonad);
  };

  // output/Web.Event.Event/foreign.js
  function _currentTarget(e) {
    return e.currentTarget;
  }

  // output/Web.Event.Event/index.js
  var currentTarget = function($5) {
    return toMaybe(_currentTarget($5));
  };

  // output/Web.UIEvent.MouseEvent.EventTypes/index.js
  var click2 = "click";

  // output/Halogen.HTML.Events/index.js
  var map35 = /* @__PURE__ */ map(functorMaybe);
  var composeKleisli2 = /* @__PURE__ */ composeKleisli(bindMaybe);
  var composeKleisliFlipped4 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var readProp2 = /* @__PURE__ */ readProp(monadIdentity);
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var mouseHandler = unsafeCoerce2;
  var handler$prime = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return map35(Action.create)(f(ev));
      });
    };
  };
  var handler2 = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return new Just(new Action(f(ev)));
      });
    };
  };
  var onChange = /* @__PURE__ */ handler2(change);
  var onClick = /* @__PURE__ */ (function() {
    var $15 = handler2(click2);
    return function($16) {
      return $15(mouseHandler($16));
    };
  })();
  var addForeignPropHandler = function(key) {
    return function(prop21) {
      return function(reader) {
        return function(f) {
          var go2 = function(a2) {
            return composeKleisliFlipped4(reader)(readProp2(prop21))(unsafeToForeign(a2));
          };
          return handler$prime(key)(composeKleisli2(currentTarget)(function(e) {
            return either($$const(Nothing.value))(function($85) {
              return Just.create(f($85));
            })(runExcept(go2(e)));
          }));
        };
      };
    };
  };
  var onValueInput = /* @__PURE__ */ addForeignPropHandler(input)("value")(readString2);

  // output/PSD3.Properties/index.js
  var lmap2 = /* @__PURE__ */ lmap(bifunctorTuple);
  var append14 = /* @__PURE__ */ append(semigroupArray);
  var rmap3 = /* @__PURE__ */ rmap2(bifunctorTuple);
  var elem5 = /* @__PURE__ */ elem2(eqString);
  var not4 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean));
  var pure19 = /* @__PURE__ */ pure(applicativeArray);
  var map36 = /* @__PURE__ */ map(functorArray);
  var startsWith = function(str0) {
    return function(str1) {
      return str0 === take2(length5(str0))(str1);
    };
  };
  var extract3 = /* @__PURE__ */ (function() {
    var f = function(v) {
      return function(v1) {
        if (v1 instanceof Property && v1.value0 === "className") {
          return lmap2(function(v2) {
            return append14(v2)(split(" ")(v1.value1));
          })(v);
        }
        ;
        return rmap3(function(v2) {
          return append14(v2)([v1]);
        })(v);
      };
    };
    return foldl2(f)(new Tuple([], []));
  })();
  var css = function($41) {
    return class_(ClassName($41));
  };
  var classifySide = function(str) {
    if (startsWith("t-")(str)) {
      return "top";
    }
    ;
    if (startsWith("r-")(str)) {
      return "right";
    }
    ;
    if (startsWith("b-")(str)) {
      return "bottom";
    }
    ;
    if (startsWith("l-")(str)) {
      return "left";
    }
    ;
    if (startsWith("x-")(str)) {
      return "horizontal";
    }
    ;
    if (startsWith("y-")(str)) {
      return "vertical";
    }
    ;
    if (startsWith("-")(str)) {
      return "all";
    }
    ;
    if (otherwise) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Properties (line 103, column 1 - line 105, column 12): " + [str.constructor.name]);
  };
  var append$prime = function(v) {
    return function(v1) {
      if (v1 === "") {
        return v;
      }
      ;
      return v + ("-" + v1);
    };
  };
  var classifyOverflow = function(str) {
    if (startsWith("x-")(str)) {
      return append$prime("horizontal")(classifyOverflow(drop2(2)(str)));
    }
    ;
    if (startsWith("y-")(str)) {
      return append$prime("vertical")(classifyOverflow(drop2(2)(str)));
    }
    ;
    if (elem5(str)(["auto", "hidden", "visible", "scroll"])) {
      return "";
    }
    ;
    if (otherwise) {
      return str;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Properties (line 116, column 1 - line 118, column 12): " + [str.constructor.name]);
  };
  var classify = function(str) {
    if (startsWith("p")(str) && not4($$null2)(classifySide(drop2(1)(str)))) {
      return append$prime("padding")(classifySide(drop2(1)(str)));
    }
    ;
    if (startsWith("m")(str) && not4($$null2)(classifySide(drop2(1)(str)))) {
      return append$prime("margin")(classifySide(drop2(1)(str)));
    }
    ;
    if (startsWith("-m")(str) && not4($$null2)(classifySide(drop2(2)(str)))) {
      return append$prime("margin")(classifySide(drop2(2)(str)));
    }
    ;
    if (startsWith("min-")(str)) {
      return append$prime("min")(classify(drop2(4)(str)));
    }
    ;
    if (startsWith("max-")(str)) {
      return append$prime("max")(classify(drop2(4)(str)));
    }
    ;
    if (startsWith("w-")(str)) {
      return "width";
    }
    ;
    if (startsWith("h-")(str)) {
      return "height";
    }
    ;
    if (startsWith("overflow-")(str) && classifyOverflow(drop2(9)(str)) !== drop2(9)(str)) {
      return append$prime("overflow")(classifyOverflow(drop2(9)(str)));
    }
    ;
    if (otherwise) {
      return str;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Properties (line 85, column 1 - line 87, column 12): " + [str.constructor.name]);
  };
  var appendIProps = function(ip) {
    return function(ip$prime) {
      var v = extract3(ip);
      var v1 = extract3(ip$prime);
      var classNames = pure19(classes(map36(ClassName)(nubByEq(function(c) {
        return function(c$prime) {
          return classify(c) === classify(c$prime);
        };
      })(append14(v1.value0)(v.value0)))));
      return append14(v.value1)(append14(v1.value1)(classNames));
    };
  };

  // output/PSD3.Button/index.js
  var map37 = /* @__PURE__ */ map(functorArray);
  var append10 = /* @__PURE__ */ append(semigroupArray);
  var rightClasses = /* @__PURE__ */ map37(ClassName)(["rounded-r"]);
  var leftClasses = /* @__PURE__ */ map37(ClassName)(["mr-px", "rounded-l"]);
  var centerVerticalClasses = /* @__PURE__ */ map37(ClassName)(["w-11/12", "rounded", "m-2"]);
  var centerClasses = /* @__PURE__ */ map37(ClassName)(["mr-px"]);
  var buttonSharedClasses = /* @__PURE__ */ map37(ClassName)(["no-outline", "px-4", "py-2", "!active:border-b", "active:border-t", "disabled:opacity-50", "disabled:cursor-default", "!disabled:cursor-pointer"]);
  var buttonPrimaryClasses = /* @__PURE__ */ map37(ClassName)(["bg-blue-88", "border-blue-88", "hover:!disabled:bg-blue-82", "focus:bg-blue-82", "text-white"]);
  var buttonMainClasses = /* @__PURE__ */ append10(buttonSharedClasses)(/* @__PURE__ */ map37(ClassName)(["rounded"]));
  var buttonGroupClasses = /* @__PURE__ */ map37(ClassName)(["flex", "items-center"]);
  var buttonGroupBuilder = function(classes2) {
    return function(iprops) {
      return button(appendIProps([classes(append10(buttonSharedClasses)(classes2))])(iprops));
    };
  };
  var buttonPrimaryCenter = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonPrimaryClasses)(centerClasses));
  var buttonPrimaryLeft = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonPrimaryClasses)(leftClasses));
  var buttonPrimaryRight = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonPrimaryClasses)(rightClasses));
  var buttonGroup = function(iprops) {
    return div2(appendIProps([classes(buttonGroupClasses)])(iprops));
  };
  var buttonGroup_ = /* @__PURE__ */ buttonGroup([]);
  var buttonClasses = /* @__PURE__ */ map37(ClassName)(["bg-grey-50-a20", "border-grey-50-a20", "hover:!disabled:bg-grey-50-a30", "focus:bg-grey-50-a30", "text-black-20"]);
  var buttonLeft = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(leftClasses));
  var buttonRight = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(rightClasses));
  var buttonVertical = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(centerVerticalClasses));
  var buttonCenter = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(centerClasses));
  var buttonBuilder = function(classes2) {
    return function(iprops) {
      return button(appendIProps([classes(append10(buttonMainClasses)(classes2))])(iprops));
    };
  };
  var button2 = /* @__PURE__ */ buttonBuilder(buttonClasses);

  // output/PSD3.CodeExplorer.State/index.js
  var fromFoldable16 = /* @__PURE__ */ fromFoldable5(foldableSet)(ordString);
  var _handle3 = /* @__PURE__ */ _handle(strongForget);
  var prop7 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "staging";
    }
  })()();
  var prop14 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "scene";
    }
  })()();
  var prop23 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "attributes";
    }
  })()();
  var prop33 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "rawdata";
    }
  })()();
  var prop43 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "nodes";
    }
  })()();
  var prop52 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "nodeInitializerFunctions";
    }
  })()();
  var prop62 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "model";
    }
  })()();
  var prop72 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "linksWithForce";
    }
  })()();
  var prop8 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "linksShown";
    }
  })()();
  var prop9 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "linksActive";
    }
  })()();
  var prop10 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "links";
    }
  })()();
  var prop122 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "eventListener";
    }
  })()();
  var prop132 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "selections";
    }
  })()();
  var prop142 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "cssClass";
    }
  })()();
  var prop152 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "chooseNodes";
    }
  })()();
  var prop162 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "activeForces";
    }
  })()();
  var initialScene = function(forceLibrary2) {
    return {
      chooseNodes: isPackage,
      linksShown: $$const(false),
      linksActive: $$const(false),
      activeForces: fromFoldable16(keys3(forceLibrary2)),
      cssClass: "",
      attributes: clusterSceneAttributes,
      nodeInitializerFunctions: []
    };
  };
  var getSimulationVariables = function(state3) {
    var handle = view(_handle3)(state3);
    return readSimulationVariables(handle);
  };
  var _staging = function(dictStrong) {
    return prop7($$Proxy.value)(dictStrong);
  };
  var _scene = function(dictStrong) {
    return prop14($$Proxy.value)(dictStrong);
  };
  var _sceneAttributes = function(dictStrong) {
    var $119 = _scene(dictStrong);
    var $120 = prop23($$Proxy.value)(dictStrong);
    return function($121) {
      return $119($120($121));
    };
  };
  var _rawdata = function(dictStrong) {
    return prop33($$Proxy.value)(dictStrong);
  };
  var _nodes = function(dictStrong) {
    return prop43($$Proxy.value)(dictStrong);
  };
  var _stagingNodes = function(dictStrong) {
    var _staging12 = _staging(dictStrong);
    var _rawdata1 = _rawdata(dictStrong);
    var _nodes1 = _nodes(dictStrong);
    return function(dictChoice) {
      return function($122) {
        return _staging12(_rawdata1(_nodes1($122)));
      };
    };
  };
  var _nodeInitializerFunctions = function(dictStrong) {
    var $123 = _scene(dictStrong);
    var $124 = prop52($$Proxy.value)(dictStrong);
    return function($125) {
      return $123($124($125));
    };
  };
  var _model = function(dictStrong) {
    return prop62($$Proxy.value)(dictStrong);
  };
  var _modelNodes = function(dictStrong) {
    var _model1 = _model(dictStrong);
    var _nodes1 = _nodes(dictStrong);
    return function(dictChoice) {
      var $126 = _Just(dictChoice);
      return function($127) {
        return _model1($126(_nodes1($127)));
      };
    };
  };
  var _linksWithForce = function(dictStrong) {
    return prop72($$Proxy.value)(dictStrong);
  };
  var _stagingLinkFilter = function(dictStrong) {
    var $128 = _staging(dictStrong);
    var $129 = _linksWithForce(dictStrong);
    return function($130) {
      return $128($129($130));
    };
  };
  var _linksShown = function(dictStrong) {
    var $131 = _scene(dictStrong);
    var $132 = prop8($$Proxy.value)(dictStrong);
    return function($133) {
      return $131($132($133));
    };
  };
  var _linksActive = function(dictStrong) {
    var $134 = _scene(dictStrong);
    var $135 = prop9($$Proxy.value)(dictStrong);
    return function($136) {
      return $134($135($136));
    };
  };
  var _links = function(dictStrong) {
    return prop10($$Proxy.value)(dictStrong);
  };
  var _modelLinks = function(dictStrong) {
    var _model1 = _model(dictStrong);
    var _links1 = _links(dictStrong);
    return function(dictChoice) {
      var $137 = _Just(dictChoice);
      return function($138) {
        return _model1($137(_links1($138)));
      };
    };
  };
  var _stagingLinks = function(dictStrong) {
    var _staging12 = _staging(dictStrong);
    var _rawdata1 = _rawdata(dictStrong);
    var _links1 = _links(dictStrong);
    return function(dictChoice) {
      return function($139) {
        return _staging12(_rawdata1(_links1($139)));
      };
    };
  };
  var _eventListener = function(dictStrong) {
    return prop122($$Proxy.value)(dictStrong);
  };
  var _enterselections = function(dictStrong) {
    return prop132($$Proxy.value)(dictStrong);
  };
  var _cssClass = function(dictStrong) {
    var $140 = _scene(dictStrong);
    var $141 = prop142($$Proxy.value)(dictStrong);
    return function($142) {
      return $140($141($142));
    };
  };
  var _chooseNodes = function(dictStrong) {
    var $143 = _scene(dictStrong);
    var $144 = prop152($$Proxy.value)(dictStrong);
    return function($145) {
      return $143($144($145));
    };
  };
  var _activeForces = function(dictStrong) {
    var $146 = _scene(dictStrong);
    var $147 = prop162($$Proxy.value)(dictStrong);
    return function($148) {
      return $146($147($148));
    };
  };

  // output/PSD3.Format/index.js
  var map38 = /* @__PURE__ */ map(functorArray);
  var subHeadingClasses = /* @__PURE__ */ map38(ClassName)(["text-xl", "font-medium", "leading-loose", "flex", "items-center", "mb-6"]);
  var subHeading = function(iprops) {
    return function(html2) {
      return h2(appendIProps([classes(subHeadingClasses)])(iprops))(html2);
    };
  };
  var subHeading_ = /* @__PURE__ */ subHeading([]);
  var mutedClasses = /* @__PURE__ */ map38(ClassName)(["text-grey-50"]);
  var contentHeadingClasses = /* @__PURE__ */ map38(ClassName)(["mb-6", "text-lg", "font-normal", "leading-loose", "flex", "items-center"]);
  var contentHeading = function(iprops) {
    return h3(appendIProps([classes(contentHeadingClasses)])(iprops));
  };
  var contentHeading_ = /* @__PURE__ */ contentHeading([]);
  var captionClasses = /* @__PURE__ */ map38(ClassName)(["block", "font-light", "mb-6", "text-grey-70", "text-sm", "tracking-wide", "uppercase"]);
  var caption2 = function(iprops) {
    return h4(appendIProps([classes(captionClasses)])(iprops));
  };
  var caption_2 = /* @__PURE__ */ caption2([]);

  // output/PSD3.CodeExplorer.HTML/index.js
  var type_19 = /* @__PURE__ */ type_17(isPropInputType);
  var value14 = /* @__PURE__ */ value12(isPropString);
  var show10 = /* @__PURE__ */ show(showNumber);
  var eq4 = /* @__PURE__ */ eq(eqForceStatus);
  var map39 = /* @__PURE__ */ map(functorArray);
  var toUnfoldable4 = /* @__PURE__ */ toUnfoldable(unfoldableArray);
  var _forceLibrary3 = /* @__PURE__ */ _forceLibrary(strongForget);
  var _cssClass2 = /* @__PURE__ */ _cssClass(strongForget);
  var show13 = /* @__PURE__ */ show(showInt);
  var choiceForget2 = /* @__PURE__ */ choiceForget(monoidArray);
  var _stagingLinks2 = /* @__PURE__ */ _stagingLinks(strongForget)(choiceForget2);
  var _stagingNodes2 = /* @__PURE__ */ _stagingNodes(strongForget)(choiceForget2);
  var slider = function(config) {
    var toScale = function(s) {
      return toNumber(fromMaybe(0)(fromString(s))) / 100;
    };
    return [onValueInput(function($27) {
      return ChangeSimConfig.create(config["var"](toScale($27)));
    }), type_19(InputRange.value), id2(config.id), class_("range-slider scaling-slider"), min5(config.min), max6(config.max), step4(new Step(config.step)), value14(show10(config.value))];
  };
  var renderTableForces = function(state3) {
    var renderForceItem = function(v) {
      return div2([classes(["force-item", (function() {
        var $22 = eq4(v.status)(ForceActive.value);
        if ($22) {
          return "force-active";
        }
        ;
        return "force-inactive";
      })()]), onClick($$const(new ToggleForce(v.name)))])([div2([classes(["force-name"])])([text5(v.name)]), div2([classes(["force-type"])])([text5(showType(v.type))]), div2([classes(["force-filter"])])([text5(showForceFilter(v.filter))])]);
    };
    var forceData = map39(snd)(toUnfoldable4(view(_forceLibrary3)(state3)));
    return div_([h3_([text5("Forces")]), div2([classes(["force-grid"])])(map39(renderForceItem)(forceData))]);
  };
  var renderSimState = function(state3) {
    return div2([classes(["spago-sim-state"])])([caption_2([text5("Simulation state")]), p_([text5("CSS Class: " + view(_cssClass2)(state3))]), p_([text5("Links: " + show13(length4(view(_stagingLinks2)(state3))))]), p_([text5("Nodes: " + show13(length4(view(_stagingNodes2)(state3))))])]);
  };
  var isProjectModule = function(v) {
    if (v.nodetype instanceof IsModule) {
      return take2(4)(v.nodetype.value0) === "src/";
    }
    ;
    if (v.nodetype instanceof IsPackage) {
      return true;
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeExplorer.HTML (line 35, column 36 - line 37, column 22): " + [v.nodetype.constructor.name]);
  };
  var renderSimControls = function(state3) {
    var params = getSimulationVariables(state3);
    return div2([classes(["spago-sim-controls"])])([subHeading_([text5("Scene Selection")]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(new Scene(PackageGrid.value)))])([text5("Package Grid")]), buttonPrimaryRight([onClick($$const(new Scene(PackageGraph.value)))])([text5("Package Graph")])])]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(new Scene(new ModuleTree(Horizontal.value))))])([text5("Horiz. Tree")]), buttonPrimaryCenter([onClick($$const(new Scene(new ModuleTree(Vertical.value))))])([text5("Vert. Tree")]), buttonPrimaryRight([onClick($$const(new Scene(new ModuleTree(Radial.value))))])([text5("Radial Tree")])])]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(new Scene(LayerSwarm.value)))])([text5("Layer Swarm")])])]), subHeading_([text5("Simulation Control")]), div2([classes(["control-group"])])([input2(slider({
      "var": Alpha.create,
      id: "alpha-slider",
      min: 0,
      max: 100,
      step: 10,
      value: params.alpha * 100
    })), caption_2([text5("Alpha: " + show10(params.alpha))]), input2(slider({
      "var": AlphaTarget.create,
      id: "alphatarget-slider",
      min: 0,
      max: 100,
      step: 10,
      value: params.alphaTarget * 100
    })), caption_2([text5("AlphaTarget: " + show10(params.alphaTarget))])]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(StopSim.value))])([text5("Stop")]), buttonPrimaryCenter([onClick($$const(new ChangeSimConfig(new AlphaTarget(0.3))))])([text5("Heat")]), buttonPrimaryCenter([onClick($$const(new ChangeSimConfig(new AlphaTarget(0))))])([text5("Cool")]), buttonPrimaryRight([onClick($$const(StartSim.value))])([text5("Start")])])]), subHeading_([text5("Filters")]), div2([classes(["control-group"])])([contentHeading_([text5("Node visibility")]), buttonGroup_([buttonLeft([onClick($$const(new Filter(new NodeFilter(isPackage))))])([text5("Packages")]), buttonCenter([onClick($$const(new Filter(new NodeFilter($$const(true)))))])([text5("All")]), buttonRight([onClick($$const(new Filter(new NodeFilter(isUsedModule))))])([text5("Modules")])])]), div2([classes(["control-group"])])([button2([onClick($$const(new Filter(new NodeFilter(isProjectModule))))])([text5("Only project files")])]), div2([classes(["control-group"])])([contentHeading_([text5("Link Visibility")]), buttonGroup_([buttonLeft([onClick($$const(new Filter(new LinkShowFilter(isM2M_Tree_Link))))])([text5("Tree")]), buttonCenter([onClick($$const(new Filter(new LinkShowFilter(isM2M_Graph_Link))))])([text5("Graph")]), buttonCenter([onClick($$const(new Filter(new LinkShowFilter(isM2P_Link))))])([text5("M2P")]), buttonCenter([onClick($$const(new Filter(new LinkShowFilter(isP2P_Link))))])([text5("P2P")]), buttonRight([onClick($$const(new Filter(new LinkShowFilter($$const(false)))))])([text5("None")])])]), subHeading_([text5("Styling")]), div2([classes(["control-group"])])([buttonGroup_([buttonLeft([onClick($$const(new ChangeStyling(new GraphStyle(clusterSceneAttributes))))])([text5("Cluster")]), buttonCenter([onClick($$const(new ChangeStyling(new GraphStyle(graphSceneAttributes))))])([text5("Graph")]), buttonRight([onClick($$const(new ChangeStyling(new GraphStyle(treeSceneAttributes))))])([text5("Tree")])])])]);
  };
  var render2 = function(state3) {
    return div2([classes(["fullscreen-container", "spago-fullscreen"])])([div2([classes(["floating-panel", "floating-panel--top-left", "floating-panel--small", "spago-controls-panel", "editorial"])])([h2([classes(["floating-panel__title", "spago-controls__title"])])([text5("Controls")]), renderSimControls(state3), renderSimState(state3)]), div2([classes(["floating-panel", "floating-panel--top-right", "floating-panel--large", "spago-forces-panel", "editorial"])])([renderTableForces(state3)]), div2([classes(["svg-container", "fullscreen-viz", "spago-viz-container", view(_cssClass2)(state3)])])([])]);
  };

  // output/PSD3.Spago/index.js
  var _linksShown2 = /* @__PURE__ */ _linksShown(strongForget);
  var _linksActive2 = /* @__PURE__ */ _linksActive(strongForget);
  var _chooseNodes2 = /* @__PURE__ */ _chooseNodes(strongForget);
  var _nodeInitializerFunctions2 = /* @__PURE__ */ _nodeInitializerFunctions(strongForget);
  var discard11 = /* @__PURE__ */ discard(discardUnit);
  var _stagingLinks3 = /* @__PURE__ */ _stagingLinks(strongFn)(choiceFn);
  var choiceForget3 = /* @__PURE__ */ choiceForget(monoidArray);
  var _modelLinks2 = /* @__PURE__ */ _modelLinks(strongForget)(choiceForget3);
  var _stagingLinkFilter2 = /* @__PURE__ */ _stagingLinkFilter(strongFn);
  var _modelNodes2 = /* @__PURE__ */ _modelNodes(strongForget)(choiceForget3);
  var _stagingNodes3 = /* @__PURE__ */ _stagingNodes(strongFn)(choiceFn);
  var liftEffect7 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var _staging2 = /* @__PURE__ */ _staging(strongForget);
  var _eventListener2 = /* @__PURE__ */ _eventListener(strongForget);
  var _sceneAttributes2 = /* @__PURE__ */ _sceneAttributes(strongForget);
  var _activeForces2 = /* @__PURE__ */ _activeForces(strongForget);
  var x6 = /* @__PURE__ */ x(toAttrNumber);
  var discard12 = /* @__PURE__ */ discard11(bindD3SimM);
  var stop2 = /* @__PURE__ */ stop(simulationMD3Selection_D3);
  var actualizeForces2 = /* @__PURE__ */ actualizeForces(simulationMD3Selection_D3);
  var updateSimulation2 = /* @__PURE__ */ updateSimulation(eqInt)(bindD3SimM)(monadEffD3SimM)(selectionMD3Selection_D3S)(simulationMD3Selection_D3);
  var setConfigVariable2 = /* @__PURE__ */ setConfigVariable(simulationMD3Selection_D3);
  var start3 = /* @__PURE__ */ start2(simulationMD3Selection_D3);
  var bind16 = /* @__PURE__ */ bind(bindHalogenM);
  var discard23 = /* @__PURE__ */ discard11(bindHalogenM);
  var modifying2 = /* @__PURE__ */ modifying(monadStateHalogenM);
  var _model2 = /* @__PURE__ */ _model(strongFn);
  var evalEffectSimulation2 = /* @__PURE__ */ evalEffectSimulation(bindHalogenM)(monadStateHalogenM);
  var initialize3 = /* @__PURE__ */ initialize(bindD3SimM)(monadEffD3SimM)(simulationMD3Selection_D3)(selectionMD3Selection_D3S);
  var _staging1 = /* @__PURE__ */ _staging(strongFn);
  var _enterselections2 = /* @__PURE__ */ _enterselections(strongFn);
  var _nodes2 = /* @__PURE__ */ _nodes(strongFn);
  var _links2 = /* @__PURE__ */ _links(strongFn);
  var $$void10 = /* @__PURE__ */ $$void(functorHalogenM);
  var assign3 = /* @__PURE__ */ assign2(monadStateHalogenM);
  var _eventListener1 = /* @__PURE__ */ _eventListener(strongFn);
  var pure20 = /* @__PURE__ */ pure(applicativeHalogenM);
  var _chooseNodes1 = /* @__PURE__ */ _chooseNodes(strongFn);
  var runWithD3_Simulation2 = /* @__PURE__ */ runWithD3_Simulation(bindHalogenM)(monadStateHalogenM);
  var _linksShown1 = /* @__PURE__ */ _linksShown(strongFn);
  var _linksActive1 = /* @__PURE__ */ _linksActive(strongFn);
  var _cssClass3 = /* @__PURE__ */ _cssClass(strongFn);
  var _sceneAttributes1 = /* @__PURE__ */ _sceneAttributes(strongFn);
  var _activeForces1 = /* @__PURE__ */ _activeForces(strongFn);
  var fromFoldable17 = /* @__PURE__ */ fromFoldable5(foldableArray)(ordString);
  var _nodeInitializerFunctions1 = /* @__PURE__ */ _nodeInitializerFunctions(strongFn);
  var member3 = /* @__PURE__ */ member2(ordString);
  var $$delete7 = /* @__PURE__ */ $$delete5(ordString);
  var insert10 = /* @__PURE__ */ insert6(ordString);
  var stageDataFromModel = function(dictMonadState) {
    var Bind1 = dictMonadState.Monad0().Bind1();
    var bind111 = bind(Bind1);
    var use2 = use(dictMonadState);
    var discard32 = discard11(Bind1);
    var assign1 = assign2(dictMonadState);
    return bind111(get(dictMonadState))(function(state3) {
      return bind111(use2(_linksShown2))(function(linksShown) {
        return bind111(use2(_linksActive2))(function(linksActive) {
          return bind111(use2(_chooseNodes2))(function(chooseNodes) {
            return bind111(use2(_nodeInitializerFunctions2))(function(nodeInitializerFunctions) {
              return discard32(assign1(_stagingLinks3)(filter2(linksShown)(view(_modelLinks2)(state3))))(function() {
                return discard32(assign1(_stagingLinkFilter2)(linksActive))(function() {
                  var rawnodes = filter2(chooseNodes)(view(_modelNodes2)(state3));
                  var initializedNodes = foldl2(function(b2) {
                    return function(a2) {
                      return a2(b2);
                    };
                  })(rawnodes)(nodeInitializerFunctions);
                  return assign1(_stagingNodes3)(initializedNodes);
                });
              });
            });
          });
        });
      });
    });
  };
  var simulationEvent = function(l) {
    return onMouseEventEffectful(MouseClick.value)(function(e) {
      return function(d2) {
        return function(t) {
          return liftEffect7(notify(l)(new EventFromVizualization(getVizEventFromClick(e)(d2)(t))));
        };
      };
    });
  };
  var runSimulation = function(dictMonadEffect) {
    var Bind1 = dictMonadEffect.Monad0().Bind1();
    var discard32 = discard11(Bind1);
    var bind111 = bind(Bind1);
    var runWithD3_Simulation1 = runWithD3_Simulation(Bind1);
    return function(dictMonadState) {
      var use2 = use(dictMonadState);
      var runWithD3_Simulation22 = runWithD3_Simulation1(dictMonadState)(dictMonadEffect);
      return discard32(stageDataFromModel(dictMonadState))(function() {
        return bind111(use2(_staging2))(function(staging) {
          return bind111(use2(_eventListener2))(function(maybeListener) {
            return bind111(use2(_sceneAttributes2))(function(sceneAttributes) {
              return bind111(use2(_activeForces2))(function(activeForces) {
                var callback = (function() {
                  if (maybeListener instanceof Just) {
                    return simulationEvent(maybeListener.value0);
                  }
                  ;
                  if (maybeListener instanceof Nothing) {
                    return x6(0);
                  }
                  ;
                  throw new Error("Failed pattern match at PSD3.Spago (line 276, column 18 - line 278, column 25): " + [maybeListener.constructor.name]);
                })();
                var attributesWithCallback = {
                  labels: sceneAttributes.labels,
                  circles: cons3(callback)(sceneAttributes.circles)
                };
                return runWithD3_Simulation22(discard12(stop2)(function() {
                  return discard12(actualizeForces2(activeForces))(function() {
                    return discard12(updateSimulation2(staging)(attributesWithCallback))(function() {
                      return discard12(setConfigVariable2(new Alpha(1)))(function() {
                        return start3;
                      });
                    });
                  });
                }));
              });
            });
          });
        });
      });
    };
  };
  var handleAction2 = function(dictMonadAff) {
    var liftAff2 = liftAff(monadAffHalogenM(dictMonadAff));
    var monadEffectHalogenM2 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    var evalEffectSimulation1 = evalEffectSimulation2(monadEffectHalogenM2);
    var liftEffect12 = liftEffect(monadEffectHalogenM2);
    var runSimulation1 = runSimulation(monadEffectHalogenM2)(monadStateHalogenM);
    var runWithD3_Simulation1 = runWithD3_Simulation2(monadEffectHalogenM2);
    return function(v) {
      if (v instanceof Initialize3) {
        return bind16(liftAff2(readModelData))(function(v1) {
          return discard23(modifying2(_model2)($$const(v1)))(function() {
            return bind16(evalEffectSimulation1(initialize3))(function(openSelections) {
              return discard23(modifying2(function($140) {
                return _staging1(_enterselections2(_nodes2($140)));
              })($$const(openSelections.nodes)))(function() {
                return discard23(modifying2(function($141) {
                  return _staging1(_enterselections2(_links2($141)));
                })($$const(openSelections.links)))(function() {
                  return bind16(liftEffect12(create3))(function(v2) {
                    return discard23($$void10(subscribe2(v2.emitter)))(function() {
                      return discard23(assign3(_eventListener1)(new Just(v2.listener)))(function() {
                        return pure20(unit);
                      });
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Finalize2) {
        return pure20(unit);
      }
      ;
      if (v instanceof EventFromVizualization) {
        if (v.value0.value0 instanceof IsPackage) {
          return handleAction2(dictMonadAff)(new ToggleChildrenOfNode(v.value0.value1));
        }
        ;
        if (v.value0.value0 instanceof IsModule) {
          return handleAction2(dictMonadAff)(new SpotlightNode(v.value0.value1));
        }
        ;
        throw new Error("Failed pattern match at PSD3.Spago (line 115, column 5 - line 117, column 68): " + [v.value0.constructor.name]);
      }
      ;
      if (v instanceof ToggleChildrenOfNode) {
        return discard23(assign3(_chooseNodes1)(isPackageOrVisibleModule(v.value0)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof UnToggleChildrenOfNode) {
        return discard23(assign3(_chooseNodes1)(isPackage))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof SpotlightNode) {
        return runWithD3_Simulation1(stop2);
      }
      ;
      if (v instanceof Scene && v.value0 instanceof PackageGrid) {
        return discard23(assign3(_chooseNodes1)(allNodes2))(function() {
          return discard23(assign3(_linksShown1)(isM2P_Link))(function() {
            return discard23(assign3(_linksActive1)($$const(true)))(function() {
              return discard23(assign3(_cssClass3)("cluster"))(function() {
                return discard23(assign3(_sceneAttributes1)(clusterSceneAttributes))(function() {
                  return discard23(assign3(_activeForces1)(fromFoldable17(["clusterx_P", "clustery_P", "clusterx_M", "clustery_M", "collide2"])))(function() {
                    return discard23(assign3(_nodeInitializerFunctions1)([unpinAllNodes, packageNodesToGridXY, moduleNodesToContainerXY]))(function() {
                      return runSimulation1;
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Scene && v.value0 instanceof PackageGraph) {
        return discard23(assign3(_chooseNodes1)(isPackage))(function() {
          return discard23(assign3(_linksShown1)(isP2P_Link))(function() {
            return discard23(assign3(_linksActive1)(sourcePackageIs("my-project")))(function() {
              return discard23(assign3(_activeForces1)(fromFoldable17(["center", "collide2", "charge2", "packageOrbit", linksForceName])))(function() {
                return discard23(assign3(_cssClass3)("graph"))(function() {
                  return discard23(assign3(_sceneAttributes1)(graphSceneAttributes))(function() {
                    return discard23(assign3(_nodeInitializerFunctions1)([unpinAllNodes, packagesNodesToPhyllotaxis, fixNamedNodeTo("my-project")({
                      x: 0,
                      y: 0
                    })]))(function() {
                      return runSimulation1;
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Scene && v.value0 instanceof LayerSwarm) {
        return discard23(assign3(_chooseNodes1)(isUsedModule))(function() {
          return discard23(assign3(_linksShown1)(isM2M_Tree_Link))(function() {
            return discard23(assign3(_linksActive1)($$const(true)))(function() {
              return discard23(assign3(_cssClass3)("tree"))(function() {
                return discard23(assign3(_sceneAttributes1)(treeSceneAttributes))(function() {
                  return discard23(assign3(_activeForces1)(fromFoldable17(["htreeNodesX", "collide1", "y", linksForceName])))(function() {
                    return discard23(assign3(_nodeInitializerFunctions1)([unpinAllNodes]))(function() {
                      return runSimulation1;
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Scene && (v.value0 instanceof ModuleTree && v.value0.value0 instanceof Radial)) {
        return discard23(assign3(_chooseNodes1)(isUsedModule))(function() {
          return discard23(assign3(_linksShown1)(isM2M_Tree_Link))(function() {
            return discard23(assign3(_linksActive1)($$const(true)))(function() {
              return discard23(assign3(_cssClass3)("tree radial"))(function() {
                return discard23(assign3(_sceneAttributes1)(treeSceneAttributes))(function() {
                  return discard23(assign3(_activeForces1)(fromFoldable17(["center", "collide2", "chargetree", "charge2", linksForceName])))(function() {
                    return discard23(assign3(_nodeInitializerFunctions1)([unpinAllNodes, treeNodesToTreeXY_R, fixNamedNodeTo("Main")({
                      x: 0,
                      y: 0
                    })]))(function() {
                      return runSimulation1;
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Scene && (v.value0 instanceof ModuleTree && v.value0.value0 instanceof Horizontal)) {
        return discard23(assign3(_chooseNodes1)(isUsedModule))(function() {
          return discard23(assign3(_linksShown1)(isM2M_Tree_Link))(function() {
            return discard23(assign3(_linksActive1)($$const(false)))(function() {
              return discard23(assign3(_cssClass3)("tree horizontal"))(function() {
                return discard23(assign3(_sceneAttributes1)(treeSceneAttributes))(function() {
                  return discard23(assign3(_activeForces1)(fromFoldable17(["htreeNodesX", "htreeNodesY", "charge1", "collide2"])))(function() {
                    return discard23(assign3(_nodeInitializerFunctions1)([unpinAllNodes]))(function() {
                      return runSimulation1;
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Scene && (v.value0 instanceof ModuleTree && v.value0.value0 instanceof Vertical)) {
        return discard23(assign3(_chooseNodes1)(isUsedModule))(function() {
          return discard23(assign3(_linksShown1)(isM2M_Tree_Link))(function() {
            return discard23(assign3(_linksActive1)($$const(false)))(function() {
              return discard23(assign3(_cssClass3)("tree vertical"))(function() {
                return discard23(assign3(_sceneAttributes1)(treeSceneAttributes))(function() {
                  return discard23(assign3(_activeForces1)(fromFoldable17(["vtreeNodesX", "vtreeNodesY", "charge1", "collide2"])))(function() {
                    return discard23(assign3(_nodeInitializerFunctions1)([unpinAllNodes]))(function() {
                      return runSimulation1;
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof ToggleForce) {
        return discard23(modifying2(_activeForces1)(function(forces) {
          var $127 = member3(v.value0)(forces);
          if ($127) {
            return $$delete7(v.value0)(forces);
          }
          ;
          return insert10(v.value0)(forces);
        }))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Filter && v.value0 instanceof LinkShowFilter) {
        return discard23(assign3(_linksShown1)(v.value0.value0))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Filter && v.value0 instanceof LinkForceFilter) {
        return discard23(assign3(_linksActive1)(v.value0.value0))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Filter && v.value0 instanceof NodeFilter) {
        return discard23(assign3(_chooseNodes1)(v.value0.value0))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof ChangeStyling && v.value0 instanceof TopLevelCSS) {
        return assign3(_cssClass3)(v.value0.value0);
      }
      ;
      if (v instanceof ChangeStyling && v.value0 instanceof GraphStyle) {
        return discard23(assign3(_sceneAttributes1)(v.value0.value0))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof ChangeSimConfig) {
        return runWithD3_Simulation1(setConfigVariable2(v.value0));
      }
      ;
      if (v instanceof StartSim) {
        return runWithD3_Simulation1(discard12(setConfigVariable2(new Alpha(1)))(function() {
          return start3;
        }));
      }
      ;
      if (v instanceof StopSim) {
        return runWithD3_Simulation1(discard12(setConfigVariable2(new Alpha(0)))(function() {
          return stop2;
        }));
      }
      ;
      throw new Error("Failed pattern match at PSD3.Spago (line 91, column 16 - line 233, column 11): " + [v.constructor.name]);
    };
  };
  var component2 = function(dictMonadAff) {
    var initialState2 = {
      model: Nothing.value,
      staging: {
        selections: {
          nodes: Nothing.value,
          links: Nothing.value
        },
        linksWithForce: $$const(true),
        rawdata: {
          nodes: [],
          links: []
        }
      },
      simulation: initialSimulationState(forceLibrary),
      scene: initialScene(forceLibrary),
      eventListener: Nothing.value
    };
    return mkComponent({
      initialState: $$const(initialState2),
      render: render2,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        handleAction: handleAction2(dictMonadAff),
        initialize: new Just(Initialize3.value),
        finalize: new Just(Finalize2.value)
      })
    });
  };

  // output/PSD3.CodeExplorerWrapper/index.js
  var slot_2 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "spagoComponent";
    }
  })(ordUnit);
  var identity15 = /* @__PURE__ */ identity(categoryFn);
  var _spagoComponent = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render3 = function(dictMonadAff) {
    var component13 = component2(dictMonadAff);
    return function(v) {
      return div2([classes(["fullscreen-page-wrapper", "spago-page-wrapper"])])([slot_2(_spagoComponent)(unit)(component13)(unit)]);
    };
  };
  var component3 = function(dictMonadAff) {
    return mkComponent({
      initialState: identity15,
      render: render3(dictMonadAff),
      "eval": mkEval(defaultEval)
    });
  };

  // output/PSD3.Hierarchies/index.js
  var pure21 = /* @__PURE__ */ pure(applicativeHalogenM);
  var modify_4 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var HorizontalTree = /* @__PURE__ */ (function() {
    function HorizontalTree2() {
    }
    ;
    HorizontalTree2.value = new HorizontalTree2();
    return HorizontalTree2;
  })();
  var VerticalTree = /* @__PURE__ */ (function() {
    function VerticalTree2() {
    }
    ;
    VerticalTree2.value = new VerticalTree2();
    return VerticalTree2;
  })();
  var RadialTree = /* @__PURE__ */ (function() {
    function RadialTree2() {
    }
    ;
    RadialTree2.value = new RadialTree2();
    return RadialTree2;
  })();
  var CirclePacking = /* @__PURE__ */ (function() {
    function CirclePacking2() {
    }
    ;
    CirclePacking2.value = new CirclePacking2();
    return CirclePacking2;
  })();
  var Treemap = /* @__PURE__ */ (function() {
    function Treemap2() {
    }
    ;
    Treemap2.value = new Treemap2();
    return Treemap2;
  })();
  var Initialize4 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var SwitchLayout = /* @__PURE__ */ (function() {
    function SwitchLayout2(value0) {
      this.value0 = value0;
    }
    ;
    SwitchLayout2.create = function(value0) {
      return new SwitchLayout2(value0);
    };
    return SwitchLayout2;
  })();
  var showHierarchyLayout = {
    show: function(v) {
      if (v instanceof HorizontalTree) {
        return "Horizontal Tree";
      }
      ;
      if (v instanceof VerticalTree) {
        return "Vertical Tree";
      }
      ;
      if (v instanceof RadialTree) {
        return "Radial Tree";
      }
      ;
      if (v instanceof CirclePacking) {
        return "Circle Packing";
      }
      ;
      if (v instanceof Treemap) {
        return "Treemap";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Hierarchies (line 29, column 1 - line 34, column 27): " + [v.constructor.name]);
    }
  };
  var show11 = /* @__PURE__ */ show(showHierarchyLayout);
  var renderLayoutPlaceholder = function(layout) {
    return div2([classes(["layout-placeholder"])])([text5("Placeholder for " + (show11(layout) + " layout")), p_([text5("Visualization will be implemented here")])]);
  };
  var render4 = function(state3) {
    return div2([classes(["fullscreen-container", "hierarchies-page"])])([div2([classes(["floating-panel", "floating-panel--top-left", "hierarchies-controls"])])([h2([classes(["floating-panel__title"])])([text5("Hierarchy Layouts")]), p([classes(["hierarchies-description"])])([text5("Explore different ways to visualize the same hierarchical data from our codebase.")]), div2([classes(["layout-controls"])])([h3_([text5("Tree Layouts")]), buttonGroup_([buttonLeft([onClick($$const(new SwitchLayout(HorizontalTree.value)))])([text5("Horizontal")]), buttonCenter([onClick($$const(new SwitchLayout(VerticalTree.value)))])([text5("Vertical")]), buttonRight([onClick($$const(new SwitchLayout(RadialTree.value)))])([text5("Radial")])]), h3_([text5("Other Layouts")]), buttonGroup_([buttonLeft([onClick($$const(new SwitchLayout(CirclePacking.value)))])([text5("Circle Packing")]), buttonRight([onClick($$const(new SwitchLayout(Treemap.value)))])([text5("Treemap")])])]), div2([classes(["current-layout-info"])])([p_([text5("Current: " + show11(state3.currentLayout))])])]), div2([classes(["svg-container", "fullscreen-viz", "hierarchies-viz"])])([renderLayoutPlaceholder(state3.currentLayout)])]);
  };
  var handleAction3 = function(v) {
    if (v instanceof Initialize4) {
      return pure21(unit);
    }
    ;
    if (v instanceof SwitchLayout) {
      return modify_4(function(v1) {
        var $13 = {};
        for (var $14 in v1) {
          if ({}.hasOwnProperty.call(v1, $14)) {
            $13[$14] = v1[$14];
          }
          ;
        }
        ;
        $13.currentLayout = v.value0;
        return $13;
      });
    }
    ;
    throw new Error("Failed pattern match at PSD3.Hierarchies (line 110, column 16 - line 114, column 43): " + [v.constructor.name]);
  };
  var component4 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          currentLayout: HorizontalTree.value
        };
      },
      render: render4,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction3,
        initialize: new Just(Initialize4.value)
      })
    });
  })();

  // output/PSD3.Types/index.js
  var About = /* @__PURE__ */ (function() {
    function About2() {
    }
    ;
    About2.value = new About2();
    return About2;
  })();
  var Tutorial = /* @__PURE__ */ (function() {
    function Tutorial2() {
    }
    ;
    Tutorial2.value = new Tutorial2();
    return Tutorial2;
  })();
  var Hierarchies = /* @__PURE__ */ (function() {
    function Hierarchies2() {
    }
    ;
    Hierarchies2.value = new Hierarchies2();
    return Hierarchies2;
  })();
  var Interpreters = /* @__PURE__ */ (function() {
    function Interpreters2() {
    }
    ;
    Interpreters2.value = new Interpreters2();
    return Interpreters2;
  })();
  var CodeExplorer = /* @__PURE__ */ (function() {
    function CodeExplorer2() {
    }
    ;
    CodeExplorer2.value = new CodeExplorer2();
    return CodeExplorer2;
  })();
  var NotFound = /* @__PURE__ */ (function() {
    function NotFound2() {
    }
    ;
    NotFound2.value = new NotFound2();
    return NotFound2;
  })();

  // output/Data.Semiring.Free/index.js
  var append15 = /* @__PURE__ */ append(semigroupList);
  var bind17 = /* @__PURE__ */ bind(bindList);
  var pure23 = /* @__PURE__ */ pure(applicativeList);
  var semiringFree = /* @__PURE__ */ (function() {
    return {
      add: function(v) {
        return function(v1) {
          return append15(v)(v1);
        };
      },
      zero: Nil.value,
      mul: function(v) {
        return function(v1) {
          return bind17(v)(function(xs) {
            return bind17(v1)(function(ys) {
              return pure23(append15(xs)(ys));
            });
          });
        };
      },
      one: singleton3(Nil.value)
    };
  })();
  var free = function(a2) {
    return singleton3(singleton3(a2));
  };

  // output/Data.Validation.Semiring/index.js
  var V = function(x8) {
    return x8;
  };
  var validation = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Validation.Semiring (line 49, column 1 - line 49, column 84): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var invalid2 = function($113) {
    return V(Left.create($113));
  };
  var functorV = functorEither;
  var applyV = function(dictSemiring) {
    var mul3 = mul(dictSemiring);
    return {
      apply: function(v) {
        return function(v1) {
          if (v instanceof Left && v1 instanceof Left) {
            return new Left(mul3(v.value0)(v1.value0));
          }
          ;
          if (v instanceof Left) {
            return new Left(v.value0);
          }
          ;
          if (v1 instanceof Left) {
            return new Left(v1.value0);
          }
          ;
          if (v instanceof Right && v1 instanceof Right) {
            return new Right(v.value0(v1.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Validation.Semiring (line 90, column 1 - line 94, column 54): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorV;
      }
    };
  };
  var applicativeV = function(dictSemiring) {
    var applyV1 = applyV(dictSemiring);
    return {
      pure: function($121) {
        return V(Right.create($121));
      },
      Apply0: function() {
        return applyV1;
      }
    };
  };
  var altV = function(dictSemiring) {
    var add2 = add(dictSemiring);
    return {
      alt: function(v) {
        return function(v1) {
          if (v instanceof Left && v1 instanceof Left) {
            return new Left(add2(v.value0)(v1.value0));
          }
          ;
          if (v instanceof Left) {
            return v1;
          }
          ;
          if (v instanceof Right) {
            return new Right(v.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Validation.Semiring (line 105, column 1 - line 108, column 36): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorV;
      }
    };
  };

  // output/Routing.Match.Error/index.js
  var UnexpectedPath = /* @__PURE__ */ (function() {
    function UnexpectedPath2(value0) {
      this.value0 = value0;
    }
    ;
    UnexpectedPath2.create = function(value0) {
      return new UnexpectedPath2(value0);
    };
    return UnexpectedPath2;
  })();
  var ExpectedBoolean = /* @__PURE__ */ (function() {
    function ExpectedBoolean2() {
    }
    ;
    ExpectedBoolean2.value = new ExpectedBoolean2();
    return ExpectedBoolean2;
  })();
  var ExpectedEnd = /* @__PURE__ */ (function() {
    function ExpectedEnd2() {
    }
    ;
    ExpectedEnd2.value = new ExpectedEnd2();
    return ExpectedEnd2;
  })();
  var ExpectedNumber = /* @__PURE__ */ (function() {
    function ExpectedNumber2() {
    }
    ;
    ExpectedNumber2.value = new ExpectedNumber2();
    return ExpectedNumber2;
  })();
  var ExpectedInt = /* @__PURE__ */ (function() {
    function ExpectedInt2() {
    }
    ;
    ExpectedInt2.value = new ExpectedInt2();
    return ExpectedInt2;
  })();
  var ExpectedString = /* @__PURE__ */ (function() {
    function ExpectedString2() {
    }
    ;
    ExpectedString2.value = new ExpectedString2();
    return ExpectedString2;
  })();
  var ExpectedQuery = /* @__PURE__ */ (function() {
    function ExpectedQuery2() {
    }
    ;
    ExpectedQuery2.value = new ExpectedQuery2();
    return ExpectedQuery2;
  })();
  var ExpectedPathPart = /* @__PURE__ */ (function() {
    function ExpectedPathPart2() {
    }
    ;
    ExpectedPathPart2.value = new ExpectedPathPart2();
    return ExpectedPathPart2;
  })();
  var KeyNotFound = /* @__PURE__ */ (function() {
    function KeyNotFound2(value0) {
      this.value0 = value0;
    }
    ;
    KeyNotFound2.create = function(value0) {
      return new KeyNotFound2(value0);
    };
    return KeyNotFound2;
  })();
  var Fail = /* @__PURE__ */ (function() {
    function Fail2(value0) {
      this.value0 = value0;
    }
    ;
    Fail2.create = function(value0) {
      return new Fail2(value0);
    };
    return Fail2;
  })();
  var showMatchError = function(err) {
    if (err instanceof UnexpectedPath) {
      return "expected path part: " + err.value0;
    }
    ;
    if (err instanceof KeyNotFound) {
      return "key: " + (err.value0 + " has not found in query part");
    }
    ;
    if (err instanceof ExpectedQuery) {
      return "expected query - found path";
    }
    ;
    if (err instanceof ExpectedNumber) {
      return "expected number";
    }
    ;
    if (err instanceof ExpectedInt) {
      return "expected int";
    }
    ;
    if (err instanceof ExpectedBoolean) {
      return "expected boolean";
    }
    ;
    if (err instanceof ExpectedEnd) {
      return "expected end";
    }
    ;
    if (err instanceof ExpectedString) {
      return "expected string var";
    }
    ;
    if (err instanceof ExpectedPathPart) {
      return "expected path part, found query";
    }
    ;
    if (err instanceof Fail) {
      return "match error: " + err.value0;
    }
    ;
    throw new Error("Failed pattern match at Routing.Match.Error (line 19, column 3 - line 29, column 39): " + [err.constructor.name]);
  };

  // output/Routing.Types/index.js
  var Path2 = /* @__PURE__ */ (function() {
    function Path3(value0) {
      this.value0 = value0;
    }
    ;
    Path3.create = function(value0) {
      return new Path3(value0);
    };
    return Path3;
  })();
  var Query2 = /* @__PURE__ */ (function() {
    function Query3(value0) {
      this.value0 = value0;
    }
    ;
    Query3.create = function(value0) {
      return new Query3(value0);
    };
    return Query3;
  })();

  // output/Routing.Match/index.js
  var pure24 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeV(semiringFree));
  var foldl6 = /* @__PURE__ */ foldl(foldableList);
  var bind18 = /* @__PURE__ */ bind(bindList);
  var map40 = /* @__PURE__ */ map(functorList);
  var unwrap8 = /* @__PURE__ */ unwrap();
  var pure110 = /* @__PURE__ */ pure(applicativeList);
  var mul2 = /* @__PURE__ */ mul(semiringFree);
  var identity16 = /* @__PURE__ */ identity(categoryFn);
  var one2 = /* @__PURE__ */ one(semiringFree);
  var alt6 = /* @__PURE__ */ alt(/* @__PURE__ */ altV(semiringFree));
  var runMatch = function(v) {
    return function(route) {
      var foldErrors = function(errs) {
        return new Left(foldl6(function(b2) {
          return function(a2) {
            return a2 + ("\n" + b2);
          };
        })("")(bind18(map40(reverse)(unwrap8(errs)))(function(es) {
          return pure110(foldl6(function(b2) {
            return function(a2) {
              return a2 + (";" + b2);
            };
          })("")(map40(showMatchError)(es)));
        })));
      };
      return validation(foldErrors)(function($109) {
        return Right.create(snd($109));
      })(v(route));
    };
  };
  var matchFunctor = {
    map: function(fn) {
      return function(v) {
        return function(r) {
          return validation(invalid2)(function(v1) {
            return pure24(new Tuple(v1.value0, fn(v1.value1)));
          })(v(r));
        };
      };
    }
  };
  var matchApply = {
    apply: function(v) {
      return function(v1) {
        var processFnRes = function(v2) {
          return validation(invalid2)(function(v3) {
            return pure24(new Tuple(v3.value0, v2.value1(v3.value1)));
          })(v1(v2.value0));
        };
        var processFnErr = function(r) {
          return function(err) {
            return invalid2(mul2(err)(validation(identity16)($$const(one2))(v1(r))));
          };
        };
        return function(r) {
          return validation(processFnErr(r))(processFnRes)(v(r));
        };
      };
    },
    Functor0: function() {
      return matchFunctor;
    }
  };
  var matchApplicative = {
    pure: function(a2) {
      return function(r) {
        return pure24(new Tuple(r, a2));
      };
    },
    Apply0: function() {
      return matchApply;
    }
  };
  var matchAlt = {
    alt: function(v) {
      return function(v1) {
        return function(r) {
          return alt6(v(r))(v1(r));
        };
      };
    },
    Functor0: function() {
      return matchFunctor;
    }
  };
  var lit = function(input3) {
    return function(route) {
      if (route instanceof Cons && (route.value0 instanceof Path2 && route.value0.value0 === input3)) {
        return pure24(new Tuple(route.value1, unit));
      }
      ;
      if (route instanceof Cons && route.value0 instanceof Path2) {
        return invalid2(free(new UnexpectedPath(input3)));
      }
      ;
      return invalid2(free(ExpectedPathPart.value));
    };
  };
  var root = /* @__PURE__ */ lit("");
  var end = function(route) {
    if (route instanceof Nil) {
      return pure24(new Tuple(Nil.value, unit));
    }
    ;
    return invalid2(free(ExpectedEnd.value));
  };

  // output/PSD3.RoutingDSL/index.js
  var applyFirst2 = /* @__PURE__ */ applyFirst(matchApply);
  var voidRight2 = /* @__PURE__ */ voidRight(matchFunctor);
  var alt7 = /* @__PURE__ */ alt(matchAlt);
  var tutorial = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Tutorial.value)(lit("tutorial")))(end);
  })();
  var routeToPath = function(v) {
    if (v instanceof About) {
      return "/about";
    }
    ;
    if (v instanceof Tutorial) {
      return "/tutorial";
    }
    ;
    if (v instanceof Hierarchies) {
      return "/hierarchies";
    }
    ;
    if (v instanceof Interpreters) {
      return "/interpreters";
    }
    ;
    if (v instanceof CodeExplorer) {
      return "/code-explorer";
    }
    ;
    if (v instanceof NotFound) {
      return "/not-found";
    }
    ;
    throw new Error("Failed pattern match at PSD3.RoutingDSL (line 59, column 1 - line 59, column 31): " + [v.constructor.name]);
  };
  var rootRedirect = /* @__PURE__ */ (function() {
    return voidRight2(About.value)(end);
  })();
  var notFound = /* @__PURE__ */ (function() {
    return pure(matchApplicative)(NotFound.value);
  })();
  var interpreters = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Interpreters.value)(lit("interpreters")))(end);
  })();
  var hierarchies = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Hierarchies.value)(lit("hierarchies")))(end);
  })();
  var codeExplorer = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(CodeExplorer.value)(lit("code-explorer")))(end);
  })();
  var about = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(About.value)(lit("about")))(end);
  })();
  var routes = /* @__PURE__ */ alt7(tutorial)(/* @__PURE__ */ alt7(hierarchies)(/* @__PURE__ */ alt7(interpreters)(/* @__PURE__ */ alt7(codeExplorer)(/* @__PURE__ */ alt7(about)(/* @__PURE__ */ alt7(rootRedirect)(notFound))))));
  var routing = /* @__PURE__ */ applySecond(matchApply)(root)(routes);

  // output/PSD3.Interpreters/index.js
  var render5 = function(v) {
    return div2([classes(["interpreters-page"])])([div2([classes(["interpreters-page__header"])])([h1([classes(["interpreters-page__title"])])([text5("Alternative Interpreters")]), p([classes(["interpreters-page__subtitle"])])([text5("Demonstrating the Finally Tagless pattern")])]), div2([classes(["interpreters-page__content"])])([div2([classes(["interpreters-page__about"])])([h2_([text5("What is Finally Tagless?")]), p_([text5("Finally Tagless is an advanced functional programming pattern that allows the same code to be interpreted in multiple ways. Instead of tying your code to a specific implementation, you write against a set of type class capabilities.")]), p_([text5("This library demonstrates this by providing multiple interpreters for the same visualization code:")])]), div2([classes(["interpreters-page__grid"])])([div2([classes(["interpreter-card"])])([h3_([text5("MetaTree Visualizer")]), p_([text5("Instead of rendering to SVG, this interpreter visualizes the abstract syntax tree of the visualization itself as a tree diagram.")]), p_([text5("This meta-visualization shows how the same code can be interpreted in completely different ways - a key advantage of the Finally Tagless approach.")]), p([classes(["interpreter-card__note"])])([text5("(MetaTree visualization will appear on this page)")])]), div2([classes(["interpreter-card"])])([h3_([text5("String Generator")]), p_([text5("This interpreter takes visualization code and generates human-readable text descriptions or code snippets.")]), p_([text5("Shows how the same high-level visualization definition can be used for documentation generation, code analysis, or teaching - all without modifying the original visualization code.")]), p([classes(["interpreter-card__note"])])([text5("(String generator visualization will appear on this page)")])])]), div2([classes(["interpreters-page__explanation"])])([h3_([text5("Why Multiple Interpreters?")]), p_([text5("The ability to run the same code through different interpreters provides several benefits:")]), ul_([li_([text5("Debugging: Visualize the structure of your visualization")]), li_([text5("Documentation: Generate descriptions automatically")]), li_([text5("Testing: Verify structure without rendering")]), li_([text5("Flexibility: Add new interpretations without changing existing code")])]), p_([a([href4("#" + routeToPath(About.value))])([text5("\u2190 Back to About")])])])])]);
  };
  var component5 = /* @__PURE__ */ mkComponent({
    initialState: /* @__PURE__ */ identity(categoryFn),
    render: render5,
    "eval": /* @__PURE__ */ mkEval(defaultEval)
  });

  // output/D3.Viz.GUP/index.js
  var andThen2 = /* @__PURE__ */ andThen(semigroupArray);
  var classed4 = /* @__PURE__ */ classed(toAttrString);
  var fill3 = /* @__PURE__ */ fill(toAttrString);
  var y6 = /* @__PURE__ */ y(toAttrNumber);
  var x7 = /* @__PURE__ */ x(toAttrNumberFnI);
  var text8 = /* @__PURE__ */ text6(toAttrStringFn);
  var fontSize2 = /* @__PURE__ */ fontSize(toAttrNumber);
  var discard13 = /* @__PURE__ */ discard(discardUnit);
  var keyFunction = unsafeCoerce2;
  var indexIsNumber = unsafeCoerce2;
  var datumIsChar = unsafeCoerce2;
  var exGeneralUpdatePattern = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind22 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var pure30 = pure(Monad0.Applicative0());
    var openSelection2 = openSelection(dictSelectionM);
    var updateJoin2 = updateJoin(dictSelectionM);
    var discard19 = discard13(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    return function(selector) {
      var xFromIndex2 = function(v) {
        return function(i2) {
          return 50 + indexIsNumber(i2) * 48;
        };
      };
      var transition = transitionWithDuration(2e3);
      var update3 = andThen2([classed4("update"), fill3("gray"), y6(200)])(to(transition)([x7(xFromIndex2)]));
      var exit = andThen2([classed4("exit"), fill3("brown")])(to(transition)([y6(400), remove]));
      var enter = andThen2([classed4("enter"), fill3("green"), x7(xFromIndex2), y6(0), text8(function($24) {
        return singleton7(datumIsChar($24));
      }), fontSize2(96)])(to(transition)([y6(200)]));
      return bind22(attach2(selector))(function(root2) {
        return bind22(appendTo2(root2)(Svg.value)([viewBox(0)(0)(650)(650), classed4("d3svg gup")]))(function(svg2) {
          return bind22(appendTo2(svg2)(Group.value)([]))(function(letterGroup) {
            return pure30(function(letters) {
              return bind22(openSelection2(letterGroup)("text"))(function(enterSelection) {
                return bind22(updateJoin2(enterSelection)(Text2.value)(letters)(keyFunction))(function(updateSelections) {
                  return discard19(setAttributes2(updateSelections.exit)(exit))(function() {
                    return discard19(setAttributes2(updateSelections.update)(update3))(function() {
                      return bind22(appendTo2(updateSelections.enter)(Text2.value)([]))(function(newlyEntered) {
                        return discard19(setAttributes2(newlyEntered)(enter))(function() {
                          return pure30(newlyEntered);
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    };
  };

  // output/D3Tagless.Instance.Selection/index.js
  var liftA13 = /* @__PURE__ */ liftA1(applicativeEffect);
  var runD3M = function(v) {
    return runStateT(v)(unit);
  };
  var monadD3M = /* @__PURE__ */ monadStateT(monadEffect);
  var eval_D3M = function(v) {
    return liftA13(fst)(runStateT(v)(unit));
  };
  var d3TaglessD3M = {
    attach: function(selector) {
      return selectionAttach(d3TaglessD3M)(selector);
    },
    selectUnder: function(s_) {
      return selectionSelectUnder(d3TaglessD3M)(s_);
    },
    appendTo: function(s_) {
      return selectionAppendElement(d3TaglessD3M)(s_);
    },
    filterSelection: function(s_) {
      return selectionFilterSelection(d3TaglessD3M)(s_);
    },
    openSelection: function(s_) {
      return selectionOpenSelection(d3TaglessD3M)(s_);
    },
    mergeSelections: function(s_) {
      return selectionMergeSelections(d3TaglessD3M)(s_);
    },
    setAttributes: function(s_) {
      return selectionModifySelection(d3TaglessD3M)(s_);
    },
    simpleJoin: function(s_) {
      return selectionJoin(d3TaglessD3M)(s_);
    },
    updateJoin: function(s_) {
      return selectionUpdateJoin(d3TaglessD3M)(s_);
    },
    on: function(s_) {
      return selectionOn(d3TaglessD3M)(s_);
    },
    Monad0: function() {
      return monadD3M;
    }
  };

  // output/Effect.Class.Console/index.js
  var log3 = function(dictMonadEffect) {
    var $51 = liftEffect(dictMonadEffect);
    return function($52) {
      return $51(log2($52));
    };
  };

  // output/Effect.Random/foreign.js
  var random = Math.random;

  // output/PSD3.Expandable/index.js
  var map41 = /* @__PURE__ */ map(functorArray);
  var append11 = /* @__PURE__ */ append(semigroupArray);
  var Collapsed = /* @__PURE__ */ (function() {
    function Collapsed2() {
    }
    ;
    Collapsed2.value = new Collapsed2();
    return Collapsed2;
  })();
  var Expanded = /* @__PURE__ */ (function() {
    function Expanded2() {
    }
    ;
    Expanded2.value = new Expanded2();
    return Expanded2;
  })();
  var toBoolean = function(v) {
    if (v instanceof Collapsed) {
      return false;
    }
    ;
    if (v instanceof Expanded) {
      return true;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Expandable (line 38, column 1 - line 38, column 31): " + [v.constructor.name]);
  };
  var heytingAlgebraStatus = /* @__PURE__ */ (function() {
    return {
      ff: Collapsed.value,
      tt: Expanded.value,
      implies: function(a2) {
        return function(b2) {
          return disj(heytingAlgebraStatus)(not(heytingAlgebraStatus)(a2))(b2);
        };
      },
      conj: function(v) {
        return function(v1) {
          if (v instanceof Expanded && v1 instanceof Expanded) {
            return Expanded.value;
          }
          ;
          return Collapsed.value;
        };
      },
      disj: function(v) {
        return function(v1) {
          if (v instanceof Expanded) {
            return Expanded.value;
          }
          ;
          if (v1 instanceof Expanded) {
            return Expanded.value;
          }
          ;
          return Collapsed.value;
        };
      },
      not: function(v) {
        if (v instanceof Expanded) {
          return Collapsed.value;
        }
        ;
        if (v instanceof Collapsed) {
          return Expanded.value;
        }
        ;
        throw new Error("Failed pattern match at PSD3.Expandable (line 46, column 1 - line 56, column 27): " + [v.constructor.name]);
      }
    };
  })();
  var contentSharedClasses = /* @__PURE__ */ map41(ClassName)([]);
  var contentClasses = function(status_) {
    return append11(contentSharedClasses)((function() {
      if (status_ instanceof Collapsed) {
        return map41(ClassName)(["max-h-0", "opacity-0", "w-0", "overflow-hidden", "transition-1/2-in"]);
      }
      ;
      if (status_ instanceof Expanded) {
        return map41(ClassName)(["max-h-full", "opacity-100", "transition-1/2-out"]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Expandable (line 83, column 5 - line 95, column 8): " + [status_.constructor.name]);
    })());
  };
  var content3 = function(status_) {
    return function(iprops) {
      return div2(appendIProps([classes(contentClasses(status_))])(iprops));
    };
  };
  var content_ = function(status_) {
    return content3(status_)([]);
  };

  // output/PSD3.FormField/index.js
  var map42 = /* @__PURE__ */ map(functorArray);
  var labelClasses = /* @__PURE__ */ map42(ClassName)(["block", "font-medium", "leading-loose", "text-black-20"]);
  var helpTextClasses = /* @__PURE__ */ append(semigroupArray)(mutedClasses)(/* @__PURE__ */ map42(ClassName)(["block", "font-light", "pt-3"]));
  var helpText = function(iprops) {
    return div2(appendIProps([classes(helpTextClasses)])(iprops));
  };
  var helpText_ = /* @__PURE__ */ helpText([]);
  var fieldClasses = /* @__PURE__ */ map42(ClassName)(["w-full", "mb-10"]);
  var errorTextClasses = /* @__PURE__ */ map42(ClassName)(["block", "text-red", "font-medium", "pt-3"]);
  var error4 = function(iprops) {
    return div2(appendIProps([classes(errorTextClasses)])(iprops));
  };
  var error_ = /* @__PURE__ */ error4([]);
  var field$prime = function(config) {
    return function(iprops) {
      return function(html2) {
        return div2(appendIProps([classes(fieldClasses)])(iprops))([label4([classes(labelClasses), $$for(config.inputId)])([fromPlainHTML(config.label)]), html2, error_(config.error), helpText_(config.helpText)]);
      };
    };
  };
  var field = function(config) {
    return function(iprops) {
      return function(html2) {
        return field$prime(config)(iprops)(div2([css("my-1")])(html2));
      };
    };
  };
  var field_ = function(config) {
    return field(config)([]);
  };

  // output/PSD3.Toggle/index.js
  var map43 = /* @__PURE__ */ map(functorArray);
  var append16 = /* @__PURE__ */ append(semigroupArray);
  var type_20 = /* @__PURE__ */ type_17(isPropInputType);
  var toggleClasses = /* @__PURE__ */ map43(ClassName)(["transition-1/8", "inline-flex", "justify-center", "items-center", "content-box", "h-5", "w-5", "p-1", "rounded-full", "mr-3", "before:bg-white", "before:h-full", "before:w-full", "before:rounded-full", "before:no-content", "before:shadow"]);
  var labelClasses2 = /* @__PURE__ */ map43(ClassName)(["flex", "flex-row", "items-center", "inline-block", "py-1", "cursor-pointer", "leading-loose", "text-black-20"]);
  var inputClasses = /* @__PURE__ */ map43(ClassName)(["checked:sibling:bg-blue-88", "checked:sibling:pl-5", "!checked:sibling:bg-grey-80", "!checked:sibling:pr-5", "offscreen"]);
  var toggle = function(iprops) {
    var iprops$prime = append16(iprops)([classes(inputClasses), type_20(InputCheckbox.value)]);
    return label4([classes(labelClasses2)])([input2(iprops$prime), span3([classes(toggleClasses)])([])]);
  };

  // output/PSD3.Utilities/foreign.js
  function highlightString_(codetext) {
    const highlightedCode = Prism.highlight(codetext, Prism.languages.purescript, "purescript");
    return highlightedCode;
  }

  // output/Html.Parser/foreign.js
  function getAttributes(node) {
    var entries = [];
    for (var i2 = 0; i2 < node.attributes.length; i2++) {
      let { name: name16, value: value15 } = node.attributes.item(i2);
      entries.push([name16, value15]);
    }
    return entries;
  }
  function walk(treeWalker) {
    var nodes = [];
    function handleNode(node) {
      if (["#comment", "#text"].includes(node.nodeName)) {
        var text9 = node.textContent;
        if (text9) {
          nodes.push({
            type: node.nodeName.slice(1),
            text: text9
          });
        }
      } else {
        var children2 = walk(treeWalker);
        treeWalker.currentNode = node;
        nodes.push({
          type: "element",
          name: node.localName,
          attributes: getAttributes(node),
          children: children2
        });
      }
    }
    var currentNode = treeWalker.currentNode;
    var firstChild = treeWalker.firstChild();
    if (firstChild) {
      handleNode(firstChild);
    } else {
      return nodes;
    }
    var nextSibling2 = treeWalker.nextSibling();
    while (nextSibling2) {
      handleNode(nextSibling2);
      treeWalker.currentNode = nextSibling2;
      nextSibling2 = treeWalker.nextSibling();
    }
    return nodes;
  }
  function parseFromString(elementCtor) {
    return (attributeCtor) => (textCtor) => (commentCtor) => (input3) => {
      function mapNode(node) {
        if (node.type == "element") {
          return elementCtor({
            name: node.name,
            attributes: node.attributes.map(([k, v]) => attributeCtor(k)(v)),
            children: node.children.map(mapNode)
          });
        } else {
          var ctor = node.type == "text" ? textCtor : commentCtor;
          return ctor(node.text);
        }
      }
      var doc = new DOMParser().parseFromString(input3, "text/html");
      var headNodes = walk(
        doc.createTreeWalker(doc.documentElement.querySelector("head"))
      );
      var bodyNodes = walk(
        doc.createTreeWalker(doc.documentElement.querySelector("body"))
      );
      return [...headNodes, ...bodyNodes].map((node) => {
        if (node.type == "element") {
          return mapNode(node);
        } else {
          var ctor = node.type == "text" ? textCtor : commentCtor;
          return ctor(node.text);
        }
      });
    };
  }

  // output/Html.Parser/index.js
  var HtmlAttribute = /* @__PURE__ */ (function() {
    function HtmlAttribute2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    HtmlAttribute2.create = function(value0) {
      return function(value1) {
        return new HtmlAttribute2(value0, value1);
      };
    };
    return HtmlAttribute2;
  })();
  var HtmlElement = /* @__PURE__ */ (function() {
    function HtmlElement2(value0) {
      this.value0 = value0;
    }
    ;
    HtmlElement2.create = function(value0) {
      return new HtmlElement2(value0);
    };
    return HtmlElement2;
  })();
  var HtmlText = /* @__PURE__ */ (function() {
    function HtmlText2(value0) {
      this.value0 = value0;
    }
    ;
    HtmlText2.create = function(value0) {
      return new HtmlText2(value0);
    };
    return HtmlText2;
  })();
  var HtmlComment = /* @__PURE__ */ (function() {
    function HtmlComment2(value0) {
      this.value0 = value0;
    }
    ;
    HtmlComment2.create = function(value0) {
      return new HtmlComment2(value0);
    };
    return HtmlComment2;
  })();
  var parse6 = function(input3) {
    return parseFromString(HtmlElement.create)(HtmlAttribute.create)(HtmlText.create)(HtmlComment.create)(input3);
  };

  // output/Html.Renderer.Halogen/index.js
  var mapFlipped7 = /* @__PURE__ */ mapFlipped(functorMaybe);
  var alt8 = /* @__PURE__ */ alt(altMaybe);
  var mapFlipped1 = /* @__PURE__ */ mapFlipped(functorArray);
  var fromFoldable18 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var map44 = /* @__PURE__ */ map(functorArray);
  var htmlAttributeToProp = function(v) {
    return attr2(v.value0)(v.value1);
  };
  var nodeToHtml = function(v) {
    return function(v1) {
      if (v1 instanceof HtmlElement) {
        return elementToHtml(v)(v1.value0);
      }
      ;
      if (v1 instanceof HtmlText) {
        return text5(v1.value0);
      }
      ;
      if (v1 instanceof HtmlComment) {
        return text5("");
      }
      ;
      throw new Error("Failed pattern match at Html.Renderer.Halogen (line 38, column 1 - line 38, column 72): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var elementToHtml = function(mParentNs) {
    return function(ele) {
      var mCurNs = mapFlipped7(find2(function(v) {
        return v.value0 === "xmlns";
      })(ele.attributes))(function(v) {
        return v.value1;
      });
      var mNs = alt8(mCurNs)(mParentNs);
      var ctor = (function() {
        if (mNs instanceof Just) {
          return elementNS(mNs.value0);
        }
        ;
        if (mNs instanceof Nothing) {
          return element2;
        }
        ;
        throw new Error("Failed pattern match at Html.Renderer.Halogen (line 34, column 12 - line 36, column 28): " + [mNs.constructor.name]);
      })();
      var children2 = mapFlipped1(ele.children)(nodeToHtml(mNs));
      return ctor(ele.name)(fromFoldable18(map44(htmlAttributeToProp)(ele.attributes)))(children2);
    };
  };
  var renderToArray = function(raw) {
    return map44(nodeToHtml(Nothing.value))(parse6(raw));
  };
  var render6 = function(props) {
    var $28 = div2(props);
    return function($29) {
      return $28(renderToArray($29));
    };
  };
  var render_ = /* @__PURE__ */ render6([]);

  // output/PSD3.Utilities/index.js
  var syntaxHighlightedCode = function(codetext) {
    return [pre([class_("language-purescript")])([code_([render_(highlightString_(codetext))])])];
  };
  var classed5 = function($3) {
    return class_(ClassName($3));
  };
  var tailwindClass = classed5;
  var blurbParagraphs = function(dictFunctor) {
    var map50 = map(dictFunctor);
    return function(texts) {
      return map50(p([classes(["m-2"])]))(map50(function($4) {
        return singleton5(text5($4));
      })(texts));
    };
  };

  // output/Snippets/index.js
  var map45 = /* @__PURE__ */ map(functorArray);
  var bind19 = /* @__PURE__ */ bind(bindAff);
  var spy4 = /* @__PURE__ */ spy();
  var pure25 = /* @__PURE__ */ pure(applicativeAff);
  var Blurb = /* @__PURE__ */ (function() {
    function Blurb2(value0) {
      this.value0 = value0;
    }
    ;
    Blurb2.create = function(value0) {
      return new Blurb2(value0);
    };
    return Blurb2;
  })();
  var SnippetFile = /* @__PURE__ */ (function() {
    function SnippetFile2(value0) {
      this.value0 = value0;
    }
    ;
    SnippetFile2.create = function(value0) {
      return new SnippetFile2(value0);
    };
    return SnippetFile2;
  })();
  var Snippet = /* @__PURE__ */ (function() {
    function Snippet2(value0) {
      this.value0 = value0;
    }
    ;
    Snippet2.create = function(value0) {
      return new Snippet2(value0);
    };
    return Snippet2;
  })();
  var PreRendered = /* @__PURE__ */ (function() {
    function PreRendered2(value0) {
      this.value0 = value0;
    }
    ;
    PreRendered2.create = function(value0) {
      return new PreRendered2(value0);
    };
    return PreRendered2;
  })();
  var RenderWithState = /* @__PURE__ */ (function() {
    function RenderWithState2(value0) {
      this.value0 = value0;
    }
    ;
    RenderWithState2.create = function(value0) {
      return new RenderWithState2(value0);
    };
    return RenderWithState2;
  })();
  var renderCell = function(v) {
    return function(v1) {
      if (v1 instanceof Blurb) {
        return p([classes(["m-2"])])([text5(v1.value0)]);
      }
      ;
      if (v1 instanceof Snippet) {
        return pre([class_(v1.value0.language)])([code_([render_(highlightString_(v1.value0.text))])]);
      }
      ;
      if (v1 instanceof SnippetFile) {
        return p([classes(["m-2"])])([text5("Snippet file not loaded: " + (v1.value0 + " Did you remember to call substituteSnippetCells on your Notebook?"))]);
      }
      ;
      if (v1 instanceof PreRendered) {
        return v1.value0;
      }
      ;
      if (v1 instanceof RenderWithState) {
        return v1.value0(v);
      }
      ;
      throw new Error("Failed pattern match at Snippets (line 34, column 1 - line 34, column 71): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var renderNotebook_ = function(notebook) {
    return map45(renderCell(unit))(notebook);
  };
  var readSnippetFiles = function(name16) {
    return bind19(get3(string)("./code-examples/" + name16))(function(response) {
      if (response instanceof Left) {
        return spy4("couldn't read snippet, error: ")(pure25(printError(response.value0)));
      }
      ;
      if (response instanceof Right) {
        return spy4("read snippet: ")(pure25(response.value0.body));
      }
      ;
      throw new Error("Failed pattern match at Snippets (line 60, column 3 - line 62, column 52): " + [response.constructor.name]);
    });
  };
  var substituteSnippetCells = function(dictBind) {
    var bind111 = bind(dictBind);
    return function(dictMonadAff) {
      var liftAff2 = liftAff(dictMonadAff);
      var pure111 = pure(dictMonadAff.MonadEffect0().Monad0().Applicative0());
      return function(dictMonadState) {
        return function(v) {
          if (v instanceof SnippetFile) {
            return bind111(liftAff2(readSnippetFiles(v.value0)))(function(snippetText) {
              return pure111(new Snippet({
                file: v.value0,
                text: snippetText,
                language: "language-purescript"
              }));
            });
          }
          ;
          return pure111(v);
        };
      };
    };
  };

  // output/PSD3.GUP/index.js
  var pure26 = /* @__PURE__ */ pure(applicativeEffect);
  var sequence2 = /* @__PURE__ */ sequence(traversableArray)(applicativeEffect);
  var map46 = /* @__PURE__ */ map(functorArray);
  var bind110 = /* @__PURE__ */ bind(bindAff);
  var liftEffect8 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard14 = /* @__PURE__ */ discard(discardUnit);
  var discard15 = /* @__PURE__ */ discard14(bindAff);
  var exGeneralUpdatePattern2 = /* @__PURE__ */ exGeneralUpdatePattern(d3TaglessD3M);
  var applySecond2 = /* @__PURE__ */ applySecond(applyEffect);
  var forever2 = /* @__PURE__ */ forever(monadRecAff);
  var prop19 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "handler";
    }
  })()();
  var prop110 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "draw";
    }
  })()();
  var not5 = /* @__PURE__ */ not(heytingAlgebraStatus);
  var prop24 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "code";
    }
  })()();
  var prop34 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "blurb";
    }
  })()();
  var Running = /* @__PURE__ */ (function() {
    function Running2() {
    }
    ;
    Running2.value = new Running2();
    return Running2;
  })();
  var Paused = /* @__PURE__ */ (function() {
    function Paused2() {
    }
    ;
    Paused2.value = new Paused2();
    return Paused2;
  })();
  var Initialize5 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var SetStatus = /* @__PURE__ */ (function() {
    function SetStatus2(value0) {
      this.value0 = value0;
    }
    ;
    SetStatus2.create = function(value0) {
      return new SetStatus2(value0);
    };
    return SetStatus2;
  })();
  var ToggleStatus = /* @__PURE__ */ (function() {
    function ToggleStatus2() {
    }
    ;
    ToggleStatus2.value = new ToggleStatus2();
    return ToggleStatus2;
  })();
  var Finalize3 = /* @__PURE__ */ (function() {
    function Finalize5() {
    }
    ;
    Finalize5.value = new Finalize5();
    return Finalize5;
  })();
  var ToggleCard = /* @__PURE__ */ (function() {
    function ToggleCard3(value0) {
      this.value0 = value0;
    }
    ;
    ToggleCard3.create = function(value0) {
      return new ToggleCard3(value0);
    };
    return ToggleCard3;
  })();
  var showStatus = {
    show: function(v) {
      if (v instanceof Running) {
        return "Running";
      }
      ;
      if (v instanceof Paused) {
        return "Paused";
      }
      ;
      throw new Error("Failed pattern match at PSD3.GUP (line 46, column 1 - line 48, column 26): " + [v.constructor.name]);
    }
  };
  var show14 = /* @__PURE__ */ show(showStatus);
  var runUpdate = function(update3) {
    var getLetters = (function() {
      var letters = toCharArray("abcdefghijklmnopqrstuvwxyz");
      var coinToss = function(c) {
        return function __do3() {
          var n = random();
          var $135 = n > 0.6;
          if ($135) {
            return new Just(c);
          }
          ;
          return Nothing.value;
        };
      };
      return function __do3() {
        var choices = sequence2(map46(coinToss)(letters))();
        return catMaybes(choices);
      };
    })();
    return bind110(liftEffect8(getLetters))(function(letters) {
      return discard15(update3(letters))(function() {
        return delay(2300);
      });
    });
  };
  var runGeneralUpdatePattern = function(dictBind) {
    var discard24 = discard14(dictBind);
    var bind22 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect12 = liftEffect(dictMonadEffect);
      var pure111 = pure(dictMonadEffect.Monad0().Applicative0());
      return discard24(log3(dictMonadEffect)("General Update Pattern example"))(function() {
        return bind22(liftEffect12(eval_D3M(exGeneralUpdatePattern2("div.svg-container"))))(function(update3) {
          return pure111(function(letters) {
            return liftEffect8(applySecond2(runD3M(update3(letters)))(pure26(unit)));
          });
        });
      });
    };
  };
  var pauseUpdating = function(dictBind) {
    var bind22 = bind(dictBind);
    return function(dictMonadState) {
      var gets2 = gets(dictMonadState);
      var modify_6 = modify_(dictMonadState);
      return function(dictMonadAff) {
        var pure111 = pure(dictMonadAff.MonadEffect0().Monad0().Applicative0());
        var liftAff2 = liftAff(dictMonadAff);
        return bind22(gets2(function(v) {
          return v.fiber;
        }))(function(maybeFiber) {
          return bind22((function() {
            if (maybeFiber instanceof Nothing) {
              return pure111(unit);
            }
            ;
            if (maybeFiber instanceof Just) {
              return liftAff2(killFiber(error("Cancel fiber to suspend computation"))(maybeFiber.value0));
            }
            ;
            throw new Error("Failed pattern match at PSD3.GUP (line 211, column 8 - line 213, column 100): " + [maybeFiber.constructor.name]);
          })())(function() {
            return modify_6(function(state3) {
              var $138 = {};
              for (var $139 in state3) {
                if ({}.hasOwnProperty.call(state3, $139)) {
                  $138[$139] = state3[$139];
                }
                ;
              }
              ;
              $138.status = Paused.value;
              $138.fiber = Nothing.value;
              return $138;
            });
          });
        });
      };
    };
  };
  var eqStatus = {
    eq: function(x8) {
      return function(y7) {
        if (x8 instanceof Running && y7 instanceof Running) {
          return true;
        }
        ;
        if (x8 instanceof Paused && y7 instanceof Paused) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var notEq2 = /* @__PURE__ */ notEq(eqStatus);
  var startUpdating = function(dictBind) {
    var bind22 = bind(dictBind);
    return function(dictMonadState) {
      var get5 = get(dictMonadState);
      var modify_6 = modify_(dictMonadState);
      return function(dictMonadAff) {
        var pure111 = pure(dictMonadAff.MonadEffect0().Monad0().Applicative0());
        var liftAff2 = liftAff(dictMonadAff);
        return bind22(get5)(function(v) {
          var $144 = notEq2(v.status)(Paused.value);
          if ($144) {
            return pure111(unit);
          }
          ;
          if (v.update instanceof Nothing) {
            return pure111(unit);
          }
          ;
          if (v.update instanceof Just) {
            return bind22(liftAff2(forkAff(forever2(runUpdate(v.update.value0)))))(function(fiber) {
              return modify_6(function(state3) {
                var $146 = {};
                for (var $147 in state3) {
                  if ({}.hasOwnProperty.call(state3, $147)) {
                    $146[$147] = state3[$147];
                  }
                  ;
                }
                ;
                $146.status = Running.value;
                $146.fiber = new Just(fiber);
                return $146;
              });
            });
          }
          ;
          throw new Error("Failed pattern match at PSD3.GUP (line 226, column 5 - line 230, column 77): " + [v.update.constructor.name]);
        });
      };
    };
  };
  var blurbtext = /* @__PURE__ */ blurbParagraphs(functorArray)(["This deceptively simple example shows off an aspect of screen-based data\nvisualization that has no analogue in paper visualizations: the ability to\nspecify how updates to the data should be represented.", "In this example, some letters of the alphabet are presented and then constantly\nupdated. When a letter enters at first, it falls in from the top and it is\ngreen. If its still present in the next set of letters it stays on the screen,\nbut it turns gray and moves to an alphabetically correct new position. And if\nits not present in the new data, it turns red and falls out before\ndisappearing.", "In a more meaningful example, ie with some data that you actually care about,\nthis helps give continuity, as the eye can track an individual letter thru its\narrival, update and exit phases. Even if this tracking isn't interesting in\nitself, it can lessen the fatigue of looking at updated data and it conveys a\nsense of how much the data has changed.", 'This example is called "General Update Pattern" in an early Mike Bostock\npost explaining the (then new) D3.js. You can see in the code panel how the\n"data join" contains three separate specifications, each with their own\n*transition*.']);
  var _snippets = /* @__PURE__ */ (function() {
    return prop5({
      reflectSymbol: function() {
        return "snippets";
      }
    })()()($$Proxy.value);
  })();
  var _panels = /* @__PURE__ */ (function() {
    return prop5({
      reflectSymbol: function() {
        return "panels";
      }
    })()()($$Proxy.value);
  })();
  var _handlerCode = function(dictStrong) {
    var $167 = _snippets(dictStrong);
    var $168 = prop19($$Proxy.value)(dictStrong);
    return function($169) {
      return $167($168($169));
    };
  };
  var _handlerCode1 = /* @__PURE__ */ _handlerCode(strongFn);
  var _drawCode = function(dictStrong) {
    var $170 = _snippets(dictStrong);
    var $171 = prop110($$Proxy.value)(dictStrong);
    return function($172) {
      return $170($171($172));
    };
  };
  var _drawCode1 = /* @__PURE__ */ _drawCode(strongFn);
  var _drawCode2 = /* @__PURE__ */ _drawCode(strongForget);
  var handleAction4 = function(dictBind) {
    var bind22 = bind(dictBind);
    var discard24 = discard14(dictBind);
    var runGeneralUpdatePattern1 = runGeneralUpdatePattern(dictBind);
    var pauseUpdating1 = pauseUpdating(dictBind);
    var startUpdating1 = startUpdating(dictBind);
    return function(dictMonadAff) {
      var liftAff2 = liftAff(dictMonadAff);
      var MonadEffect0 = dictMonadAff.MonadEffect0();
      var runGeneralUpdatePattern2 = runGeneralUpdatePattern1(MonadEffect0);
      var pure111 = pure(MonadEffect0.Monad0().Applicative0());
      return function(dictMonadState) {
        var modifying3 = modifying(dictMonadState);
        var assign4 = assign2(dictMonadState);
        var modify_6 = modify_(dictMonadState);
        var gets2 = gets(dictMonadState);
        var pauseUpdating2 = pauseUpdating1(dictMonadState)(dictMonadAff);
        var startUpdating2 = startUpdating1(dictMonadState)(dictMonadAff);
        return function(v) {
          if (v instanceof ToggleCard) {
            return modifying3(v.value0(strongFn))(not5);
          }
          ;
          if (v instanceof Initialize5) {
            return bind22(liftAff2(readSnippetFiles("GUP")))(function(text1) {
              return discard24(assign4(_drawCode1)(text1))(function() {
                return bind22(liftAff2(readSnippetFiles("GUPHandleActions")))(function(text22) {
                  return discard24(assign4(_handlerCode1)(text22))(function() {
                    return bind22(runGeneralUpdatePattern2)(function(updateFn) {
                      return bind22(liftAff2(forkAff(forever2(runUpdate(updateFn)))))(function(fiber) {
                        return modify_6(function(state3) {
                          var $154 = {};
                          for (var $155 in state3) {
                            if ({}.hasOwnProperty.call(state3, $155)) {
                              $154[$155] = state3[$155];
                            }
                            ;
                          }
                          ;
                          $154.status = Running.value;
                          $154.fiber = new Just(fiber);
                          $154.update = new Just(updateFn);
                          return $154;
                        });
                      });
                    });
                  });
                });
              });
            });
          }
          ;
          if (v instanceof SetStatus) {
            return modify_6(function(state3) {
              var $157 = {};
              for (var $158 in state3) {
                if ({}.hasOwnProperty.call(state3, $158)) {
                  $157[$158] = state3[$158];
                }
                ;
              }
              ;
              $157.status = v.value0;
              return $157;
            });
          }
          ;
          if (v instanceof ToggleStatus) {
            return bind22(gets2(function(v1) {
              return v1.status;
            }))(function(currentStatus) {
              if (currentStatus instanceof Running) {
                return pauseUpdating2;
              }
              ;
              return startUpdating2;
            });
          }
          ;
          if (v instanceof Finalize3) {
            return bind22(gets2(function(v1) {
              return v1.fiber;
            }))(function(maybeFiber) {
              return bind22((function() {
                if (maybeFiber instanceof Nothing) {
                  return pure111(unit);
                }
                ;
                if (maybeFiber instanceof Just) {
                  return liftAff2(killFiber(error("Cancelling fiber and terminating computation"))(maybeFiber.value0));
                }
                ;
                throw new Error("Failed pattern match at PSD3.GUP (line 197, column 10 - line 199, column 111): " + [maybeFiber.constructor.name]);
              })())(function() {
                return modify_6(function(state3) {
                  var $164 = {};
                  for (var $165 in state3) {
                    if ({}.hasOwnProperty.call(state3, $165)) {
                      $164[$165] = state3[$165];
                    }
                    ;
                  }
                  ;
                  $164.status = Paused.value;
                  $164.fiber = Nothing.value;
                  $164.update = Nothing.value;
                  return $164;
                });
              });
            });
          }
          ;
          throw new Error("Failed pattern match at PSD3.GUP (line 173, column 16 - line 201, column 87): " + [v.constructor.name]);
        };
      };
    };
  };
  var handleAction1 = /* @__PURE__ */ handleAction4(bindHalogenM);
  var _code = function(dictStrong) {
    var $173 = _panels(dictStrong);
    var $174 = prop24($$Proxy.value)(dictStrong);
    return function($175) {
      return $173($174($175));
    };
  };
  var _code1 = /* @__PURE__ */ _code(strongForget);
  var _blurb = function(dictStrong) {
    var $176 = _panels(dictStrong);
    var $177 = prop34($$Proxy.value)(dictStrong);
    return function($178) {
      return $176($177($178));
    };
  };
  var _blurb1 = /* @__PURE__ */ _blurb(strongForget);
  var component6 = function(dictMonadAff) {
    var render9 = function(state3) {
      return div2([tailwindClass("story-container")])([div2([tailwindClass("story-panel-controls")])([buttonGroup([class_("flex-col")])([buttonVertical([onClick($$const(ToggleStatus.value))])([text5(show14(state3.status))])])]), div2([tailwindClass("story-panel-about")])([field_({
        label: text5("About"),
        helpText: [],
        error: [],
        inputId: "show-blurb"
      })([toggle([id2("show-blurb"), checked2(toBoolean(view(_blurb1)(state3))), onChange(function(v) {
        return new ToggleCard(function(dictStrong) {
          return _blurb(dictStrong);
        });
      })])]), content_(view(_blurb1)(state3))(blurbtext)]), div2([tailwindClass("story-panel-code")])([field_({
        label: text5("(hide this panel if screen too small)"),
        helpText: [],
        error: [],
        inputId: "show-code"
      })([toggle([id2("show-code"), checked2(toBoolean(view(_code1)(state3))), onChange(function(v) {
        return new ToggleCard(function(dictStrong) {
          return _code(dictStrong);
        });
      })])]), content_(view(_code1)(state3))(syntaxHighlightedCode(view(_drawCode2)(state3)))]), div2([tailwindClass("svg-container")])([])]);
    };
    var initialState2 = {
      status: Paused.value,
      fiber: Nothing.value,
      update: Nothing.value,
      panels: {
        blurb: Expanded.value,
        code: Collapsed.value
      },
      snippets: {
        draw: "",
        handler: ""
      }
    };
    return mkComponent({
      initialState: $$const(initialState2),
      render: render9,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        handleAction: handleAction1(monadAffHalogenM(dictMonadAff))(monadStateHalogenM),
        initialize: new Just(Initialize5.value),
        finalize: new Just(Finalize3.value),
        receive: function($179) {
          return Just.create(SetStatus.create($179));
        }
      })
    });
  };

  // output/D3.Viz.ThreeLittleCircles/index.js
  var fill4 = /* @__PURE__ */ fill(toAttrString);
  var cx2 = /* @__PURE__ */ cx(toAttrNumberFnI);
  var cy2 = /* @__PURE__ */ cy(toAttrNumber);
  var radius5 = /* @__PURE__ */ radius(toAttrNumber);
  var classed6 = /* @__PURE__ */ classed(toAttrString);
  var discard16 = /* @__PURE__ */ discard(discardUnit);
  var strokeColor4 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var strokeWidth3 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var cy1 = /* @__PURE__ */ cy(toAttrNumberFn);
  var xFromIndex = function(v) {
    return function(i2) {
      return i2 * 100;
    };
  };
  var drawThreeCircles = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind22 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var simpleJoin2 = simpleJoin(dictSelectionM);
    var discard19 = discard16(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    var pure30 = pure(Monad0.Applicative0());
    return function(selector) {
      var circleAttributes = [fill4("green"), cx2(xFromIndex), cy2(50), radius5(20)];
      return bind22(attach2(selector))(function(root2) {
        return bind22(appendTo2(root2)(Svg.value)([viewBox(-100)(-100)(650)(650), classed6("d3svg gup")]))(function(svg2) {
          return bind22(appendTo2(svg2)(Group.value)([]))(function(circleGroup) {
            return bind22(simpleJoin2(circleGroup)(Circle.value)([32, 57, 293])(keyIsID_))(function(circles) {
              return discard19(setAttributes2(circles)(circleAttributes))(function() {
                return pure30(circles);
              });
            });
          });
        });
      });
    };
  };
  var datum_2 = {
    x: function(v) {
      return function(i2) {
        return toNumber(i2) * 20;
      };
    },
    y: function(d2) {
      return 100 - toNumber(d2) / 5;
    },
    color: function(d2) {
      return d3SchemePairedN_(toNumber(d2) / 100);
    }
  };
  var drawWithData = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind22 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var simpleJoin2 = simpleJoin(dictSelectionM);
    var discard19 = discard16(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    var pure30 = pure(Monad0.Applicative0());
    return function(circleData) {
      return function(selector) {
        var circleAttributes = [strokeColor4(datum_2.color), strokeWidth3(3), fill4("none"), cx2(datum_2.x), cy1(datum_2.y), radius5(10)];
        return bind22(attach2(selector))(function(root2) {
          return bind22(appendTo2(root2)(Svg.value)([viewBox(-100)(-100)(650)(650), classed6("d3svg gup")]))(function(svg2) {
            return bind22(appendTo2(svg2)(Group.value)([]))(function(circleGroup) {
              return bind22(simpleJoin2(circleGroup)(Circle.value)(circleData)(keyIsID_))(function(circles) {
                return discard19(setAttributes2(circles)(circleAttributes))(function() {
                  return pure30(circles);
                });
              });
            });
          });
        });
      };
    };
  };

  // output/D3Tagless.Utility/index.js
  var spy5 = /* @__PURE__ */ spy();
  var removeExistingSVG = function(dictSelectionM) {
    var pure30 = pure(dictSelectionM.Monad0().Applicative0());
    return function(rootSelector) {
      var root2 = d3SelectFirstInDOM_(rootSelector);
      var previous = d3SelectionSelect_(rootSelector + " svg")(root2);
      return pure30((function() {
        var v = d3SelectionIsEmpty_(previous);
        if (v) {
          return spy5("no previous SVG to remove")(previous);
        }
        ;
        if (!v) {
          return spy5("removed previous SVG")(d3RemoveSelection_(previous));
        }
        ;
        throw new Error("Failed pattern match at D3Tagless.Utility (line 18, column 5 - line 20, column 72): " + [v.constructor.name]);
      })());
    };
  };

  // output/PSD3.ThreeLittleCircles/index.js
  var prop20 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "parabola";
    }
  })()();
  var prop111 = /* @__PURE__ */ prop5({
    reflectSymbol: function() {
      return "simple";
    }
  })()();
  var not6 = /* @__PURE__ */ not(heytingAlgebraStatus);
  var traverse3 = /* @__PURE__ */ traverse(traversableArray);
  var discard17 = /* @__PURE__ */ discard(discardUnit);
  var drawThreeCircles2 = /* @__PURE__ */ drawThreeCircles(d3TaglessD3M);
  var removeExistingSVG2 = /* @__PURE__ */ removeExistingSVG(d3TaglessD3M);
  var drawWithData2 = /* @__PURE__ */ drawWithData(d3TaglessD3M);
  var Initialize6 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var Finalize4 = /* @__PURE__ */ (function() {
    function Finalize5() {
    }
    ;
    Finalize5.value = new Finalize5();
    return Finalize5;
  })();
  var ToggleCard2 = /* @__PURE__ */ (function() {
    function ToggleCard3(value0) {
      this.value0 = value0;
    }
    ;
    ToggleCard3.create = function(value0) {
      return new ToggleCard3(value0);
    };
    return ToggleCard3;
  })();
  var ToggleExample = /* @__PURE__ */ (function() {
    function ToggleExample2() {
    }
    ;
    ToggleExample2.value = new ToggleExample2();
    return ToggleExample2;
  })();
  var simple = /* @__PURE__ */ (function() {
    return [new Blurb("Simplest possible example, just to show syntax."), new SnippetFile("TLCSimple"), new Blurb("Click the button to see a slightly more realistic example."), new PreRendered(buttonVertical([onClick($$const(ToggleExample.value))])([text5("Simple")]))];
  })();
  var parabola = /* @__PURE__ */ (function() {
    return [new Blurb("This extends the super-simple model in the direction one would go for a more real-world example."), new SnippetFile("TLCParabola"), new Blurb("In this example, the data is passed in and must match the type\n  specified in the Model. Because the data loses its type information when\n  put into D3 we recover the type of Datum and Index using a couple of\n  functions to wrap unsafeCoerce. These functions are then used to write\n  any attribute setters that are derived from the data elements themselves,\n  or their indices"), new SnippetFile("TLCDatum_"), new Blurb("Again, we're just showing syntax and shape of the DSL here: it's still extremely simple, and the Model,\n  datum_ and so on might not be needed for such a simple example."), new PreRendered(buttonVertical([onClick($$const(ToggleExample.value))])([text5("Parabola")]))];
  })();
  var _notebooks = /* @__PURE__ */ (function() {
    return prop5({
      reflectSymbol: function() {
        return "notebooks";
      }
    })()()($$Proxy.value);
  })();
  var _parabola = function(dictStrong) {
    var $73 = _notebooks(dictStrong);
    var $74 = prop20($$Proxy.value)(dictStrong);
    return function($75) {
      return $73($74($75));
    };
  };
  var _parabola1 = /* @__PURE__ */ _parabola(strongFn);
  var _parabola2 = /* @__PURE__ */ _parabola(strongForget);
  var _simple = function(dictStrong) {
    var $76 = _notebooks(dictStrong);
    var $77 = prop111($$Proxy.value)(dictStrong);
    return function($78) {
      return $76($77($78));
    };
  };
  var _simple1 = /* @__PURE__ */ _simple(strongFn);
  var _simple2 = /* @__PURE__ */ _simple(strongForget);
  var handleAction5 = function(dictBind) {
    var bind22 = bind(dictBind);
    var substituteSnippetCells2 = substituteSnippetCells(dictBind);
    var discard19 = discard17(dictBind);
    var $$void11 = $$void(dictBind.Apply0().Functor0());
    return function(dictMonadAff) {
      var MonadEffect0 = dictMonadAff.MonadEffect0();
      var Applicative0 = MonadEffect0.Monad0().Applicative0();
      var traverse12 = traverse3(Applicative0);
      var substituteSnippetCells1 = substituteSnippetCells2(dictMonadAff);
      var liftEffect10 = liftEffect(MonadEffect0);
      var pure30 = pure(Applicative0);
      return function(dictMonadState) {
        var modifying3 = modifying(dictMonadState);
        var substituteSnippetCells22 = substituteSnippetCells1(dictMonadState);
        var assign4 = assign2(dictMonadState);
        var gets2 = gets(dictMonadState);
        var modify_6 = modify_(dictMonadState);
        return function(v) {
          if (v instanceof ToggleCard2) {
            return modifying3(v.value0(strongFn))(not6);
          }
          ;
          if (v instanceof Initialize6) {
            return bind22(traverse12(substituteSnippetCells22)(simple))(function(simple$prime) {
              return discard19(assign4(_simple1)(simple$prime))(function() {
                return bind22(traverse12(substituteSnippetCells22)(parabola))(function(parabola$prime) {
                  return discard19(assign4(_parabola1)(parabola$prime))(function() {
                    return bind22(liftEffect10(eval_D3M(drawThreeCircles2("div.svg-container"))))(function() {
                      return pure30(unit);
                    });
                  });
                });
              });
            });
          }
          ;
          if (v instanceof ToggleExample) {
            return bind22(gets2(function(v1) {
              return v1.toggle;
            }))(function(toggle2) {
              var toggle$prime = !toggle2;
              return discard19($$void11(liftEffect10(eval_D3M(removeExistingSVG2("div.svg-container")))))(function() {
                return discard19($$void11(liftEffect10(eval_D3M((function() {
                  if (toggle$prime) {
                    return drawThreeCircles2("div.svg-container");
                  }
                  ;
                  return drawWithData2([310, 474, 613, 726, 814, 877, 914, 926, 914, 877, 814, 726, 613, 474, 310])("div.svg-container");
                })()))))(function() {
                  return modify_6(function(s) {
                    var $69 = {};
                    for (var $70 in s) {
                      if ({}.hasOwnProperty.call(s, $70)) {
                        $69[$70] = s[$70];
                      }
                      ;
                    }
                    ;
                    $69.toggle = toggle$prime;
                    return $69;
                  });
                });
              });
            });
          }
          ;
          if (v instanceof Finalize4) {
            return pure30(unit);
          }
          ;
          throw new Error("Failed pattern match at PSD3.ThreeLittleCircles (line 90, column 16 - line 112, column 24): " + [v.constructor.name]);
        };
      };
    };
  };
  var handleAction12 = /* @__PURE__ */ handleAction5(bindHalogenM);
  var _code2 = /* @__PURE__ */ (function() {
    return prop5({
      reflectSymbol: function() {
        return "code";
      }
    })()()($$Proxy.value);
  })();
  var component7 = function(dictMonadAff) {
    var render9 = function(state3) {
      return div2([tailwindClass("story-container")])([div2([tailwindClass("story-panel-code")])([field_({
        label: text5("(hide this panel if screen too small)"),
        helpText: [],
        error: [],
        inputId: "show-code"
      })([toggle([id2("show-code"), checked2(toBoolean(state3.code)), onChange(function(v) {
        return new ToggleCard2(function(dictStrong) {
          return _code2(dictStrong);
        });
      })])]), content_(state3.code)((function() {
        if (state3.toggle) {
          return renderNotebook_(view(_simple2)(state3));
        }
        ;
        return renderNotebook_(view(_parabola2)(state3));
      })())]), div2([tailwindClass("svg-container")])([])]);
    };
    var initialState2 = {
      toggle: true,
      code: Expanded.value,
      notebooks: {
        simple,
        parabola
      }
    };
    return mkComponent({
      initialState: $$const(initialState2),
      render: render9,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        handleAction: handleAction12(monadAffHalogenM(dictMonadAff))(monadStateHalogenM),
        initialize: new Just(Initialize6.value),
        finalize: new Just(Finalize4.value)
      })
    });
  };

  // output/PSD3.Tutorial/index.js
  var pure27 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_3 = /* @__PURE__ */ slot_();
  var slot_1 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "threeLittleCircles";
    }
  })(ordUnit);
  var component1 = /* @__PURE__ */ component7(monadAffAff);
  var slot_22 = /* @__PURE__ */ slot_3({
    reflectSymbol: function() {
      return "gup";
    }
  })(ordUnit);
  var component22 = /* @__PURE__ */ component6(monadAffAff);
  var Initialize7 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var handleAction6 = function(v) {
    return pure27(unit);
  };
  var _threeLittleCircles = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _gup = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render7 = function(v) {
    return div2([classes(["tutorial-page"])])([section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Tutorial: Building Visualizations with PureScript D3")]), p_([text5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")]), p_([text5("Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("1. Three Little Circles")]), p_([text5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.")]), p_([text5("Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra.")]), div2([classes(["tutorial-viz-container"])])([slot_1(_threeLittleCircles)(unit)(component1)(unit)]), p_([text5("Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui.")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("2. The General Update Pattern")]), p_([text5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sagittis dui vel nisl. Duis ac tellus et risus vulputate vehicula. Donec lobortis risus a elit. Etiam tempor. Ut ullamcorper, ligula eu tempor congue, eros est euismod turpis.")]), p_([text5("Mauris sollicitudin fermentum libero. Praesent nonummy mi in odio. Nunc interdum lacus sit amet orci. Vestibulum rutrum, mi nec elementum vehicula, eros quam gravida nisl, id fringilla neque ante vel mi.")]), div2([classes(["tutorial-viz-container"])])([slot_22(_gup)(unit)(component22)(Running.value)]), p_([text5("Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est.")])]), section([classes(["tutorial-section", "tutorial-conclusion"])])([h2([classes(["tutorial-section-title"])])([text5("Next Steps")]), p_([text5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien.")]), ul_([li_([text5("Explore hierarchical data visualizations")]), li_([text5("Learn about the Finally Tagless pattern with interpreters")]), li_([text5("Dive into the Code Explorer for complex applications")])])])]);
  };
  var component8 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render7,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction6,
        initialize: new Just(Initialize7.value)
      })
    });
  })();

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str) {
      return str.codePointAt(0);
    } : fallback;
  };
  var _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };
  var _take = function(fallback) {
    return function(n) {
      if (hasStringIterator) {
        return function(str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i2 = 0; i2 < n; ++i2) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };
  var _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt02) {
      if (hasArrayFrom) {
        return function(str) {
          return Array.from(str, unsafeCodePointAt02);
        };
      }
      return fallback;
    };
  };

  // output/Data.String.CodePoints/index.js
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var map47 = /* @__PURE__ */ map(functorMaybe);
  var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var div3 = /* @__PURE__ */ div(euclideanRingInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var unsurrogate = function(lead) {
    return function(trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };
  var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
  };
  var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
  };
  var uncons5 = function(s) {
    var v = length5(s);
    if (v === 0) {
      return Nothing.value;
    }
    ;
    if (v === 1) {
      return new Just({
        head: fromEnum2(charAt(0)(s)),
        tail: ""
      });
    }
    ;
    var cu1 = fromEnum2(charAt(1)(s));
    var cu0 = fromEnum2(charAt(0)(s));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) {
      return new Just({
        head: unsurrogate(cu0)(cu1),
        tail: drop2(2)(s)
      });
    }
    ;
    return new Just({
      head: cu0,
      tail: drop2(1)(s)
    });
  };
  var unconsButWithTuple = function(s) {
    return map47(function(v) {
      return new Tuple(v.head, v.tail);
    })(uncons5(s));
  };
  var toCodePointArrayFallback = function(s) {
    return unfoldr2(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function(s) {
    var cu0 = fromEnum2(charAt(0)(s));
    var $47 = isLead(cu0) && length5(s) > 1;
    if ($47) {
      var cu1 = fromEnum2(charAt(1)(s));
      var $48 = isTrail(cu1);
      if ($48) {
        return unsurrogate(cu0)(cu1);
      }
      ;
      return cu0;
    }
    ;
    return cu0;
  };
  var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length8 = function($74) {
    return length4(toCodePointArray($74));
  };
  var indexOf2 = function(p2) {
    return function(s) {
      return map47(function(i2) {
        return length8(take2(i2)(s));
      })(indexOf(p2)(s));
    };
  };
  var fromCharCode2 = /* @__PURE__ */ (function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton7($75($76));
    };
  })();
  var singletonFallback = function(v) {
    if (v <= 65535) {
      return fromCharCode2(v);
    }
    ;
    var lead = div3(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod2(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var singleton9 = /* @__PURE__ */ _singleton(singletonFallback);
  var takeFallback = function(v) {
    return function(v1) {
      if (v < 1) {
        return "";
      }
      ;
      var v2 = uncons5(v1);
      if (v2 instanceof Just) {
        return singleton9(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
      }
      ;
      return v1;
    };
  };
  var take4 = /* @__PURE__ */ _take(takeFallback);
  var splitAt3 = function(i2) {
    return function(s) {
      var before = take4(i2)(s);
      return {
        before,
        after: drop2(length5(before))(s)
      };
    };
  };
  var drop5 = function(n) {
    return function(s) {
      return drop2(length5(take4(n)(s)))(s);
    };
  };

  // output/Routing.Parser/index.js
  var map48 = /* @__PURE__ */ map(functorArray);
  var discard18 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var guard2 = /* @__PURE__ */ guard(alternativeMaybe);
  var apply4 = /* @__PURE__ */ apply(applyMaybe);
  var map115 = /* @__PURE__ */ map(functorMaybe);
  var fromFoldable19 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var traverse4 = /* @__PURE__ */ traverse(traversableArray)(applicativeMaybe);
  var fromFoldable110 = /* @__PURE__ */ fromFoldable(foldableArray);
  var append17 = /* @__PURE__ */ append(semigroupList);
  var map210 = /* @__PURE__ */ map(functorList);
  var fromFoldable24 = /* @__PURE__ */ fromFoldable(foldableMaybe);
  var parseQueryPart = function(decoder) {
    var part2tuple = function(input3) {
      var keyVal = map48(decoder)(split("=")(input3));
      return discard18(guard2(length4(keyVal) <= 2))(function() {
        return apply4(map115(Tuple.create)(head2(keyVal)))(index2(keyVal)(1));
      });
    };
    var $27 = map115(fromFoldable19);
    var $28 = traverse4(part2tuple);
    var $29 = split("&");
    return function($30) {
      return $27($28($29($30)));
    };
  };
  var parse7 = function(decoder) {
    return function(hash2) {
      var pathParts = function(str) {
        var parts = fromFoldable110(map48(function($31) {
          return Path2.create(decoder($31));
        })(split("/")(str)));
        var v2 = unsnoc(parts);
        if (v2 instanceof Just && (v2.value0.last instanceof Path2 && v2.value0.last.value0 === "")) {
          return v2.value0.init;
        }
        ;
        return parts;
      };
      var v = map115(flip(splitAt3)(hash2))(indexOf2("?")(hash2));
      if (v instanceof Just) {
        return append17(pathParts(v.value0.before))(map210(Query2.create)(fromFoldable24(parseQueryPart(decoder)(drop5(1)(v.value0.after)))));
      }
      ;
      if (v instanceof Nothing) {
        return pathParts(hash2);
      }
      ;
      throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [v.constructor.name]);
    };
  };

  // output/Routing/index.js
  var fromJust6 = /* @__PURE__ */ fromJust();
  var matchWith = function(decoder) {
    return function(matcher) {
      var $2 = runMatch(matcher);
      var $3 = parse7(decoder);
      return function($4) {
        return $2($3($4));
      };
    };
  };
  var match = /* @__PURE__ */ matchWith(function($6) {
    return fromJust6($$decodeURIComponent($6));
  });

  // output/Web.HTML.Event.HashChangeEvent.EventTypes/index.js
  var hashchange = "hashchange";

  // output/Routing.Hash/index.js
  var bind20 = /* @__PURE__ */ bind(bindEffect);
  var map49 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped10 = /* @__PURE__ */ bindFlipped(bindEffect);
  var join3 = /* @__PURE__ */ join(bindEffect);
  var apply5 = /* @__PURE__ */ apply(applyEffect);
  var pure28 = /* @__PURE__ */ pure(applicativeEffect);
  var voidRight3 = /* @__PURE__ */ voidRight(functorEffect);
  var setHash2 = function(h) {
    return bind20(bind20(windowImpl)(location))(setHash(h));
  };
  var getHash = /* @__PURE__ */ bind20(/* @__PURE__ */ bind20(windowImpl)(location))(/* @__PURE__ */ (function() {
    var $16 = map49((function() {
      var $18 = fromMaybe("");
      var $19 = stripPrefix("#");
      return function($20) {
        return $18($19($20));
      };
    })());
    return function($17) {
      return $16(hash($17));
    };
  })());
  var foldHashes = function(cb) {
    return function(init3) {
      return function __do3() {
        var ref2 = bindFlipped10($$new)(bindFlipped10(init3)(getHash))();
        var win = map49(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return bindFlipped10(flip(write)(ref2))(join3(apply5(map49(cb)(read(ref2)))(getHash)));
        })();
        addEventListener(hashchange)(listener)(false)(win)();
        return removeEventListener(hashchange)(listener)(false)(win);
      };
    };
  };
  var matchesWith = function(dictFoldable) {
    var indexl2 = indexl(dictFoldable);
    return function(parser) {
      return function(cb) {
        var go2 = function(a2) {
          var $21 = maybe(pure28(a2))(function(b2) {
            return voidRight3(new Just(b2))(cb(a2)(b2));
          });
          var $22 = indexl2(0);
          return function($23) {
            return $21($22(parser($23)));
          };
        };
        return foldHashes(go2)(go2(Nothing.value));
      };
    };
  };
  var matches2 = /* @__PURE__ */ (function() {
    var $24 = matchesWith(foldableEither);
    return function($25) {
      return $24(match($25));
    };
  })();

  // output/PSD3.Main/index.js
  var bind21 = /* @__PURE__ */ bind(bindHalogenM);
  var pure29 = /* @__PURE__ */ pure(applicativeHalogenM);
  var liftEffect9 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var modify_5 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var spy6 = /* @__PURE__ */ spy();
  var slot_4 = /* @__PURE__ */ slot_();
  var slot_12 = /* @__PURE__ */ slot_4({
    reflectSymbol: function() {
      return "about";
    }
  })(ordUnit);
  var component12 = /* @__PURE__ */ component(monadAffAff);
  var slot_23 = /* @__PURE__ */ slot_4({
    reflectSymbol: function() {
      return "tutorial";
    }
  })(ordUnit);
  var slot_32 = /* @__PURE__ */ slot_4({
    reflectSymbol: function() {
      return "hierarchies";
    }
  })(ordUnit);
  var slot_42 = /* @__PURE__ */ slot_4({
    reflectSymbol: function() {
      return "interpreters";
    }
  })(ordUnit);
  var slot_5 = /* @__PURE__ */ slot_4({
    reflectSymbol: function() {
      return "codeExplorer";
    }
  })(ordUnit);
  var component23 = /* @__PURE__ */ component3(monadAffAff);
  var Initialize8 = /* @__PURE__ */ (function() {
    function Initialize9() {
    }
    ;
    Initialize9.value = new Initialize9();
    return Initialize9;
  })();
  var Navigate = /* @__PURE__ */ (function() {
    function Navigate2(value0) {
      this.value0 = value0;
    }
    ;
    Navigate2.create = function(value0) {
      return new Navigate2(value0);
    };
    return Navigate2;
  })();
  var RouteChanged = /* @__PURE__ */ (function() {
    function RouteChanged2(value0) {
      this.value0 = value0;
    }
    ;
    RouteChanged2.create = function(value0) {
      return new RouteChanged2(value0);
    };
    return RouteChanged2;
  })();
  var handleAction7 = function(v) {
    if (v instanceof Initialize8) {
      return bind21(subscribe2(makeEmitter(function(push2) {
        return matches2(routing)(function(v1) {
          return function(newRoute) {
            return push2(new RouteChanged(new Just(newRoute)));
          };
        });
      })))(function() {
        return pure29(unit);
      });
    }
    ;
    if (v instanceof Navigate) {
      return liftEffect9(setHash2(routeToPath(v.value0)));
    }
    ;
    if (v instanceof RouteChanged) {
      if (v.value0 instanceof Just) {
        return modify_5(function(v1) {
          var $36 = {};
          for (var $37 in v1) {
            if ({}.hasOwnProperty.call(v1, $37)) {
              $36[$37] = v1[$37];
            }
            ;
          }
          ;
          $36.currentRoute = v.value0.value0;
          return $36;
        });
      }
      ;
      if (v.value0 instanceof Nothing) {
        return modify_5(function(v1) {
          var $40 = {};
          for (var $41 in v1) {
            if ({}.hasOwnProperty.call(v1, $41)) {
              $40[$41] = v1[$41];
            }
            ;
          }
          ;
          $40.currentRoute = NotFound.value;
          return $40;
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Main (line 116, column 5 - line 118, column 57): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Main (line 101, column 16 - line 118, column 57): " + [v.constructor.name]);
  };
  var _tutorial = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _interpreters = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _hierarchies = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _codeExplorer = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _about = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var renderPage = function(route) {
    var v = spy6("Route is")(route);
    if (v instanceof About) {
      return slot_12(_about)(unit)(component12)(unit);
    }
    ;
    if (v instanceof Tutorial) {
      return slot_23(_tutorial)(unit)(component8)(unit);
    }
    ;
    if (v instanceof Hierarchies) {
      return slot_32(_hierarchies)(unit)(component4)(unit);
    }
    ;
    if (v instanceof Interpreters) {
      return slot_42(_interpreters)(unit)(component5)(unit);
    }
    ;
    if (v instanceof CodeExplorer) {
      return slot_5(_codeExplorer)(unit)(component23)(unit);
    }
    ;
    if (v instanceof NotFound) {
      return div2([classes(["not-found"])])([h1_([text5("404 - Page Not Found")]), p_([text5("The page you're looking for doesn't exist.")]), a([href4("#" + routeToPath(About.value))])([text5("Go to About")])]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Main (line 74, column 20 - line 98, column 8): " + [v.constructor.name]);
  };
  var render8 = function(state3) {
    return div2([classes(["app"])])([main([classes(["app__main"])])([renderPage(state3.currentRoute)])]);
  };
  var component9 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          currentRoute: About.value
        };
      },
      render: render8,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction7,
        initialize: new Just(Initialize8.value)
      })
    });
  })();
  var main2 = /* @__PURE__ */ runHalogenAff(/* @__PURE__ */ bind(bindAff)(awaitBody)(function(body2) {
    return runUI2(component9)(unit)(body2);
  }));

  // <stdin>
  main2();
})();
