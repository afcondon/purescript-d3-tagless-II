/* Generated by Spago v0.93.44 */
(() => {
  // output/Control.Apply/foreign.js
  var arrayApply = function(fs) {
    return function(xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l * k);
      var n = 0;
      for (var i2 = 0; i2 < l; i2++) {
        var f = fs[i2];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };

  // output/Control.Semigroupoid/index.js
  var semigroupoidFn = {
    compose: function(f) {
      return function(g) {
        return function(x30) {
          return f(g(x30));
        };
      };
    }
  };

  // output/Control.Category/index.js
  var identity = function(dict) {
    return dict.identity;
  };
  var categoryFn = {
    identity: function(x30) {
      return x30;
    },
    Semigroupoid0: function() {
      return semigroupoidFn;
    }
  };

  // output/Data.Boolean/index.js
  var otherwise = true;

  // output/Data.Function/index.js
  var on = function(f) {
    return function(g) {
      return function(x30) {
        return function(y28) {
          return f(g(x30))(g(y28));
        };
      };
    };
  };
  var flip = function(f) {
    return function(b2) {
      return function(a2) {
        return f(a2)(b2);
      };
    };
  };
  var $$const = function(a2) {
    return function(v) {
      return a2;
    };
  };

  // output/Data.Functor/foreign.js
  var arrayMap = function(f) {
    return function(arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(arr[i2]);
      }
      return result;
    };
  };

  // output/Data.Unit/foreign.js
  var unit = void 0;

  // output/Type.Proxy/index.js
  var $$Proxy = /* @__PURE__ */ (function() {
    function $$Proxy2() {
    }
    ;
    $$Proxy2.value = new $$Proxy2();
    return $$Proxy2;
  })();

  // output/Data.Functor/index.js
  var map = function(dict) {
    return dict.map;
  };
  var mapFlipped = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(fa) {
      return function(f) {
        return map119(f)(fa);
      };
    };
  };
  var $$void = function(dictFunctor) {
    return map(dictFunctor)($$const(unit));
  };
  var voidLeft = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(f) {
      return function(x30) {
        return map119($$const(x30))(f);
      };
    };
  };
  var voidRight = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(x30) {
      return map119($$const(x30));
    };
  };
  var functorArray = {
    map: arrayMap
  };
  var flap = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return function(ff2) {
      return function(x30) {
        return map119(function(f) {
          return f(x30);
        })(ff2);
      };
    };
  };

  // output/Control.Apply/index.js
  var identity2 = /* @__PURE__ */ identity(categoryFn);
  var applyArray = {
    apply: arrayApply,
    Functor0: function() {
      return functorArray;
    }
  };
  var apply = function(dict) {
    return dict.apply;
  };
  var applyFirst = function(dictApply) {
    var apply1 = apply(dictApply);
    var map67 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply1(map67($$const)(a2))(b2);
      };
    };
  };
  var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map67 = map(dictApply.Functor0());
    return function(a2) {
      return function(b2) {
        return apply1(map67($$const(identity2))(a2))(b2);
      };
    };
  };

  // output/Control.Applicative/index.js
  var pure = function(dict) {
    return dict.pure;
  };
  var unless = function(dictApplicative) {
    var pure115 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (!v) {
          return v1;
        }
        ;
        if (v) {
          return pure115(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var when = function(dictApplicative) {
    var pure115 = pure(dictApplicative);
    return function(v) {
      return function(v1) {
        if (v) {
          return v1;
        }
        ;
        if (!v) {
          return pure115(unit);
        }
        ;
        throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var liftA1 = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    var pure115 = pure(dictApplicative);
    return function(f) {
      return function(a2) {
        return apply6(pure115(f))(a2);
      };
    };
  };
  var applicativeArray = {
    pure: function(x30) {
      return [x30];
    },
    Apply0: function() {
      return applyArray;
    }
  };

  // output/Control.Bind/foreign.js
  var arrayBind = function(arr) {
    return function(f) {
      var result = [];
      for (var i2 = 0, l = arr.length; i2 < l; i2++) {
        Array.prototype.push.apply(result, f(arr[i2]));
      }
      return result;
    };
  };

  // output/Control.Bind/index.js
  var identity3 = /* @__PURE__ */ identity(categoryFn);
  var discard = function(dict) {
    return dict.discard;
  };
  var bindArray = {
    bind: arrayBind,
    Apply0: function() {
      return applyArray;
    }
  };
  var bind = function(dict) {
    return dict.bind;
  };
  var bindFlipped = function(dictBind) {
    return flip(bind(dictBind));
  };
  var composeKleisliFlipped = function(dictBind) {
    var bindFlipped12 = bindFlipped(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bindFlipped12(f)(g(a2));
        };
      };
    };
  };
  var composeKleisli = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(f) {
      return function(g) {
        return function(a2) {
          return bind116(f(a2))(g);
        };
      };
    };
  };
  var discardUnit = {
    discard: function(dictBind) {
      return bind(dictBind);
    }
  };
  var join = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(m) {
      return bind116(m)(identity3);
    };
  };

  // output/Data.Bounded/foreign.js
  var topInt = 2147483647;
  var bottomInt = -2147483648;
  var topChar = String.fromCharCode(65535);
  var bottomChar = String.fromCharCode(0);
  var topNumber = Number.POSITIVE_INFINITY;
  var bottomNumber = Number.NEGATIVE_INFINITY;

  // output/Data.Ord/foreign.js
  var unsafeCompareImpl = function(lt) {
    return function(eq18) {
      return function(gt) {
        return function(x30) {
          return function(y28) {
            return x30 < y28 ? lt : x30 === y28 ? eq18 : gt;
          };
        };
      };
    };
  };
  var ordIntImpl = unsafeCompareImpl;
  var ordNumberImpl = unsafeCompareImpl;
  var ordStringImpl = unsafeCompareImpl;
  var ordCharImpl = unsafeCompareImpl;

  // output/Data.Eq/foreign.js
  var refEq = function(r1) {
    return function(r2) {
      return r1 === r2;
    };
  };
  var eqBooleanImpl = refEq;
  var eqIntImpl = refEq;
  var eqNumberImpl = refEq;
  var eqCharImpl = refEq;
  var eqStringImpl = refEq;
  var eqArrayImpl = function(f) {
    return function(xs) {
      return function(ys) {
        if (xs.length !== ys.length) return false;
        for (var i2 = 0; i2 < xs.length; i2++) {
          if (!f(xs[i2])(ys[i2])) return false;
        }
        return true;
      };
    };
  };

  // output/Data.Symbol/index.js
  var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
  };

  // output/Record.Unsafe/foreign.js
  var unsafeGet = function(label5) {
    return function(rec) {
      return rec[label5];
    };
  };
  var unsafeSet = function(label5) {
    return function(value19) {
      return function(rec) {
        var copy3 = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy3[key] = rec[key];
          }
        }
        copy3[label5] = value19;
        return copy3;
      };
    };
  };

  // output/Data.Eq/index.js
  var eqUnit = {
    eq: function(v) {
      return function(v1) {
        return true;
      };
    }
  };
  var eqString = {
    eq: eqStringImpl
  };
  var eqNumber = {
    eq: eqNumberImpl
  };
  var eqInt = {
    eq: eqIntImpl
  };
  var eqChar = {
    eq: eqCharImpl
  };
  var eqBoolean = {
    eq: eqBooleanImpl
  };
  var eq = function(dict) {
    return dict.eq;
  };
  var eq2 = /* @__PURE__ */ eq(eqBoolean);
  var eqArray = function(dictEq) {
    return {
      eq: eqArrayImpl(eq(dictEq))
    };
  };
  var notEq = function(dictEq) {
    var eq34 = eq(dictEq);
    return function(x30) {
      return function(y28) {
        return eq2(eq34(x30)(y28))(false);
      };
    };
  };

  // output/Data.Ordering/index.js
  var LT = /* @__PURE__ */ (function() {
    function LT2() {
    }
    ;
    LT2.value = new LT2();
    return LT2;
  })();
  var GT = /* @__PURE__ */ (function() {
    function GT2() {
    }
    ;
    GT2.value = new GT2();
    return GT2;
  })();
  var EQ = /* @__PURE__ */ (function() {
    function EQ2() {
    }
    ;
    EQ2.value = new EQ2();
    return EQ2;
  })();
  var eqOrdering = {
    eq: function(v) {
      return function(v1) {
        if (v instanceof LT && v1 instanceof LT) {
          return true;
        }
        ;
        if (v instanceof GT && v1 instanceof GT) {
          return true;
        }
        ;
        if (v instanceof EQ && v1 instanceof EQ) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Ring/foreign.js
  var intSub = function(x30) {
    return function(y28) {
      return x30 - y28 | 0;
    };
  };

  // output/Data.Semiring/foreign.js
  var intAdd = function(x30) {
    return function(y28) {
      return x30 + y28 | 0;
    };
  };
  var intMul = function(x30) {
    return function(y28) {
      return x30 * y28 | 0;
    };
  };
  var numAdd = function(n1) {
    return function(n2) {
      return n1 + n2;
    };
  };
  var numMul = function(n1) {
    return function(n2) {
      return n1 * n2;
    };
  };

  // output/Data.Semiring/index.js
  var zero = function(dict) {
    return dict.zero;
  };
  var semiringNumber = {
    add: numAdd,
    zero: 0,
    mul: numMul,
    one: 1
  };
  var semiringInt = {
    add: intAdd,
    zero: 0,
    mul: intMul,
    one: 1
  };
  var one = function(dict) {
    return dict.one;
  };
  var mul = function(dict) {
    return dict.mul;
  };
  var add = function(dict) {
    return dict.add;
  };

  // output/Data.Ring/index.js
  var ringInt = {
    sub: intSub,
    Semiring0: function() {
      return semiringInt;
    }
  };

  // output/Data.Ord/index.js
  var ordUnit = {
    compare: function(v) {
      return function(v1) {
        return EQ.value;
      };
    },
    Eq0: function() {
      return eqUnit;
    }
  };
  var ordString = /* @__PURE__ */ (function() {
    return {
      compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqString;
      }
    };
  })();
  var ordNumber = /* @__PURE__ */ (function() {
    return {
      compare: ordNumberImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqNumber;
      }
    };
  })();
  var ordInt = /* @__PURE__ */ (function() {
    return {
      compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqInt;
      }
    };
  })();
  var ordChar = /* @__PURE__ */ (function() {
    return {
      compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
      Eq0: function() {
        return eqChar;
      }
    };
  })();
  var compare = function(dict) {
    return dict.compare;
  };
  var comparing = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(f) {
      return function(x30) {
        return function(y28) {
          return compare32(f(x30))(f(y28));
        };
      };
    };
  };
  var min = function(dictOrd) {
    var compare32 = compare(dictOrd);
    return function(x30) {
      return function(y28) {
        var v = compare32(x30)(y28);
        if (v instanceof LT) {
          return x30;
        }
        ;
        if (v instanceof EQ) {
          return x30;
        }
        ;
        if (v instanceof GT) {
          return y28;
        }
        ;
        throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [v.constructor.name]);
      };
    };
  };

  // output/Data.Bounded/index.js
  var top = function(dict) {
    return dict.top;
  };
  var boundedInt = {
    top: topInt,
    bottom: bottomInt,
    Ord0: function() {
      return ordInt;
    }
  };
  var boundedChar = {
    top: topChar,
    bottom: bottomChar,
    Ord0: function() {
      return ordChar;
    }
  };
  var bottom = function(dict) {
    return dict.bottom;
  };

  // output/Data.Show/foreign.js
  var showIntImpl = function(n) {
    return n.toString();
  };
  var showNumberImpl = function(n) {
    var str2 = n.toString();
    return isNaN(str2 + ".0") ? str2 : str2 + ".0";
  };
  var showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      // eslint-disable-line no-control-regex
      function(c, i2) {
        switch (c) {
          case '"':
          case "\\":
            return "\\" + c;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i2 + 1;
        var empty9 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty9;
      }
    ) + '"';
  };
  var showArrayImpl = function(f) {
    return function(xs) {
      var ss = [];
      for (var i2 = 0, l = xs.length; i2 < l; i2++) {
        ss[i2] = f(xs[i2]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  // output/Data.Show/index.js
  var showString = {
    show: showStringImpl
  };
  var showNumber = {
    show: showNumberImpl
  };
  var showInt = {
    show: showIntImpl
  };
  var show = function(dict) {
    return dict.show;
  };
  var showArray = function(dictShow) {
    return {
      show: showArrayImpl(show(dictShow))
    };
  };

  // output/Data.HeytingAlgebra/foreign.js
  var boolConj = function(b1) {
    return function(b2) {
      return b1 && b2;
    };
  };
  var boolDisj = function(b1) {
    return function(b2) {
      return b1 || b2;
    };
  };
  var boolNot = function(b2) {
    return !b2;
  };

  // output/Data.HeytingAlgebra/index.js
  var tt = function(dict) {
    return dict.tt;
  };
  var not = function(dict) {
    return dict.not;
  };
  var implies = function(dict) {
    return dict.implies;
  };
  var ff = function(dict) {
    return dict.ff;
  };
  var disj = function(dict) {
    return dict.disj;
  };
  var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a2) {
      return function(b2) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a2))(b2);
      };
    },
    conj: boolConj,
    disj: boolDisj,
    not: boolNot
  };
  var conj = function(dict) {
    return dict.conj;
  };
  var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
      ff: function(v) {
        return ff1;
      },
      tt: function(v) {
        return tt1;
      },
      implies: function(f) {
        return function(g) {
          return function(a2) {
            return implies1(f(a2))(g(a2));
          };
        };
      },
      conj: function(f) {
        return function(g) {
          return function(a2) {
            return conj1(f(a2))(g(a2));
          };
        };
      },
      disj: function(f) {
        return function(g) {
          return function(a2) {
            return disj1(f(a2))(g(a2));
          };
        };
      },
      not: function(f) {
        return function(a2) {
          return not1(f(a2));
        };
      }
    };
  };

  // output/Data.EuclideanRing/foreign.js
  var intDegree = function(x30) {
    return Math.min(Math.abs(x30), 2147483647);
  };
  var intDiv = function(x30) {
    return function(y28) {
      if (y28 === 0) return 0;
      return y28 > 0 ? Math.floor(x30 / y28) : -Math.floor(x30 / -y28);
    };
  };
  var intMod = function(x30) {
    return function(y28) {
      if (y28 === 0) return 0;
      var yy = Math.abs(y28);
      return (x30 % yy + yy) % yy;
    };
  };

  // output/Data.CommutativeRing/index.js
  var commutativeRingInt = {
    Ring0: function() {
      return ringInt;
    }
  };

  // output/Data.EuclideanRing/index.js
  var mod = function(dict) {
    return dict.mod;
  };
  var euclideanRingInt = {
    degree: intDegree,
    div: intDiv,
    mod: intMod,
    CommutativeRing0: function() {
      return commutativeRingInt;
    }
  };
  var div = function(dict) {
    return dict.div;
  };

  // output/Data.Semigroup/foreign.js
  var concatString = function(s1) {
    return function(s2) {
      return s1 + s2;
    };
  };
  var concatArray = function(xs) {
    return function(ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };

  // output/Data.Void/index.js
  var absurd = function(a2) {
    var spin = function($copy_v) {
      var $tco_result;
      function $tco_loop(v) {
        $copy_v = v;
        return;
      }
      ;
      while (true) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    return spin(a2);
  };

  // output/Data.Semigroup/index.js
  var semigroupString = {
    append: concatString
  };
  var semigroupArray = {
    append: concatArray
  };
  var append = function(dict) {
    return dict.append;
  };

  // output/Data.Monoid/index.js
  var monoidString = {
    mempty: "",
    Semigroup0: function() {
      return semigroupString;
    }
  };
  var mempty = function(dict) {
    return dict.mempty;
  };

  // output/Data.Tuple/index.js
  var Tuple = /* @__PURE__ */ (function() {
    function Tuple2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Tuple2.create = function(value0) {
      return function(value1) {
        return new Tuple2(value0, value1);
      };
    };
    return Tuple2;
  })();
  var snd = function(v) {
    return v.value1;
  };
  var functorTuple = {
    map: function(f) {
      return function(m) {
        return new Tuple(m.value0, f(m.value1));
      };
    }
  };
  var fst = function(v) {
    return v.value0;
  };
  var eqTuple = function(dictEq) {
    var eq18 = eq(dictEq);
    return function(dictEq1) {
      var eq19 = eq(dictEq1);
      return {
        eq: function(x30) {
          return function(y28) {
            return eq18(x30.value0)(y28.value0) && eq19(x30.value1)(y28.value1);
          };
        }
      };
    };
  };
  var ordTuple = function(dictOrd) {
    var compare4 = compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
      var compare12 = compare(dictOrd1);
      var eqTuple2 = eqTuple1(dictOrd1.Eq0());
      return {
        compare: function(x30) {
          return function(y28) {
            var v = compare4(x30.value0)(y28.value0);
            if (v instanceof LT) {
              return LT.value;
            }
            ;
            if (v instanceof GT) {
              return GT.value;
            }
            ;
            return compare12(x30.value1)(y28.value1);
          };
        },
        Eq0: function() {
          return eqTuple2;
        }
      };
    };
  };

  // output/Control.Monad.State.Class/index.js
  var state = function(dict) {
    return dict.state;
  };
  var modify_ = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(unit, f(s));
      });
    };
  };
  var modify = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        var s$prime = f(s);
        return new Tuple(s$prime, s$prime);
      });
    };
  };
  var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
      return state1(function(s) {
        return new Tuple(f(s), s);
      });
    };
  };
  var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
      return new Tuple(s, s);
    });
  };

  // output/Control.Alt/index.js
  var alt = function(dict) {
    return dict.alt;
  };

  // output/Data.Maybe/index.js
  var identity4 = /* @__PURE__ */ identity(categoryFn);
  var Nothing = /* @__PURE__ */ (function() {
    function Nothing2() {
    }
    ;
    Nothing2.value = new Nothing2();
    return Nothing2;
  })();
  var Just = /* @__PURE__ */ (function() {
    function Just2(value0) {
      this.value0 = value0;
    }
    ;
    Just2.create = function(value0) {
      return new Just2(value0);
    };
    return Just2;
  })();
  var maybe = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Nothing) {
          return v;
        }
        ;
        if (v2 instanceof Just) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
  var isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
  var functorMaybe = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Just) {
          return new Just(v(v1.value0));
        }
        ;
        return Nothing.value;
      };
    }
  };
  var map2 = /* @__PURE__ */ map(functorMaybe);
  var fromMaybe = function(a2) {
    return maybe(a2)(identity4);
  };
  var fromJust = function() {
    return function(v) {
      if (v instanceof Just) {
        return v.value0;
      }
      ;
      throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
    };
  };
  var eqMaybe = function(dictEq) {
    var eq18 = eq(dictEq);
    return {
      eq: function(x30) {
        return function(y28) {
          if (x30 instanceof Nothing && y28 instanceof Nothing) {
            return true;
          }
          ;
          if (x30 instanceof Just && y28 instanceof Just) {
            return eq18(x30.value0)(y28.value0);
          }
          ;
          return false;
        };
      }
    };
  };
  var applyMaybe = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return map2(v.value0)(v1);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var bindMaybe = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Just) {
          return v1(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyMaybe;
    }
  };
  var applicativeMaybe = /* @__PURE__ */ (function() {
    return {
      pure: Just.create,
      Apply0: function() {
        return applyMaybe;
      }
    };
  })();
  var altMaybe = {
    alt: function(v) {
      return function(v1) {
        if (v instanceof Nothing) {
          return v1;
        }
        ;
        return v;
      };
    },
    Functor0: function() {
      return functorMaybe;
    }
  };
  var plusMaybe = /* @__PURE__ */ (function() {
    return {
      empty: Nothing.value,
      Alt0: function() {
        return altMaybe;
      }
    };
  })();
  var alternativeMaybe = {
    Applicative0: function() {
      return applicativeMaybe;
    },
    Plus1: function() {
      return plusMaybe;
    }
  };

  // output/Debug/foreign.js
  var req = typeof module === "undefined" ? void 0 : module.require;
  var util = (function() {
    try {
      return req === void 0 ? void 0 : req("util");
    } catch (e) {
      return void 0;
    }
  })();
  function _trace(x30, k) {
    if (util !== void 0) {
      console.log(util.inspect(x30, { depth: null, colors: true }));
    } else {
      console.log(x30);
    }
    return k({});
  }
  function _spy(tag, x30) {
    if (util !== void 0) {
      console.log(tag + ":", util.inspect(x30, { depth: null, colors: true }));
    } else {
      console.log(tag + ":", x30);
    }
    return x30;
  }
  var now = (function() {
    var perf;
    if (typeof performance !== "undefined") {
      perf = performance;
    } else if (req) {
      try {
        perf = req("perf_hooks").performance;
      } catch (e) {
      }
    }
    return (function() {
      return (perf || Date).now();
    });
  })();

  // output/Data.Function.Uncurried/foreign.js
  var mkFn2 = function(fn) {
    return function(a2, b2) {
      return fn(a2)(b2);
    };
  };
  var runFn3 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return fn(a2, b2, c);
        };
      };
    };
  };
  var runFn4 = function(fn) {
    return function(a2) {
      return function(b2) {
        return function(c) {
          return function(d9) {
            return fn(a2, b2, c, d9);
          };
        };
      };
    };
  };

  // output/Debug/index.js
  var trace = function() {
    return function(a2) {
      return function(k) {
        return _trace(a2, k);
      };
    };
  };
  var spy = function() {
    return function(tag) {
      return function(a2) {
        return _spy(tag, a2);
      };
    };
  };

  // output/Effect.Aff/foreign.js
  var Aff = (function() {
    var EMPTY = {};
    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    var CONS = "Cons";
    var RESUME = "Resume";
    var RELEASE = "Release";
    var FINALIZER = "Finalizer";
    var FINALIZED = "Finalized";
    var FORKED = "Forked";
    var FIBER = "Fiber";
    var THUNK = "Thunk";
    function Aff2(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }
    function AffCtr(tag) {
      var fn = function(_1, _2, _3) {
        return new Aff2(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }
    function nonCanceler2(error4) {
      return new Aff2(PURE, void 0);
    }
    function runEff(eff) {
      try {
        eff();
      } catch (error4) {
        setTimeout(function() {
          throw error4;
        }, 0);
      }
    }
    function runSync(left4, right4, eff) {
      try {
        return right4(eff());
      } catch (error4) {
        return left4(error4);
      }
    }
    function runAsync(left4, eff, k) {
      try {
        return eff(k)();
      } catch (error4) {
        k(left4(error4))();
        return nonCanceler2;
      }
    }
    var Scheduler = (function() {
      var limit = 1024;
      var size5 = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;
      function drain() {
        var thunk;
        draining = true;
        while (size5 !== 0) {
          size5--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }
      return {
        isDraining: function() {
          return draining;
        },
        enqueue: function(cb) {
          var i2, tmp;
          if (size5 === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }
          queue[(ix + size5) % limit] = cb;
          size5++;
          if (!draining) {
            drain();
          }
        }
      };
    })();
    function Supervisor(util2) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function(result) {
              return function() {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function() {
          return count === 0;
        },
        killAll: function(killError, cb) {
          return function() {
            if (count === 0) {
              return cb();
            }
            var killCount = 0;
            var kills = {};
            function kill2(fid) {
              kills[fid] = fibers[fid].kill(killError, function(result) {
                return function() {
                  delete kills[fid];
                  killCount--;
                  if (util2.isLeft(result) && util2.fromLeft(result)) {
                    setTimeout(function() {
                      throw util2.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }
            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill2(k);
              }
            }
            fibers = {};
            fiberId = 0;
            count = 0;
            return function(error4) {
              return new Aff2(SYNC, function() {
                for (var k2 in kills) {
                  if (kills.hasOwnProperty(k2)) {
                    kills[k2]();
                  }
                }
              });
            };
          };
        }
      };
    }
    var SUSPENDED = 0;
    var CONTINUE = 1;
    var STEP_BIND = 2;
    var STEP_RESULT = 3;
    var PENDING = 4;
    var RETURN = 5;
    var COMPLETED = 6;
    function Fiber(util2, supervisor, aff) {
      var runTick = 0;
      var status = SUSPENDED;
      var step5 = aff;
      var fail3 = null;
      var interrupt = null;
      var bhead = null;
      var btail = null;
      var attempts = null;
      var bracketCount = 0;
      var joinId = 0;
      var joins = null;
      var rethrow = true;
      function run3(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp = null;
          result = null;
          attempt = null;
          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              try {
                step5 = bhead(step5);
                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail3 = util2.left(e);
                step5 = null;
              }
              break;
            case STEP_RESULT:
              if (util2.isLeft(step5)) {
                status = RETURN;
                fail3 = step5;
                step5 = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step5 = util2.fromRight(step5);
              }
              break;
            case CONTINUE:
              switch (step5.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff2(CONS, bhead, btail);
                  }
                  bhead = step5._2;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step5 = util2.right(step5._1);
                  } else {
                    status = STEP_BIND;
                    step5 = step5._1;
                  }
                  break;
                case SYNC:
                  status = STEP_RESULT;
                  step5 = runSync(util2.left, util2.right, step5._1);
                  break;
                case ASYNC:
                  status = PENDING;
                  step5 = runAsync(util2.left, step5._1, function(result2) {
                    return function() {
                      if (runTick !== localRunTick) {
                        return;
                      }
                      runTick++;
                      Scheduler.enqueue(function() {
                        if (runTick !== localRunTick + 1) {
                          return;
                        }
                        status = STEP_RESULT;
                        step5 = result2;
                        run3(runTick);
                      });
                    };
                  });
                  return;
                case THROW:
                  status = RETURN;
                  fail3 = util2.left(step5._1);
                  step5 = null;
                  break;
                // Enqueue the Catch so that we can call the error handler later on
                // in case of an exception.
                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                // Enqueue the Bracket so that we can call the appropriate handlers
                // after resource acquisition.
                case BRACKET:
                  bracketCount++;
                  if (bhead === null) {
                    attempts = new Aff2(CONS, step5, attempts, interrupt);
                  } else {
                    attempts = new Aff2(CONS, step5, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }
                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step5 = step5._1;
                  break;
                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util2, supervisor, step5._2);
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
                  if (step5._1) {
                    tmp.run();
                  }
                  step5 = util2.right(tmp);
                  break;
                case SEQ:
                  status = CONTINUE;
                  step5 = sequential3(util2, supervisor, step5._1);
                  break;
              }
              break;
            case RETURN:
              bhead = null;
              btail = null;
              if (attempts === null) {
                status = COMPLETED;
                step5 = interrupt || fail3 || step5;
              } else {
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;
                switch (attempt.tag) {
                  // We cannot recover from an unmasked interrupt. Otherwise we should
                  // continue stepping, or run the exception handler if an exception
                  // was raised.
                  case CATCH:
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail3) {
                      status = CONTINUE;
                      step5 = attempt._2(util2.fromLeft(fail3));
                      fail3 = null;
                    }
                    break;
                  // We cannot resume from an unmasked interrupt or exception.
                  case RESUME:
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail3) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step5 = util2.fromRight(step5);
                    }
                    break;
                  // If we have a bracket, we should enqueue the handlers,
                  // and continue with the success branch only if the fiber has
                  // not been interrupted. If the bracket acquisition failed, we
                  // should not run either.
                  case BRACKET:
                    bracketCount--;
                    if (fail3 === null) {
                      result = util2.fromRight(step5);
                      attempts = new Aff2(CONS, new Aff2(RELEASE, attempt._2, result), attempts, tmp);
                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step5 = attempt._3(result);
                      }
                    }
                    break;
                  // Enqueue the appropriate handler. We increase the bracket count
                  // because it should not be cancelled.
                  case RELEASE:
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail3), attempts, interrupt);
                    status = CONTINUE;
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step5 = attempt._1.killed(util2.fromLeft(interrupt))(attempt._2);
                    } else if (fail3) {
                      step5 = attempt._1.failed(util2.fromLeft(fail3))(attempt._2);
                    } else {
                      step5 = attempt._1.completed(util2.fromRight(step5))(attempt._2);
                    }
                    fail3 = null;
                    bracketCount++;
                    break;
                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff2(CONS, new Aff2(FINALIZED, step5, fail3), attempts, interrupt);
                    status = CONTINUE;
                    step5 = attempt._1;
                    break;
                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step5 = attempt._1;
                    fail3 = attempt._2;
                    break;
                }
              }
              break;
            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step5));
                }
              }
              joins = null;
              if (interrupt && fail3) {
                setTimeout(function() {
                  throw util2.fromLeft(fail3);
                }, 0);
              } else if (util2.isLeft(step5) && rethrow) {
                setTimeout(function() {
                  if (rethrow) {
                    throw util2.fromLeft(step5);
                  }
                }, 0);
              }
              return;
            case SUSPENDED:
              status = CONTINUE;
              break;
            case PENDING:
              return;
          }
        }
      }
      function onComplete(join5) {
        return function() {
          if (status === COMPLETED) {
            rethrow = rethrow && join5.rethrow;
            join5.handler(step5)();
            return function() {
            };
          }
          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join5;
          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }
      function kill2(error4, cb) {
        return function() {
          if (status === COMPLETED) {
            cb(util2.right(void 0))();
            return function() {
            };
          }
          var canceler = onComplete({
            rethrow: false,
            handler: function() {
              return cb(util2.right(void 0));
            }
          })();
          switch (status) {
            case SUSPENDED:
              interrupt = util2.left(error4);
              status = COMPLETED;
              step5 = interrupt;
              run3(runTick);
              break;
            case PENDING:
              if (interrupt === null) {
                interrupt = util2.left(error4);
              }
              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff2(CONS, new Aff2(FINALIZER, step5(error4)), attempts, interrupt);
                }
                status = RETURN;
                step5 = null;
                fail3 = null;
                run3(++runTick);
              }
              break;
            default:
              if (interrupt === null) {
                interrupt = util2.left(error4);
              }
              if (bracketCount === 0) {
                status = RETURN;
                step5 = null;
                fail3 = null;
              }
          }
          return canceler;
        };
      }
      function join4(cb) {
        return function() {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run3(runTick);
          }
          return canceler;
        };
      }
      return {
        kill: kill2,
        join: join4,
        onComplete,
        isSuspended: function() {
          return status === SUSPENDED;
        },
        run: function() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function() {
                run3(runTick);
              });
            } else {
              run3(runTick);
            }
          }
        }
      };
    }
    function runPar(util2, supervisor, par, cb) {
      var fiberId = 0;
      var fibers = {};
      var killId = 0;
      var kills = {};
      var early = new Error("[ParAff] Early exit");
      var interrupt = null;
      var root3 = EMPTY;
      function kill2(error4, par2, cb2) {
        var step5 = par2;
        var head7 = null;
        var tail2 = null;
        var count = 0;
        var kills2 = {};
        var tmp, kid;
        loop: while (true) {
          tmp = null;
          switch (step5.tag) {
            case FORKED:
              if (step5._3 === EMPTY) {
                tmp = fibers[step5._1];
                kills2[count++] = tmp.kill(error4, function(result) {
                  return function() {
                    count--;
                    if (count === 0) {
                      cb2(result)();
                    }
                  };
                });
              }
              if (head7 === null) {
                break loop;
              }
              step5 = head7._2;
              if (tail2 === null) {
                head7 = null;
              } else {
                head7 = tail2._1;
                tail2 = tail2._2;
              }
              break;
            case MAP:
              step5 = step5._2;
              break;
            case APPLY:
            case ALT:
              if (head7) {
                tail2 = new Aff2(CONS, head7, tail2);
              }
              head7 = step5;
              step5 = step5._1;
              break;
          }
        }
        if (count === 0) {
          cb2(util2.right(void 0))();
        } else {
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills2[kid] = kills2[kid]();
          }
        }
        return kills2;
      }
      function join4(result, head7, tail2) {
        var fail3, step5, lhs, rhs, tmp, kid;
        if (util2.isLeft(result)) {
          fail3 = result;
          step5 = null;
        } else {
          step5 = result;
          fail3 = null;
        }
        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;
          if (interrupt !== null) {
            return;
          }
          if (head7 === null) {
            cb(fail3 || step5)();
            return;
          }
          if (head7._3 !== EMPTY) {
            return;
          }
          switch (head7.tag) {
            case MAP:
              if (fail3 === null) {
                head7._3 = util2.right(head7._1(util2.fromRight(step5)));
                step5 = head7._3;
              } else {
                head7._3 = fail3;
              }
              break;
            case APPLY:
              lhs = head7._1._3;
              rhs = head7._2._3;
              if (fail3) {
                head7._3 = fail3;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, fail3 === lhs ? head7._2 : head7._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail2 === null) {
                      join4(fail3, null, null);
                    } else {
                      join4(fail3, tail2._1, tail2._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                return;
              } else {
                step5 = util2.right(util2.fromRight(lhs)(util2.fromRight(rhs)));
                head7._3 = step5;
              }
              break;
            case ALT:
              lhs = head7._1._3;
              rhs = head7._2._3;
              if (lhs === EMPTY && util2.isLeft(rhs) || rhs === EMPTY && util2.isLeft(lhs)) {
                return;
              }
              if (lhs !== EMPTY && util2.isLeft(lhs) && rhs !== EMPTY && util2.isLeft(rhs)) {
                fail3 = step5 === lhs ? rhs : lhs;
                step5 = null;
                head7._3 = fail3;
              } else {
                head7._3 = step5;
                tmp = true;
                kid = killId++;
                kills[kid] = kill2(early, step5 === lhs ? head7._2 : head7._1, function() {
                  return function() {
                    delete kills[kid];
                    if (tmp) {
                      tmp = false;
                    } else if (tail2 === null) {
                      join4(step5, null, null);
                    } else {
                      join4(step5, tail2._1, tail2._2);
                    }
                  };
                });
                if (tmp) {
                  tmp = false;
                  return;
                }
              }
              break;
          }
          if (tail2 === null) {
            head7 = null;
          } else {
            head7 = tail2._1;
            tail2 = tail2._2;
          }
        }
      }
      function resolve(fiber) {
        return function(result) {
          return function() {
            delete fibers[fiber._1];
            fiber._3 = result;
            join4(result, fiber._2._1, fiber._2._2);
          };
        };
      }
      function run3() {
        var status = CONTINUE;
        var step5 = par;
        var head7 = null;
        var tail2 = null;
        var tmp, fid;
        loop: while (true) {
          tmp = null;
          fid = null;
          switch (status) {
            case CONTINUE:
              switch (step5.tag) {
                case MAP:
                  if (head7) {
                    tail2 = new Aff2(CONS, head7, tail2);
                  }
                  head7 = new Aff2(MAP, step5._1, EMPTY, EMPTY);
                  step5 = step5._2;
                  break;
                case APPLY:
                  if (head7) {
                    tail2 = new Aff2(CONS, head7, tail2);
                  }
                  head7 = new Aff2(APPLY, EMPTY, step5._2, EMPTY);
                  step5 = step5._1;
                  break;
                case ALT:
                  if (head7) {
                    tail2 = new Aff2(CONS, head7, tail2);
                  }
                  head7 = new Aff2(ALT, EMPTY, step5._2, EMPTY);
                  step5 = step5._1;
                  break;
                default:
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step5;
                  step5 = new Aff2(FORKED, fid, new Aff2(CONS, head7, tail2), EMPTY);
                  tmp = Fiber(util2, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step5)
                  })();
                  fibers[fid] = tmp;
                  if (supervisor) {
                    supervisor.register(tmp);
                  }
              }
              break;
            case RETURN:
              if (head7 === null) {
                break loop;
              }
              if (head7._1 === EMPTY) {
                head7._1 = step5;
                status = CONTINUE;
                step5 = head7._2;
                head7._2 = EMPTY;
              } else {
                head7._2 = step5;
                step5 = head7;
                if (tail2 === null) {
                  head7 = null;
                } else {
                  head7 = tail2._1;
                  tail2 = tail2._2;
                }
              }
          }
        }
        root3 = step5;
        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }
      function cancel(error4, cb2) {
        interrupt = util2.left(error4);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }
        kills = null;
        var newKills = kill2(error4, root3, cb2);
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              for (var kid2 in newKills) {
                if (newKills.hasOwnProperty(kid2)) {
                  newKills[kid2]();
                }
              }
              return nonCanceler2;
            };
          });
        };
      }
      run3();
      return function(killError) {
        return new Aff2(ASYNC, function(killCb) {
          return function() {
            return cancel(killError, killCb);
          };
        });
      };
    }
    function sequential3(util2, supervisor, par) {
      return new Aff2(ASYNC, function(cb) {
        return function() {
          return runPar(util2, supervisor, par, cb);
        };
      });
    }
    Aff2.EMPTY = EMPTY;
    Aff2.Pure = AffCtr(PURE);
    Aff2.Throw = AffCtr(THROW);
    Aff2.Catch = AffCtr(CATCH);
    Aff2.Sync = AffCtr(SYNC);
    Aff2.Async = AffCtr(ASYNC);
    Aff2.Bind = AffCtr(BIND);
    Aff2.Bracket = AffCtr(BRACKET);
    Aff2.Fork = AffCtr(FORK);
    Aff2.Seq = AffCtr(SEQ);
    Aff2.ParMap = AffCtr(MAP);
    Aff2.ParApply = AffCtr(APPLY);
    Aff2.ParAlt = AffCtr(ALT);
    Aff2.Fiber = Fiber;
    Aff2.Supervisor = Supervisor;
    Aff2.Scheduler = Scheduler;
    Aff2.nonCanceler = nonCanceler2;
    return Aff2;
  })();
  var _pure = Aff.Pure;
  var _throwError = Aff.Throw;
  function _catchError(aff) {
    return function(k) {
      return Aff.Catch(aff, k);
    };
  }
  function _map(f) {
    return function(aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function(value19) {
          return Aff.Pure(f(value19));
        });
      }
    };
  }
  function _bind(aff) {
    return function(k) {
      return Aff.Bind(aff, k);
    };
  }
  function _fork(immediate) {
    return function(aff) {
      return Aff.Fork(immediate, aff);
    };
  }
  var _liftEffect = Aff.Sync;
  function _parAffMap(f) {
    return function(aff) {
      return Aff.ParMap(f, aff);
    };
  }
  function _parAffApply(aff1) {
    return function(aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  }
  var makeAff = Aff.Async;
  function generalBracket(acquire) {
    return function(options2) {
      return function(k) {
        return Aff.Bracket(acquire, options2, k);
      };
    };
  }
  function _makeFiber(util2, aff) {
    return function() {
      return Aff.Fiber(util2, null, aff);
    };
  }
  var _delay = /* @__PURE__ */ (function() {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }
    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }
    return function(right4, ms) {
      return Aff.Async(function(cb) {
        return function() {
          var timer2 = setDelay(ms, cb(right4()));
          return function() {
            return Aff.Sync(function() {
              return right4(clearDelay(ms, timer2));
            });
          };
        };
      });
    };
  })();
  var _sequential = Aff.Seq;

  // output/Control.Monad/index.js
  var unlessM = function(dictMonad) {
    var bind71 = bind(dictMonad.Bind1());
    var unless2 = unless(dictMonad.Applicative0());
    return function(mb) {
      return function(m) {
        return bind71(mb)(function(b2) {
          return unless2(b2)(m);
        });
      };
    };
  };
  var ap = function(dictMonad) {
    var bind71 = bind(dictMonad.Bind1());
    var pure45 = pure(dictMonad.Applicative0());
    return function(f) {
      return function(a2) {
        return bind71(f)(function(f$prime) {
          return bind71(a2)(function(a$prime) {
            return pure45(f$prime(a$prime));
          });
        });
      };
    };
  };

  // output/Data.Either/index.js
  var Left = /* @__PURE__ */ (function() {
    function Left2(value0) {
      this.value0 = value0;
    }
    ;
    Left2.create = function(value0) {
      return new Left2(value0);
    };
    return Left2;
  })();
  var Right = /* @__PURE__ */ (function() {
    function Right2(value0) {
      this.value0 = value0;
    }
    ;
    Right2.create = function(value0) {
      return new Right2(value0);
    };
    return Right2;
  })();
  var note = function(a2) {
    return maybe(new Left(a2))(Right.create);
  };
  var functorEither = {
    map: function(f) {
      return function(m) {
        if (m instanceof Left) {
          return new Left(m.value0);
        }
        ;
        if (m instanceof Right) {
          return new Right(f(m.value0));
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
      };
    }
  };
  var map3 = /* @__PURE__ */ map(functorEither);
  var either = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var hush = /* @__PURE__ */ (function() {
    return either($$const(Nothing.value))(Just.create);
  })();
  var applyEither = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return new Left(v.value0);
        }
        ;
        if (v instanceof Right) {
          return map3(v.value0)(v1);
        }
        ;
        throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorEither;
    }
  };
  var bindEither = {
    bind: /* @__PURE__ */ either(function(e) {
      return function(v) {
        return new Left(e);
      };
    })(function(a2) {
      return function(f) {
        return f(a2);
      };
    }),
    Apply0: function() {
      return applyEither;
    }
  };
  var applicativeEither = /* @__PURE__ */ (function() {
    return {
      pure: Right.create,
      Apply0: function() {
        return applyEither;
      }
    };
  })();

  // output/Effect/foreign.js
  var pureE = function(a2) {
    return function() {
      return a2;
    };
  };
  var bindE = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };

  // output/Effect/index.js
  var $runtime_lazy = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var monadEffect = {
    Applicative0: function() {
      return applicativeEffect;
    },
    Bind1: function() {
      return bindEffect;
    }
  };
  var bindEffect = {
    bind: bindE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var applicativeEffect = {
    pure: pureE,
    Apply0: function() {
      return $lazy_applyEffect(0);
    }
  };
  var $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
      map: liftA1(applicativeEffect)
    };
  });
  var $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
      apply: ap(monadEffect),
      Functor0: function() {
        return $lazy_functorEffect(0);
      }
    };
  });
  var functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);
  var applyEffect = /* @__PURE__ */ $lazy_applyEffect(23);

  // output/Effect.Exception/foreign.js
  function error(msg) {
    return new Error(msg);
  }
  function message(e) {
    return e.message;
  }
  function throwException(e) {
    return function() {
      throw e;
    };
  }

  // output/Effect.Exception/index.js
  var $$throw = function($4) {
    return throwException(error($4));
  };

  // output/Control.Monad.Error.Class/index.js
  var throwError = function(dict) {
    return dict.throwError;
  };
  var catchError = function(dict) {
    return dict.catchError;
  };
  var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map67 = map(Monad0.Bind1().Apply0().Functor0());
    var pure45 = pure(Monad0.Applicative0());
    return function(a2) {
      return catchError1(map67(Right.create)(a2))(function($52) {
        return pure45(Left.create($52));
      });
    };
  };

  // output/Data.Identity/index.js
  var Identity = function(x30) {
    return x30;
  };
  var functorIdentity = {
    map: function(f) {
      return function(m) {
        return f(m);
      };
    }
  };
  var applyIdentity = {
    apply: function(v) {
      return function(v1) {
        return v(v1);
      };
    },
    Functor0: function() {
      return functorIdentity;
    }
  };
  var bindIdentity = {
    bind: function(v) {
      return function(f) {
        return f(v);
      };
    },
    Apply0: function() {
      return applyIdentity;
    }
  };
  var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
      return applyIdentity;
    }
  };
  var monadIdentity = {
    Applicative0: function() {
      return applicativeIdentity;
    },
    Bind1: function() {
      return bindIdentity;
    }
  };

  // output/Effect.Ref/foreign.js
  var _new = function(val) {
    return function() {
      return { value: val };
    };
  };
  var read = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl = function(f) {
    return function(ref2) {
      return function() {
        var t = f(ref2.value);
        ref2.value = t.state;
        return t.value;
      };
    };
  };
  var write = function(val) {
    return function(ref2) {
      return function() {
        ref2.value = val;
      };
    };
  };

  // output/Effect.Ref/index.js
  var $$void2 = /* @__PURE__ */ $$void(functorEffect);
  var $$new = _new;
  var modify$prime = modifyImpl;
  var modify2 = function(f) {
    return modify$prime(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var modify_2 = function(f) {
    return function(s) {
      return $$void2(modify2(f)(s));
    };
  };

  // output/Control.Monad.Rec.Class/index.js
  var bindFlipped2 = /* @__PURE__ */ bindFlipped(bindEffect);
  var map4 = /* @__PURE__ */ map(functorEffect);
  var Loop = /* @__PURE__ */ (function() {
    function Loop2(value0) {
      this.value0 = value0;
    }
    ;
    Loop2.create = function(value0) {
      return new Loop2(value0);
    };
    return Loop2;
  })();
  var Done = /* @__PURE__ */ (function() {
    function Done2(value0) {
      this.value0 = value0;
    }
    ;
    Done2.create = function(value0) {
      return new Done2(value0);
    };
    return Done2;
  })();
  var tailRecM = function(dict) {
    return dict.tailRecM;
  };
  var tailRecM2 = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    return function(f) {
      return function(a2) {
        return function(b2) {
          return tailRecM1(function(o) {
            return f(o.a)(o.b);
          })({
            a: a2,
            b: b2
          });
        };
      };
    };
  };
  var monadRecEffect = {
    tailRecM: function(f) {
      return function(a2) {
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [v.constructor.name]);
        };
        return function __do4() {
          var r = bindFlipped2($$new)(f(a2))();
          (function() {
            while (!(function __do5() {
              var v = read(r)();
              if (v instanceof Loop) {
                var e = f(v.value0)();
                write(e)(r)();
                return false;
              }
              ;
              if (v instanceof Done) {
                return true;
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [v.constructor.name]);
            })()) {
            }
            ;
            return {};
          })();
          return map4(fromDone)(read(r))();
        };
      };
    },
    Monad0: function() {
      return monadEffect;
    }
  };
  var forever = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    var voidRight4 = voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    return function(ma) {
      return tailRecM1(function(u2) {
        return voidRight4(new Loop(u2))(ma);
      })(unit);
    };
  };

  // output/Control.Monad.Trans.Class/index.js
  var lift = function(dict) {
    return dict.lift;
  };

  // output/Effect.Class/index.js
  var monadEffectEffect = {
    liftEffect: /* @__PURE__ */ identity(categoryFn),
    Monad0: function() {
      return monadEffect;
    }
  };
  var liftEffect = function(dict) {
    return dict.liftEffect;
  };

  // output/Control.Monad.Except.Trans/index.js
  var map5 = /* @__PURE__ */ map(functorEither);
  var ExceptT = function(x30) {
    return x30;
  };
  var runExceptT = function(v) {
    return v;
  };
  var mapExceptT = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var functorExceptT = function(dictFunctor) {
    var map119 = map(dictFunctor);
    return {
      map: function(f) {
        return mapExceptT(map119(map5(f)));
      }
    };
  };
  var monadExceptT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeExceptT(dictMonad);
      },
      Bind1: function() {
        return bindExceptT(dictMonad);
      }
    };
  };
  var bindExceptT = function(dictMonad) {
    var bind71 = bind(dictMonad.Bind1());
    var pure45 = pure(dictMonad.Applicative0());
    return {
      bind: function(v) {
        return function(k) {
          return bind71(v)(either(function($187) {
            return pure45(Left.create($187));
          })(function(a2) {
            var v1 = k(a2);
            return v1;
          }));
        };
      },
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadExceptT(dictMonad)),
      Functor0: function() {
        return functorExceptT1;
      }
    };
  };
  var applicativeExceptT = function(dictMonad) {
    return {
      pure: (function() {
        var $188 = pure(dictMonad.Applicative0());
        return function($189) {
          return ExceptT($188(Right.create($189)));
        };
      })(),
      Apply0: function() {
        return applyExceptT(dictMonad);
      }
    };
  };
  var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
      throwError: (function() {
        var $198 = pure(dictMonad.Applicative0());
        return function($199) {
          return ExceptT($198(Left.create($199)));
        };
      })(),
      Monad0: function() {
        return monadExceptT1;
      }
    };
  };
  var altExceptT = function(dictSemigroup) {
    var append23 = append(dictSemigroup);
    return function(dictMonad) {
      var Bind1 = dictMonad.Bind1();
      var bind71 = bind(Bind1);
      var pure45 = pure(dictMonad.Applicative0());
      var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
      return {
        alt: function(v) {
          return function(v1) {
            return bind71(v)(function(rm) {
              if (rm instanceof Right) {
                return pure45(new Right(rm.value0));
              }
              ;
              if (rm instanceof Left) {
                return bind71(v1)(function(rn) {
                  if (rn instanceof Right) {
                    return pure45(new Right(rn.value0));
                  }
                  ;
                  if (rn instanceof Left) {
                    return pure45(new Left(append23(rm.value0)(rn.value0)));
                  }
                  ;
                  throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
                });
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
            });
          };
        },
        Functor0: function() {
          return functorExceptT1;
        }
      };
    };
  };

  // output/Control.Plus/index.js
  var empty = function(dict) {
    return dict.empty;
  };

  // output/Unsafe.Coerce/foreign.js
  var unsafeCoerce2 = function(x30) {
    return x30;
  };

  // output/Safe.Coerce/index.js
  var coerce = function() {
    return unsafeCoerce2;
  };

  // output/Data.Newtype/index.js
  var coerce2 = /* @__PURE__ */ coerce();
  var unwrap = function() {
    return coerce2;
  };
  var alaF = function() {
    return function() {
      return function() {
        return function() {
          return function(v) {
            return coerce2;
          };
        };
      };
    };
  };

  // output/Data.Profunctor/index.js
  var profunctorFn = {
    dimap: function(a2b) {
      return function(c2d) {
        return function(b2c) {
          return function($18) {
            return c2d(b2c(a2b($18)));
          };
        };
      };
    }
  };
  var dimap = function(dict) {
    return dict.dimap;
  };

  // output/Control.Parallel.Class/index.js
  var sequential = function(dict) {
    return dict.sequential;
  };
  var parallel = function(dict) {
    return dict.parallel;
  };

  // output/Data.Foldable/foreign.js
  var foldrArray = function(f) {
    return function(init5) {
      return function(xs) {
        var acc = init5;
        var len = xs.length;
        for (var i2 = len - 1; i2 >= 0; i2--) {
          acc = f(xs[i2])(acc);
        }
        return acc;
      };
    };
  };
  var foldlArray = function(f) {
    return function(init5) {
      return function(xs) {
        var acc = init5;
        var len = xs.length;
        for (var i2 = 0; i2 < len; i2++) {
          acc = f(acc)(xs[i2]);
        }
        return acc;
      };
    };
  };

  // output/Data.Bifunctor/index.js
  var identity5 = /* @__PURE__ */ identity(categoryFn);
  var bimap = function(dict) {
    return dict.bimap;
  };
  var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
      return bimap1(f)(identity5);
    };
  };
  var rmap = function(dictBifunctor) {
    return bimap(dictBifunctor)(identity5);
  };
  var bifunctorTuple = {
    bimap: function(f) {
      return function(g) {
        return function(v) {
          return new Tuple(f(v.value0), g(v.value1));
        };
      };
    }
  };
  var bifunctorEither = {
    bimap: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return new Left(v(v2.value0));
          }
          ;
          if (v2 instanceof Right) {
            return new Right(v1(v2.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    }
  };

  // output/Data.Monoid.Disj/index.js
  var Disj = function(x30) {
    return x30;
  };
  var semigroupDisj = function(dictHeytingAlgebra) {
    var disj2 = disj(dictHeytingAlgebra);
    return {
      append: function(v) {
        return function(v1) {
          return disj2(v)(v1);
        };
      }
    };
  };
  var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
      mempty: ff(dictHeytingAlgebra),
      Semigroup0: function() {
        return semigroupDisj1;
      }
    };
  };

  // output/Data.Foldable/index.js
  var eq12 = /* @__PURE__ */ eq(eqOrdering);
  var alaF2 = /* @__PURE__ */ alaF()()()();
  var foldr = function(dict) {
    return dict.foldr;
  };
  var traverse_ = function(dictApplicative) {
    var applySecond4 = applySecond(dictApplicative.Apply0());
    var pure45 = pure(dictApplicative);
    return function(dictFoldable) {
      var foldr22 = foldr(dictFoldable);
      return function(f) {
        return foldr22(function($454) {
          return applySecond4(f($454));
        })(pure45(unit));
      };
    };
  };
  var for_ = function(dictApplicative) {
    var traverse_15 = traverse_(dictApplicative);
    return function(dictFoldable) {
      return flip(traverse_15(dictFoldable));
    };
  };
  var foldl = function(dict) {
    return dict.foldl;
  };
  var indexl = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(idx) {
      var go2 = function(cursor3) {
        return function(a2) {
          if (cursor3.elem instanceof Just) {
            return cursor3;
          }
          ;
          var $296 = cursor3.pos === idx;
          if ($296) {
            return {
              elem: new Just(a2),
              pos: cursor3.pos
            };
          }
          ;
          return {
            pos: cursor3.pos + 1 | 0,
            elem: cursor3.elem
          };
        };
      };
      var $455 = foldl22(go2)({
        elem: Nothing.value,
        pos: 0
      });
      return function($456) {
        return (function(v) {
          return v.elem;
        })($455($456));
      };
    };
  };
  var intercalate2 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictMonoid) {
      var append23 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(sep) {
        return function(xs) {
          var go2 = function(v) {
            return function(v1) {
              if (v.init) {
                return {
                  init: false,
                  acc: v1
                };
              }
              ;
              return {
                init: false,
                acc: append23(v.acc)(append23(sep)(v1))
              };
            };
          };
          return foldl22(go2)({
            init: true,
            acc: mempty2
          })(xs).acc;
        };
      };
    };
  };
  var maximumBy = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(cmp) {
      var max$prime = function(v) {
        return function(v1) {
          if (v instanceof Nothing) {
            return new Just(v1);
          }
          ;
          if (v instanceof Just) {
            return new Just((function() {
              var $303 = eq12(cmp(v.value0)(v1))(GT.value);
              if ($303) {
                return v.value0;
              }
              ;
              return v1;
            })());
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
      return foldl22(max$prime)(Nothing.value);
    };
  };
  var maximum = function(dictOrd) {
    var compare4 = compare(dictOrd);
    return function(dictFoldable) {
      return maximumBy(dictFoldable)(compare4);
    };
  };
  var minimumBy = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(cmp) {
      var min$prime = function(v) {
        return function(v1) {
          if (v instanceof Nothing) {
            return new Just(v1);
          }
          ;
          if (v instanceof Just) {
            return new Just((function() {
              var $307 = eq12(cmp(v.value0)(v1))(LT.value);
              if ($307) {
                return v.value0;
              }
              ;
              return v1;
            })());
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
      return foldl22(min$prime)(Nothing.value);
    };
  };
  var minimum = function(dictOrd) {
    var compare4 = compare(dictOrd);
    return function(dictFoldable) {
      return minimumBy(dictFoldable)(compare4);
    };
  };
  var sum = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictSemiring) {
      return foldl22(add(dictSemiring))(zero(dictSemiring));
    };
  };
  var foldableMaybe = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v1;
          }
          ;
          if (v2 instanceof Just) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            return mempty2;
          }
          ;
          if (v1 instanceof Just) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldableEither = {
    foldr: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v2.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldl: function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v1;
          }
          ;
          if (v2 instanceof Right) {
            return v(v1)(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      return function(v) {
        return function(v1) {
          if (v1 instanceof Left) {
            return mempty2;
          }
          ;
          if (v1 instanceof Right) {
            return v(v1.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    }
  };
  var foldMapDefaultR = function(dictFoldable) {
    var foldr22 = foldr(dictFoldable);
    return function(dictMonoid) {
      var append23 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldr22(function(x30) {
          return function(acc) {
            return append23(f(x30))(acc);
          };
        })(mempty2);
      };
    };
  };
  var foldableArray = {
    foldr: foldrArray,
    foldl: foldlArray,
    foldMap: function(dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
    }
  };
  var foldMap = function(dict) {
    return dict.foldMap;
  };
  var any = function(dictFoldable) {
    var foldMap22 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
      return alaF2(Disj)(foldMap22(monoidDisj(dictHeytingAlgebra)));
    };
  };

  // output/Data.Traversable/foreign.js
  var traverseArrayImpl = /* @__PURE__ */ (function() {
    function array1(a2) {
      return [a2];
    }
    function array2(a2) {
      return function(b2) {
        return [a2, b2];
      };
    }
    function array3(a2) {
      return function(b2) {
        return function(c) {
          return [a2, b2, c];
        };
      };
    }
    function concat2(xs) {
      return function(ys) {
        return xs.concat(ys);
      };
    }
    return function(apply6) {
      return function(map67) {
        return function(pure45) {
          return function(f) {
            return function(array4) {
              function go2(bot, top5) {
                switch (top5 - bot) {
                  case 0:
                    return pure45([]);
                  case 1:
                    return map67(array1)(f(array4[bot]));
                  case 2:
                    return apply6(map67(array2)(f(array4[bot])))(f(array4[bot + 1]));
                  case 3:
                    return apply6(apply6(map67(array3)(f(array4[bot])))(f(array4[bot + 1])))(f(array4[bot + 2]));
                  default:
                    var pivot = bot + Math.floor((top5 - bot) / 4) * 2;
                    return apply6(map67(concat2)(go2(bot, pivot)))(go2(pivot, top5));
                }
              }
              return go2(0, array4.length);
            };
          };
        };
      };
    };
  })();

  // output/Data.Traversable/index.js
  var identity6 = /* @__PURE__ */ identity(categoryFn);
  var traverse = function(dict) {
    return dict.traverse;
  };
  var sequenceDefault = function(dictTraversable) {
    var traverse23 = traverse(dictTraversable);
    return function(dictApplicative) {
      return traverse23(dictApplicative)(identity6);
    };
  };
  var traversableArray = {
    traverse: function(dictApplicative) {
      var Apply0 = dictApplicative.Apply0();
      return traverseArrayImpl(apply(Apply0))(map(Apply0.Functor0()))(pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
      return functorArray;
    },
    Foldable1: function() {
      return foldableArray;
    }
  };
  var sequence = function(dict) {
    return dict.sequence;
  };

  // output/Control.Parallel/index.js
  var identity7 = /* @__PURE__ */ identity(categoryFn);
  var parTraverse_ = function(dictParallel) {
    var sequential3 = sequential(dictParallel);
    var traverse_7 = traverse_(dictParallel.Applicative1());
    var parallel3 = parallel(dictParallel);
    return function(dictFoldable) {
      var traverse_15 = traverse_7(dictFoldable);
      return function(f) {
        var $48 = traverse_15(function($50) {
          return parallel3(f($50));
        });
        return function($49) {
          return sequential3($48($49));
        };
      };
    };
  };
  var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictFoldable) {
      return parTraverse_1(dictFoldable)(identity7);
    };
  };

  // output/Effect.Unsafe/foreign.js
  var unsafePerformEffect = function(f) {
    return f();
  };

  // output/Partial.Unsafe/foreign.js
  var _unsafePartial = function(f) {
    return f();
  };

  // output/Partial/foreign.js
  var _crashWith = function(msg) {
    throw new Error(msg);
  };

  // output/Partial/index.js
  var crashWith = function() {
    return _crashWith;
  };

  // output/Partial.Unsafe/index.js
  var crashWith2 = /* @__PURE__ */ crashWith();
  var unsafePartial = _unsafePartial;
  var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
      return crashWith2(msg);
    });
  };

  // output/Effect.Aff/index.js
  var $runtime_lazy2 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var pure2 = /* @__PURE__ */ pure(applicativeEffect);
  var $$void3 = /* @__PURE__ */ $$void(functorEffect);
  var map6 = /* @__PURE__ */ map(functorEffect);
  var Canceler = function(x30) {
    return x30;
  };
  var suspendAff = /* @__PURE__ */ _fork(false);
  var functorParAff = {
    map: _parAffMap
  };
  var functorAff = {
    map: _map
  };
  var map1 = /* @__PURE__ */ map(functorAff);
  var forkAff = /* @__PURE__ */ _fork(true);
  var ffiUtil = /* @__PURE__ */ (function() {
    var unsafeFromRight = function(v) {
      if (v instanceof Right) {
        return v.value0;
      }
      ;
      if (v instanceof Left) {
        return unsafeCrashWith("unsafeFromRight: Left");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 407, column 21 - line 409, column 54): " + [v.constructor.name]);
    };
    var unsafeFromLeft = function(v) {
      if (v instanceof Left) {
        return v.value0;
      }
      ;
      if (v instanceof Right) {
        return unsafeCrashWith("unsafeFromLeft: Right");
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 402, column 20 - line 404, column 55): " + [v.constructor.name]);
    };
    var isLeft = function(v) {
      if (v instanceof Left) {
        return true;
      }
      ;
      if (v instanceof Right) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at Effect.Aff (line 397, column 12 - line 399, column 21): " + [v.constructor.name]);
    };
    return {
      isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Left.create,
      right: Right.create
    };
  })();
  var makeFiber = function(aff) {
    return _makeFiber(ffiUtil, aff);
  };
  var launchAff = function(aff) {
    return function __do4() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };
  var delay = function(v) {
    return _delay(Right.create, v);
  };
  var bracket = function(acquire) {
    return function(completed) {
      return generalBracket(acquire)({
        killed: $$const(completed),
        failed: $$const(completed),
        completed: $$const(completed)
      });
    };
  };
  var applyParAff = {
    apply: _parAffApply,
    Functor0: function() {
      return functorParAff;
    }
  };
  var monadAff = {
    Applicative0: function() {
      return applicativeAff;
    },
    Bind1: function() {
      return bindAff;
    }
  };
  var bindAff = {
    bind: _bind,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var applicativeAff = {
    pure: _pure,
    Apply0: function() {
      return $lazy_applyAff(0);
    }
  };
  var $lazy_applyAff = /* @__PURE__ */ $runtime_lazy2("applyAff", "Effect.Aff", function() {
    return {
      apply: ap(monadAff),
      Functor0: function() {
        return functorAff;
      }
    };
  });
  var pure22 = /* @__PURE__ */ pure(applicativeAff);
  var bind1 = /* @__PURE__ */ bind(bindAff);
  var bindFlipped3 = /* @__PURE__ */ bindFlipped(bindAff);
  var $$finally = function(fin) {
    return function(a2) {
      return bracket(pure22(unit))($$const(fin))($$const(a2));
    };
  };
  var monadEffectAff = {
    liftEffect: _liftEffect,
    Monad0: function() {
      return monadAff;
    }
  };
  var liftEffect2 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var effectCanceler = function($74) {
    return Canceler($$const(liftEffect2($74)));
  };
  var joinFiber = function(v) {
    return makeAff(function(k) {
      return map6(effectCanceler)(v.join(k));
    });
  };
  var functorFiber = {
    map: function(f) {
      return function(t) {
        return unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
      };
    }
  };
  var killFiber = function(e) {
    return function(v) {
      return bind1(liftEffect2(v.isSuspended))(function(suspended) {
        if (suspended) {
          return liftEffect2($$void3(v.kill(e, $$const(pure2(unit)))));
        }
        ;
        return makeAff(function(k) {
          return map6(effectCanceler)(v.kill(e, k));
        });
      });
    };
  };
  var monadThrowAff = {
    throwError: _throwError,
    Monad0: function() {
      return monadAff;
    }
  };
  var monadErrorAff = {
    catchError: _catchError,
    MonadThrow0: function() {
      return monadThrowAff;
    }
  };
  var $$try2 = /* @__PURE__ */ $$try(monadErrorAff);
  var runAff = function(k) {
    return function(aff) {
      return launchAff(bindFlipped3(function($77) {
        return liftEffect2(k($77));
      })($$try2(aff)));
    };
  };
  var runAff_ = function(k) {
    return function(aff) {
      return $$void3(runAff(k)(aff));
    };
  };
  var parallelAff = {
    parallel: unsafeCoerce2,
    sequential: _sequential,
    Monad0: function() {
      return monadAff;
    },
    Applicative1: function() {
      return $lazy_applicativeParAff(0);
    }
  };
  var $lazy_applicativeParAff = /* @__PURE__ */ $runtime_lazy2("applicativeParAff", "Effect.Aff", function() {
    return {
      pure: (function() {
        var $79 = parallel(parallelAff);
        return function($80) {
          return $79(pure22($80));
        };
      })(),
      Apply0: function() {
        return applyParAff;
      }
    };
  });
  var applicativeParAff = /* @__PURE__ */ $lazy_applicativeParAff(131);
  var monadRecAff = {
    tailRecM: function(k) {
      var go2 = function(a2) {
        return bind1(k(a2))(function(res) {
          if (res instanceof Done) {
            return pure22(res.value0);
          }
          ;
          if (res instanceof Loop) {
            return go2(res.value0);
          }
          ;
          throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 23): " + [res.constructor.name]);
        });
      };
      return go2;
    },
    Monad0: function() {
      return monadAff;
    }
  };
  var nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure22(unit));

  // output/Control.Monad.State.Trans/index.js
  var runStateT = function(v) {
    return v;
  };
  var monadTransStateT = {
    lift: function(dictMonad) {
      var bind71 = bind(dictMonad.Bind1());
      var pure45 = pure(dictMonad.Applicative0());
      return function(m) {
        return function(s) {
          return bind71(m)(function(x30) {
            return pure45(new Tuple(x30, s));
          });
        };
      };
    }
  };
  var lift3 = /* @__PURE__ */ lift(monadTransStateT);
  var functorStateT = function(dictFunctor) {
    var map67 = map(dictFunctor);
    return {
      map: function(f) {
        return function(v) {
          return function(s) {
            return map67(function(v1) {
              return new Tuple(f(v1.value0), v1.value1);
            })(v(s));
          };
        };
      }
    };
  };
  var monadStateT = function(dictMonad) {
    return {
      Applicative0: function() {
        return applicativeStateT(dictMonad);
      },
      Bind1: function() {
        return bindStateT(dictMonad);
      }
    };
  };
  var bindStateT = function(dictMonad) {
    var bind71 = bind(dictMonad.Bind1());
    return {
      bind: function(v) {
        return function(f) {
          return function(s) {
            return bind71(v(s))(function(v1) {
              var v3 = f(v1.value0);
              return v3(v1.value1);
            });
          };
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var applyStateT = function(dictMonad) {
    var functorStateT1 = functorStateT(dictMonad.Bind1().Apply0().Functor0());
    return {
      apply: ap(monadStateT(dictMonad)),
      Functor0: function() {
        return functorStateT1;
      }
    };
  };
  var applicativeStateT = function(dictMonad) {
    var pure45 = pure(dictMonad.Applicative0());
    return {
      pure: function(a2) {
        return function(s) {
          return pure45(new Tuple(a2, s));
        };
      },
      Apply0: function() {
        return applyStateT(dictMonad);
      }
    };
  };
  var monadEffectState = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadStateT1 = monadStateT(Monad0);
    return {
      liftEffect: (function() {
        var $197 = lift3(Monad0);
        var $198 = liftEffect(dictMonadEffect);
        return function($199) {
          return $197($198($199));
        };
      })(),
      Monad0: function() {
        return monadStateT1;
      }
    };
  };
  var monadStateStateT = function(dictMonad) {
    var pure45 = pure(dictMonad.Applicative0());
    var monadStateT1 = monadStateT(dictMonad);
    return {
      state: function(f) {
        return function($200) {
          return pure45(f($200));
        };
      },
      Monad0: function() {
        return monadStateT1;
      }
    };
  };

  // output/Effect.Aff.Class/index.js
  var monadAffAff = {
    liftAff: /* @__PURE__ */ identity(categoryFn),
    MonadEffect0: function() {
      return monadEffectAff;
    }
  };
  var liftAff = function(dict) {
    return dict.liftAff;
  };

  // output/Web.DOM.ParentNode/foreign.js
  var getEffProp = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var children = getEffProp("children");
  var _firstElementChild = getEffProp("firstElementChild");
  var _lastElementChild = getEffProp("lastElementChild");
  var childElementCount = getEffProp("childElementCount");
  function _querySelector(selector) {
    return function(node) {
      return function() {
        return node.querySelector(selector);
      };
    };
  }

  // output/Data.Nullable/foreign.js
  var nullImpl = null;
  function nullable(a2, r, f) {
    return a2 == null ? r : f(a2);
  }
  function notNull(x30) {
    return x30;
  }

  // output/Data.Nullable/index.js
  var toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
  var toMaybe = function(n) {
    return nullable(n, Nothing.value, Just.create);
  };

  // output/Web.DOM.ParentNode/index.js
  var map7 = /* @__PURE__ */ map(functorEffect);
  var querySelector = function(qs) {
    var $2 = map7(toMaybe);
    var $3 = _querySelector(qs);
    return function($4) {
      return $2($3($4));
    };
  };

  // output/Web.Event.EventTarget/foreign.js
  function eventListener(fn) {
    return function() {
      return function(event) {
        return fn(event)();
      };
    };
  }
  function addEventListener(type2) {
    return function(listener) {
      return function(useCapture) {
        return function(target7) {
          return function() {
            return target7.addEventListener(type2, listener, useCapture);
          };
        };
      };
    };
  }
  function removeEventListener(type2) {
    return function(listener) {
      return function(useCapture) {
        return function(target7) {
          return function() {
            return target7.removeEventListener(type2, listener, useCapture);
          };
        };
      };
    };
  }

  // output/Web.HTML/foreign.js
  var windowImpl = function() {
    return window;
  };

  // output/Web.HTML.Common/index.js
  var ClassName = function(x30) {
    return x30;
  };

  // output/Web.HTML.HTMLDocument/foreign.js
  function _readyState(doc) {
    return function() {
      return doc.readyState;
    };
  }

  // output/Web.HTML.HTMLDocument.ReadyState/index.js
  var Loading = /* @__PURE__ */ (function() {
    function Loading2() {
    }
    ;
    Loading2.value = new Loading2();
    return Loading2;
  })();
  var Interactive = /* @__PURE__ */ (function() {
    function Interactive2() {
    }
    ;
    Interactive2.value = new Interactive2();
    return Interactive2;
  })();
  var Complete = /* @__PURE__ */ (function() {
    function Complete2() {
    }
    ;
    Complete2.value = new Complete2();
    return Complete2;
  })();
  var parse = function(v) {
    if (v === "loading") {
      return new Just(Loading.value);
    }
    ;
    if (v === "interactive") {
      return new Just(Interactive.value);
    }
    ;
    if (v === "complete") {
      return new Just(Complete.value);
    }
    ;
    return Nothing.value;
  };

  // output/Web.HTML.HTMLDocument/index.js
  var map8 = /* @__PURE__ */ map(functorEffect);
  var toParentNode = unsafeCoerce2;
  var toDocument = unsafeCoerce2;
  var readyState = /* @__PURE__ */ (function() {
    var $2 = map8((function() {
      var $4 = fromMaybe(Loading.value);
      return function($5) {
        return $4(parse($5));
      };
    })());
    return function($3) {
      return $2(_readyState($3));
    };
  })();

  // output/Web.HTML.HTMLElement/foreign.js
  function _read(nothing, just, value19) {
    var tag = Object.prototype.toString.call(value19);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value19);
    } else {
      return nothing;
    }
  }

  // output/Web.HTML.HTMLElement/index.js
  var toNode = unsafeCoerce2;
  var fromElement = function(x30) {
    return _read(Nothing.value, Just.create, x30);
  };

  // output/Effect.Uncurried/foreign.js
  var mkEffectFn3 = function mkEffectFn32(fn) {
    return function(a2, b2, c) {
      return fn(a2)(b2)(c)();
    };
  };

  // output/Data.Enum/foreign.js
  function toCharCode(c) {
    return c.charCodeAt(0);
  }
  function fromCharCode(c) {
    return String.fromCharCode(c);
  }

  // output/Control.Alternative/index.js
  var guard = function(dictAlternative) {
    var pure45 = pure(dictAlternative.Applicative0());
    var empty9 = empty(dictAlternative.Plus1());
    return function(v) {
      if (v) {
        return pure45(unit);
      }
      ;
      if (!v) {
        return empty9;
      }
      ;
      throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
    };
  };

  // output/Data.Unfoldable/foreign.js
  var unfoldrArrayImpl = function(isNothing2) {
    return function(fromJust7) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value19 = b2;
              while (true) {
                var maybe2 = f(value19);
                if (isNothing2(maybe2)) return result;
                var tuple = fromJust7(maybe2);
                result.push(fst2(tuple));
                value19 = snd2(tuple);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/foreign.js
  var unfoldr1ArrayImpl = function(isNothing2) {
    return function(fromJust7) {
      return function(fst2) {
        return function(snd2) {
          return function(f) {
            return function(b2) {
              var result = [];
              var value19 = b2;
              while (true) {
                var tuple = f(value19);
                result.push(fst2(tuple));
                var maybe2 = snd2(tuple);
                if (isNothing2(maybe2)) return result;
                value19 = fromJust7(maybe2);
              }
            };
          };
        };
      };
    };
  };

  // output/Data.Unfoldable1/index.js
  var fromJust2 = /* @__PURE__ */ fromJust();
  var unfoldable1Array = {
    unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(fromJust2)(fst)(snd)
  };

  // output/Data.Unfoldable/index.js
  var fromJust3 = /* @__PURE__ */ fromJust();
  var unfoldr = function(dict) {
    return dict.unfoldr;
  };
  var unfoldableArray = {
    unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(fromJust3)(fst)(snd),
    Unfoldable10: function() {
      return unfoldable1Array;
    }
  };

  // output/Data.Enum/index.js
  var top2 = /* @__PURE__ */ top(boundedInt);
  var bottom2 = /* @__PURE__ */ bottom(boundedInt);
  var toEnum = function(dict) {
    return dict.toEnum;
  };
  var fromEnum = function(dict) {
    return dict.fromEnum;
  };
  var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom1 = bottom(dictBoundedEnum.Bounded0());
    return function(low2) {
      return function(high2) {
        return function(x30) {
          var v = toEnum1(x30);
          if (v instanceof Just) {
            return v.value0;
          }
          ;
          if (v instanceof Nothing) {
            var $140 = x30 < fromEnum1(bottom1);
            if ($140) {
              return low2;
            }
            ;
            return high2;
          }
          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };
  var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) + 1 | 0);
      };
    };
  };
  var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
      return function(a2) {
        return toEnum$prime(fromEnum$prime(a2) - 1 | 0);
      };
    };
  };
  var charToEnum = function(v) {
    if (v >= bottom2 && v <= top2) {
      return new Just(fromCharCode(v));
    }
    ;
    return Nothing.value;
  };
  var enumChar = {
    succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
    pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
    Ord0: function() {
      return ordChar;
    }
  };
  var boundedEnumChar = /* @__PURE__ */ (function() {
    return {
      cardinality: toCharCode(top(boundedChar)) - toCharCode(bottom(boundedChar)) | 0,
      toEnum: charToEnum,
      fromEnum: toCharCode,
      Bounded0: function() {
        return boundedChar;
      },
      Enum1: function() {
        return enumChar;
      }
    };
  })();

  // output/Web.HTML.History/foreign.js
  function back(history2) {
    return function() {
      return history2.back();
    };
  }

  // output/Web.HTML.Location/foreign.js
  function hash(location2) {
    return function() {
      return location2.hash;
    };
  }
  function setHash(hash2) {
    return function(location2) {
      return function() {
        location2.hash = hash2;
      };
    };
  }

  // output/Web.HTML.Window/foreign.js
  function document2(window2) {
    return function() {
      return window2.document;
    };
  }
  function location(window2) {
    return function() {
      return window2.location;
    };
  }
  function history(window2) {
    return function() {
      return window2.history;
    };
  }
  function innerWidth(window2) {
    return function() {
      return window2.innerWidth;
    };
  }
  function innerHeight(window2) {
    return function() {
      return window2.innerHeight;
    };
  }

  // output/Web.HTML.Window/index.js
  var toEventTarget = unsafeCoerce2;

  // output/Web.HTML.Event.EventTypes/index.js
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";

  // output/Halogen.Aff.Util/index.js
  var bind2 = /* @__PURE__ */ bind(bindAff);
  var liftEffect3 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var bindFlipped4 = /* @__PURE__ */ bindFlipped(bindEffect);
  var composeKleisliFlipped2 = /* @__PURE__ */ composeKleisliFlipped(bindEffect);
  var pure3 = /* @__PURE__ */ pure(applicativeAff);
  var bindFlipped1 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var pure1 = /* @__PURE__ */ pure(applicativeEffect);
  var map9 = /* @__PURE__ */ map(functorEffect);
  var discard2 = /* @__PURE__ */ discard(discardUnit);
  var throwError2 = /* @__PURE__ */ throwError(monadThrowAff);
  var selectElement = function(query2) {
    return bind2(liftEffect3(bindFlipped4(composeKleisliFlipped2((function() {
      var $16 = querySelector(query2);
      return function($17) {
        return $16(toParentNode($17));
      };
    })())(document2))(windowImpl)))(function(mel) {
      return pure3(bindFlipped1(fromElement)(mel));
    });
  };
  var runHalogenAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure1(unit))));
  var awaitLoad = /* @__PURE__ */ makeAff(function(callback) {
    return function __do4() {
      var rs = bindFlipped4(readyState)(bindFlipped4(document2)(windowImpl))();
      if (rs instanceof Loading) {
        var et = map9(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return callback(new Right(unit));
        })();
        addEventListener(domcontentloaded)(listener)(false)(et)();
        return effectCanceler(removeEventListener(domcontentloaded)(listener)(false)(et));
      }
      ;
      callback(new Right(unit))();
      return nonCanceler;
    };
  });
  var awaitBody = /* @__PURE__ */ discard2(bindAff)(awaitLoad)(function() {
    return bind2(selectElement("body"))(function(body2) {
      return maybe(throwError2(error("Could not find body")))(pure3)(body2);
    });
  });

  // output/Data.Exists/index.js
  var runExists = unsafeCoerce2;
  var mkExists = unsafeCoerce2;

  // output/Data.Coyoneda/index.js
  var CoyonedaF = /* @__PURE__ */ (function() {
    function CoyonedaF2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CoyonedaF2.create = function(value0) {
      return function(value1) {
        return new CoyonedaF2(value0, value1);
      };
    };
    return CoyonedaF2;
  })();
  var unCoyoneda = function(f) {
    return function(v) {
      return runExists(function(v1) {
        return f(v1.value0)(v1.value1);
      })(v);
    };
  };
  var coyoneda = function(k) {
    return function(fi) {
      return mkExists(new CoyonedaF(k, fi));
    };
  };
  var functorCoyoneda = {
    map: function(f) {
      return function(v) {
        return runExists(function(v1) {
          return coyoneda(function($180) {
            return f(v1.value0($180));
          })(v1.value1);
        })(v);
      };
    }
  };
  var liftCoyoneda = /* @__PURE__ */ coyoneda(/* @__PURE__ */ identity(categoryFn));

  // output/Data.FunctorWithIndex/foreign.js
  var mapWithIndexArray = function(f) {
    return function(xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i2 = 0; i2 < l; i2++) {
        result[i2] = f(i2)(xs[i2]);
      }
      return result;
    };
  };

  // output/Data.FunctorWithIndex/index.js
  var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
  };
  var functorWithIndexArray = {
    mapWithIndex: mapWithIndexArray,
    Functor0: function() {
      return functorArray;
    }
  };

  // output/Data.FoldableWithIndex/index.js
  var foldr8 = /* @__PURE__ */ foldr(foldableArray);
  var mapWithIndex2 = /* @__PURE__ */ mapWithIndex(functorWithIndexArray);
  var foldl8 = /* @__PURE__ */ foldl(foldableArray);
  var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
  };
  var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
  };
  var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
      var append23 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldrWithIndex1(function(i2) {
          return function(x30) {
            return function(acc) {
              return append23(f(i2)(x30))(acc);
            };
          };
        })(mempty2);
      };
    };
  };
  var foldableWithIndexArray = {
    foldrWithIndex: function(f) {
      return function(z) {
        var $291 = foldr8(function(v) {
          return function(y28) {
            return f(v.value0)(v.value1)(y28);
          };
        })(z);
        var $292 = mapWithIndex2(Tuple.create);
        return function($293) {
          return $291($292($293));
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        var $294 = foldl8(function(y28) {
          return function(v) {
            return f(v.value0)(y28)(v.value1);
          };
        })(z);
        var $295 = mapWithIndex2(Tuple.create);
        return function($296) {
          return $294($295($296));
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
    },
    Foldable0: function() {
      return foldableArray;
    }
  };
  var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
  };

  // output/Data.NonEmpty/index.js
  var NonEmpty = /* @__PURE__ */ (function() {
    function NonEmpty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NonEmpty2.create = function(value0) {
      return function(value1) {
        return new NonEmpty2(value0, value1);
      };
    };
    return NonEmpty2;
  })();
  var singleton2 = function(dictPlus) {
    var empty9 = empty(dictPlus);
    return function(a2) {
      return new NonEmpty(a2, empty9);
    };
  };

  // output/Data.List.Types/index.js
  var Nil = /* @__PURE__ */ (function() {
    function Nil3() {
    }
    ;
    Nil3.value = new Nil3();
    return Nil3;
  })();
  var Cons = /* @__PURE__ */ (function() {
    function Cons3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Cons3.create = function(value0) {
      return function(value1) {
        return new Cons3(value0, value1);
      };
    };
    return Cons3;
  })();
  var NonEmptyList = function(x30) {
    return x30;
  };
  var toList = function(v) {
    return new Cons(v.value0, v.value1);
  };
  var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {
            $tco_var_v = new Cons(v1, v);
            $copy_v1 = v1.value1.value1.value1;
            return;
          }
          ;
          var unrolledMap = function(v2) {
            if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {
              return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
            }
            ;
            if (v2 instanceof Cons && v2.value1 instanceof Nil) {
              return new Cons(f(v2.value0), Nil.value);
            }
            ;
            return Nil.value;
          };
          var reverseUnrolledMap = function($copy_v2) {
            return function($copy_v3) {
              var $tco_var_v2 = $copy_v2;
              var $tco_done1 = false;
              var $tco_result2;
              function $tco_loop2(v2, v3) {
                if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {
                  $tco_var_v2 = v2.value1;
                  $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                  return;
                }
                ;
                $tco_done1 = true;
                return v3;
              }
              ;
              while (!$tco_done1) {
                $tco_result2 = $tco_loop2($tco_var_v2, $copy_v3);
              }
              ;
              return $tco_result2;
            };
          };
          $tco_done = true;
          return reverseUnrolledMap(v)(unrolledMap(v1));
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return chunkedRevMap(Nil.value);
  };
  var functorList = {
    map: listMap
  };
  var map10 = /* @__PURE__ */ map(functorList);
  var foldableList = {
    foldr: function(f) {
      return function(b2) {
        var rev3 = (function() {
          var go2 = function($copy_v) {
            return function($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return v;
                }
                ;
                if (v1 instanceof Cons) {
                  $tco_var_v = new Cons(v1.value0, v);
                  $copy_v1 = v1.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [v.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return go2(Nil.value);
        })();
        var $284 = foldl(foldableList)(flip(f))(b2);
        return function($285) {
          return $284(rev3($285));
        };
      };
    },
    foldl: function(f) {
      var go2 = function($copy_b) {
        return function($copy_v) {
          var $tco_var_b = $copy_b;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(b2, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return b2;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_b = f(b2)(v.value0);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_b, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go2;
    },
    foldMap: function(dictMonoid) {
      var append23 = append(dictMonoid.Semigroup0());
      var mempty2 = mempty(dictMonoid);
      return function(f) {
        return foldl(foldableList)(function(acc) {
          var $286 = append23(acc);
          return function($287) {
            return $286(f($287));
          };
        })(mempty2);
      };
    }
  };
  var foldr2 = /* @__PURE__ */ foldr(foldableList);
  var semigroupList = {
    append: function(xs) {
      return function(ys) {
        return foldr2(Cons.create)(ys)(xs);
      };
    }
  };
  var append1 = /* @__PURE__ */ append(semigroupList);
  var semigroupNonEmptyList = {
    append: function(v) {
      return function(as$prime) {
        return new NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
      };
    }
  };
  var applyList = {
    apply: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(map10(v.value0)(v1))(apply(applyList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Functor0: function() {
      return functorList;
    }
  };
  var bindList = {
    bind: function(v) {
      return function(v1) {
        if (v instanceof Nil) {
          return Nil.value;
        }
        ;
        if (v instanceof Cons) {
          return append1(v1(v.value0))(bind(bindList)(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    Apply0: function() {
      return applyList;
    }
  };
  var applicativeList = {
    pure: function(a2) {
      return new Cons(a2, Nil.value);
    },
    Apply0: function() {
      return applyList;
    }
  };
  var altList = {
    alt: append1,
    Functor0: function() {
      return functorList;
    }
  };
  var plusList = /* @__PURE__ */ (function() {
    return {
      empty: Nil.value,
      Alt0: function() {
        return altList;
      }
    };
  })();

  // output/Data.List/index.js
  var map11 = /* @__PURE__ */ map(functorMaybe);
  var uncons = function(v) {
    if (v instanceof Nil) {
      return Nothing.value;
    }
    ;
    if (v instanceof Cons) {
      return new Just({
        head: v.value0,
        tail: v.value1
      });
    }
    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
  };
  var toUnfoldable = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(xs) {
      return map11(function(rec) {
        return new Tuple(rec.head, rec.tail);
      })(uncons(xs));
    });
  };
  var singleton3 = function(a2) {
    return new Cons(a2, Nil.value);
  };
  var reverse = /* @__PURE__ */ (function() {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v1 instanceof Nil) {
            $tco_done = true;
            return v;
          }
          ;
          if (v1 instanceof Cons) {
            $tco_var_v = new Cons(v1.value0, v);
            $copy_v1 = v1.value1;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return go2(Nil.value);
  })();
  var unsnoc = function(lst) {
    var go2 = function($copy_v) {
      return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
          if (v instanceof Nil) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Cons && v.value1 instanceof Nil) {
            $tco_done = true;
            return new Just({
              revInit: v1,
              last: v.value0
            });
          }
          ;
          if (v instanceof Cons) {
            $tco_var_v = v.value1;
            $copy_v1 = new Cons(v.value0, v1);
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 21): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
    return map11(function(h) {
      return {
        init: reverse(h.revInit),
        last: h.last
      };
    })(go2(lst)(Nil.value));
  };
  var $$null = function(v) {
    if (v instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var fromFoldable = function(dictFoldable) {
    return foldr(dictFoldable)(Cons.create)(Nil.value);
  };

  // output/Data.Map.Internal/index.js
  var Leaf = /* @__PURE__ */ (function() {
    function Leaf2() {
    }
    ;
    Leaf2.value = new Leaf2();
    return Leaf2;
  })();
  var Two = /* @__PURE__ */ (function() {
    function Two2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Two2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Two2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Two2;
  })();
  var Three = /* @__PURE__ */ (function() {
    function Three2(value0, value1, value22, value32, value42, value52, value62) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
      this.value6 = value62;
    }
    ;
    Three2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return function(value62) {
                  return new Three2(value0, value1, value22, value32, value42, value52, value62);
                };
              };
            };
          };
        };
      };
    };
    return Three2;
  })();
  var TwoLeft = /* @__PURE__ */ (function() {
    function TwoLeft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    TwoLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new TwoLeft2(value0, value1, value22);
        };
      };
    };
    return TwoLeft2;
  })();
  var TwoRight = /* @__PURE__ */ (function() {
    function TwoRight2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    TwoRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new TwoRight2(value0, value1, value22);
        };
      };
    };
    return TwoRight2;
  })();
  var ThreeLeft = /* @__PURE__ */ (function() {
    function ThreeLeft2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeLeft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeLeft2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeLeft2;
  })();
  var ThreeMiddle = /* @__PURE__ */ (function() {
    function ThreeMiddle2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeMiddle2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeMiddle2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeMiddle2;
  })();
  var ThreeRight = /* @__PURE__ */ (function() {
    function ThreeRight2(value0, value1, value22, value32, value42, value52) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
      this.value4 = value42;
      this.value5 = value52;
    }
    ;
    ThreeRight2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return function(value42) {
              return function(value52) {
                return new ThreeRight2(value0, value1, value22, value32, value42, value52);
              };
            };
          };
        };
      };
    };
    return ThreeRight2;
  })();
  var KickUp = /* @__PURE__ */ (function() {
    function KickUp2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    KickUp2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new KickUp2(value0, value1, value22, value32);
          };
        };
      };
    };
    return KickUp2;
  })();
  var singleton4 = function(k) {
    return function(v) {
      return new Two(Leaf.value, k, v, Leaf.value);
    };
  };
  var toUnfoldable2 = function(dictUnfoldable) {
    var unfoldr3 = unfoldr(dictUnfoldable);
    return function(m) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof Leaf) {
              $copy_v = v.value1;
              return;
            }
            ;
            if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), v.value1));
            }
            ;
            if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
              $tco_done = true;
              return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), new Cons(v.value0.value3, v.value1)));
            }
            ;
            if (v.value0 instanceof Two) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton4(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, v.value1)));
              return;
            }
            ;
            if (v.value0 instanceof Three) {
              $copy_v = new Cons(v.value0.value0, new Cons(singleton4(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, new Cons(singleton4(v.value0.value4)(v.value0.value5), new Cons(v.value0.value6, v.value1)))));
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return unfoldr3(go2)(new Cons(m, Nil.value));
    };
  };
  var lookup = function(dictOrd) {
    var compare4 = compare(dictOrd);
    return function(k) {
      var go2 = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Leaf) {
            $tco_done = true;
            return Nothing.value;
          }
          ;
          if (v instanceof Two) {
            var v2 = compare4(k)(v.value1);
            if (v2 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            if (v2 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          if (v instanceof Three) {
            var v3 = compare4(k)(v.value1);
            if (v3 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value2);
            }
            ;
            var v4 = compare4(k)(v.value4);
            if (v4 instanceof EQ) {
              $tco_done = true;
              return new Just(v.value5);
            }
            ;
            if (v3 instanceof LT) {
              $copy_v = v.value0;
              return;
            }
            ;
            if (v4 instanceof GT) {
              $copy_v = v.value6;
              return;
            }
            ;
            $copy_v = v.value3;
            return;
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go2;
    };
  };
  var member = function(dictOrd) {
    var lookup17 = lookup(dictOrd);
    return function(k) {
      return function(m) {
        return isJust(lookup17(k)(m));
      };
    };
  };
  var isEmpty = function(v) {
    if (v instanceof Leaf) {
      return true;
    }
    ;
    return false;
  };
  var functorMap = {
    map: function(v) {
      return function(v1) {
        if (v1 instanceof Leaf) {
          return Leaf.value;
        }
        ;
        if (v1 instanceof Two) {
          return new Two(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3));
        }
        ;
        if (v1 instanceof Three) {
          return new Three(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), map(functorMap)(v)(v1.value6));
        }
        ;
        throw new Error("Failed pattern match at Data.Map.Internal (line 116, column 1 - line 119, column 110): " + [v.constructor.name, v1.constructor.name]);
      };
    }
  };
  var fromZipper = function($copy_dictOrd) {
    return function($copy_v) {
      return function($copy_v1) {
        var $tco_var_dictOrd = $copy_dictOrd;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(dictOrd, v, v1) {
          if (v instanceof Nil) {
            $tco_done = true;
            return v1;
          }
          ;
          if (v instanceof Cons) {
            if (v.value0 instanceof TwoLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1, v.value0.value2);
              return;
            }
            ;
            if (v.value0 instanceof TwoRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1);
              return;
            }
            ;
            if (v.value0 instanceof ThreeLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeMiddle) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }
            ;
            if (v.value0 instanceof ThreeRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, v1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): " + [v.value0.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): " + [v.constructor.name, v1.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_v1);
        }
        ;
        return $tco_result;
      };
    };
  };
  var insert = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare4 = compare(dictOrd);
    return function(k) {
      return function(v) {
        var up = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v1 instanceof Nil) {
                $tco_done = true;
                return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
              }
              ;
              if (v1 instanceof Cons) {
                if (v1.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                }
                ;
                if (v1.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper1(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                }
                ;
                if (v1.value0 instanceof ThreeLeft) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeMiddle) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }
                ;
                if (v1.value0 instanceof ThreeRight) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        var down = function($copy_v1) {
          return function($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(v1, v2) {
              if (v2 instanceof Leaf) {
                $tco_done1 = true;
                return up(v1)(new KickUp(Leaf.value, k, v, Leaf.value));
              }
              ;
              if (v2 instanceof Two) {
                var v3 = compare4(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Two(v2.value0, k, v, v2.value3));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new TwoLeft(v2.value1, v2.value2, v2.value3), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new TwoRight(v2.value0, v2.value1, v2.value2), v1);
                $copy_v2 = v2.value3;
                return;
              }
              ;
              if (v2 instanceof Three) {
                var v3 = compare4(k)(v2.value1);
                if (v3 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, k, v, v2.value3, v2.value4, v2.value5, v2.value6));
                }
                ;
                var v4 = compare4(k)(v2.value4);
                if (v4 instanceof EQ) {
                  $tco_done1 = true;
                  return fromZipper1(v1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, k, v, v2.value6));
                }
                ;
                if (v3 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeLeft(v2.value1, v2.value2, v2.value3, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value0;
                  return;
                }
                ;
                if (v3 instanceof GT && v4 instanceof LT) {
                  $tco_var_v1 = new Cons(new ThreeMiddle(v2.value0, v2.value1, v2.value2, v2.value4, v2.value5, v2.value6), v1);
                  $copy_v2 = v2.value3;
                  return;
                }
                ;
                $tco_var_v1 = new Cons(new ThreeRight(v2.value0, v2.value1, v2.value2, v2.value3, v2.value4, v2.value5), v1);
                $copy_v2 = v2.value6;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): " + [v1.constructor.name, v2.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }
            ;
            return $tco_result;
          };
        };
        return down(Nil.value);
      };
    };
  };
  var pop = function(dictOrd) {
    var fromZipper1 = fromZipper(dictOrd);
    var compare4 = compare(dictOrd);
    return function(k) {
      var up = function($copy_ctxs) {
        return function($copy_tree) {
          var $tco_var_ctxs = $copy_ctxs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(ctxs, tree2) {
            if (ctxs instanceof Nil) {
              $tco_done = true;
              return tree2;
            }
            ;
            if (ctxs instanceof Cons) {
              if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree2 instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree2 instanceof Leaf)) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree2);
                return;
              }
              ;
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
              }
              ;
              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree2)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree2 instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree2 instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree2 instanceof Leaf))) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree2), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree2, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree2)));
              }
              ;
              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(tree2, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree2), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }
              ;
              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree2, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
              }
              ;
              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                $tco_done = true;
                return fromZipper1(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree2)));
              }
              ;
              $tco_done = true;
              return unsafeCrashWith("The impossible happened in partial function `up`.");
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): " + [ctxs.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
          }
          ;
          return $tco_result;
        };
      };
      var removeMaxNode = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done1 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
              $tco_done1 = true;
              return up(ctx)(Leaf.value);
            }
            ;
            if (m instanceof Two) {
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
              $tco_done1 = true;
              return up(new Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
            }
            ;
            if (m instanceof Three) {
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            $tco_done1 = true;
            return unsafeCrashWith("The impossible happened in partial function `removeMaxNode`.");
          }
          ;
          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      var maxNode = function($copy_m) {
        var $tco_done2 = false;
        var $tco_result;
        function $tco_loop(m) {
          if (m instanceof Two && m.value3 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value1,
              value: m.value2
            };
          }
          ;
          if (m instanceof Two) {
            $copy_m = m.value3;
            return;
          }
          ;
          if (m instanceof Three && m.value6 instanceof Leaf) {
            $tco_done2 = true;
            return {
              key: m.value4,
              value: m.value5
            };
          }
          ;
          if (m instanceof Three) {
            $copy_m = m.value6;
            return;
          }
          ;
          $tco_done2 = true;
          return unsafeCrashWith("The impossible happened in partial function `maxNode`.");
        }
        ;
        while (!$tco_done2) {
          $tco_result = $tco_loop($copy_m);
        }
        ;
        return $tco_result;
      };
      var down = function($copy_ctx) {
        return function($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done3 = false;
          var $tco_result;
          function $tco_loop(ctx, m) {
            if (m instanceof Leaf) {
              $tco_done3 = true;
              return Nothing.value;
            }
            ;
            if (m instanceof Two) {
              var v = compare4(k)(m.value1);
              if (m.value3 instanceof Leaf && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, up(ctx)(Leaf.value)));
              }
              ;
              if (v instanceof EQ) {
                var max9 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new TwoLeft(max9.key, max9.value, m.value3), ctx))(m.value0)));
              }
              ;
              if (v instanceof LT) {
                $tco_var_ctx = new Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three) {
              var leaves = (function() {
                if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                  return true;
                }
                ;
                return false;
              })();
              var v = compare4(k)(m.value4);
              var v3 = compare4(k)(m.value1);
              if (leaves && v3 instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, fromZipper1(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
              }
              ;
              if (leaves && v instanceof EQ) {
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, fromZipper1(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
              }
              ;
              if (v3 instanceof EQ) {
                var max9 = maxNode(m.value0);
                $tco_done3 = true;
                return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new ThreeLeft(max9.key, max9.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
              }
              ;
              if (v instanceof EQ) {
                var max9 = maxNode(m.value3);
                $tco_done3 = true;
                return new Just(new Tuple(m.value5, removeMaxNode(new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max9.key, max9.value, m.value6), ctx))(m.value3)));
              }
              ;
              if (v3 instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value0;
                return;
              }
              ;
              if (v3 instanceof GT && v instanceof LT) {
                $tco_var_ctx = new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value3;
                return;
              }
              ;
              $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): " + [m.constructor.name]);
          }
          ;
          while (!$tco_done3) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }
          ;
          return $tco_result;
        };
      };
      return down(Nil.value);
    };
  };
  var foldableMap = {
    foldr: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(f(m.value5)(foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldl: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): " + [m.constructor.name]);
        };
      };
    },
    foldMap: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      var append23 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty2;
          }
          ;
          if (m instanceof Two) {
            return append23(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append23(f(m.value2))(foldMap(foldableMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append23(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append23(f(m.value2))(append23(foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append23(f(m.value5))(foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): " + [m.constructor.name]);
        };
      };
    }
  };
  var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);
          }
          ;
          if (m instanceof Three) {
            return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldlWithIndex: function(f) {
      return function(z) {
        return function(m) {
          if (m instanceof Leaf) {
            return z;
          }
          ;
          if (m instanceof Two) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);
          }
          ;
          if (m instanceof Three) {
            return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): " + [m.constructor.name]);
        };
      };
    },
    foldMapWithIndex: function(dictMonoid) {
      var mempty2 = mempty(dictMonoid);
      var append23 = append(dictMonoid.Semigroup0());
      return function(f) {
        return function(m) {
          if (m instanceof Leaf) {
            return mempty2;
          }
          ;
          if (m instanceof Two) {
            return append23(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append23(f(m.value1)(m.value2))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));
          }
          ;
          if (m instanceof Three) {
            return append23(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append23(f(m.value1)(m.value2))(append23(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append23(f(m.value4)(m.value5))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): " + [m.constructor.name]);
        };
      };
    },
    Foldable0: function() {
      return foldableMap;
    }
  };
  var foldrWithIndex2 = /* @__PURE__ */ foldrWithIndex(foldableWithIndexMap);
  var keys = /* @__PURE__ */ (function() {
    return foldrWithIndex2(function(k) {
      return function(v) {
        return function(acc) {
          return new Cons(k, acc);
        };
      };
    })(Nil.value);
  })();
  var values = /* @__PURE__ */ (function() {
    return foldr(foldableMap)(Cons.create)(Nil.value);
  })();
  var empty2 = /* @__PURE__ */ (function() {
    return Leaf.value;
  })();
  var fromFoldable2 = function(dictOrd) {
    var insert17 = insert(dictOrd);
    return function(dictFoldable) {
      return foldl(dictFoldable)(function(m) {
        return function(v) {
          return insert17(v.value0)(v.value1)(m);
        };
      })(empty2);
    };
  };
  var $$delete = function(dictOrd) {
    var pop12 = pop(dictOrd);
    return function(k) {
      return function(m) {
        return maybe(m)(snd)(pop12(k)(m));
      };
    };
  };
  var alter = function(dictOrd) {
    var lookup17 = lookup(dictOrd);
    var delete1 = $$delete(dictOrd);
    var insert17 = insert(dictOrd);
    return function(f) {
      return function(k) {
        return function(m) {
          var v = f(lookup17(k)(m));
          if (v instanceof Nothing) {
            return delete1(k)(m);
          }
          ;
          if (v instanceof Just) {
            return insert17(k)(v.value0)(m);
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): " + [v.constructor.name]);
        };
      };
    };
  };
  var fromFoldableWith = function(dictOrd) {
    var alter1 = alter(dictOrd);
    return function(dictFoldable) {
      var foldl12 = foldl(dictFoldable);
      return function(f) {
        var combine = function(v) {
          return function(v1) {
            if (v1 instanceof Just) {
              return new Just(f(v)(v1.value0));
            }
            ;
            if (v1 instanceof Nothing) {
              return new Just(v);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 613, column 3 - line 613, column 38): " + [v.constructor.name, v1.constructor.name]);
          };
        };
        return foldl12(function(m) {
          return function(v) {
            return alter1(combine(v.value1))(v.value0)(m);
          };
        })(empty2);
      };
    };
  };

  // output/Halogen.Data.OrdBox/index.js
  var OrdBox = /* @__PURE__ */ (function() {
    function OrdBox2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    OrdBox2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new OrdBox2(value0, value1, value22);
        };
      };
    };
    return OrdBox2;
  })();
  var mkOrdBox = function(dictOrd) {
    return OrdBox.create(eq(dictOrd.Eq0()))(compare(dictOrd));
  };
  var eqOrdBox = {
    eq: function(v) {
      return function(v1) {
        return v.value0(v.value2)(v1.value2);
      };
    }
  };
  var ordOrdBox = {
    compare: function(v) {
      return function(v1) {
        return v.value1(v.value2)(v1.value2);
      };
    },
    Eq0: function() {
      return eqOrdBox;
    }
  };

  // output/Halogen.Data.Slot/index.js
  var ordTuple2 = /* @__PURE__ */ ordTuple(ordString)(ordOrdBox);
  var pop1 = /* @__PURE__ */ pop(ordTuple2);
  var lookup1 = /* @__PURE__ */ lookup(ordTuple2);
  var insert1 = /* @__PURE__ */ insert(ordTuple2);
  var pop2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(v) {
              return pop1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(v);
            };
          };
        };
      };
    };
  };
  var lookup2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(v) {
              return lookup1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(v);
            };
          };
        };
      };
    };
  };
  var insert2 = function() {
    return function(dictIsSymbol) {
      var reflectSymbol2 = reflectSymbol(dictIsSymbol);
      return function(dictOrd) {
        var mkOrdBox2 = mkOrdBox(dictOrd);
        return function(sym) {
          return function(key) {
            return function(val) {
              return function(v) {
                return insert1(new Tuple(reflectSymbol2(sym), mkOrdBox2(key)))(val)(v);
              };
            };
          };
        };
      };
    };
  };
  var foreachSlot = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMap);
    return function(v) {
      return function(k) {
        return traverse_7(function($54) {
          return k($54);
        })(v);
      };
    };
  };
  var empty3 = empty2;

  // output/DOM.HTML.Indexed.ButtonType/index.js
  var ButtonButton = /* @__PURE__ */ (function() {
    function ButtonButton2() {
    }
    ;
    ButtonButton2.value = new ButtonButton2();
    return ButtonButton2;
  })();
  var ButtonSubmit = /* @__PURE__ */ (function() {
    function ButtonSubmit2() {
    }
    ;
    ButtonSubmit2.value = new ButtonSubmit2();
    return ButtonSubmit2;
  })();
  var ButtonReset = /* @__PURE__ */ (function() {
    function ButtonReset2() {
    }
    ;
    ButtonReset2.value = new ButtonReset2();
    return ButtonReset2;
  })();
  var renderButtonType = function(v) {
    if (v instanceof ButtonButton) {
      return "button";
    }
    ;
    if (v instanceof ButtonSubmit) {
      return "submit";
    }
    ;
    if (v instanceof ButtonReset) {
      return "reset";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 14, column 20 - line 17, column 25): " + [v.constructor.name]);
  };

  // output/Data.String.Common/foreign.js
  var split = function(sep) {
    return function(s) {
      return s.split(sep);
    };
  };
  var toLower = function(s) {
    return s.toLowerCase();
  };
  var trim = function(s) {
    return s.trim();
  };
  var joinWith = function(s) {
    return function(xs) {
      return xs.join(s);
    };
  };

  // output/Data.String.Common/index.js
  var $$null2 = function(s) {
    return s === "";
  };

  // output/DOM.HTML.Indexed.InputType/index.js
  var InputButton = /* @__PURE__ */ (function() {
    function InputButton2() {
    }
    ;
    InputButton2.value = new InputButton2();
    return InputButton2;
  })();
  var InputCheckbox = /* @__PURE__ */ (function() {
    function InputCheckbox2() {
    }
    ;
    InputCheckbox2.value = new InputCheckbox2();
    return InputCheckbox2;
  })();
  var InputColor = /* @__PURE__ */ (function() {
    function InputColor2() {
    }
    ;
    InputColor2.value = new InputColor2();
    return InputColor2;
  })();
  var InputDate = /* @__PURE__ */ (function() {
    function InputDate2() {
    }
    ;
    InputDate2.value = new InputDate2();
    return InputDate2;
  })();
  var InputDatetimeLocal = /* @__PURE__ */ (function() {
    function InputDatetimeLocal2() {
    }
    ;
    InputDatetimeLocal2.value = new InputDatetimeLocal2();
    return InputDatetimeLocal2;
  })();
  var InputEmail = /* @__PURE__ */ (function() {
    function InputEmail2() {
    }
    ;
    InputEmail2.value = new InputEmail2();
    return InputEmail2;
  })();
  var InputFile = /* @__PURE__ */ (function() {
    function InputFile2() {
    }
    ;
    InputFile2.value = new InputFile2();
    return InputFile2;
  })();
  var InputHidden = /* @__PURE__ */ (function() {
    function InputHidden2() {
    }
    ;
    InputHidden2.value = new InputHidden2();
    return InputHidden2;
  })();
  var InputImage = /* @__PURE__ */ (function() {
    function InputImage2() {
    }
    ;
    InputImage2.value = new InputImage2();
    return InputImage2;
  })();
  var InputMonth = /* @__PURE__ */ (function() {
    function InputMonth2() {
    }
    ;
    InputMonth2.value = new InputMonth2();
    return InputMonth2;
  })();
  var InputNumber = /* @__PURE__ */ (function() {
    function InputNumber2() {
    }
    ;
    InputNumber2.value = new InputNumber2();
    return InputNumber2;
  })();
  var InputPassword = /* @__PURE__ */ (function() {
    function InputPassword2() {
    }
    ;
    InputPassword2.value = new InputPassword2();
    return InputPassword2;
  })();
  var InputRadio = /* @__PURE__ */ (function() {
    function InputRadio2() {
    }
    ;
    InputRadio2.value = new InputRadio2();
    return InputRadio2;
  })();
  var InputRange = /* @__PURE__ */ (function() {
    function InputRange2() {
    }
    ;
    InputRange2.value = new InputRange2();
    return InputRange2;
  })();
  var InputReset = /* @__PURE__ */ (function() {
    function InputReset2() {
    }
    ;
    InputReset2.value = new InputReset2();
    return InputReset2;
  })();
  var InputSearch = /* @__PURE__ */ (function() {
    function InputSearch2() {
    }
    ;
    InputSearch2.value = new InputSearch2();
    return InputSearch2;
  })();
  var InputSubmit = /* @__PURE__ */ (function() {
    function InputSubmit2() {
    }
    ;
    InputSubmit2.value = new InputSubmit2();
    return InputSubmit2;
  })();
  var InputTel = /* @__PURE__ */ (function() {
    function InputTel2() {
    }
    ;
    InputTel2.value = new InputTel2();
    return InputTel2;
  })();
  var InputText = /* @__PURE__ */ (function() {
    function InputText2() {
    }
    ;
    InputText2.value = new InputText2();
    return InputText2;
  })();
  var InputTime = /* @__PURE__ */ (function() {
    function InputTime2() {
    }
    ;
    InputTime2.value = new InputTime2();
    return InputTime2;
  })();
  var InputUrl = /* @__PURE__ */ (function() {
    function InputUrl2() {
    }
    ;
    InputUrl2.value = new InputUrl2();
    return InputUrl2;
  })();
  var InputWeek = /* @__PURE__ */ (function() {
    function InputWeek2() {
    }
    ;
    InputWeek2.value = new InputWeek2();
    return InputWeek2;
  })();
  var renderInputType = function(v) {
    if (v instanceof InputButton) {
      return "button";
    }
    ;
    if (v instanceof InputCheckbox) {
      return "checkbox";
    }
    ;
    if (v instanceof InputColor) {
      return "color";
    }
    ;
    if (v instanceof InputDate) {
      return "date";
    }
    ;
    if (v instanceof InputDatetimeLocal) {
      return "datetime-local";
    }
    ;
    if (v instanceof InputEmail) {
      return "email";
    }
    ;
    if (v instanceof InputFile) {
      return "file";
    }
    ;
    if (v instanceof InputHidden) {
      return "hidden";
    }
    ;
    if (v instanceof InputImage) {
      return "image";
    }
    ;
    if (v instanceof InputMonth) {
      return "month";
    }
    ;
    if (v instanceof InputNumber) {
      return "number";
    }
    ;
    if (v instanceof InputPassword) {
      return "password";
    }
    ;
    if (v instanceof InputRadio) {
      return "radio";
    }
    ;
    if (v instanceof InputRange) {
      return "range";
    }
    ;
    if (v instanceof InputReset) {
      return "reset";
    }
    ;
    if (v instanceof InputSearch) {
      return "search";
    }
    ;
    if (v instanceof InputSubmit) {
      return "submit";
    }
    ;
    if (v instanceof InputTel) {
      return "tel";
    }
    ;
    if (v instanceof InputText) {
      return "text";
    }
    ;
    if (v instanceof InputTime) {
      return "time";
    }
    ;
    if (v instanceof InputUrl) {
      return "url";
    }
    ;
    if (v instanceof InputWeek) {
      return "week";
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 33, column 19 - line 55, column 22): " + [v.constructor.name]);
  };

  // output/DOM.HTML.Indexed.StepValue/index.js
  var show2 = /* @__PURE__ */ show(showNumber);
  var Any = /* @__PURE__ */ (function() {
    function Any2() {
    }
    ;
    Any2.value = new Any2();
    return Any2;
  })();
  var Step = /* @__PURE__ */ (function() {
    function Step4(value0) {
      this.value0 = value0;
    }
    ;
    Step4.create = function(value0) {
      return new Step4(value0);
    };
    return Step4;
  })();
  var renderStepValue = function(v) {
    if (v instanceof Any) {
      return "any";
    }
    ;
    if (v instanceof Step) {
      return show2(v.value0);
    }
    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 13, column 19 - line 15, column 19): " + [v.constructor.name]);
  };

  // output/Halogen.Query.Input/index.js
  var RefUpdate = /* @__PURE__ */ (function() {
    function RefUpdate2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RefUpdate2.create = function(value0) {
      return function(value1) {
        return new RefUpdate2(value0, value1);
      };
    };
    return RefUpdate2;
  })();
  var Action = /* @__PURE__ */ (function() {
    function Action3(value0) {
      this.value0 = value0;
    }
    ;
    Action3.create = function(value0) {
      return new Action3(value0);
    };
    return Action3;
  })();

  // output/Data.Array/foreign.js
  var range2 = function(start5) {
    return function(end2) {
      var step5 = start5 > end2 ? -1 : 1;
      var result = new Array(step5 * (end2 - start5) + 1);
      var i2 = start5, n = 0;
      while (i2 !== end2) {
        result[n++] = i2;
        i2 += step5;
      }
      result[n] = i2;
      return result;
    };
  };
  var replicateFill = function(count) {
    return function(value19) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value19);
    };
  };
  var replicatePolyfill = function(count) {
    return function(value19) {
      var result = [];
      var n = 0;
      for (var i2 = 0; i2 < count; i2++) {
        result[n++] = value19;
      }
      return result;
    };
  };
  var replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
  var fromFoldableImpl = /* @__PURE__ */ (function() {
    function Cons3(head7, tail2) {
      this.head = head7;
      this.tail = tail2;
    }
    var emptyList = {};
    function curryCons(head7) {
      return function(tail2) {
        return new Cons3(head7, tail2);
      };
    }
    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }
    return function(foldr5) {
      return function(xs) {
        return listToArray(foldr5(curryCons)(emptyList)(xs));
      };
    };
  })();
  var length4 = function(xs) {
    return xs.length;
  };
  var unconsImpl = function(empty9) {
    return function(next2) {
      return function(xs) {
        return xs.length === 0 ? empty9({}) : next2(xs[0])(xs.slice(1));
      };
    };
  };
  var indexImpl = function(just) {
    return function(nothing) {
      return function(xs) {
        return function(i2) {
          return i2 < 0 || i2 >= xs.length ? nothing : just(xs[i2]);
        };
      };
    };
  };
  var findIndexImpl = function(just) {
    return function(nothing) {
      return function(f) {
        return function(xs) {
          for (var i2 = 0, l = xs.length; i2 < l; i2++) {
            if (f(xs[i2])) return just(i2);
          }
          return nothing;
        };
      };
    };
  };
  var _deleteAt = function(just) {
    return function(nothing) {
      return function(i2) {
        return function(l) {
          if (i2 < 0 || i2 >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i2, 1);
          return just(l1);
        };
      };
    };
  };
  var reverse2 = function(l) {
    return l.slice().reverse();
  };
  var concat = function(xss) {
    if (xss.length <= 1e4) {
      return Array.prototype.concat.apply([], xss);
    }
    var result = [];
    for (var i2 = 0, l = xss.length; i2 < l; i2++) {
      var xs = xss[i2];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };
  var filter2 = function(f) {
    return function(xs) {
      return xs.filter(f);
    };
  };
  var partition = function(f) {
    return function(xs) {
      var yes = [];
      var no = [];
      for (var i2 = 0; i2 < xs.length; i2++) {
        var x30 = xs[i2];
        if (f(x30))
          yes.push(x30);
        else
          no.push(x30);
      }
      return { yes, no };
    };
  };
  var sortByImpl = /* @__PURE__ */ (function() {
    function mergeFromTo(compare4, fromOrdering, xs1, xs2, from3, to2) {
      var mid;
      var i2;
      var j;
      var k;
      var x30;
      var y28;
      var c;
      mid = from3 + (to2 - from3 >> 1);
      if (mid - from3 > 1) mergeFromTo(compare4, fromOrdering, xs2, xs1, from3, mid);
      if (to2 - mid > 1) mergeFromTo(compare4, fromOrdering, xs2, xs1, mid, to2);
      i2 = from3;
      j = mid;
      k = from3;
      while (i2 < mid && j < to2) {
        x30 = xs2[i2];
        y28 = xs2[j];
        c = fromOrdering(compare4(x30)(y28));
        if (c > 0) {
          xs1[k++] = y28;
          ++j;
        } else {
          xs1[k++] = x30;
          ++i2;
        }
      }
      while (i2 < mid) {
        xs1[k++] = xs2[i2++];
      }
      while (j < to2) {
        xs1[k++] = xs2[j++];
      }
    }
    return function(compare4) {
      return function(fromOrdering) {
        return function(xs) {
          var out;
          if (xs.length < 2) return xs;
          out = xs.slice(0);
          mergeFromTo(compare4, fromOrdering, out, xs.slice(0), 0, xs.length);
          return out;
        };
      };
    };
  })();
  var slice = function(s) {
    return function(e) {
      return function(l) {
        return l.slice(s, e);
      };
    };
  };
  var zipWith = function(f) {
    return function(xs) {
      return function(ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i2 = 0; i2 < l; i2++) {
          result[i2] = f(xs[i2])(ys[i2]);
        }
        return result;
      };
    };
  };
  var any2 = function(p2) {
    return function(xs) {
      var len = xs.length;
      for (var i2 = 0; i2 < len; i2++) {
        if (p2(xs[i2])) return true;
      }
      return false;
    };
  };
  var unsafeIndexImpl = function(xs) {
    return function(n) {
      return xs[n];
    };
  };

  // output/Control.Monad.ST.Internal/foreign.js
  var map_ = function(f) {
    return function(a2) {
      return function() {
        return f(a2());
      };
    };
  };
  var pure_ = function(a2) {
    return function() {
      return a2;
    };
  };
  var bind_ = function(a2) {
    return function(f) {
      return function() {
        return f(a2())();
      };
    };
  };
  function whileST(f) {
    return function(a2) {
      return function() {
        while (f()) {
          a2();
        }
      };
    };
  }
  var foreach = function(as) {
    return function(f) {
      return function() {
        for (var i2 = 0, l = as.length; i2 < l; i2++) {
          f(as[i2])();
        }
      };
    };
  };
  function newSTRef(val) {
    return function() {
      return { value: val };
    };
  }
  var read2 = function(ref2) {
    return function() {
      return ref2.value;
    };
  };
  var modifyImpl2 = function(f) {
    return function(ref2) {
      return function() {
        var t = f(ref2.value);
        ref2.value = t.state;
        return t.value;
      };
    };
  };
  var write2 = function(a2) {
    return function(ref2) {
      return function() {
        return ref2.value = a2;
      };
    };
  };

  // output/Control.Monad.ST.Internal/index.js
  var $runtime_lazy3 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var modify$prime2 = modifyImpl2;
  var modify3 = function(f) {
    return modify$prime2(function(s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };
  var functorST = {
    map: map_
  };
  var map12 = /* @__PURE__ */ map(functorST);
  var $$void4 = /* @__PURE__ */ $$void(functorST);
  var monadST = {
    Applicative0: function() {
      return applicativeST;
    },
    Bind1: function() {
      return bindST;
    }
  };
  var bindST = {
    bind: bind_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var applicativeST = {
    pure: pure_,
    Apply0: function() {
      return $lazy_applyST(0);
    }
  };
  var $lazy_applyST = /* @__PURE__ */ $runtime_lazy3("applyST", "Control.Monad.ST.Internal", function() {
    return {
      apply: ap(monadST),
      Functor0: function() {
        return functorST;
      }
    };
  });
  var bind3 = /* @__PURE__ */ bind(bindST);
  var bindFlipped5 = /* @__PURE__ */ bindFlipped(bindST);
  var discard3 = /* @__PURE__ */ discard(discardUnit)(bindST);
  var pure4 = /* @__PURE__ */ pure(applicativeST);
  var monadRecST = {
    tailRecM: function(f) {
      return function(a2) {
        var isLooping = function(v) {
          if (v instanceof Loop) {
            return true;
          }
          ;
          return false;
        };
        var fromDone = function(v) {
          if (v instanceof Done) {
            return v.value0;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [v.constructor.name]);
        };
        return bind3(bindFlipped5(newSTRef)(f(a2)))(function(r) {
          return discard3(whileST(map12(isLooping)(read2(r)))(bind3(read2(r))(function(v) {
            if (v instanceof Loop) {
              return bind3(f(v.value0))(function(e) {
                return $$void4(write2(e)(r));
              });
            }
            ;
            if (v instanceof Done) {
              return pure4(unit);
            }
            ;
            throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [v.constructor.name]);
          })))(function() {
            return map12(fromDone)(read2(r));
          });
        });
      };
    },
    Monad0: function() {
      return monadST;
    }
  };

  // output/Data.Array.ST/foreign.js
  function newSTArray() {
    return [];
  }
  var pushAll = function(as) {
    return function(xs) {
      return function() {
        return xs.push.apply(xs, as);
      };
    };
  };
  var unsafeFreeze = function(xs) {
    return function() {
      return xs;
    };
  };
  var unsafeThaw = function(xs) {
    return function() {
      return xs;
    };
  };
  function copyImpl(xs) {
    return function() {
      return xs.slice();
    };
  }
  var thaw = copyImpl;

  // output/Data.Array.ST/index.js
  var withArray = function(f) {
    return function(xs) {
      return function __do4() {
        var result = thaw(xs)();
        f(result)();
        return unsafeFreeze(result)();
      };
    };
  };
  var push = function(a2) {
    return pushAll([a2]);
  };

  // output/Data.Array.ST.Iterator/index.js
  var map13 = /* @__PURE__ */ map(functorST);
  var not2 = /* @__PURE__ */ not(heytingAlgebraBoolean);
  var $$void5 = /* @__PURE__ */ $$void(functorST);
  var Iterator = /* @__PURE__ */ (function() {
    function Iterator2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Iterator2.create = function(value0) {
      return function(value1) {
        return new Iterator2(value0, value1);
      };
    };
    return Iterator2;
  })();
  var peek = function(v) {
    return function __do4() {
      var i2 = read2(v.value1)();
      return v.value0(i2);
    };
  };
  var next = function(v) {
    return function __do4() {
      var i2 = read2(v.value1)();
      modify3(function(v1) {
        return v1 + 1 | 0;
      })(v.value1)();
      return v.value0(i2);
    };
  };
  var pushWhile = function(p2) {
    return function(iter) {
      return function(array2) {
        return function __do4() {
          var $$break = newSTRef(false)();
          while (map13(not2)(read2($$break))()) {
            (function __do5() {
              var mx = peek(iter)();
              if (mx instanceof Just && p2(mx.value0)) {
                push(mx.value0)(array2)();
                return $$void5(next(iter))();
              }
              ;
              return $$void5(write2(true)($$break))();
            })();
          }
          ;
          return {};
        };
      };
    };
  };
  var iterator = function(f) {
    return map13(Iterator.create(f))(newSTRef(0));
  };
  var iterate = function(iter) {
    return function(f) {
      return function __do4() {
        var $$break = newSTRef(false)();
        while (map13(not2)(read2($$break))()) {
          (function __do5() {
            var mx = next(iter)();
            if (mx instanceof Just) {
              return f(mx.value0)();
            }
            ;
            if (mx instanceof Nothing) {
              return $$void5(write2(true)($$break))();
            }
            ;
            throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
          })();
        }
        ;
        return {};
      };
    };
  };

  // output/Data.Array/index.js
  var map14 = /* @__PURE__ */ map(functorST);
  var when2 = /* @__PURE__ */ when(applicativeST);
  var $$void6 = /* @__PURE__ */ $$void(functorST);
  var intercalate1 = /* @__PURE__ */ intercalate2(foldableArray);
  var map15 = /* @__PURE__ */ map(functorMaybe);
  var map22 = /* @__PURE__ */ map(functorArray);
  var fromJust4 = /* @__PURE__ */ fromJust();
  var notEq2 = /* @__PURE__ */ notEq(eqOrdering);
  var append2 = /* @__PURE__ */ append(semigroupArray);
  var zip = /* @__PURE__ */ (function() {
    return zipWith(Tuple.create);
  })();
  var unsafeIndex = function() {
    return unsafeIndexImpl;
  };
  var unsafeIndex1 = /* @__PURE__ */ unsafeIndex();
  var uncons2 = /* @__PURE__ */ (function() {
    return unconsImpl($$const(Nothing.value))(function(x30) {
      return function(xs) {
        return new Just({
          head: x30,
          tail: xs
        });
      };
    });
  })();
  var toUnfoldable3 = function(dictUnfoldable) {
    var unfoldr3 = unfoldr(dictUnfoldable);
    return function(xs) {
      var len = length4(xs);
      var f = function(i2) {
        if (i2 < len) {
          return new Just(new Tuple(unsafeIndex1(xs)(i2), i2 + 1 | 0));
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Array (line 156, column 3 - line 158, column 26): " + [i2.constructor.name]);
      };
      return unfoldr3(f)(0);
    };
  };
  var take = function(n) {
    return function(xs) {
      var $147 = n < 1;
      if ($147) {
        return [];
      }
      ;
      return slice(0)(n)(xs);
    };
  };
  var sortBy = function(comp) {
    return sortByImpl(comp)(function(v) {
      if (v instanceof GT) {
        return 1;
      }
      ;
      if (v instanceof EQ) {
        return 0;
      }
      ;
      if (v instanceof LT) {
        return -1 | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 829, column 31 - line 832, column 11): " + [v.constructor.name]);
    });
  };
  var sortWith = function(dictOrd) {
    var comparing3 = comparing(dictOrd);
    return function(f) {
      return sortBy(comparing3(f));
    };
  };
  var sortWith1 = /* @__PURE__ */ sortWith(ordInt);
  var snoc = function(xs) {
    return function(x30) {
      return withArray(push(x30))(xs)();
    };
  };
  var singleton5 = function(a2) {
    return [a2];
  };
  var $$null3 = function(xs) {
    return length4(xs) === 0;
  };
  var nubByEq = function(eq25) {
    return function(xs) {
      return (function __do4() {
        var arr = newSTArray();
        foreach(xs)(function(x30) {
          return function __do5() {
            var e = map14((function() {
              var $179 = any2(function(v) {
                return eq25(v)(x30);
              });
              return function($180) {
                return !$179($180);
              };
            })())(unsafeFreeze(arr))();
            return when2(e)($$void6(push(x30)(arr)))();
          };
        })();
        return unsafeFreeze(arr)();
      })();
    };
  };
  var mapWithIndex3 = function(f) {
    return function(xs) {
      return zipWith(f)(range2(0)(length4(xs) - 1 | 0))(xs);
    };
  };
  var intercalate3 = function(dictMonoid) {
    return intercalate1(dictMonoid);
  };
  var index2 = /* @__PURE__ */ (function() {
    return indexImpl(Just.create)(Nothing.value);
  })();
  var last = function(xs) {
    return index2(xs)(length4(xs) - 1 | 0);
  };
  var head2 = function(xs) {
    return index2(xs)(0);
  };
  var nubBy = function(comp) {
    return function(xs) {
      var indexedAndSorted = sortBy(function(x30) {
        return function(y28) {
          return comp(snd(x30))(snd(y28));
        };
      })(mapWithIndex3(Tuple.create)(xs));
      var v = head2(indexedAndSorted);
      if (v instanceof Nothing) {
        return [];
      }
      ;
      if (v instanceof Just) {
        return map22(snd)(sortWith1(fst)((function __do4() {
          var result = unsafeThaw(singleton5(v.value0))();
          foreach(indexedAndSorted)(function(v1) {
            return function __do5() {
              var lst = map14(/* @__PURE__ */ (function() {
                var $181 = function($183) {
                  return fromJust4(last($183));
                };
                return function($182) {
                  return snd($181($182));
                };
              })())(unsafeFreeze(result))();
              return when2(notEq2(comp(lst)(v1.value1))(EQ.value))($$void6(push(v1)(result)))();
            };
          })();
          return unsafeFreeze(result)();
        })()));
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 1044, column 17 - line 1052, column 29): " + [v.constructor.name]);
    };
  };
  var nub2 = function(dictOrd) {
    return nubBy(compare(dictOrd));
  };
  var groupBy = function(op) {
    return function(xs) {
      return (function __do4() {
        var result = newSTArray();
        var iter = iterator(function(v) {
          return index2(xs)(v);
        })();
        iterate(iter)(function(x30) {
          return $$void6(function __do5() {
            var sub1 = newSTArray();
            push(x30)(sub1)();
            pushWhile(op(x30))(iter)(sub1)();
            var grp = unsafeFreeze(sub1)();
            return push(grp)(result)();
          });
        })();
        return unsafeFreeze(result)();
      })();
    };
  };
  var fromFoldable3 = function(dictFoldable) {
    return fromFoldableImpl(foldr(dictFoldable));
  };
  var foldl2 = /* @__PURE__ */ foldl(foldableArray);
  var findIndex = /* @__PURE__ */ (function() {
    return findIndexImpl(Just.create)(Nothing.value);
  })();
  var find2 = function(f) {
    return function(xs) {
      return map15(unsafeIndex1(xs))(findIndex(f)(xs));
    };
  };
  var elemIndex = function(dictEq) {
    var eq25 = eq(dictEq);
    return function(x30) {
      return findIndex(function(v) {
        return eq25(v)(x30);
      });
    };
  };
  var elem2 = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a2) {
      return function(arr) {
        return isJust(elemIndex1(a2)(arr));
      };
    };
  };
  var deleteAt = /* @__PURE__ */ (function() {
    return _deleteAt(Just.create)(Nothing.value);
  })();
  var deleteBy = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2.length === 0) {
          return [];
        }
        ;
        return maybe(v2)(function(i2) {
          return fromJust4(deleteAt(i2)(v2));
        })(findIndex(v(v1))(v2));
      };
    };
  };
  var cons3 = function(x30) {
    return function(xs) {
      return append2([x30])(xs);
    };
  };
  var concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
  var mapMaybe = function(f) {
    return concatMap((function() {
      var $187 = maybe([])(singleton5);
      return function($188) {
        return $187(f($188));
      };
    })());
  };
  var catMaybes = /* @__PURE__ */ mapMaybe(/* @__PURE__ */ identity(categoryFn));

  // output/Halogen.VDom.Machine/index.js
  var Step2 = /* @__PURE__ */ (function() {
    function Step4(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Step4.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Step4(value0, value1, value22, value32);
          };
        };
      };
    };
    return Step4;
  })();
  var unStep = unsafeCoerce2;
  var step3 = function(v, a2) {
    return v.value2(v.value1, a2);
  };
  var mkStep = unsafeCoerce2;
  var halt = function(v) {
    return v.value3(v.value1);
  };
  var extract2 = /* @__PURE__ */ unStep(function(v) {
    return v.value0;
  });

  // output/Halogen.VDom.Types/index.js
  var map16 = /* @__PURE__ */ map(functorArray);
  var map17 = /* @__PURE__ */ map(functorTuple);
  var Text = /* @__PURE__ */ (function() {
    function Text3(value0) {
      this.value0 = value0;
    }
    ;
    Text3.create = function(value0) {
      return new Text3(value0);
    };
    return Text3;
  })();
  var Elem = /* @__PURE__ */ (function() {
    function Elem2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Elem2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Elem2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Elem2;
  })();
  var Keyed = /* @__PURE__ */ (function() {
    function Keyed2(value0, value1, value22, value32) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
      this.value3 = value32;
    }
    ;
    Keyed2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return function(value32) {
            return new Keyed2(value0, value1, value22, value32);
          };
        };
      };
    };
    return Keyed2;
  })();
  var Widget = /* @__PURE__ */ (function() {
    function Widget2(value0) {
      this.value0 = value0;
    }
    ;
    Widget2.create = function(value0) {
      return new Widget2(value0);
    };
    return Widget2;
  })();
  var Grafted = /* @__PURE__ */ (function() {
    function Grafted2(value0) {
      this.value0 = value0;
    }
    ;
    Grafted2.create = function(value0) {
      return new Grafted2(value0);
    };
    return Grafted2;
  })();
  var Graft = /* @__PURE__ */ (function() {
    function Graft2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Graft2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Graft2(value0, value1, value22);
        };
      };
    };
    return Graft2;
  })();
  var unGraft = function(f) {
    return function($61) {
      return f($61);
    };
  };
  var graft = unsafeCoerce2;
  var bifunctorGraft = {
    bimap: function(f) {
      return function(g) {
        return unGraft(function(v) {
          return graft(new Graft(function($63) {
            return f(v.value0($63));
          }, function($64) {
            return g(v.value1($64));
          }, v.value2));
        });
      };
    }
  };
  var bimap2 = /* @__PURE__ */ bimap(bifunctorGraft);
  var runGraft = /* @__PURE__ */ unGraft(function(v) {
    var go2 = function(v2) {
      if (v2 instanceof Text) {
        return new Text(v2.value0);
      }
      ;
      if (v2 instanceof Elem) {
        return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map16(go2)(v2.value3));
      }
      ;
      if (v2 instanceof Keyed) {
        return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map16(map17(go2))(v2.value3));
      }
      ;
      if (v2 instanceof Widget) {
        return new Widget(v.value1(v2.value0));
      }
      ;
      if (v2 instanceof Grafted) {
        return new Grafted(bimap2(v.value0)(v.value1)(v2.value0));
      }
      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [v2.constructor.name]);
    };
    return go2(v.value2);
  });

  // output/Halogen.VDom.Util/foreign.js
  function unsafeGetAny(key, obj) {
    return obj[key];
  }
  function unsafeHasAny(key, obj) {
    return obj.hasOwnProperty(key);
  }
  function unsafeSetAny(key, val, obj) {
    obj[key] = val;
  }
  function forE2(a2, f) {
    var b2 = [];
    for (var i2 = 0; i2 < a2.length; i2++) {
      b2.push(f(i2, a2[i2]));
    }
    return b2;
  }
  function forEachE(a2, f) {
    for (var i2 = 0; i2 < a2.length; i2++) {
      f(a2[i2]);
    }
  }
  function forInE(o, f) {
    var ks = Object.keys(o);
    for (var i2 = 0; i2 < ks.length; i2++) {
      var k = ks[i2];
      f(k, o[k]);
    }
  }
  function diffWithIxE(a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i2 = 0;
    while (1) {
      if (i2 < l1) {
        if (i2 < l2) {
          a3.push(f1(i2, a1[i2], a2[i2]));
        } else {
          f2(i2, a1[i2]);
        }
      } else if (i2 < l2) {
        a3.push(f3(i2, a2[i2]));
      } else {
        break;
      }
      i2++;
    }
    return a3;
  }
  function strMapWithIxE(as, fk, f) {
    var o = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      o[k] = f(k, i2, a2);
    }
    return o;
  }
  function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i2 = 0; i2 < as.length; i2++) {
      var a2 = as[i2];
      var k = fk(a2);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i2, o1[k], a2);
      } else {
        o2[k] = f3(k, i2, a2);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  }
  function refEq2(a2, b2) {
    return a2 === b2;
  }
  function createTextNode(s, doc) {
    return doc.createTextNode(s);
  }
  function setTextContent(s, n) {
    n.textContent = s;
  }
  function createElement(ns, name16, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name16);
    } else {
      return doc.createElement(name16);
    }
  }
  function insertChildIx(i2, a2, b2) {
    var n = b2.childNodes.item(i2) || null;
    if (n !== a2) {
      b2.insertBefore(a2, n);
    }
  }
  function removeChild(a2, b2) {
    if (b2 && a2.parentNode === b2) {
      b2.removeChild(a2);
    }
  }
  function parentNode(a2) {
    return a2.parentNode;
  }
  function setAttribute(ns, attr3, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr3, val);
    } else {
      el.setAttribute(attr3, val);
    }
  }
  function removeAttribute(ns, attr3, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr3);
    } else {
      el.removeAttribute(attr3);
    }
  }
  function hasAttribute(ns, attr3, el) {
    if (ns != null) {
      return el.hasAttributeNS(ns, attr3);
    } else {
      return el.hasAttribute(attr3);
    }
  }
  function addEventListener2(ev, listener, el) {
    el.addEventListener(ev, listener, false);
  }
  function removeEventListener2(ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  }
  var jsUndefined = void 0;

  // output/Foreign.Object.ST/foreign.js
  var newImpl = function() {
    return {};
  };

  // output/Halogen.VDom.Util/index.js
  var unsafeLookup = unsafeGetAny;
  var unsafeFreeze2 = unsafeCoerce2;
  var pokeMutMap = unsafeSetAny;
  var newMutMap = newImpl;

  // output/Web.DOM.Element/foreign.js
  var getProp = function(name16) {
    return function(doctype) {
      return doctype[name16];
    };
  };
  var _namespaceURI = getProp("namespaceURI");
  var _prefix = getProp("prefix");
  var localName = getProp("localName");
  var tagName = getProp("tagName");

  // output/Web.DOM.Element/index.js
  var toNode2 = unsafeCoerce2;

  // output/Halogen.VDom.DOM/index.js
  var $runtime_lazy4 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var haltWidget = function(v) {
    return halt(v.widget);
  };
  var $lazy_patchWidget = /* @__PURE__ */ $runtime_lazy4("patchWidget", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchWidget(291)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Widget) {
        var res = step3(state3.widget, vdom.value0);
        var res$prime = unStep(function(v) {
          return mkStep(new Step2(v.value0, {
            build: state3.build,
            widget: res
          }, $lazy_patchWidget(296), haltWidget));
        })(res);
        return res$prime;
      }
      ;
      haltWidget(state3);
      return state3.build(vdom);
    };
  });
  var patchWidget = /* @__PURE__ */ $lazy_patchWidget(286);
  var haltText = function(v) {
    var parent2 = parentNode(v.node);
    return removeChild(v.node, parent2);
  };
  var $lazy_patchText = /* @__PURE__ */ $runtime_lazy4("patchText", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchText(82)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Text) {
        if (state3.value === vdom.value0) {
          return mkStep(new Step2(state3.node, state3, $lazy_patchText(85), haltText));
        }
        ;
        if (otherwise) {
          var nextState = {
            build: state3.build,
            node: state3.node,
            value: vdom.value0
          };
          setTextContent(vdom.value0, state3.node);
          return mkStep(new Step2(state3.node, nextState, $lazy_patchText(89), haltText));
        }
        ;
      }
      ;
      haltText(state3);
      return state3.build(vdom);
    };
  });
  var patchText = /* @__PURE__ */ $lazy_patchText(77);
  var haltKeyed = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forInE(v.children, function(v1, s) {
      return halt(s);
    });
    return halt(v.attrs);
  };
  var haltElem = function(v) {
    var parent2 = parentNode(v.node);
    removeChild(v.node, parent2);
    forEachE(v.children, halt);
    return halt(v.attrs);
  };
  var eqElemSpec = function(ns1, v, ns2, v1) {
    var $63 = v === v1;
    if ($63) {
      if (ns1 instanceof Just && (ns2 instanceof Just && ns1.value0 === ns2.value0)) {
        return true;
      }
      ;
      if (ns1 instanceof Nothing && ns2 instanceof Nothing) {
        return true;
      }
      ;
      return false;
    }
    ;
    return false;
  };
  var $lazy_patchElem = /* @__PURE__ */ $runtime_lazy4("patchElem", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchElem(135)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Elem && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length4(vdom.value3);
        var v1 = length4(state3.children);
        if (v1 === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children
          };
          return mkStep(new Step2(state3.node, nextState, $lazy_patchElem(149), haltElem));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(ix, s, v2) {
          var res = step3(s, v2);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var onThat = function(ix, v2) {
          var res = state3.build(v2);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children22 = diffWithIxE(state3.children, vdom.value3, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children22
        };
        return mkStep(new Step2(state3.node, nextState, $lazy_patchElem(172), haltElem));
      }
      ;
      haltElem(state3);
      return state3.build(vdom);
    };
  });
  var patchElem = /* @__PURE__ */ $lazy_patchElem(130);
  var $lazy_patchKeyed = /* @__PURE__ */ $runtime_lazy4("patchKeyed", "Halogen.VDom.DOM", function() {
    return function(state3, vdom) {
      if (vdom instanceof Grafted) {
        return $lazy_patchKeyed(222)(state3, runGraft(vdom.value0));
      }
      ;
      if (vdom instanceof Keyed && eqElemSpec(state3.ns, state3.name, vdom.value0, vdom.value1)) {
        var v = length4(vdom.value3);
        if (state3.length === 0 && v === 0) {
          var attrs2 = step3(state3.attrs, vdom.value2);
          var nextState = {
            build: state3.build,
            node: state3.node,
            attrs: attrs2,
            ns: vdom.value0,
            name: vdom.value1,
            children: state3.children,
            length: 0
          };
          return mkStep(new Step2(state3.node, nextState, $lazy_patchKeyed(237), haltKeyed));
        }
        ;
        var onThis = function(v2, s) {
          return halt(s);
        };
        var onThese = function(v2, ix$prime, s, v3) {
          var res = step3(s, v3.value1);
          insertChildIx(ix$prime, extract2(res), state3.node);
          return res;
        };
        var onThat = function(v2, ix, v3) {
          var res = state3.build(v3.value1);
          insertChildIx(ix, extract2(res), state3.node);
          return res;
        };
        var children22 = diffWithKeyAndIxE(state3.children, vdom.value3, fst, onThese, onThis, onThat);
        var attrs2 = step3(state3.attrs, vdom.value2);
        var nextState = {
          build: state3.build,
          node: state3.node,
          attrs: attrs2,
          ns: vdom.value0,
          name: vdom.value1,
          children: children22,
          length: v
        };
        return mkStep(new Step2(state3.node, nextState, $lazy_patchKeyed(261), haltKeyed));
      }
      ;
      haltKeyed(state3);
      return state3.build(vdom);
    };
  });
  var patchKeyed = /* @__PURE__ */ $lazy_patchKeyed(217);
  var buildWidget = function(v, build, w) {
    var res = v.buildWidget(v)(w);
    var res$prime = unStep(function(v1) {
      return mkStep(new Step2(v1.value0, {
        build,
        widget: res
      }, patchWidget, haltWidget));
    })(res);
    return res$prime;
  };
  var buildText = function(v, build, s) {
    var node = createTextNode(s, v.document);
    var state3 = {
      build,
      node,
      value: s
    };
    return mkStep(new Step2(node, state3, patchText, haltText));
  };
  var buildKeyed = function(v, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(v1, ix, v2) {
      var res = build(v2.value1);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children3 = strMapWithIxE(ch1, fst, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children3,
      length: length4(ch1)
    };
    return mkStep(new Step2(node, state3, patchKeyed, haltKeyed));
  };
  var buildElem = function(v, build, ns1, name1, as1, ch1) {
    var el = createElement(toNullable(ns1), name1, v.document);
    var node = toNode2(el);
    var onChild = function(ix, child) {
      var res = build(child);
      insertChildIx(ix, extract2(res), node);
      return res;
    };
    var children3 = forE2(ch1, onChild);
    var attrs = v.buildAttributes(el)(as1);
    var state3 = {
      build,
      node,
      attrs,
      ns: ns1,
      name: name1,
      children: children3
    };
    return mkStep(new Step2(node, state3, patchElem, haltElem));
  };
  var buildVDom = function(spec) {
    var $lazy_build = $runtime_lazy4("build", "Halogen.VDom.DOM", function() {
      return function(v) {
        if (v instanceof Text) {
          return buildText(spec, $lazy_build(59), v.value0);
        }
        ;
        if (v instanceof Elem) {
          return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Keyed) {
          return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);
        }
        ;
        if (v instanceof Widget) {
          return buildWidget(spec, $lazy_build(62), v.value0);
        }
        ;
        if (v instanceof Grafted) {
          return $lazy_build(63)(runGraft(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
      };
    });
    var build = $lazy_build(58);
    return build;
  };

  // output/Foreign/foreign.js
  function typeOf(value19) {
    return typeof value19;
  }
  function tagOf(value19) {
    return Object.prototype.toString.call(value19).slice(8, -1);
  }
  var isArray = Array.isArray || function(value19) {
    return Object.prototype.toString.call(value19) === "[object Array]";
  };

  // output/Data.Int/foreign.js
  var fromNumberImpl = function(just) {
    return function(nothing) {
      return function(n) {
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
  var toNumber = function(n) {
    return n;
  };
  var fromStringAsImpl = function(just) {
    return function(nothing) {
      return function(radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern2 = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function(s) {
          if (pattern2.test(s)) {
            var i2 = parseInt(s, radix);
            return (i2 | 0) === i2 ? just(i2) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };

  // output/Data.Number/foreign.js
  var infinity = Infinity;
  var isFiniteImpl = isFinite;
  function fromStringImpl(str2, isFinite2, just, nothing) {
    var num = parseFloat(str2);
    if (isFinite2(num)) {
      return just(num);
    } else {
      return nothing;
    }
  }
  var abs = Math.abs;
  var ceil = Math.ceil;
  var cos = Math.cos;
  var floor = Math.floor;
  var log = Math.log;
  var remainder = function(n) {
    return function(m) {
      return n % m;
    };
  };
  var round = Math.round;
  var sin = Math.sin;
  var sqrt = Math.sqrt;

  // output/Data.Number/index.js
  var pi = 3.141592653589793;
  var fromString = function(str2) {
    return fromStringImpl(str2, isFiniteImpl, Just.create, Nothing.value);
  };

  // output/Data.Int/index.js
  var top3 = /* @__PURE__ */ top(boundedInt);
  var bottom3 = /* @__PURE__ */ bottom(boundedInt);
  var fromStringAs = /* @__PURE__ */ (function() {
    return fromStringAsImpl(Just.create)(Nothing.value);
  })();
  var fromString2 = /* @__PURE__ */ fromStringAs(10);
  var fromNumber = /* @__PURE__ */ (function() {
    return fromNumberImpl(Just.create)(Nothing.value);
  })();
  var unsafeClamp = function(x30) {
    if (!isFiniteImpl(x30)) {
      return 0;
    }
    ;
    if (x30 >= toNumber(top3)) {
      return top3;
    }
    ;
    if (x30 <= toNumber(bottom3)) {
      return bottom3;
    }
    ;
    if (otherwise) {
      return fromMaybe(0)(fromNumber(x30));
    }
    ;
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x30.constructor.name]);
  };
  var round2 = function($37) {
    return unsafeClamp(round($37));
  };
  var floor2 = function($39) {
    return unsafeClamp(floor($39));
  };

  // output/Data.List.NonEmpty/index.js
  var singleton6 = /* @__PURE__ */ (function() {
    var $200 = singleton2(plusList);
    return function($201) {
      return NonEmptyList($200($201));
    };
  })();
  var head3 = function(v) {
    return v.value0;
  };
  var cons4 = function(y28) {
    return function(v) {
      return new NonEmpty(y28, new Cons(v.value0, v.value1));
    };
  };

  // output/Data.String.CodeUnits/foreign.js
  var fromCharArray = function(a2) {
    return a2.join("");
  };
  var toCharArray = function(s) {
    return s.split("");
  };
  var singleton7 = function(c) {
    return c;
  };
  var length5 = function(s) {
    return s.length;
  };
  var _indexOf = function(just) {
    return function(nothing) {
      return function(x30) {
        return function(s) {
          var i2 = s.indexOf(x30);
          return i2 === -1 ? nothing : just(i2);
        };
      };
    };
  };
  var take3 = function(n) {
    return function(s) {
      return s.substr(0, n);
    };
  };
  var drop2 = function(n) {
    return function(s) {
      return s.substring(n);
    };
  };
  var splitAt = function(i2) {
    return function(s) {
      return { before: s.substring(0, i2), after: s.substring(i2) };
    };
  };

  // output/Data.String.Unsafe/foreign.js
  var charAt = function(i2) {
    return function(s) {
      if (i2 >= 0 && i2 < s.length) return s.charAt(i2);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };

  // output/Data.String.CodeUnits/index.js
  var stripPrefix = function(v) {
    return function(str2) {
      var v1 = splitAt(length5(v))(str2);
      var $20 = v1.before === v;
      if ($20) {
        return new Just(v1.after);
      }
      ;
      return Nothing.value;
    };
  };
  var indexOf = /* @__PURE__ */ (function() {
    return _indexOf(Just.create)(Nothing.value);
  })();
  var contains = function(pat) {
    var $23 = indexOf(pat);
    return function($24) {
      return isJust($23($24));
    };
  };

  // output/Foreign/index.js
  var show3 = /* @__PURE__ */ show(showString);
  var show1 = /* @__PURE__ */ show(showInt);
  var ForeignError = /* @__PURE__ */ (function() {
    function ForeignError2(value0) {
      this.value0 = value0;
    }
    ;
    ForeignError2.create = function(value0) {
      return new ForeignError2(value0);
    };
    return ForeignError2;
  })();
  var TypeMismatch = /* @__PURE__ */ (function() {
    function TypeMismatch2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TypeMismatch2.create = function(value0) {
      return function(value1) {
        return new TypeMismatch2(value0, value1);
      };
    };
    return TypeMismatch2;
  })();
  var ErrorAtIndex = /* @__PURE__ */ (function() {
    function ErrorAtIndex2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtIndex2.create = function(value0) {
      return function(value1) {
        return new ErrorAtIndex2(value0, value1);
      };
    };
    return ErrorAtIndex2;
  })();
  var ErrorAtProperty = /* @__PURE__ */ (function() {
    function ErrorAtProperty2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ErrorAtProperty2.create = function(value0) {
      return function(value1) {
        return new ErrorAtProperty2(value0, value1);
      };
    };
    return ErrorAtProperty2;
  })();
  var unsafeToForeign = unsafeCoerce2;
  var unsafeFromForeign = unsafeCoerce2;
  var renderForeignError = function(v) {
    if (v instanceof ForeignError) {
      return v.value0;
    }
    ;
    if (v instanceof ErrorAtIndex) {
      return "Error at array index " + (show1(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof ErrorAtProperty) {
      return "Error at property " + (show3(v.value0) + (": " + renderForeignError(v.value1)));
    }
    ;
    if (v instanceof TypeMismatch) {
      return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    }
    ;
    throw new Error("Failed pattern match at Foreign (line 78, column 1 - line 78, column 45): " + [v.constructor.name]);
  };
  var fail = function(dictMonad) {
    var $153 = throwError(monadThrowExceptT(dictMonad));
    return function($154) {
      return $153(singleton6($154));
    };
  };
  var unsafeReadTagged = function(dictMonad) {
    var pure115 = pure(applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
      return function(value19) {
        if (tagOf(value19) === tag) {
          return pure115(unsafeFromForeign(value19));
        }
        ;
        if (otherwise) {
          return fail1(new TypeMismatch(tag, tagOf(value19)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value19.constructor.name]);
      };
    };
  };
  var readBoolean = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Boolean");
  };
  var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
  };

  // output/Foreign.Object/foreign.js
  var empty4 = {};
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  function toArrayWithKey(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
  var keys2 = Object.keys || toArrayWithKey(function(k) {
    return function() {
      return k;
    };
  });

  // output/Foreign.Object/index.js
  var toUnfoldable4 = function(dictUnfoldable) {
    var $86 = toUnfoldable3(dictUnfoldable);
    var $87 = toArrayWithKey(Tuple.create);
    return function($88) {
      return $86($87($88));
    };
  };
  var lookup3 = /* @__PURE__ */ (function() {
    return runFn4(_lookup)(Nothing.value)(Just.create);
  })();

  // output/Halogen.VDom.DOM.Prop/index.js
  var $runtime_lazy5 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var Created = /* @__PURE__ */ (function() {
    function Created2(value0) {
      this.value0 = value0;
    }
    ;
    Created2.create = function(value0) {
      return new Created2(value0);
    };
    return Created2;
  })();
  var Removed = /* @__PURE__ */ (function() {
    function Removed2(value0) {
      this.value0 = value0;
    }
    ;
    Removed2.create = function(value0) {
      return new Removed2(value0);
    };
    return Removed2;
  })();
  var Attribute = /* @__PURE__ */ (function() {
    function Attribute2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    Attribute2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new Attribute2(value0, value1, value22);
        };
      };
    };
    return Attribute2;
  })();
  var Property = /* @__PURE__ */ (function() {
    function Property2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Property2.create = function(value0) {
      return function(value1) {
        return new Property2(value0, value1);
      };
    };
    return Property2;
  })();
  var Handler = /* @__PURE__ */ (function() {
    function Handler2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Handler2.create = function(value0) {
      return function(value1) {
        return new Handler2(value0, value1);
      };
    };
    return Handler2;
  })();
  var Ref = /* @__PURE__ */ (function() {
    function Ref2(value0) {
      this.value0 = value0;
    }
    ;
    Ref2.create = function(value0) {
      return new Ref2(value0);
    };
    return Ref2;
  })();
  var unsafeGetProperty = unsafeGetAny;
  var setProperty = unsafeSetAny;
  var removeProperty = function(key, el) {
    var v = hasAttribute(nullImpl, key, el);
    if (v) {
      return removeAttribute(nullImpl, key, el);
    }
    ;
    var v1 = typeOf(unsafeGetAny(key, el));
    if (v1 === "string") {
      return unsafeSetAny(key, "", el);
    }
    ;
    if (key === "rowSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    if (key === "colSpan") {
      return unsafeSetAny(key, 1, el);
    }
    ;
    return unsafeSetAny(key, jsUndefined, el);
  };
  var propToStrKey = function(v) {
    if (v instanceof Attribute && v.value0 instanceof Just) {
      return "attr/" + (v.value0.value0 + (":" + v.value1));
    }
    ;
    if (v instanceof Attribute) {
      return "attr/:" + v.value1;
    }
    ;
    if (v instanceof Property) {
      return "prop/" + v.value0;
    }
    ;
    if (v instanceof Handler) {
      return "handler/" + v.value0;
    }
    ;
    if (v instanceof Ref) {
      return "ref";
    }
    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [v.constructor.name]);
  };
  var propFromString = unsafeCoerce2;
  var propFromNumber = unsafeCoerce2;
  var propFromBoolean = unsafeCoerce2;
  var buildProp = function(emit) {
    return function(el) {
      var removeProp = function(prevEvents) {
        return function(v, v1) {
          if (v1 instanceof Attribute) {
            return removeAttribute(toNullable(v1.value0), v1.value1, el);
          }
          ;
          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }
          ;
          if (v1 instanceof Handler) {
            var handler3 = unsafeLookup(v1.value0, prevEvents);
            return removeEventListener2(v1.value0, fst(handler3), el);
          }
          ;
          if (v1 instanceof Ref) {
            return unit;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [v1.constructor.name]);
        };
      };
      var mbEmit = function(v) {
        if (v instanceof Just) {
          return emit(v.value0)();
        }
        ;
        return unit;
      };
      var haltProp = function(state3) {
        var v = lookup3("ref")(state3.props);
        if (v instanceof Just && v.value0 instanceof Ref) {
          return mbEmit(v.value0.value0(new Removed(el)));
        }
        ;
        return unit;
      };
      var diffProp = function(prevEvents, events) {
        return function(v, v1, v11, v2) {
          if (v11 instanceof Attribute && v2 instanceof Attribute) {
            var $66 = v11.value2 === v2.value2;
            if ($66) {
              return v2;
            }
            ;
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v11 instanceof Property && v2 instanceof Property) {
            var v4 = refEq2(v11.value1, v2.value1);
            if (v4) {
              return v2;
            }
            ;
            if (v2.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $75 = refEq2(elVal, v2.value1);
              if ($75) {
                return v2;
              }
              ;
              setProperty(v2.value0, v2.value1, el);
              return v2;
            }
            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v11 instanceof Handler && v2 instanceof Handler) {
            var handler3 = unsafeLookup(v2.value0, prevEvents);
            write(v2.value1)(snd(handler3))();
            pokeMutMap(v2.value0, handler3, events);
            return v2;
          }
          ;
          return v2;
        };
      };
      var applyProp = function(events) {
        return function(v, v1, v2) {
          if (v2 instanceof Attribute) {
            setAttribute(toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }
          ;
          if (v2 instanceof Property) {
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }
          ;
          if (v2 instanceof Handler) {
            var v3 = unsafeGetAny(v2.value0, events);
            if (unsafeHasAny(v2.value0, events)) {
              write(v2.value1)(snd(v3))();
              return v2;
            }
            ;
            var ref2 = $$new(v2.value1)();
            var listener = eventListener(function(ev) {
              return function __do4() {
                var f$prime = read(ref2)();
                return mbEmit(f$prime(ev));
              };
            })();
            pokeMutMap(v2.value0, new Tuple(listener, ref2), events);
            addEventListener2(v2.value0, listener, el);
            return v2;
          }
          ;
          if (v2 instanceof Ref) {
            mbEmit(v2.value0(new Created(el)));
            return v2;
          }
          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [v2.constructor.name]);
        };
      };
      var $lazy_patchProp = $runtime_lazy5("patchProp", "Halogen.VDom.DOM.Prop", function() {
        return function(state3, ps2) {
          var events = newMutMap();
          var onThis = removeProp(state3.events);
          var onThese = diffProp(state3.events, events);
          var onThat = applyProp(events);
          var props = diffWithKeyAndIxE(state3.props, ps2, propToStrKey, onThese, onThis, onThat);
          var nextState = {
            events: unsafeFreeze2(events),
            props
          };
          return mkStep(new Step2(unit, nextState, $lazy_patchProp(100), haltProp));
        };
      });
      var patchProp = $lazy_patchProp(87);
      var renderProp = function(ps1) {
        var events = newMutMap();
        var ps1$prime = strMapWithIxE(ps1, propToStrKey, applyProp(events));
        var state3 = {
          events: unsafeFreeze2(events),
          props: ps1$prime
        };
        return mkStep(new Step2(unit, state3, patchProp, haltProp));
      };
      return renderProp;
    };
  };

  // output/Halogen.HTML.Core/index.js
  var HTML = function(x30) {
    return x30;
  };
  var widget = function($28) {
    return HTML(Widget.create($28));
  };
  var toPropValue = function(dict) {
    return dict.toPropValue;
  };
  var text5 = function($29) {
    return HTML(Text.create($29));
  };
  var prop = function(dictIsProp) {
    var toPropValue1 = toPropValue(dictIsProp);
    return function(v) {
      var $31 = Property.create(v);
      return function($32) {
        return $31(toPropValue1($32));
      };
    };
  };
  var isPropString = {
    toPropValue: propFromString
  };
  var isPropStepValue = {
    toPropValue: function($36) {
      return propFromString(renderStepValue($36));
    }
  };
  var isPropNumber = {
    toPropValue: propFromNumber
  };
  var isPropInputType = {
    toPropValue: function($45) {
      return propFromString(renderInputType($45));
    }
  };
  var isPropButtonType = {
    toPropValue: function($50) {
      return propFromString(renderButtonType($50));
    }
  };
  var isPropBoolean = {
    toPropValue: propFromBoolean
  };
  var handler = /* @__PURE__ */ (function() {
    return Handler.create;
  })();
  var element = function(ns) {
    return function(name16) {
      return function(props) {
        return function(children3) {
          return new Elem(ns, name16, props, children3);
        };
      };
    };
  };
  var attr = function(ns) {
    return function(v) {
      return Attribute.create(ns)(v);
    };
  };

  // output/Control.Applicative.Free/index.js
  var identity8 = /* @__PURE__ */ identity(categoryFn);
  var Pure = /* @__PURE__ */ (function() {
    function Pure2(value0) {
      this.value0 = value0;
    }
    ;
    Pure2.create = function(value0) {
      return new Pure2(value0);
    };
    return Pure2;
  })();
  var Lift = /* @__PURE__ */ (function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  })();
  var Ap = /* @__PURE__ */ (function() {
    function Ap2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Ap2.create = function(value0) {
      return function(value1) {
        return new Ap2(value0, value1);
      };
    };
    return Ap2;
  })();
  var mkAp = function(fba) {
    return function(fb) {
      return new Ap(fba, fb);
    };
  };
  var liftFreeAp = /* @__PURE__ */ (function() {
    return Lift.create;
  })();
  var goLeft = function(dictApplicative) {
    var pure45 = pure(dictApplicative);
    return function(fStack) {
      return function(valStack) {
        return function(nat) {
          return function(func) {
            return function(count) {
              if (func instanceof Pure) {
                return new Tuple(new Cons({
                  func: pure45(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Lift) {
                return new Tuple(new Cons({
                  func: nat(func.value0),
                  count
                }, fStack), valStack);
              }
              ;
              if (func instanceof Ap) {
                return goLeft(dictApplicative)(fStack)(cons4(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
            };
          };
        };
      };
    };
  };
  var goApply = function(dictApplicative) {
    var apply6 = apply(dictApplicative.Apply0());
    return function(fStack) {
      return function(vals) {
        return function(gVal) {
          if (fStack instanceof Nil) {
            return new Left(gVal);
          }
          ;
          if (fStack instanceof Cons) {
            var gRes = apply6(fStack.value0.func)(gVal);
            var $31 = fStack.value0.count === 1;
            if ($31) {
              if (fStack.value1 instanceof Nil) {
                return new Left(gRes);
              }
              ;
              return goApply(dictApplicative)(fStack.value1)(vals)(gRes);
            }
            ;
            if (vals instanceof Nil) {
              return new Left(gRes);
            }
            ;
            if (vals instanceof Cons) {
              return new Right(new Tuple(new Cons({
                func: gRes,
                count: fStack.value0.count - 1 | 0
              }, fStack.value1), new NonEmpty(vals.value0, vals.value1)));
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
        };
      };
    };
  };
  var functorFreeAp = {
    map: function(f) {
      return function(x30) {
        return mkAp(new Pure(f))(x30);
      };
    }
  };
  var foldFreeAp = function(dictApplicative) {
    var goApply1 = goApply(dictApplicative);
    var pure45 = pure(dictApplicative);
    var goLeft1 = goLeft(dictApplicative);
    return function(nat) {
      return function(z) {
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.value1.value0 instanceof Pure) {
              var v1 = goApply1(v.value0)(v.value1.value1)(pure45(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Lift) {
              var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
              if (v1 instanceof Left) {
                $tco_done = true;
                return v1.value0;
              }
              ;
              if (v1 instanceof Right) {
                $copy_v = v1.value0;
                return;
              }
              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }
            ;
            if (v.value1.value0 instanceof Ap) {
              var nextVals = new NonEmpty(v.value1.value0.value1, v.value1.value1);
              $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [v.value1.value0.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2(new Tuple(Nil.value, singleton6(z)));
      };
    };
  };
  var retractFreeAp = function(dictApplicative) {
    return foldFreeAp(dictApplicative)(identity8);
  };
  var applyFreeAp = {
    apply: function(fba) {
      return function(fb) {
        return mkAp(fba)(fb);
      };
    },
    Functor0: function() {
      return functorFreeAp;
    }
  };
  var applicativeFreeAp = /* @__PURE__ */ (function() {
    return {
      pure: Pure.create,
      Apply0: function() {
        return applyFreeAp;
      }
    };
  })();
  var foldFreeAp1 = /* @__PURE__ */ foldFreeAp(applicativeFreeAp);
  var hoistFreeAp = function(f) {
    return foldFreeAp1(function($54) {
      return liftFreeAp(f($54));
    });
  };

  // output/Data.CatQueue/index.js
  var CatQueue = /* @__PURE__ */ (function() {
    function CatQueue2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatQueue2.create = function(value0) {
      return function(value1) {
        return new CatQueue2(value0, value1);
      };
    };
    return CatQueue2;
  })();
  var uncons3 = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
        $tco_done = true;
        return Nothing.value;
      }
      ;
      if (v.value0 instanceof Nil) {
        $copy_v = new CatQueue(reverse(v.value1), Nil.value);
        return;
      }
      ;
      if (v.value0 instanceof Cons) {
        $tco_done = true;
        return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
      }
      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var snoc3 = function(v) {
    return function(a2) {
      return new CatQueue(v.value0, new Cons(a2, v.value1));
    };
  };
  var $$null4 = function(v) {
    if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
      return true;
    }
    ;
    return false;
  };
  var empty5 = /* @__PURE__ */ (function() {
    return new CatQueue(Nil.value, Nil.value);
  })();

  // output/Data.CatList/index.js
  var CatNil = /* @__PURE__ */ (function() {
    function CatNil2() {
    }
    ;
    CatNil2.value = new CatNil2();
    return CatNil2;
  })();
  var CatCons = /* @__PURE__ */ (function() {
    function CatCons2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CatCons2.create = function(value0) {
      return function(value1) {
        return new CatCons2(value0, value1);
      };
    };
    return CatCons2;
  })();
  var link = function(v) {
    return function(v1) {
      if (v instanceof CatNil) {
        return v1;
      }
      ;
      if (v1 instanceof CatNil) {
        return v;
      }
      ;
      if (v instanceof CatCons) {
        return new CatCons(v.value0, snoc3(v.value1)(v1));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var foldr3 = function(k) {
    return function(b2) {
      return function(q2) {
        var foldl9 = function($copy_v) {
          return function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v, v1, v2) {
                if (v2 instanceof Nil) {
                  $tco_done = true;
                  return v1;
                }
                ;
                if (v2 instanceof Cons) {
                  $tco_var_v = v;
                  $tco_var_v1 = v(v1)(v2.value0);
                  $copy_v2 = v2.value1;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
        };
        var go2 = function($copy_xs) {
          return function($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(xs, ys) {
              var v = uncons3(xs);
              if (v instanceof Nothing) {
                $tco_done1 = true;
                return foldl9(function(x30) {
                  return function(i2) {
                    return i2(x30);
                  };
                })(b2)(ys);
              }
              ;
              if (v instanceof Just) {
                $tco_var_xs = v.value0.value1;
                $copy_ys = new Cons(k(v.value0.value0), ys);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }
            ;
            return $tco_result;
          };
        };
        return go2(q2)(Nil.value);
      };
    };
  };
  var uncons4 = function(v) {
    if (v instanceof CatNil) {
      return Nothing.value;
    }
    ;
    if (v instanceof CatCons) {
      return new Just(new Tuple(v.value0, (function() {
        var $66 = $$null4(v.value1);
        if ($66) {
          return CatNil.value;
        }
        ;
        return foldr3(link)(CatNil.value)(v.value1);
      })()));
    }
    ;
    throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
  };
  var empty6 = /* @__PURE__ */ (function() {
    return CatNil.value;
  })();
  var append3 = link;
  var semigroupCatList = {
    append: append3
  };
  var snoc4 = function(cat) {
    return function(a2) {
      return append3(cat)(new CatCons(a2, empty5));
    };
  };

  // output/Control.Monad.Free/index.js
  var $runtime_lazy6 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var append4 = /* @__PURE__ */ append(semigroupCatList);
  var Free = /* @__PURE__ */ (function() {
    function Free2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Free2.create = function(value0) {
      return function(value1) {
        return new Free2(value0, value1);
      };
    };
    return Free2;
  })();
  var Return = /* @__PURE__ */ (function() {
    function Return2(value0) {
      this.value0 = value0;
    }
    ;
    Return2.create = function(value0) {
      return new Return2(value0);
    };
    return Return2;
  })();
  var Bind = /* @__PURE__ */ (function() {
    function Bind2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Bind2.create = function(value0) {
      return function(value1) {
        return new Bind2(value0, value1);
      };
    };
    return Bind2;
  })();
  var toView = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
      var runExpF = function(v22) {
        return v22;
      };
      var concatF = function(v22) {
        return function(r) {
          return new Free(v22.value0, append4(v22.value1)(r));
        };
      };
      if (v.value0 instanceof Return) {
        var v2 = uncons4(v.value1);
        if (v2 instanceof Nothing) {
          $tco_done = true;
          return new Return(v.value0.value0);
        }
        ;
        if (v2 instanceof Just) {
          $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
      }
      ;
      if (v.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v.value0.value0, function(a2) {
          return concatF(v.value0.value1(a2))(v.value1);
        });
      }
      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
    }
    ;
    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }
    ;
    return $tco_result;
  };
  var fromView = function(f) {
    return new Free(f, empty6);
  };
  var freeMonad = {
    Applicative0: function() {
      return freeApplicative;
    },
    Bind1: function() {
      return freeBind;
    }
  };
  var freeFunctor = {
    map: function(k) {
      return function(f) {
        return bindFlipped(freeBind)((function() {
          var $189 = pure(freeApplicative);
          return function($190) {
            return $189(k($190));
          };
        })())(f);
      };
    }
  };
  var freeBind = {
    bind: function(v) {
      return function(k) {
        return new Free(v.value0, snoc4(v.value1)(k));
      };
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var freeApplicative = {
    pure: function($191) {
      return fromView(Return.create($191));
    },
    Apply0: function() {
      return $lazy_freeApply(0);
    }
  };
  var $lazy_freeApply = /* @__PURE__ */ $runtime_lazy6("freeApply", "Control.Monad.Free", function() {
    return {
      apply: ap(freeMonad),
      Functor0: function() {
        return freeFunctor;
      }
    };
  });
  var pure5 = /* @__PURE__ */ pure(freeApplicative);
  var liftF = function(f) {
    return fromView(new Bind(f, function($192) {
      return pure5($192);
    }));
  };
  var foldFree = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var map119 = map(Monad0.Bind1().Apply0().Functor0());
    var pure115 = pure(Monad0.Applicative0());
    var tailRecM4 = tailRecM(dictMonadRec);
    return function(k) {
      var go2 = function(f) {
        var v = toView(f);
        if (v instanceof Return) {
          return map119(Done.create)(pure115(v.value0));
        }
        ;
        if (v instanceof Bind) {
          return map119(function($199) {
            return Loop.create(v.value1($199));
          })(k(v.value0));
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
      };
      return tailRecM4(go2);
    };
  };

  // output/Halogen.Query.ChildQuery/index.js
  var unChildQueryBox = unsafeCoerce2;

  // output/Unsafe.Reference/foreign.js
  function reallyUnsafeRefEq(a2) {
    return function(b2) {
      return a2 === b2;
    };
  }

  // output/Unsafe.Reference/index.js
  var unsafeRefEq = reallyUnsafeRefEq;

  // output/Halogen.Subscription/index.js
  var $$void7 = /* @__PURE__ */ $$void(functorEffect);
  var coerce3 = /* @__PURE__ */ coerce();
  var bind4 = /* @__PURE__ */ bind(bindEffect);
  var append5 = /* @__PURE__ */ append(semigroupArray);
  var traverse_2 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_1 = /* @__PURE__ */ traverse_2(foldableArray);
  var unsubscribe = function(v) {
    return v;
  };
  var subscribe = function(v) {
    return function(k) {
      return v(function($76) {
        return $$void7(k($76));
      });
    };
  };
  var notify = function(v) {
    return function(a2) {
      return v(a2);
    };
  };
  var makeEmitter = coerce3;
  var create3 = function __do() {
    var subscribers = $$new([])();
    return {
      emitter: function(k) {
        return function __do4() {
          modify_2(function(v) {
            return append5(v)([k]);
          })(subscribers)();
          return modify_2(deleteBy(unsafeRefEq)(k))(subscribers);
        };
      },
      listener: function(a2) {
        return bind4(read(subscribers))(traverse_1(function(k) {
          return k(a2);
        }));
      }
    };
  };

  // output/Halogen.Query.HalogenM/index.js
  var identity9 = /* @__PURE__ */ identity(categoryFn);
  var SubscriptionId = function(x30) {
    return x30;
  };
  var ForkId = function(x30) {
    return x30;
  };
  var State = /* @__PURE__ */ (function() {
    function State2(value0) {
      this.value0 = value0;
    }
    ;
    State2.create = function(value0) {
      return new State2(value0);
    };
    return State2;
  })();
  var Subscribe = /* @__PURE__ */ (function() {
    function Subscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Subscribe2.create = function(value0) {
      return function(value1) {
        return new Subscribe2(value0, value1);
      };
    };
    return Subscribe2;
  })();
  var Unsubscribe = /* @__PURE__ */ (function() {
    function Unsubscribe2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Unsubscribe2.create = function(value0) {
      return function(value1) {
        return new Unsubscribe2(value0, value1);
      };
    };
    return Unsubscribe2;
  })();
  var Lift2 = /* @__PURE__ */ (function() {
    function Lift3(value0) {
      this.value0 = value0;
    }
    ;
    Lift3.create = function(value0) {
      return new Lift3(value0);
    };
    return Lift3;
  })();
  var ChildQuery2 = /* @__PURE__ */ (function() {
    function ChildQuery3(value0) {
      this.value0 = value0;
    }
    ;
    ChildQuery3.create = function(value0) {
      return new ChildQuery3(value0);
    };
    return ChildQuery3;
  })();
  var Raise = /* @__PURE__ */ (function() {
    function Raise3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Raise3.create = function(value0) {
      return function(value1) {
        return new Raise3(value0, value1);
      };
    };
    return Raise3;
  })();
  var Par = /* @__PURE__ */ (function() {
    function Par2(value0) {
      this.value0 = value0;
    }
    ;
    Par2.create = function(value0) {
      return new Par2(value0);
    };
    return Par2;
  })();
  var Fork = /* @__PURE__ */ (function() {
    function Fork2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Fork2.create = function(value0) {
      return function(value1) {
        return new Fork2(value0, value1);
      };
    };
    return Fork2;
  })();
  var Join = /* @__PURE__ */ (function() {
    function Join2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Join2.create = function(value0) {
      return function(value1) {
        return new Join2(value0, value1);
      };
    };
    return Join2;
  })();
  var Kill = /* @__PURE__ */ (function() {
    function Kill2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Kill2.create = function(value0) {
      return function(value1) {
        return new Kill2(value0, value1);
      };
    };
    return Kill2;
  })();
  var GetRef = /* @__PURE__ */ (function() {
    function GetRef2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    GetRef2.create = function(value0) {
      return function(value1) {
        return new GetRef2(value0, value1);
      };
    };
    return GetRef2;
  })();
  var HalogenM = function(x30) {
    return x30;
  };
  var unsubscribe2 = function(sid) {
    return liftF(new Unsubscribe(sid, unit));
  };
  var subscribe2 = function(es) {
    return liftF(new Subscribe(function(v) {
      return es;
    }, identity9));
  };
  var ordSubscriptionId = ordInt;
  var ordForkId = ordInt;
  var monadHalogenM = freeMonad;
  var monadStateHalogenM = {
    state: function($181) {
      return HalogenM(liftF(State.create($181)));
    },
    Monad0: function() {
      return monadHalogenM;
    }
  };
  var monadEffectHalogenM = function(dictMonadEffect) {
    return {
      liftEffect: (function() {
        var $186 = liftEffect(dictMonadEffect);
        return function($187) {
          return HalogenM(liftF(Lift2.create($186($187))));
        };
      })(),
      Monad0: function() {
        return monadHalogenM;
      }
    };
  };
  var monadAffHalogenM = function(dictMonadAff) {
    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    return {
      liftAff: (function() {
        var $188 = liftAff(dictMonadAff);
        return function($189) {
          return HalogenM(liftF(Lift2.create($188($189))));
        };
      })(),
      MonadEffect0: function() {
        return monadEffectHalogenM1;
      }
    };
  };
  var functorHalogenM = freeFunctor;
  var bindHalogenM = freeBind;
  var applicativeHalogenM = freeApplicative;

  // output/Halogen.Query.HalogenQ/index.js
  var Initialize = /* @__PURE__ */ (function() {
    function Initialize50(value0) {
      this.value0 = value0;
    }
    ;
    Initialize50.create = function(value0) {
      return new Initialize50(value0);
    };
    return Initialize50;
  })();
  var Finalize = /* @__PURE__ */ (function() {
    function Finalize4(value0) {
      this.value0 = value0;
    }
    ;
    Finalize4.create = function(value0) {
      return new Finalize4(value0);
    };
    return Finalize4;
  })();
  var Receive = /* @__PURE__ */ (function() {
    function Receive3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Receive3.create = function(value0) {
      return function(value1) {
        return new Receive3(value0, value1);
      };
    };
    return Receive3;
  })();
  var Action2 = /* @__PURE__ */ (function() {
    function Action3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Action3.create = function(value0) {
      return function(value1) {
        return new Action3(value0, value1);
      };
    };
    return Action3;
  })();
  var Query = /* @__PURE__ */ (function() {
    function Query3(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Query3.create = function(value0) {
      return function(value1) {
        return new Query3(value0, value1);
      };
    };
    return Query3;
  })();

  // output/Halogen.VDom.Thunk/index.js
  var $runtime_lazy7 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var unsafeEqThunk = function(v, v1) {
    return refEq2(v.value0, v1.value0) && (refEq2(v.value1, v1.value1) && v.value1(v.value3, v1.value3));
  };
  var runThunk = function(v) {
    return v.value2(v.value3);
  };
  var buildThunk = function(toVDom) {
    var haltThunk = function(state3) {
      return halt(state3.vdom);
    };
    var $lazy_patchThunk = $runtime_lazy7("patchThunk", "Halogen.VDom.Thunk", function() {
      return function(state3, t2) {
        var $48 = unsafeEqThunk(state3.thunk, t2);
        if ($48) {
          return mkStep(new Step2(extract2(state3.vdom), state3, $lazy_patchThunk(112), haltThunk));
        }
        ;
        var vdom = step3(state3.vdom, toVDom(runThunk(t2)));
        return mkStep(new Step2(extract2(vdom), {
          vdom,
          thunk: t2
        }, $lazy_patchThunk(115), haltThunk));
      };
    });
    var patchThunk = $lazy_patchThunk(108);
    var renderThunk = function(spec) {
      return function(t) {
        var vdom = buildVDom(spec)(toVDom(runThunk(t)));
        return mkStep(new Step2(extract2(vdom), {
          thunk: t,
          vdom
        }, patchThunk, haltThunk));
      };
    };
    return renderThunk;
  };

  // output/Halogen.Component/index.js
  var voidLeft2 = /* @__PURE__ */ voidLeft(functorHalogenM);
  var traverse_3 = /* @__PURE__ */ traverse_(applicativeHalogenM)(foldableMaybe);
  var map18 = /* @__PURE__ */ map(functorHalogenM);
  var pure6 = /* @__PURE__ */ pure(applicativeHalogenM);
  var lookup4 = /* @__PURE__ */ lookup2();
  var pop3 = /* @__PURE__ */ pop2();
  var insert3 = /* @__PURE__ */ insert2();
  var ComponentSlot = /* @__PURE__ */ (function() {
    function ComponentSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ComponentSlot2.create = function(value0) {
      return new ComponentSlot2(value0);
    };
    return ComponentSlot2;
  })();
  var ThunkSlot = /* @__PURE__ */ (function() {
    function ThunkSlot2(value0) {
      this.value0 = value0;
    }
    ;
    ThunkSlot2.create = function(value0) {
      return new ThunkSlot2(value0);
    };
    return ThunkSlot2;
  })();
  var unComponentSlot = unsafeCoerce2;
  var unComponent = unsafeCoerce2;
  var mkEval = function(args) {
    return function(v) {
      if (v instanceof Initialize) {
        return voidLeft2(traverse_3(args.handleAction)(args.initialize))(v.value0);
      }
      ;
      if (v instanceof Finalize) {
        return voidLeft2(traverse_3(args.handleAction)(args.finalize))(v.value0);
      }
      ;
      if (v instanceof Receive) {
        return voidLeft2(traverse_3(args.handleAction)(args.receive(v.value0)))(v.value1);
      }
      ;
      if (v instanceof Action2) {
        return voidLeft2(args.handleAction(v.value0))(v.value1);
      }
      ;
      if (v instanceof Query) {
        return unCoyoneda(function(g) {
          var $45 = map18(maybe(v.value1(unit))(g));
          return function($46) {
            return $45(args.handleQuery($46));
          };
        })(v.value0);
      }
      ;
      throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): " + [v.constructor.name]);
    };
  };
  var mkComponentSlot = unsafeCoerce2;
  var mkComponent = unsafeCoerce2;
  var defaultEval = /* @__PURE__ */ (function() {
    return {
      handleAction: $$const(pure6(unit)),
      handleQuery: $$const(pure6(Nothing.value)),
      receive: $$const(Nothing.value),
      initialize: Nothing.value,
      finalize: Nothing.value
    };
  })();
  var componentSlot = function() {
    return function(dictIsSymbol) {
      var lookup17 = lookup4(dictIsSymbol);
      var pop12 = pop3(dictIsSymbol);
      var insert17 = insert3(dictIsSymbol);
      return function(dictOrd) {
        var lookup23 = lookup17(dictOrd);
        var pop22 = pop12(dictOrd);
        var insert22 = insert17(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(comp) {
              return function(input3) {
                return function(output2) {
                  return mkComponentSlot({
                    get: lookup23(label5)(p2),
                    pop: pop22(label5)(p2),
                    set: insert22(label5)(p2),
                    component: comp,
                    input: input3,
                    output: output2
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Halogen.HTML.Elements/index.js
  var pure7 = /* @__PURE__ */ pure(applicativeMaybe);
  var elementNS = function($15) {
    return element(pure7($15));
  };
  var element2 = /* @__PURE__ */ (function() {
    return element(Nothing.value);
  })();
  var em = /* @__PURE__ */ element2("em");
  var em_ = /* @__PURE__ */ em([]);
  var h1 = /* @__PURE__ */ element2("h1");
  var h1_ = /* @__PURE__ */ h1([]);
  var h2 = /* @__PURE__ */ element2("h2");
  var h2_ = /* @__PURE__ */ h2([]);
  var h3 = /* @__PURE__ */ element2("h3");
  var h3_ = /* @__PURE__ */ h3([]);
  var h4 = /* @__PURE__ */ element2("h4");
  var h4_ = /* @__PURE__ */ h4([]);
  var header = /* @__PURE__ */ element2("header");
  var hr = function(props) {
    return element2("hr")(props)([]);
  };
  var img = function(props) {
    return element2("img")(props)([]);
  };
  var input2 = function(props) {
    return element2("input")(props)([]);
  };
  var label4 = /* @__PURE__ */ element2("label");
  var label_ = /* @__PURE__ */ label4([]);
  var li = /* @__PURE__ */ element2("li");
  var li_ = /* @__PURE__ */ li([]);
  var main = /* @__PURE__ */ element2("main");
  var nav = /* @__PURE__ */ element2("nav");
  var ol = /* @__PURE__ */ element2("ol");
  var ol_ = /* @__PURE__ */ ol([]);
  var option = /* @__PURE__ */ element2("option");
  var p = /* @__PURE__ */ element2("p");
  var p_ = /* @__PURE__ */ p([]);
  var pre = /* @__PURE__ */ element2("pre");
  var pre_ = /* @__PURE__ */ pre([]);
  var section = /* @__PURE__ */ element2("section");
  var select3 = /* @__PURE__ */ element2("select");
  var span3 = /* @__PURE__ */ element2("span");
  var span_ = /* @__PURE__ */ span3([]);
  var strong = /* @__PURE__ */ element2("strong");
  var strong_ = /* @__PURE__ */ strong([]);
  var summary = /* @__PURE__ */ element2("summary");
  var summary_ = /* @__PURE__ */ summary([]);
  var table = /* @__PURE__ */ element2("table");
  var tbody = /* @__PURE__ */ element2("tbody");
  var tbody_ = /* @__PURE__ */ tbody([]);
  var td = /* @__PURE__ */ element2("td");
  var td_ = /* @__PURE__ */ td([]);
  var th = /* @__PURE__ */ element2("th");
  var th_ = /* @__PURE__ */ th([]);
  var thead = /* @__PURE__ */ element2("thead");
  var thead_ = /* @__PURE__ */ thead([]);
  var tr = /* @__PURE__ */ element2("tr");
  var tr_ = /* @__PURE__ */ tr([]);
  var ul = /* @__PURE__ */ element2("ul");
  var ul_ = /* @__PURE__ */ ul([]);
  var div2 = /* @__PURE__ */ element2("div");
  var div_ = /* @__PURE__ */ div2([]);
  var details = /* @__PURE__ */ element2("details");
  var code = /* @__PURE__ */ element2("code");
  var code_ = /* @__PURE__ */ code([]);
  var button = /* @__PURE__ */ element2("button");
  var br = function(props) {
    return element2("br")(props)([]);
  };
  var br_ = /* @__PURE__ */ br([]);
  var aside = /* @__PURE__ */ element2("aside");
  var a = /* @__PURE__ */ element2("a");

  // output/Halogen.HTML.Properties/index.js
  var unwrap2 = /* @__PURE__ */ unwrap();
  var prop2 = function(dictIsProp) {
    return prop(dictIsProp);
  };
  var prop1 = /* @__PURE__ */ prop2(isPropBoolean);
  var prop22 = /* @__PURE__ */ prop2(isPropString);
  var prop4 = /* @__PURE__ */ prop2(isPropNumber);
  var rel4 = /* @__PURE__ */ prop22("rel");
  var selected2 = /* @__PURE__ */ prop1("selected");
  var src9 = /* @__PURE__ */ prop22("src");
  var step4 = /* @__PURE__ */ prop2(isPropStepValue)("step");
  var target5 = /* @__PURE__ */ prop22("target");
  var title3 = /* @__PURE__ */ prop22("title");
  var type_17 = function(dictIsProp) {
    return prop2(dictIsProp)("type");
  };
  var value12 = function(dictIsProp) {
    return prop2(dictIsProp)("value");
  };
  var placeholder3 = /* @__PURE__ */ prop22("placeholder");
  var min5 = /* @__PURE__ */ prop4("min");
  var max6 = /* @__PURE__ */ prop4("max");
  var id2 = /* @__PURE__ */ prop22("id");
  var href4 = /* @__PURE__ */ prop22("href");
  var $$for = /* @__PURE__ */ prop22("htmlFor");
  var disabled10 = /* @__PURE__ */ prop1("disabled");
  var classes = /* @__PURE__ */ (function() {
    var $32 = prop22("className");
    var $33 = joinWith(" ");
    var $34 = map(functorArray)(unwrap2);
    return function($35) {
      return $32($33($34($35)));
    };
  })();
  var class_ = /* @__PURE__ */ (function() {
    var $36 = prop22("className");
    return function($37) {
      return $36(unwrap2($37));
    };
  })();
  var checked2 = /* @__PURE__ */ prop1("checked");
  var attr2 = /* @__PURE__ */ (function() {
    return attr(Nothing.value);
  })();
  var style = /* @__PURE__ */ attr2("style");
  var alt5 = /* @__PURE__ */ prop22("alt");

  // output/Halogen.HTML/index.js
  var componentSlot2 = /* @__PURE__ */ componentSlot();
  var slot_ = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component57) {
              return function(input3) {
                return widget(new ComponentSlot(componentSlot22(label5)(p2)(component57)(input3)($$const(Nothing.value))));
              };
            };
          };
        };
      };
    };
  };
  var slot = function() {
    return function(dictIsSymbol) {
      var componentSlot1 = componentSlot2(dictIsSymbol);
      return function(dictOrd) {
        var componentSlot22 = componentSlot1(dictOrd);
        return function(label5) {
          return function(p2) {
            return function(component57) {
              return function(input3) {
                return function(outputQuery) {
                  return widget(new ComponentSlot(componentSlot22(label5)(p2)(component57)(input3)(function($11) {
                    return Just.create(outputQuery($11));
                  })));
                };
              };
            };
          };
        };
      };
    };
  };

  // output/Control.Monad.Fork.Class/index.js
  var monadForkAff = {
    suspend: suspendAff,
    fork: forkAff,
    join: joinFiber,
    Monad0: function() {
      return monadAff;
    },
    Functor1: function() {
      return functorFiber;
    }
  };
  var fork = function(dict) {
    return dict.fork;
  };

  // output/Effect.Console/foreign.js
  var log2 = function(s) {
    return function() {
      console.log(s);
    };
  };
  var warn = function(s) {
    return function() {
      console.warn(s);
    };
  };

  // output/Halogen.Aff.Driver.State/index.js
  var unRenderStateX = unsafeCoerce2;
  var unDriverStateX = unsafeCoerce2;
  var renderStateX_ = function(dictApplicative) {
    var traverse_7 = traverse_(dictApplicative)(foldableMaybe);
    return function(f) {
      return unDriverStateX(function(st) {
        return traverse_7(f)(st.rendering);
      });
    };
  };
  var mkRenderStateX = unsafeCoerce2;
  var renderStateX = function(dictFunctor) {
    return function(f) {
      return unDriverStateX(function(st) {
        return mkRenderStateX(f(st.rendering));
      });
    };
  };
  var mkDriverStateXRef = unsafeCoerce2;
  var mapDriverState = function(f) {
    return function(v) {
      return f(v);
    };
  };
  var initDriverState = function(component57) {
    return function(input3) {
      return function(handler3) {
        return function(lchs) {
          return function __do4() {
            var selfRef = $$new({})();
            var childrenIn = $$new(empty3)();
            var childrenOut = $$new(empty3)();
            var handlerRef = $$new(handler3)();
            var pendingQueries = $$new(new Just(Nil.value))();
            var pendingOuts = $$new(new Just(Nil.value))();
            var pendingHandlers = $$new(Nothing.value)();
            var fresh2 = $$new(1)();
            var subscriptions = $$new(new Just(empty2))();
            var forks = $$new(empty2)();
            var ds = {
              component: component57,
              state: component57.initialState(input3),
              refs: empty2,
              children: empty3,
              childrenIn,
              childrenOut,
              selfRef,
              handlerRef,
              pendingQueries,
              pendingOuts,
              pendingHandlers,
              rendering: Nothing.value,
              fresh: fresh2,
              subscriptions,
              forks,
              lifecycleHandlers: lchs
            };
            write(ds)(selfRef)();
            return mkDriverStateXRef(selfRef);
          };
        };
      };
    };
  };

  // output/Halogen.Aff.Driver.Eval/index.js
  var traverse_4 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var bindFlipped6 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var lookup5 = /* @__PURE__ */ lookup(ordSubscriptionId);
  var bind12 = /* @__PURE__ */ bind(bindAff);
  var liftEffect4 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard4 = /* @__PURE__ */ discard(discardUnit);
  var discard1 = /* @__PURE__ */ discard4(bindAff);
  var traverse_12 = /* @__PURE__ */ traverse_(applicativeAff);
  var traverse_22 = /* @__PURE__ */ traverse_12(foldableList);
  var fork3 = /* @__PURE__ */ fork(monadForkAff);
  var parSequence_2 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var pure8 = /* @__PURE__ */ pure(applicativeAff);
  var map20 = /* @__PURE__ */ map(functorCoyoneda);
  var parallel2 = /* @__PURE__ */ parallel(parallelAff);
  var map110 = /* @__PURE__ */ map(functorAff);
  var sequential2 = /* @__PURE__ */ sequential(parallelAff);
  var map23 = /* @__PURE__ */ map(functorMaybe);
  var insert4 = /* @__PURE__ */ insert(ordSubscriptionId);
  var retractFreeAp2 = /* @__PURE__ */ retractFreeAp(applicativeParAff);
  var $$delete2 = /* @__PURE__ */ $$delete(ordForkId);
  var unlessM2 = /* @__PURE__ */ unlessM(monadEffect);
  var insert12 = /* @__PURE__ */ insert(ordForkId);
  var traverse_32 = /* @__PURE__ */ traverse_12(foldableMaybe);
  var lookup12 = /* @__PURE__ */ lookup(ordForkId);
  var lookup22 = /* @__PURE__ */ lookup(ordString);
  var foldFree2 = /* @__PURE__ */ foldFree(monadRecAff);
  var alter2 = /* @__PURE__ */ alter(ordString);
  var unsubscribe3 = function(sid) {
    return function(ref2) {
      return function __do4() {
        var v = read(ref2)();
        var subs = read(v.subscriptions)();
        return traverse_4(unsubscribe)(bindFlipped6(lookup5(sid))(subs))();
      };
    };
  };
  var queueOrRun = function(ref2) {
    return function(au) {
      return bind12(liftEffect4(read(ref2)))(function(v) {
        if (v instanceof Nothing) {
          return au;
        }
        ;
        if (v instanceof Just) {
          return liftEffect4(write(new Just(new Cons(au, v.value0)))(ref2));
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): " + [v.constructor.name]);
      });
    };
  };
  var handleLifecycle = function(lchs) {
    return function(f) {
      return discard1(liftEffect4(write({
        initializers: Nil.value,
        finalizers: Nil.value
      })(lchs)))(function() {
        return bind12(liftEffect4(f))(function(result) {
          return bind12(liftEffect4(read(lchs)))(function(v) {
            return discard1(traverse_22(fork3)(v.finalizers))(function() {
              return discard1(parSequence_2(v.initializers))(function() {
                return pure8(result);
              });
            });
          });
        });
      });
    };
  };
  var handleAff = /* @__PURE__ */ runAff_(/* @__PURE__ */ either(throwException)(/* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeEffect)(unit))));
  var fresh = function(f) {
    return function(ref2) {
      return bind12(liftEffect4(read(ref2)))(function(v) {
        return liftEffect4(modify$prime(function(i2) {
          return {
            state: i2 + 1 | 0,
            value: f(i2)
          };
        })(v.fresh));
      });
    };
  };
  var evalQ = function(render58) {
    return function(ref2) {
      return function(q2) {
        return bind12(liftEffect4(read(ref2)))(function(v) {
          return evalM(render58)(ref2)(v["component"]["eval"](new Query(map20(Just.create)(liftCoyoneda(q2)), $$const(Nothing.value))));
        });
      };
    };
  };
  var evalM = function(render58) {
    return function(initRef) {
      return function(v) {
        var evalChildQuery = function(ref2) {
          return function(cqb) {
            return bind12(liftEffect4(read(ref2)))(function(v1) {
              return unChildQueryBox(function(v2) {
                var evalChild = function(v3) {
                  return parallel2(bind12(liftEffect4(read(v3)))(function(dsx) {
                    return unDriverStateX(function(ds) {
                      return evalQ(render58)(ds.selfRef)(v2.value1);
                    })(dsx);
                  }));
                };
                return map110(v2.value2)(sequential2(v2.value0(applicativeParAff)(evalChild)(v1.children)));
              })(cqb);
            });
          };
        };
        var go2 = function(ref2) {
          return function(v1) {
            if (v1 instanceof State) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                var v3 = v1.value0(v2.state);
                if (unsafeRefEq(v2.state)(v3.value1)) {
                  return pure8(v3.value0);
                }
                ;
                if (otherwise) {
                  return discard1(liftEffect4(write({
                    component: v2.component,
                    refs: v2.refs,
                    children: v2.children,
                    childrenIn: v2.childrenIn,
                    childrenOut: v2.childrenOut,
                    selfRef: v2.selfRef,
                    handlerRef: v2.handlerRef,
                    pendingQueries: v2.pendingQueries,
                    pendingOuts: v2.pendingOuts,
                    pendingHandlers: v2.pendingHandlers,
                    rendering: v2.rendering,
                    fresh: v2.fresh,
                    subscriptions: v2.subscriptions,
                    forks: v2.forks,
                    lifecycleHandlers: v2.lifecycleHandlers,
                    state: v3.value1
                  })(ref2)))(function() {
                    return discard1(handleLifecycle(v2.lifecycleHandlers)(render58(v2.lifecycleHandlers)(ref2)))(function() {
                      return pure8(v3.value0);
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [v3.constructor.name]);
              });
            }
            ;
            if (v1 instanceof Subscribe) {
              return bind12(fresh(SubscriptionId)(ref2))(function(sid) {
                return bind12(liftEffect4(subscribe(v1.value0(sid))(function(act) {
                  return handleAff(evalF(render58)(ref2)(new Action(act)));
                })))(function(finalize) {
                  return bind12(liftEffect4(read(ref2)))(function(v2) {
                    return discard1(liftEffect4(modify_2(map23(insert4(sid)(finalize)))(v2.subscriptions)))(function() {
                      return pure8(v1.value1(sid));
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Unsubscribe) {
              return discard1(liftEffect4(unsubscribe3(v1.value0)(ref2)))(function() {
                return pure8(v1.value1);
              });
            }
            ;
            if (v1 instanceof Lift2) {
              return v1.value0;
            }
            ;
            if (v1 instanceof ChildQuery2) {
              return evalChildQuery(ref2)(v1.value0);
            }
            ;
            if (v1 instanceof Raise) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return bind12(liftEffect4(read(v2.handlerRef)))(function(handler3) {
                  return discard1(queueOrRun(v2.pendingOuts)(handler3(v1.value0)))(function() {
                    return pure8(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Par) {
              return sequential2(retractFreeAp2(hoistFreeAp((function() {
                var $118 = evalM(render58)(ref2);
                return function($119) {
                  return parallel2($118($119));
                };
              })())(v1.value0)));
            }
            ;
            if (v1 instanceof Fork) {
              return bind12(fresh(ForkId)(ref2))(function(fid) {
                return bind12(liftEffect4(read(ref2)))(function(v2) {
                  return bind12(liftEffect4($$new(false)))(function(doneRef) {
                    return bind12(fork3($$finally(liftEffect4(function __do4() {
                      modify_2($$delete2(fid))(v2.forks)();
                      return write(true)(doneRef)();
                    }))(evalM(render58)(ref2)(v1.value0))))(function(fiber) {
                      return discard1(liftEffect4(unlessM2(read(doneRef))(modify_2(insert12(fid)(fiber))(v2.forks))))(function() {
                        return pure8(v1.value1(fid));
                      });
                    });
                  });
                });
              });
            }
            ;
            if (v1 instanceof Join) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return bind12(liftEffect4(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(joinFiber)(lookup12(v1.value0)(forkMap)))(function() {
                    return pure8(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof Kill) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return bind12(liftEffect4(read(v2.forks)))(function(forkMap) {
                  return discard1(traverse_32(killFiber(error("Cancelled")))(lookup12(v1.value0)(forkMap)))(function() {
                    return pure8(v1.value1);
                  });
                });
              });
            }
            ;
            if (v1 instanceof GetRef) {
              return bind12(liftEffect4(read(ref2)))(function(v2) {
                return pure8(v1.value1(lookup22(v1.value0)(v2.refs)));
              });
            }
            ;
            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): " + [v1.constructor.name]);
          };
        };
        return foldFree2(go2(initRef))(v);
      };
    };
  };
  var evalF = function(render58) {
    return function(ref2) {
      return function(v) {
        if (v instanceof RefUpdate) {
          return liftEffect4(flip(modify_2)(ref2)(mapDriverState(function(st) {
            return {
              component: st.component,
              state: st.state,
              children: st.children,
              childrenIn: st.childrenIn,
              childrenOut: st.childrenOut,
              selfRef: st.selfRef,
              handlerRef: st.handlerRef,
              pendingQueries: st.pendingQueries,
              pendingOuts: st.pendingOuts,
              pendingHandlers: st.pendingHandlers,
              rendering: st.rendering,
              fresh: st.fresh,
              subscriptions: st.subscriptions,
              forks: st.forks,
              lifecycleHandlers: st.lifecycleHandlers,
              refs: alter2($$const(v.value1))(v.value0)(st.refs)
            };
          })));
        }
        ;
        if (v instanceof Action) {
          return bind12(liftEffect4(read(ref2)))(function(v1) {
            return evalM(render58)(ref2)(v1["component"]["eval"](new Action2(v.value0, unit)));
          });
        }
        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [v.constructor.name]);
      };
    };
  };

  // output/Halogen.Aff.Driver/index.js
  var bind5 = /* @__PURE__ */ bind(bindEffect);
  var discard5 = /* @__PURE__ */ discard(discardUnit);
  var for_2 = /* @__PURE__ */ for_(applicativeEffect)(foldableMaybe);
  var traverse_5 = /* @__PURE__ */ traverse_(applicativeAff)(foldableList);
  var fork4 = /* @__PURE__ */ fork(monadForkAff);
  var bindFlipped7 = /* @__PURE__ */ bindFlipped(bindEffect);
  var traverse_13 = /* @__PURE__ */ traverse_(applicativeEffect);
  var traverse_23 = /* @__PURE__ */ traverse_13(foldableMaybe);
  var traverse_33 = /* @__PURE__ */ traverse_13(foldableMap);
  var discard22 = /* @__PURE__ */ discard5(bindAff);
  var parSequence_3 = /* @__PURE__ */ parSequence_(parallelAff)(foldableList);
  var liftEffect5 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var pure9 = /* @__PURE__ */ pure(applicativeEffect);
  var map21 = /* @__PURE__ */ map(functorEffect);
  var pure12 = /* @__PURE__ */ pure(applicativeAff);
  var when3 = /* @__PURE__ */ when(applicativeEffect);
  var renderStateX2 = /* @__PURE__ */ renderStateX(functorEffect);
  var $$void8 = /* @__PURE__ */ $$void(functorAff);
  var foreachSlot2 = /* @__PURE__ */ foreachSlot(applicativeEffect);
  var renderStateX_2 = /* @__PURE__ */ renderStateX_(applicativeEffect);
  var tailRecM3 = /* @__PURE__ */ tailRecM(monadRecEffect);
  var voidLeft3 = /* @__PURE__ */ voidLeft(functorEffect);
  var bind13 = /* @__PURE__ */ bind(bindAff);
  var liftEffect1 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var newLifecycleHandlers = /* @__PURE__ */ (function() {
    return $$new({
      initializers: Nil.value,
      finalizers: Nil.value
    });
  })();
  var handlePending = function(ref2) {
    return function __do4() {
      var queue = read(ref2)();
      write(Nothing.value)(ref2)();
      return for_2(queue)((function() {
        var $58 = traverse_5(fork4);
        return function($59) {
          return handleAff($58(reverse($59)));
        };
      })())();
    };
  };
  var cleanupSubscriptionsAndForks = function(v) {
    return function __do4() {
      bindFlipped7(traverse_23(traverse_33(unsubscribe)))(read(v.subscriptions))();
      write(Nothing.value)(v.subscriptions)();
      bindFlipped7(traverse_33((function() {
        var $60 = killFiber(error("finalized"));
        return function($61) {
          return handleAff($60($61));
        };
      })()))(read(v.forks))();
      return write(empty2)(v.forks)();
    };
  };
  var runUI = function(renderSpec2) {
    return function(component57) {
      return function(i2) {
        var squashChildInitializers = function(lchs) {
          return function(preInits) {
            return unDriverStateX(function(st) {
              var parentInitializer = evalM(render58)(st.selfRef)(st["component"]["eval"](new Initialize(unit)));
              return modify_2(function(handlers) {
                return {
                  initializers: new Cons(discard22(parSequence_3(reverse(handlers.initializers)))(function() {
                    return discard22(parentInitializer)(function() {
                      return liftEffect5(function __do4() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };
        var runComponent = function(lchs) {
          return function(handler3) {
            return function(j) {
              return unComponent(function(c) {
                return function __do4() {
                  var lchs$prime = newLifecycleHandlers();
                  var $$var2 = initDriverState(c)(j)(handler3)(lchs$prime)();
                  var pre2 = read(lchs)();
                  write({
                    initializers: Nil.value,
                    finalizers: pre2.finalizers
                  })(lchs)();
                  bindFlipped7(unDriverStateX((function() {
                    var $62 = render58(lchs);
                    return function($63) {
                      return $62((function(v) {
                        return v.selfRef;
                      })($63));
                    };
                  })()))(read($$var2))();
                  bindFlipped7(squashChildInitializers(lchs)(pre2.initializers))(read($$var2))();
                  return $$var2;
                };
              });
            };
          };
        };
        var renderChild = function(lchs) {
          return function(handler3) {
            return function(childrenInRef) {
              return function(childrenOutRef) {
                return unComponentSlot(function(slot3) {
                  return function __do4() {
                    var childrenIn = map21(slot3.pop)(read(childrenInRef))();
                    var $$var2 = (function() {
                      if (childrenIn instanceof Just) {
                        write(childrenIn.value0.value1)(childrenInRef)();
                        var dsx = read(childrenIn.value0.value0)();
                        unDriverStateX(function(st) {
                          return function __do5() {
                            flip(write)(st.handlerRef)((function() {
                              var $64 = maybe(pure12(unit))(handler3);
                              return function($65) {
                                return $64(slot3.output($65));
                              };
                            })())();
                            return handleAff(evalM(render58)(st.selfRef)(st["component"]["eval"](new Receive(slot3.input, unit))))();
                          };
                        })(dsx)();
                        return childrenIn.value0.value0;
                      }
                      ;
                      if (childrenIn instanceof Nothing) {
                        return runComponent(lchs)((function() {
                          var $66 = maybe(pure12(unit))(handler3);
                          return function($67) {
                            return $66(slot3.output($67));
                          };
                        })())(slot3.input)(slot3.component)();
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): " + [childrenIn.constructor.name]);
                    })();
                    var isDuplicate = map21(function($68) {
                      return isJust(slot3.get($68));
                    })(read(childrenOutRef))();
                    when3(isDuplicate)(warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                    modify_2(slot3.set($$var2))(childrenOutRef)();
                    return bind5(read($$var2))(renderStateX2(function(v) {
                      if (v instanceof Nothing) {
                        return $$throw("Halogen internal error: child was not initialized in renderChild");
                      }
                      ;
                      if (v instanceof Just) {
                        return pure9(renderSpec2.renderChild(v.value0));
                      }
                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): " + [v.constructor.name]);
                    }))();
                  };
                });
              };
            };
          };
        };
        var render58 = function(lchs) {
          return function($$var2) {
            return function __do4() {
              var v = read($$var2)();
              var shouldProcessHandlers = map21(isNothing)(read(v.pendingHandlers))();
              when3(shouldProcessHandlers)(write(new Just(Nil.value))(v.pendingHandlers))();
              write(empty3)(v.childrenOut)();
              write(v.children)(v.childrenIn)();
              var handler3 = (function() {
                var $69 = queueOrRun(v.pendingHandlers);
                var $70 = evalF(render58)(v.selfRef);
                return function($71) {
                  return $69($$void8($70($71)));
                };
              })();
              var childHandler = (function() {
                var $72 = queueOrRun(v.pendingQueries);
                return function($73) {
                  return $72(handler3(Action.create($73)));
                };
              })();
              var rendering = renderSpec2.render(function($74) {
                return handleAff(handler3($74));
              })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
              var children3 = read(v.childrenOut)();
              var childrenIn = read(v.childrenIn)();
              foreachSlot2(childrenIn)(function(v1) {
                return function __do5() {
                  var childDS = read(v1)();
                  renderStateX_2(renderSpec2.removeChild)(childDS)();
                  return finalize(lchs)(childDS)();
                };
              })();
              flip(modify_2)(v.selfRef)(mapDriverState(function(ds$prime) {
                return {
                  component: ds$prime.component,
                  state: ds$prime.state,
                  refs: ds$prime.refs,
                  childrenIn: ds$prime.childrenIn,
                  childrenOut: ds$prime.childrenOut,
                  selfRef: ds$prime.selfRef,
                  handlerRef: ds$prime.handlerRef,
                  pendingQueries: ds$prime.pendingQueries,
                  pendingOuts: ds$prime.pendingOuts,
                  pendingHandlers: ds$prime.pendingHandlers,
                  fresh: ds$prime.fresh,
                  subscriptions: ds$prime.subscriptions,
                  forks: ds$prime.forks,
                  lifecycleHandlers: ds$prime.lifecycleHandlers,
                  rendering: new Just(rendering),
                  children: children3
                };
              }))();
              return when3(shouldProcessHandlers)(flip(tailRecM3)(unit)(function(v1) {
                return function __do5() {
                  var handlers = read(v.pendingHandlers)();
                  write(new Just(Nil.value))(v.pendingHandlers)();
                  traverse_23((function() {
                    var $75 = traverse_5(fork4);
                    return function($76) {
                      return handleAff($75(reverse($76)));
                    };
                  })())(handlers)();
                  var mmore = read(v.pendingHandlers)();
                  var $51 = maybe(false)($$null)(mmore);
                  if ($51) {
                    return voidLeft3(write(Nothing.value)(v.pendingHandlers))(new Done(unit))();
                  }
                  ;
                  return new Loop(unit);
                };
              }))();
            };
          };
        };
        var finalize = function(lchs) {
          return unDriverStateX(function(st) {
            return function __do4() {
              cleanupSubscriptionsAndForks(st)();
              var f = evalM(render58)(st.selfRef)(st["component"]["eval"](new Finalize(unit)));
              modify_2(function(handlers) {
                return {
                  initializers: handlers.initializers,
                  finalizers: new Cons(f, handlers.finalizers)
                };
              })(lchs)();
              return foreachSlot2(st.children)(function(v) {
                return function __do5() {
                  var dsx = read(v)();
                  return finalize(lchs)(dsx)();
                };
              })();
            };
          });
        };
        var evalDriver = function(disposed) {
          return function(ref2) {
            return function(q2) {
              return bind13(liftEffect5(read(disposed)))(function(v) {
                if (v) {
                  return pure12(Nothing.value);
                }
                ;
                return evalQ(render58)(ref2)(q2);
              });
            };
          };
        };
        var dispose = function(disposed) {
          return function(lchs) {
            return function(dsx) {
              return handleLifecycle(lchs)(function __do4() {
                var v = read(disposed)();
                if (v) {
                  return unit;
                }
                ;
                write(true)(disposed)();
                finalize(lchs)(dsx)();
                return unDriverStateX(function(v1) {
                  return function __do5() {
                    var v2 = liftEffect1(read(v1.selfRef))();
                    return for_2(v2.rendering)(renderSpec2.dispose)();
                  };
                })(dsx)();
              });
            };
          };
        };
        return bind13(liftEffect5(newLifecycleHandlers))(function(lchs) {
          return bind13(liftEffect5($$new(false)))(function(disposed) {
            return handleLifecycle(lchs)(function __do4() {
              var sio = create3();
              var dsx = bindFlipped7(read)(runComponent(lchs)((function() {
                var $77 = notify(sio.listener);
                return function($78) {
                  return liftEffect5($77($78));
                };
              })())(i2)(component57))();
              return unDriverStateX(function(st) {
                return pure9({
                  query: evalDriver(disposed)(st.selfRef),
                  messages: sio.emitter,
                  dispose: dispose(disposed)(lchs)(dsx)
                });
              })(dsx)();
            });
          });
        });
      };
    };
  };

  // output/Web.DOM.Node/foreign.js
  var getEffProp2 = function(name16) {
    return function(node) {
      return function() {
        return node[name16];
      };
    };
  };
  var baseURI = getEffProp2("baseURI");
  var _ownerDocument = getEffProp2("ownerDocument");
  var _parentNode = getEffProp2("parentNode");
  var _parentElement = getEffProp2("parentElement");
  var childNodes = getEffProp2("childNodes");
  var _firstChild = getEffProp2("firstChild");
  var _lastChild = getEffProp2("lastChild");
  var _previousSibling = getEffProp2("previousSibling");
  var _nextSibling = getEffProp2("nextSibling");
  var _nodeValue = getEffProp2("nodeValue");
  var textContent = getEffProp2("textContent");
  function insertBefore(node1) {
    return function(node2) {
      return function(parent2) {
        return function() {
          parent2.insertBefore(node1, node2);
        };
      };
    };
  }
  function appendChild(node) {
    return function(parent2) {
      return function() {
        parent2.appendChild(node);
      };
    };
  }
  function removeChild2(node) {
    return function(parent2) {
      return function() {
        parent2.removeChild(node);
      };
    };
  }

  // output/Web.DOM.Node/index.js
  var map24 = /* @__PURE__ */ map(functorEffect);
  var parentNode2 = /* @__PURE__ */ (function() {
    var $6 = map24(toMaybe);
    return function($7) {
      return $6(_parentNode($7));
    };
  })();
  var nextSibling = /* @__PURE__ */ (function() {
    var $15 = map24(toMaybe);
    return function($16) {
      return $15(_nextSibling($16));
    };
  })();

  // output/Halogen.VDom.Driver/index.js
  var $runtime_lazy8 = function(name16, moduleName, init5) {
    var state3 = 0;
    var val;
    return function(lineNumber) {
      if (state3 === 2) return val;
      if (state3 === 1) throw new ReferenceError(name16 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
      state3 = 1;
      val = init5();
      state3 = 2;
      return val;
    };
  };
  var $$void9 = /* @__PURE__ */ $$void(functorEffect);
  var pure10 = /* @__PURE__ */ pure(applicativeEffect);
  var traverse_6 = /* @__PURE__ */ traverse_(applicativeEffect)(foldableMaybe);
  var unwrap3 = /* @__PURE__ */ unwrap();
  var when4 = /* @__PURE__ */ when(applicativeEffect);
  var not3 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean)));
  var identity10 = /* @__PURE__ */ identity(categoryFn);
  var bind14 = /* @__PURE__ */ bind(bindAff);
  var liftEffect6 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var map25 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped8 = /* @__PURE__ */ bindFlipped(bindEffect);
  var substInParent = function(v) {
    return function(v1) {
      return function(v2) {
        if (v1 instanceof Just && v2 instanceof Just) {
          return $$void9(insertBefore(v)(v1.value0)(v2.value0));
        }
        ;
        if (v1 instanceof Nothing && v2 instanceof Just) {
          return $$void9(appendChild(v)(v2.value0));
        }
        ;
        return pure10(unit);
      };
    };
  };
  var removeChild3 = function(v) {
    return function __do4() {
      var npn = parentNode2(v.node)();
      return traverse_6(function(pn) {
        return removeChild2(v.node)(pn);
      })(npn)();
    };
  };
  var mkSpec = function(handler3) {
    return function(renderChildRef) {
      return function(document3) {
        var getNode = unRenderStateX(function(v) {
          return v.node;
        });
        var done = function(st) {
          if (st instanceof Just) {
            return halt(st.value0);
          }
          ;
          return unit;
        };
        var buildWidget2 = function(spec) {
          var buildThunk2 = buildThunk(unwrap3)(spec);
          var $lazy_patch = $runtime_lazy8("patch", "Halogen.VDom.Driver", function() {
            return function(st, slot3) {
              if (st instanceof Just) {
                if (slot3 instanceof ComponentSlot) {
                  halt(st.value0);
                  return $lazy_renderComponentSlot(100)(slot3.value0);
                }
                ;
                if (slot3 instanceof ThunkSlot) {
                  var step$prime = step3(st.value0, slot3.value0);
                  return mkStep(new Step2(extract2(step$prime), new Just(step$prime), $lazy_patch(103), done));
                }
                ;
                throw new Error("Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): " + [slot3.constructor.name]);
              }
              ;
              return $lazy_render(104)(slot3);
            };
          });
          var $lazy_render = $runtime_lazy8("render", "Halogen.VDom.Driver", function() {
            return function(slot3) {
              if (slot3 instanceof ComponentSlot) {
                return $lazy_renderComponentSlot(86)(slot3.value0);
              }
              ;
              if (slot3 instanceof ThunkSlot) {
                var step5 = buildThunk2(slot3.value0);
                return mkStep(new Step2(extract2(step5), new Just(step5), $lazy_patch(89), done));
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): " + [slot3.constructor.name]);
            };
          });
          var $lazy_renderComponentSlot = $runtime_lazy8("renderComponentSlot", "Halogen.VDom.Driver", function() {
            return function(cs) {
              var renderChild = read(renderChildRef)();
              var rsx = renderChild(cs)();
              var node = getNode(rsx);
              return mkStep(new Step2(node, Nothing.value, $lazy_patch(117), done));
            };
          });
          var patch2 = $lazy_patch(91);
          var render58 = $lazy_render(82);
          var renderComponentSlot = $lazy_renderComponentSlot(109);
          return render58;
        };
        var buildAttributes = buildProp(handler3);
        return {
          buildWidget: buildWidget2,
          buildAttributes,
          document: document3
        };
      };
    };
  };
  var renderSpec = function(document3) {
    return function(container) {
      var render58 = function(handler3) {
        return function(child) {
          return function(v) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return function __do4() {
                  var renderChildRef = $$new(child)();
                  var spec = mkSpec(handler3)(renderChildRef)(document3);
                  var machine = buildVDom(spec)(v);
                  var node = extract2(machine);
                  $$void9(appendChild(node)(toNode(container)))();
                  return {
                    machine,
                    node,
                    renderChildRef
                  };
                };
              }
              ;
              if (v1 instanceof Just) {
                return function __do4() {
                  write(child)(v1.value0.renderChildRef)();
                  var parent2 = parentNode2(v1.value0.node)();
                  var nextSib = nextSibling(v1.value0.node)();
                  var machine$prime = step3(v1.value0.machine, v);
                  var newNode = extract2(machine$prime);
                  when4(not3(unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent2))();
                  return {
                    machine: machine$prime,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }
              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };
      return {
        render: render58,
        renderChild: identity10,
        removeChild: removeChild3,
        dispose: removeChild3
      };
    };
  };
  var runUI2 = function(component57) {
    return function(i2) {
      return function(element3) {
        return bind14(liftEffect6(map25(toDocument)(bindFlipped8(document2)(windowImpl))))(function(document3) {
          return runUI(renderSpec(document3)(element3))(component57)(i2);
        });
      };
    };
  };

  // output/Control.Monad.Except/index.js
  var unwrap4 = /* @__PURE__ */ unwrap();
  var runExcept = function($3) {
    return unwrap4(runExceptT($3));
  };

  // output/Foreign.Index/foreign.js
  function unsafeReadPropImpl(f, s, key, value19) {
    return value19 == null ? f : s(value19[key]);
  }

  // output/Foreign.Index/index.js
  var unsafeReadProp = function(dictMonad) {
    var fail3 = fail(dictMonad);
    var pure45 = pure(applicativeExceptT(dictMonad));
    return function(k) {
      return function(value19) {
        return unsafeReadPropImpl(fail3(new TypeMismatch("object", typeOf(value19))), pure45, k, value19);
      };
    };
  };
  var readProp = function(dictMonad) {
    return unsafeReadProp(dictMonad);
  };

  // output/Web.Event.Event/foreign.js
  function _currentTarget(e) {
    return e.currentTarget;
  }

  // output/Web.Event.Event/index.js
  var currentTarget = function($5) {
    return toMaybe(_currentTarget($5));
  };

  // output/Web.UIEvent.MouseEvent.EventTypes/index.js
  var click2 = "click";

  // output/Halogen.HTML.Events/index.js
  var map26 = /* @__PURE__ */ map(functorMaybe);
  var composeKleisli2 = /* @__PURE__ */ composeKleisli(bindMaybe);
  var composeKleisliFlipped3 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var readProp2 = /* @__PURE__ */ readProp(monadIdentity);
  var readString2 = /* @__PURE__ */ readString(monadIdentity);
  var mouseHandler = unsafeCoerce2;
  var handler$prime = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return map26(Action.create)(f(ev));
      });
    };
  };
  var handler2 = function(et) {
    return function(f) {
      return handler(et)(function(ev) {
        return new Just(new Action(f(ev)));
      });
    };
  };
  var onClick = /* @__PURE__ */ (function() {
    var $15 = handler2(click2);
    return function($16) {
      return $15(mouseHandler($16));
    };
  })();
  var addForeignPropHandler = function(key) {
    return function(prop7) {
      return function(reader) {
        return function(f) {
          var go2 = function(a2) {
            return composeKleisliFlipped3(reader)(readProp2(prop7))(unsafeToForeign(a2));
          };
          return handler$prime(key)(composeKleisli2(currentTarget)(function(e) {
            return either($$const(Nothing.value))(function($85) {
              return Just.create(f($85));
            })(runExcept(go2(e)));
          }));
        };
      };
    };
  };
  var onChecked = /* @__PURE__ */ addForeignPropHandler(change)("checked")(/* @__PURE__ */ readBoolean(monadIdentity));
  var onValueChange = /* @__PURE__ */ addForeignPropHandler(change)("value")(readString2);
  var onValueInput = /* @__PURE__ */ addForeignPropHandler(input)("value")(readString2);

  // output/PSD3.CodeAtlas.Actions/index.js
  var Initialize2 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SetActiveTab = /* @__PURE__ */ (function() {
    function SetActiveTab2(value0) {
      this.value0 = value0;
    }
    ;
    SetActiveTab2.create = function(value0) {
      return new SetActiveTab2(value0);
    };
    return SetActiveTab2;
  })();
  var DataLoaded = /* @__PURE__ */ (function() {
    function DataLoaded3(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    DataLoaded3.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new DataLoaded3(value0, value1, value22);
        };
      };
    };
    return DataLoaded3;
  })();
  var DataLoadFailed = /* @__PURE__ */ (function() {
    function DataLoadFailed3(value0) {
      this.value0 = value0;
    }
    ;
    DataLoadFailed3.create = function(value0) {
      return new DataLoadFailed3(value0);
    };
    return DataLoadFailed3;
  })();
  var SetSearchQuery = /* @__PURE__ */ (function() {
    function SetSearchQuery2(value0) {
      this.value0 = value0;
    }
    ;
    SetSearchQuery2.create = function(value0) {
      return new SetSearchQuery2(value0);
    };
    return SetSearchQuery2;
  })();
  var SetKindFilter = /* @__PURE__ */ (function() {
    function SetKindFilter2(value0) {
      this.value0 = value0;
    }
    ;
    SetKindFilter2.create = function(value0) {
      return new SetKindFilter2(value0);
    };
    return SetKindFilter2;
  })();
  var SetModuleFilter = /* @__PURE__ */ (function() {
    function SetModuleFilter2(value0) {
      this.value0 = value0;
    }
    ;
    SetModuleFilter2.create = function(value0) {
      return new SetModuleFilter2(value0);
    };
    return SetModuleFilter2;
  })();
  var SetSourceFilter = /* @__PURE__ */ (function() {
    function SetSourceFilter2(value0) {
      this.value0 = value0;
    }
    ;
    SetSourceFilter2.create = function(value0) {
      return new SetSourceFilter2(value0);
    };
    return SetSourceFilter2;
  })();
  var ClearFilters = /* @__PURE__ */ (function() {
    function ClearFilters2() {
    }
    ;
    ClearFilters2.value = new ClearFilters2();
    return ClearFilters2;
  })();

  // output/Data.MediaType.Common/index.js
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";

  // output/Affjax.ResponseFormat/index.js
  var identity11 = /* @__PURE__ */ identity(categoryFn);
  var $$ArrayBuffer = /* @__PURE__ */ (function() {
    function $$ArrayBuffer2(value0) {
      this.value0 = value0;
    }
    ;
    $$ArrayBuffer2.create = function(value0) {
      return new $$ArrayBuffer2(value0);
    };
    return $$ArrayBuffer2;
  })();
  var Blob = /* @__PURE__ */ (function() {
    function Blob3(value0) {
      this.value0 = value0;
    }
    ;
    Blob3.create = function(value0) {
      return new Blob3(value0);
    };
    return Blob3;
  })();
  var Document = /* @__PURE__ */ (function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  })();
  var Json = /* @__PURE__ */ (function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  })();
  var $$String = /* @__PURE__ */ (function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  })();
  var Ignore = /* @__PURE__ */ (function() {
    function Ignore2(value0) {
      this.value0 = value0;
    }
    ;
    Ignore2.create = function(value0) {
      return new Ignore2(value0);
    };
    return Ignore2;
  })();
  var toResponseType = function(v) {
    if (v instanceof $$ArrayBuffer) {
      return "arraybuffer";
    }
    ;
    if (v instanceof Blob) {
      return "blob";
    }
    ;
    if (v instanceof Document) {
      return "document";
    }
    ;
    if (v instanceof Json) {
      return "text";
    }
    ;
    if (v instanceof $$String) {
      return "text";
    }
    ;
    if (v instanceof Ignore) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at Affjax.ResponseFormat (line 44, column 3 - line 50, column 19): " + [v.constructor.name]);
  };
  var toMediaType = function(v) {
    if (v instanceof Json) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };
  var string = /* @__PURE__ */ (function() {
    return new $$String(identity11);
  })();
  var json = /* @__PURE__ */ (function() {
    return new Json(identity11);
  })();
  var ignore = /* @__PURE__ */ (function() {
    return new Ignore(identity11);
  })();

  // output/Affjax.Web/foreign.js
  var driver = {
    newXHR: function() {
      return new XMLHttpRequest();
    },
    fixupUrl: function(url) {
      return url || "/";
    }
  };

  // output/Affjax/foreign.js
  function _ajax(platformSpecificDriver, timeoutErrorMessageIdent, requestFailedMessageIdent, mkHeader, options2) {
    return function(errback, callback) {
      var xhr = platformSpecificDriver.newXHR();
      var fixedUrl = platformSpecificDriver.fixupUrl(options2.url, xhr);
      xhr.open(options2.method || "GET", fixedUrl, true, options2.username, options2.password);
      if (options2.headers) {
        try {
          for (var i2 = 0, header2; (header2 = options2.headers[i2]) != null; i2++) {
            xhr.setRequestHeader(header2.field, header2.value);
          }
        } catch (e) {
          errback(e);
        }
      }
      var onerror = function(msgIdent) {
        return function() {
          errback(new Error(msgIdent));
        };
      };
      xhr.onerror = onerror(requestFailedMessageIdent);
      xhr.ontimeout = onerror(timeoutErrorMessageIdent);
      xhr.onload = function() {
        callback({
          status: xhr.status,
          statusText: xhr.statusText,
          headers: xhr.getAllResponseHeaders().split("\r\n").filter(function(header3) {
            return header3.length > 0;
          }).map(function(header3) {
            var i3 = header3.indexOf(":");
            return mkHeader(header3.substring(0, i3))(header3.substring(i3 + 2));
          }),
          body: xhr.response
        });
      };
      xhr.responseType = options2.responseType;
      xhr.withCredentials = options2.withCredentials;
      xhr.timeout = options2.timeout;
      xhr.send(options2.content);
      return function(error4, cancelErrback, cancelCallback) {
        try {
          xhr.abort();
        } catch (e) {
          return cancelErrback(e);
        }
        return cancelCallback();
      };
    };
  }

  // output/Affjax.RequestBody/index.js
  var ArrayView = /* @__PURE__ */ (function() {
    function ArrayView2(value0) {
      this.value0 = value0;
    }
    ;
    ArrayView2.create = function(value0) {
      return new ArrayView2(value0);
    };
    return ArrayView2;
  })();
  var Blob2 = /* @__PURE__ */ (function() {
    function Blob3(value0) {
      this.value0 = value0;
    }
    ;
    Blob3.create = function(value0) {
      return new Blob3(value0);
    };
    return Blob3;
  })();
  var Document2 = /* @__PURE__ */ (function() {
    function Document3(value0) {
      this.value0 = value0;
    }
    ;
    Document3.create = function(value0) {
      return new Document3(value0);
    };
    return Document3;
  })();
  var $$String2 = /* @__PURE__ */ (function() {
    function $$String3(value0) {
      this.value0 = value0;
    }
    ;
    $$String3.create = function(value0) {
      return new $$String3(value0);
    };
    return $$String3;
  })();
  var FormData = /* @__PURE__ */ (function() {
    function FormData2(value0) {
      this.value0 = value0;
    }
    ;
    FormData2.create = function(value0) {
      return new FormData2(value0);
    };
    return FormData2;
  })();
  var FormURLEncoded = /* @__PURE__ */ (function() {
    function FormURLEncoded2(value0) {
      this.value0 = value0;
    }
    ;
    FormURLEncoded2.create = function(value0) {
      return new FormURLEncoded2(value0);
    };
    return FormURLEncoded2;
  })();
  var Json2 = /* @__PURE__ */ (function() {
    function Json3(value0) {
      this.value0 = value0;
    }
    ;
    Json3.create = function(value0) {
      return new Json3(value0);
    };
    return Json3;
  })();
  var toMediaType2 = function(v) {
    if (v instanceof FormURLEncoded) {
      return new Just(applicationFormURLEncoded);
    }
    ;
    if (v instanceof Json2) {
      return new Just(applicationJSON);
    }
    ;
    return Nothing.value;
  };

  // output/Affjax.RequestHeader/index.js
  var unwrap5 = /* @__PURE__ */ unwrap();
  var Accept = /* @__PURE__ */ (function() {
    function Accept2(value0) {
      this.value0 = value0;
    }
    ;
    Accept2.create = function(value0) {
      return new Accept2(value0);
    };
    return Accept2;
  })();
  var ContentType = /* @__PURE__ */ (function() {
    function ContentType2(value0) {
      this.value0 = value0;
    }
    ;
    ContentType2.create = function(value0) {
      return new ContentType2(value0);
    };
    return ContentType2;
  })();
  var RequestHeader = /* @__PURE__ */ (function() {
    function RequestHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    RequestHeader2.create = function(value0) {
      return function(value1) {
        return new RequestHeader2(value0, value1);
      };
    };
    return RequestHeader2;
  })();
  var value13 = function(v) {
    if (v instanceof Accept) {
      return unwrap5(v.value0);
    }
    ;
    if (v instanceof ContentType) {
      return unwrap5(v.value0);
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value1;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
  };
  var name15 = function(v) {
    if (v instanceof Accept) {
      return "Accept";
    }
    ;
    if (v instanceof ContentType) {
      return "Content-Type";
    }
    ;
    if (v instanceof RequestHeader) {
      return v.value0;
    }
    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
  };

  // output/Affjax.ResponseHeader/index.js
  var ResponseHeader = /* @__PURE__ */ (function() {
    function ResponseHeader2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseHeader2.create = function(value0) {
      return function(value1) {
        return new ResponseHeader2(value0, value1);
      };
    };
    return ResponseHeader2;
  })();

  // output/Data.Argonaut.Core/foreign.js
  function id3(x30) {
    return x30;
  }
  function stringify(j) {
    return JSON.stringify(j);
  }
  function _caseJson(isNull2, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull2();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  }

  // output/Data.Argonaut.Core/index.js
  var verbJsonType = function(def) {
    return function(f) {
      return function(g) {
        return g(def)(f);
      };
    };
  };
  var toJsonType = /* @__PURE__ */ (function() {
    return verbJsonType(Nothing.value)(Just.create);
  })();
  var jsonEmptyObject = /* @__PURE__ */ id3(empty4);
  var caseJsonString = function(d9) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d9), $$const(d9), $$const(d9), f, $$const(d9), $$const(d9), j);
      };
    };
  };
  var toString = /* @__PURE__ */ toJsonType(caseJsonString);
  var caseJsonObject = function(d9) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d9), $$const(d9), $$const(d9), $$const(d9), $$const(d9), f, j);
      };
    };
  };
  var toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
  var caseJsonNumber = function(d9) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d9), $$const(d9), f, $$const(d9), $$const(d9), $$const(d9), j);
      };
    };
  };
  var toNumber2 = /* @__PURE__ */ toJsonType(caseJsonNumber);
  var caseJsonBoolean = function(d9) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d9), f, $$const(d9), $$const(d9), $$const(d9), $$const(d9), j);
      };
    };
  };
  var toBoolean = /* @__PURE__ */ toJsonType(caseJsonBoolean);
  var caseJsonArray = function(d9) {
    return function(f) {
      return function(j) {
        return _caseJson($$const(d9), $$const(d9), $$const(d9), $$const(d9), f, $$const(d9), j);
      };
    };
  };
  var toArray = /* @__PURE__ */ toJsonType(caseJsonArray);

  // output/Data.Argonaut.Parser/foreign.js
  function _jsonParser(fail3, succ, s) {
    try {
      return succ(JSON.parse(s));
    } catch (e) {
      return fail3(e.message);
    }
  }

  // output/Data.Argonaut.Parser/index.js
  var jsonParser = function(j) {
    return _jsonParser(Left.create, Right.create, j);
  };

  // output/JSURI/foreign.js
  function toRFC3896(input3) {
    return input3.replace(/[!'()*]/g, function(c) {
      return "%" + c.charCodeAt(0).toString(16);
    });
  }
  var _encodeFormURLComponent = function encode(fail3, succeed, input3) {
    try {
      return succeed(toRFC3896(encodeURIComponent(input3)).replace(/%20/g, "+"));
    } catch (err) {
      return fail3(err);
    }
  };
  function _decodeURIComponent(fail3, succeed, input3) {
    try {
      return succeed(decodeURIComponent(input3));
    } catch (err) {
      return fail3(err);
    }
  }

  // output/JSURI/index.js
  var encodeFormURLComponent = /* @__PURE__ */ (function() {
    return runFn3(_encodeFormURLComponent)($$const(Nothing.value))(Just.create);
  })();
  var $$decodeURIComponent = /* @__PURE__ */ (function() {
    return runFn3(_decodeURIComponent)($$const(Nothing.value))(Just.create);
  })();

  // output/Data.FormURLEncoded/index.js
  var apply2 = /* @__PURE__ */ apply(applyMaybe);
  var map27 = /* @__PURE__ */ map(functorMaybe);
  var traverse2 = /* @__PURE__ */ traverse(traversableArray)(applicativeMaybe);
  var toArray2 = function(v) {
    return v;
  };
  var encode2 = /* @__PURE__ */ (function() {
    var encodePart = function(v) {
      if (v.value1 instanceof Nothing) {
        return encodeFormURLComponent(v.value0);
      }
      ;
      if (v.value1 instanceof Just) {
        return apply2(map27(function(key) {
          return function(val) {
            return key + ("=" + val);
          };
        })(encodeFormURLComponent(v.value0)))(encodeFormURLComponent(v.value1.value0));
      }
      ;
      throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 16 - line 39, column 114): " + [v.constructor.name]);
    };
    var $37 = map27(joinWith("&"));
    var $38 = traverse2(encodePart);
    return function($39) {
      return $37($38(toArray2($39)));
    };
  })();

  // output/Data.HTTP.Method/index.js
  var OPTIONS = /* @__PURE__ */ (function() {
    function OPTIONS2() {
    }
    ;
    OPTIONS2.value = new OPTIONS2();
    return OPTIONS2;
  })();
  var GET2 = /* @__PURE__ */ (function() {
    function GET3() {
    }
    ;
    GET3.value = new GET3();
    return GET3;
  })();
  var HEAD = /* @__PURE__ */ (function() {
    function HEAD2() {
    }
    ;
    HEAD2.value = new HEAD2();
    return HEAD2;
  })();
  var POST2 = /* @__PURE__ */ (function() {
    function POST3() {
    }
    ;
    POST3.value = new POST3();
    return POST3;
  })();
  var PUT = /* @__PURE__ */ (function() {
    function PUT2() {
    }
    ;
    PUT2.value = new PUT2();
    return PUT2;
  })();
  var DELETE = /* @__PURE__ */ (function() {
    function DELETE2() {
    }
    ;
    DELETE2.value = new DELETE2();
    return DELETE2;
  })();
  var TRACE = /* @__PURE__ */ (function() {
    function TRACE2() {
    }
    ;
    TRACE2.value = new TRACE2();
    return TRACE2;
  })();
  var CONNECT = /* @__PURE__ */ (function() {
    function CONNECT2() {
    }
    ;
    CONNECT2.value = new CONNECT2();
    return CONNECT2;
  })();
  var PROPFIND = /* @__PURE__ */ (function() {
    function PROPFIND2() {
    }
    ;
    PROPFIND2.value = new PROPFIND2();
    return PROPFIND2;
  })();
  var PROPPATCH = /* @__PURE__ */ (function() {
    function PROPPATCH2() {
    }
    ;
    PROPPATCH2.value = new PROPPATCH2();
    return PROPPATCH2;
  })();
  var MKCOL = /* @__PURE__ */ (function() {
    function MKCOL2() {
    }
    ;
    MKCOL2.value = new MKCOL2();
    return MKCOL2;
  })();
  var COPY = /* @__PURE__ */ (function() {
    function COPY2() {
    }
    ;
    COPY2.value = new COPY2();
    return COPY2;
  })();
  var MOVE = /* @__PURE__ */ (function() {
    function MOVE2() {
    }
    ;
    MOVE2.value = new MOVE2();
    return MOVE2;
  })();
  var LOCK = /* @__PURE__ */ (function() {
    function LOCK2() {
    }
    ;
    LOCK2.value = new LOCK2();
    return LOCK2;
  })();
  var UNLOCK = /* @__PURE__ */ (function() {
    function UNLOCK2() {
    }
    ;
    UNLOCK2.value = new UNLOCK2();
    return UNLOCK2;
  })();
  var PATCH = /* @__PURE__ */ (function() {
    function PATCH2() {
    }
    ;
    PATCH2.value = new PATCH2();
    return PATCH2;
  })();
  var unCustomMethod = function(v) {
    return v;
  };
  var showMethod = {
    show: function(v) {
      if (v instanceof OPTIONS) {
        return "OPTIONS";
      }
      ;
      if (v instanceof GET2) {
        return "GET";
      }
      ;
      if (v instanceof HEAD) {
        return "HEAD";
      }
      ;
      if (v instanceof POST2) {
        return "POST";
      }
      ;
      if (v instanceof PUT) {
        return "PUT";
      }
      ;
      if (v instanceof DELETE) {
        return "DELETE";
      }
      ;
      if (v instanceof TRACE) {
        return "TRACE";
      }
      ;
      if (v instanceof CONNECT) {
        return "CONNECT";
      }
      ;
      if (v instanceof PROPFIND) {
        return "PROPFIND";
      }
      ;
      if (v instanceof PROPPATCH) {
        return "PROPPATCH";
      }
      ;
      if (v instanceof MKCOL) {
        return "MKCOL";
      }
      ;
      if (v instanceof COPY) {
        return "COPY";
      }
      ;
      if (v instanceof MOVE) {
        return "MOVE";
      }
      ;
      if (v instanceof LOCK) {
        return "LOCK";
      }
      ;
      if (v instanceof UNLOCK) {
        return "UNLOCK";
      }
      ;
      if (v instanceof PATCH) {
        return "PATCH";
      }
      ;
      throw new Error("Failed pattern match at Data.HTTP.Method (line 43, column 1 - line 59, column 23): " + [v.constructor.name]);
    }
  };
  var print6 = /* @__PURE__ */ either(/* @__PURE__ */ show(showMethod))(unCustomMethod);

  // output/Effect.Aff.Compat/index.js
  var fromEffectFnAff = function(v) {
    return makeAff(function(k) {
      return function __do4() {
        var v1 = v(function($9) {
          return k(Left.create($9))();
        }, function($10) {
          return k(Right.create($10))();
        });
        return function(e) {
          return makeAff(function(k2) {
            return function __do5() {
              v1(e, function($11) {
                return k2(Left.create($11))();
              }, function($12) {
                return k2(Right.create($12))();
              });
              return nonCanceler;
            };
          });
        };
      };
    });
  };

  // output/Affjax/index.js
  var pure11 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeExceptT(monadIdentity));
  var fail2 = /* @__PURE__ */ fail(monadIdentity);
  var unsafeReadTagged2 = /* @__PURE__ */ unsafeReadTagged(monadIdentity);
  var alt6 = /* @__PURE__ */ alt(/* @__PURE__ */ altExceptT(semigroupNonEmptyList)(monadIdentity));
  var composeKleisliFlipped4 = /* @__PURE__ */ composeKleisliFlipped(/* @__PURE__ */ bindExceptT(monadIdentity));
  var map28 = /* @__PURE__ */ map(functorMaybe);
  var any3 = /* @__PURE__ */ any(foldableArray)(heytingAlgebraBoolean);
  var eq3 = /* @__PURE__ */ eq(eqString);
  var bindFlipped9 = /* @__PURE__ */ bindFlipped(bindMaybe);
  var map111 = /* @__PURE__ */ map(functorArray);
  var mapFlipped2 = /* @__PURE__ */ mapFlipped(functorAff);
  var $$try3 = /* @__PURE__ */ $$try(monadErrorAff);
  var pure13 = /* @__PURE__ */ pure(applicativeAff);
  var RequestContentError = /* @__PURE__ */ (function() {
    function RequestContentError2(value0) {
      this.value0 = value0;
    }
    ;
    RequestContentError2.create = function(value0) {
      return new RequestContentError2(value0);
    };
    return RequestContentError2;
  })();
  var ResponseBodyError = /* @__PURE__ */ (function() {
    function ResponseBodyError2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ResponseBodyError2.create = function(value0) {
      return function(value1) {
        return new ResponseBodyError2(value0, value1);
      };
    };
    return ResponseBodyError2;
  })();
  var TimeoutError = /* @__PURE__ */ (function() {
    function TimeoutError2() {
    }
    ;
    TimeoutError2.value = new TimeoutError2();
    return TimeoutError2;
  })();
  var RequestFailedError = /* @__PURE__ */ (function() {
    function RequestFailedError2() {
    }
    ;
    RequestFailedError2.value = new RequestFailedError2();
    return RequestFailedError2;
  })();
  var XHROtherError = /* @__PURE__ */ (function() {
    function XHROtherError2(value0) {
      this.value0 = value0;
    }
    ;
    XHROtherError2.create = function(value0) {
      return new XHROtherError2(value0);
    };
    return XHROtherError2;
  })();
  var request2 = function(driver2) {
    return function(req2) {
      var parseJSON = function(v2) {
        if (v2 === "") {
          return pure11(jsonEmptyObject);
        }
        ;
        return either(function($74) {
          return fail2(ForeignError.create($74));
        })(pure11)(jsonParser(v2));
      };
      var fromResponse = (function() {
        if (req2.responseFormat instanceof $$ArrayBuffer) {
          return unsafeReadTagged2("ArrayBuffer");
        }
        ;
        if (req2.responseFormat instanceof Blob) {
          return unsafeReadTagged2("Blob");
        }
        ;
        if (req2.responseFormat instanceof Document) {
          return function(x30) {
            return alt6(unsafeReadTagged2("Document")(x30))(alt6(unsafeReadTagged2("XMLDocument")(x30))(unsafeReadTagged2("HTMLDocument")(x30)));
          };
        }
        ;
        if (req2.responseFormat instanceof Json) {
          return composeKleisliFlipped4(function($75) {
            return req2.responseFormat.value0(parseJSON($75));
          })(unsafeReadTagged2("String"));
        }
        ;
        if (req2.responseFormat instanceof $$String) {
          return unsafeReadTagged2("String");
        }
        ;
        if (req2.responseFormat instanceof Ignore) {
          return $$const(req2.responseFormat.value0(pure11(unit)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 274, column 18 - line 283, column 57): " + [req2.responseFormat.constructor.name]);
      })();
      var extractContent = function(v2) {
        if (v2 instanceof ArrayView) {
          return new Right(v2.value0(unsafeToForeign));
        }
        ;
        if (v2 instanceof Blob2) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof Document2) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof $$String2) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormData) {
          return new Right(unsafeToForeign(v2.value0));
        }
        ;
        if (v2 instanceof FormURLEncoded) {
          return note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(map28(unsafeToForeign)(encode2(v2.value0)));
        }
        ;
        if (v2 instanceof Json2) {
          return new Right(unsafeToForeign(stringify(v2.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 235, column 20 - line 250, column 69): " + [v2.constructor.name]);
      };
      var addHeader = function(mh) {
        return function(hs) {
          if (mh instanceof Just && !any3(on(eq3)(name15)(mh.value0))(hs)) {
            return snoc(hs)(mh.value0);
          }
          ;
          return hs;
        };
      };
      var headers = function(reqContent) {
        return addHeader(map28(ContentType.create)(bindFlipped9(toMediaType2)(reqContent)))(addHeader(map28(Accept.create)(toMediaType(req2.responseFormat)))(req2.headers));
      };
      var ajaxRequest = function(v2) {
        return {
          method: print6(req2.method),
          url: req2.url,
          headers: map111(function(h) {
            return {
              field: name15(h),
              value: value13(h)
            };
          })(headers(req2.content)),
          content: v2,
          responseType: toResponseType(req2.responseFormat),
          username: toNullable(req2.username),
          password: toNullable(req2.password),
          withCredentials: req2.withCredentials,
          timeout: fromMaybe(0)(map28(function(v1) {
            return v1;
          })(req2.timeout))
        };
      };
      var send = function(content3) {
        return mapFlipped2($$try3(fromEffectFnAff(_ajax(driver2, "AffjaxTimeoutErrorMessageIdent", "AffjaxRequestFailedMessageIdent", ResponseHeader.create, ajaxRequest(content3)))))(function(v2) {
          if (v2 instanceof Right) {
            var v1 = runExcept(fromResponse(v2.value0.body));
            if (v1 instanceof Left) {
              return new Left(new ResponseBodyError(head3(v1.value0), v2.value0));
            }
            ;
            if (v1 instanceof Right) {
              return new Right({
                headers: v2.value0.headers,
                status: v2.value0.status,
                statusText: v2.value0.statusText,
                body: v1.value0
              });
            }
            ;
            throw new Error("Failed pattern match at Affjax (line 209, column 9 - line 211, column 52): " + [v1.constructor.name]);
          }
          ;
          if (v2 instanceof Left) {
            return new Left((function() {
              var message2 = message(v2.value0);
              var $61 = message2 === "AffjaxTimeoutErrorMessageIdent";
              if ($61) {
                return TimeoutError.value;
              }
              ;
              var $62 = message2 === "AffjaxRequestFailedMessageIdent";
              if ($62) {
                return RequestFailedError.value;
              }
              ;
              return new XHROtherError(v2.value0);
            })());
          }
          ;
          throw new Error("Failed pattern match at Affjax (line 207, column 144 - line 219, column 28): " + [v2.constructor.name]);
        });
      };
      if (req2.content instanceof Nothing) {
        return send(toNullable(Nothing.value));
      }
      ;
      if (req2.content instanceof Just) {
        var v = extractContent(req2.content.value0);
        if (v instanceof Right) {
          return send(toNullable(new Just(v.value0)));
        }
        ;
        if (v instanceof Left) {
          return pure13(new Left(new RequestContentError(v.value0)));
        }
        ;
        throw new Error("Failed pattern match at Affjax (line 199, column 7 - line 203, column 48): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at Affjax (line 195, column 3 - line 203, column 48): " + [req2.content.constructor.name]);
    };
  };
  var printError = function(v) {
    if (v instanceof RequestContentError) {
      return "There was a problem with the request content: " + v.value0;
    }
    ;
    if (v instanceof ResponseBodyError) {
      return "There was a problem with the response body: " + renderForeignError(v.value0);
    }
    ;
    if (v instanceof TimeoutError) {
      return "There was a problem making the request: timeout";
    }
    ;
    if (v instanceof RequestFailedError) {
      return "There was a problem making the request: request failed";
    }
    ;
    if (v instanceof XHROtherError) {
      return "There was a problem making the request: " + message(v.value0);
    }
    ;
    throw new Error("Failed pattern match at Affjax (line 113, column 14 - line 123, column 66): " + [v.constructor.name]);
  };
  var defaultRequest = /* @__PURE__ */ (function() {
    return {
      method: new Left(GET2.value),
      url: "/",
      headers: [],
      content: Nothing.value,
      username: Nothing.value,
      password: Nothing.value,
      withCredentials: false,
      responseFormat: ignore,
      timeout: Nothing.value
    };
  })();
  var get2 = function(driver2) {
    return function(rf) {
      return function(u2) {
        return request2(driver2)({
          method: defaultRequest.method,
          headers: defaultRequest.headers,
          content: defaultRequest.content,
          username: defaultRequest.username,
          password: defaultRequest.password,
          withCredentials: defaultRequest.withCredentials,
          timeout: defaultRequest.timeout,
          url: u2,
          responseFormat: rf
        });
      };
    };
  };

  // output/Affjax.Web/index.js
  var get3 = /* @__PURE__ */ get2(driver);

  // output/Data.String.CodePoints/foreign.js
  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";
  var _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str2) {
      return str2.codePointAt(0);
    } : fallback;
  };
  var _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };
  var _take = function(fallback) {
    return function(n) {
      if (hasStringIterator) {
        return function(str2) {
          var accum = "";
          var iter = str2[Symbol.iterator]();
          for (var i2 = 0; i2 < n; ++i2) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };
  var _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt02) {
      if (hasArrayFrom) {
        return function(str2) {
          return Array.from(str2, unsafeCodePointAt02);
        };
      }
      return fallback;
    };
  };

  // output/Data.String.CodePoints/index.js
  var fromEnum2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var map29 = /* @__PURE__ */ map(functorMaybe);
  var unfoldr2 = /* @__PURE__ */ unfoldr(unfoldableArray);
  var div3 = /* @__PURE__ */ div(euclideanRingInt);
  var mod2 = /* @__PURE__ */ mod(euclideanRingInt);
  var unsurrogate = function(lead) {
    return function(trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };
  var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
  };
  var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
  };
  var uncons5 = function(s) {
    var v = length5(s);
    if (v === 0) {
      return Nothing.value;
    }
    ;
    if (v === 1) {
      return new Just({
        head: fromEnum2(charAt(0)(s)),
        tail: ""
      });
    }
    ;
    var cu1 = fromEnum2(charAt(1)(s));
    var cu0 = fromEnum2(charAt(0)(s));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) {
      return new Just({
        head: unsurrogate(cu0)(cu1),
        tail: drop2(2)(s)
      });
    }
    ;
    return new Just({
      head: cu0,
      tail: drop2(1)(s)
    });
  };
  var unconsButWithTuple = function(s) {
    return map29(function(v) {
      return new Tuple(v.head, v.tail);
    })(uncons5(s));
  };
  var toCodePointArrayFallback = function(s) {
    return unfoldr2(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function(s) {
    var cu0 = fromEnum2(charAt(0)(s));
    var $47 = isLead(cu0) && length5(s) > 1;
    if ($47) {
      var cu1 = fromEnum2(charAt(1)(s));
      var $48 = isTrail(cu1);
      if ($48) {
        return unsurrogate(cu0)(cu1);
      }
      ;
      return cu0;
    }
    ;
    return cu0;
  };
  var unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length8 = function($74) {
    return length4(toCodePointArray($74));
  };
  var indexOf2 = function(p2) {
    return function(s) {
      return map29(function(i2) {
        return length8(take3(i2)(s));
      })(indexOf(p2)(s));
    };
  };
  var fromCharCode2 = /* @__PURE__ */ (function() {
    var $75 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
    return function($76) {
      return singleton7($75($76));
    };
  })();
  var singletonFallback = function(v) {
    if (v <= 65535) {
      return fromCharCode2(v);
    }
    ;
    var lead = div3(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod2(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode2(lead) + fromCharCode2(trail);
  };
  var singleton9 = /* @__PURE__ */ _singleton(singletonFallback);
  var takeFallback = function(v) {
    return function(v1) {
      if (v < 1) {
        return "";
      }
      ;
      var v2 = uncons5(v1);
      if (v2 instanceof Just) {
        return singleton9(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
      }
      ;
      return v1;
    };
  };
  var take4 = /* @__PURE__ */ _take(takeFallback);
  var splitAt2 = function(i2) {
    return function(s) {
      var before = take4(i2)(s);
      return {
        before,
        after: drop2(length5(before))(s)
      };
    };
  };
  var drop4 = function(n) {
    return function(s) {
      return drop2(length5(take4(n)(s)))(s);
    };
  };

  // output/PSD3.CodeAtlas.Data/index.js
  var bind6 = /* @__PURE__ */ bind(bindEither);
  var bind15 = /* @__PURE__ */ bind(bindMaybe);
  var traverse3 = /* @__PURE__ */ traverse(traversableArray);
  var traverse12 = /* @__PURE__ */ traverse3(applicativeMaybe);
  var mapFlipped3 = /* @__PURE__ */ mapFlipped(functorMaybe);
  var pure14 = /* @__PURE__ */ pure(applicativeEither);
  var map30 = /* @__PURE__ */ map(functorEither);
  var traverse22 = /* @__PURE__ */ traverse3(applicativeEither);
  var toUnfoldable5 = /* @__PURE__ */ toUnfoldable4(unfoldableArray);
  var fromFoldable4 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var mapFlipped1 = /* @__PURE__ */ mapFlipped(functorArray);
  var lookup6 = /* @__PURE__ */ lookup(ordString);
  var bind22 = /* @__PURE__ */ bind(bindAff);
  var pure15 = /* @__PURE__ */ pure(applicativeAff);
  var map112 = /* @__PURE__ */ map(functorArray);
  var note2 = function(v) {
    return function(v1) {
      if (v1 instanceof Nothing) {
        return new Left(v);
      }
      ;
      if (v1 instanceof Just) {
        return new Right(v1.value0);
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.Data (line 275, column 1 - line 275, column 55): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var parseDeclaration = function(moduleName) {
    return function(json2) {
      return bind6(note2("Declaration not an object")(toObject(json2)))(function(obj) {
        var title5 = bind15(lookup3("title")(obj))(toString);
        var kind2 = bind15(lookup3("kind")(obj))(toString);
        var comments = bind15(lookup3("comments")(obj))(toString);
        var sourceSpan = bind15(lookup3("sourceSpan")(obj))(toObject);
        if (title5 instanceof Just && kind2 instanceof Just) {
          return bind6((function() {
            if (sourceSpan instanceof Just) {
              return bind6(note2("Missing start")(bind15(lookup3("start")(sourceSpan.value0))(toArray)))(function(startArray) {
                return bind6(note2("Missing end")(bind15(lookup3("end")(sourceSpan.value0))(toArray)))(function(endArray) {
                  return bind6(note2("Missing name")(bind15(lookup3("name")(sourceSpan.value0))(toString)))(function(name16) {
                    return bind6(note2("Invalid start array")(traverse12(function(j) {
                      return mapFlipped3(toNumber2(j))(floor2);
                    })(startArray)))(function(start5) {
                      return bind6(note2("Invalid end array")(traverse12(function(j) {
                        return mapFlipped3(toNumber2(j))(floor2);
                      })(endArray)))(function(end2) {
                        return pure14({
                          start: start5,
                          end: end2,
                          name: name16
                        });
                      });
                    });
                  });
                });
              });
            }
            ;
            if (sourceSpan instanceof Nothing) {
              return pure14({
                start: [0, 0],
                end: [0, 0],
                name: ""
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.CodeAtlas.Data (line 113, column 15 - line 121, column 65): " + [sourceSpan.constructor.name]);
          })())(function(span5) {
            return pure14(new Just({
              title: title5.value0,
              kind: kind2.value0,
              module: moduleName,
              comments: fromMaybe("")(comments),
              sourceSpan: span5
            }));
          });
        }
        ;
        return pure14(Nothing.value);
      });
    };
  };
  var parseFunctionCall = function(json2) {
    return bind6(note2("Call not an object")(toObject(json2)))(function(obj) {
      var target7 = bind15(lookup3("target")(obj))(toString);
      var targetModule = bind15(lookup3("targetModule")(obj))(toString);
      var identifier = bind15(lookup3("identifier")(obj))(toString);
      var isCrossModule = bind15(lookup3("isCrossModule")(obj))(toBoolean);
      if (target7 instanceof Just && (targetModule instanceof Just && (identifier instanceof Just && isCrossModule instanceof Just))) {
        return pure14(new Just({
          target: target7.value0,
          targetModule: targetModule.value0,
          identifier: identifier.value0,
          isCrossModule: isCrossModule.value0
        }));
      }
      ;
      return pure14(Nothing.value);
    });
  };
  var parseFunctionInfo = function(v) {
    return bind6(note2("Function not an object")(toObject(v.value1)))(function(obj) {
      var name16 = bind15(lookup3("name")(obj))(toString);
      var module_ = bind15(lookup3("module")(obj))(toString);
      return bind6(note2("Missing calls")(lookup3("calls")(obj)))(function(callsJson) {
        return bind6(note2("Missing calledBy")(lookup3("calledBy")(obj)))(function(calledByJson) {
          return bind6(note2("Calls not an array")(toArray(callsJson)))(function(callsArray) {
            return bind6(note2("CalledBy not an array")(toArray(calledByJson)))(function(calledByArray) {
              return bind6(map30(catMaybes)(traverse22(parseFunctionCall)(callsArray)))(function(calls) {
                return bind6(traverse22(function(j) {
                  return note2("CalledBy item not string")(toString(j));
                })(calledByArray))(function(calledBy) {
                  if (name16 instanceof Just && module_ instanceof Just) {
                    return pure14(new Just({
                      key: v.value0,
                      value: {
                        name: name16.value0,
                        module: module_.value0,
                        calls,
                        calledBy
                      }
                    }));
                  }
                  ;
                  return pure14(Nothing.value);
                });
              });
            });
          });
        });
      });
    });
  };
  var parseFunctionCalls = function(json2) {
    return bind6(note2("Root not an object")(toObject(json2)))(function(obj) {
      return bind6(note2("Missing functions")(bind15(lookup3("functions")(obj))(toObject)))(function(functionsObj) {
        var functionsArray = toUnfoldable5(functionsObj);
        return bind6(map30(catMaybes)(traverse22(parseFunctionInfo)(functionsArray)))(function(functions) {
          return bind6(note2("Missing stats")(bind15(lookup3("stats")(obj))(toObject)))(function(statsObj) {
            return bind6(note2("Missing totalFunctions")(mapFlipped3(bind15(lookup3("totalFunctions")(statsObj))(toNumber2))(floor2)))(function(totalFunctions) {
              return bind6(note2("Missing totalCalls")(mapFlipped3(bind15(lookup3("totalCalls")(statsObj))(toNumber2))(floor2)))(function(totalCalls) {
                return bind6(note2("Missing crossModuleCalls")(mapFlipped3(bind15(lookup3("crossModuleCalls")(statsObj))(toNumber2))(floor2)))(function(crossModuleCalls) {
                  return pure14({
                    functions,
                    stats: {
                      totalFunctions,
                      totalCalls,
                      crossModuleCalls
                    }
                  });
                });
              });
            });
          });
        });
      });
    });
  };
  var parseLOCEntry = function(json2) {
    return bind6(note2("LOC entry not an object")(toObject(json2)))(function(obj) {
      return bind6(note2("Missing loc")(mapFlipped3(bind15(lookup3("loc")(obj))(toNumber2))(floor2)))(function(loc) {
        return bind6(note2("Missing path")(bind15(lookup3("path")(obj))(toString)))(function(path3) {
          return pure14(new Just({
            loc,
            path: path3
          }));
        });
      });
    });
  };
  var parseLOC = function(json2) {
    return bind6(note2("Root not an object")(toObject(json2)))(function(obj) {
      return bind6(note2("Missing loc array")(bind15(lookup3("loc")(obj))(toArray)))(function(locArray) {
        return bind6(map30(catMaybes)(traverse22(parseLOCEntry)(locArray)))(function(entries) {
          return pure14(fromFoldable4(mapFlipped1(entries)(function(entry) {
            return new Tuple(entry.path, entry.loc);
          })));
        });
      });
    });
  };
  var parseModule = function(v) {
    return bind6(note2("Module not an object")(toObject(v.value1)))(function(obj) {
      return bind6(note2("Missing comments")(bind15(lookup3("comments")(obj))(toString)))(function(comments) {
        return bind6(note2("Missing declarations")(lookup3("declarations")(obj)))(function(declsJson) {
          return bind6(note2("Declarations not an array")(toArray(declsJson)))(function(declsArray) {
            return bind6(map30(catMaybes)(traverse22(parseDeclaration(v.value0))(declsArray)))(function(decls) {
              return pure14({
                name: v.value0,
                comments,
                declarations: decls
              });
            });
          });
        });
      });
    });
  };
  var parseDeclarations = function(json2) {
    return bind6(note2("Root not an object")(toObject(json2)))(function(obj) {
      return bind6(note2("Missing modules")(bind15(lookup3("modules")(obj))(toObject)))(function(modulesObj) {
        var modulesArray = toUnfoldable5(modulesObj);
        return bind6(traverse22(parseModule)(modulesArray))(function(modules) {
          return bind6(note2("Missing stats")(bind15(lookup3("stats")(obj))(toObject)))(function(statsObj) {
            return bind6(note2("Missing totalModules")(mapFlipped3(bind15(lookup3("totalModules")(statsObj))(toNumber2))(floor2)))(function(totalModules) {
              return bind6(note2("Missing totalDeclarations")(mapFlipped3(bind15(lookup3("totalDeclarations")(statsObj))(toNumber2))(floor2)))(function(totalDecls) {
                return bind6(note2("Missing byKind")(bind15(lookup3("byKind")(statsObj))(toObject)))(function(byKindObj) {
                  var byKind = mapFlipped1(toUnfoldable5(byKindObj))(function(v) {
                    return {
                      kind: v.value0,
                      count: fromMaybe(0)(mapFlipped3(toNumber2(v.value1))(floor2))
                    };
                  });
                  return pure14({
                    modules,
                    stats: {
                      totalModules,
                      totalDeclarations: totalDecls,
                      byKind
                    }
                  });
                });
              });
            });
          });
        });
      });
    });
  };
  var parseModuleInfoWithLOC = function(locMap) {
    return function(v) {
      return bind6(note2("Module not an object")(toObject(v.value1)))(function(obj) {
        return bind6(note2("Missing depends")(lookup3("depends")(obj)))(function(dependsJson) {
          return bind6(note2("Depends not an array")(toArray(dependsJson)))(function(dependsArray) {
            return bind6(traverse22(function(j) {
              return note2("Depend not string")(toString(j));
            })(dependsArray))(function(depends) {
              return bind6(note2("Missing package")(bind15(lookup3("package")(obj))(toString)))(function($$package) {
                return bind6(note2("Missing path")(bind15(lookup3("path")(obj))(toString)))(function(path3) {
                  var loc = fromMaybe(100)(lookup6(path3)(locMap));
                  return pure14(new Just({
                    name: v.value0,
                    depends,
                    "package": $$package,
                    path: path3,
                    loc
                  }));
                });
              });
            });
          });
        });
      });
    };
  };
  var loadLOC = /* @__PURE__ */ bind22(/* @__PURE__ */ get3(json)("data/spago-data/LOC.json"))(function(result) {
    if (result instanceof Left) {
      return pure15(new Left("Failed to load LOC.json"));
    }
    ;
    if (result instanceof Right) {
      return pure15(parseLOC(result.value0.body));
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeAtlas.Data (line 42, column 3 - line 44, column 52): " + [result.constructor.name]);
  });
  var loadFunctionCalls = /* @__PURE__ */ bind22(/* @__PURE__ */ get3(json)("data/spago-data/function-calls.json"))(function(result) {
    if (result instanceof Left) {
      return pure15(new Left("Failed to load function-calls.json"));
    }
    ;
    if (result instanceof Right) {
      return pure15(parseFunctionCalls(result.value0.body));
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeAtlas.Data (line 34, column 3 - line 36, column 62): " + [result.constructor.name]);
  });
  var loadDeclarations = /* @__PURE__ */ bind22(/* @__PURE__ */ get3(json)("data/spago-data/declarations.json"))(function(result) {
    if (result instanceof Left) {
      return pure15(new Left("Failed to load declarations.json"));
    }
    ;
    if (result instanceof Right) {
      return pure15(parseDeclarations(result.value0.body));
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeAtlas.Data (line 26, column 3 - line 28, column 61): " + [result.constructor.name]);
  });
  var isSourceModule = function(path3) {
    var toCharArray2 = (function() {
      var $75 = map112(singleton9);
      return function($76) {
        return $75(toCodePointArray($76));
      };
    })();
    var fromCharArray2 = joinWith("");
    var take5 = function(n) {
      return function(str2) {
        var chars = toCharArray2(str2);
        return fromCharArray2(take(n)(chars));
      };
    };
    var v = take5(4)(path3);
    if (v === "src/") {
      return true;
    }
    ;
    return false;
  };
  var parseModulesWithLOC = function(json2) {
    return function(locMap) {
      return bind6(note2("Root not an object")(toObject(json2)))(function(obj) {
        var modulesArray = toUnfoldable5(obj);
        return bind6(map30(catMaybes)(traverse22(parseModuleInfoWithLOC(locMap))(modulesArray)))(function(modules) {
          var totalModules = length4(modules);
          var sourceModules = length4(filter2(function(m) {
            return isSourceModule(m.path);
          })(modules));
          var packageModules = totalModules - sourceModules | 0;
          return pure14({
            modules,
            stats: {
              totalModules,
              sourceModules,
              packageModules
            }
          });
        });
      });
    };
  };
  var loadModules = /* @__PURE__ */ bind22(/* @__PURE__ */ get3(json)("data/spago-data/modules.json"))(function(modulesResult) {
    return bind22(loadLOC)(function(locResult) {
      if (modulesResult instanceof Right && locResult instanceof Right) {
        return pure15(parseModulesWithLOC(modulesResult.value0.body)(locResult.value0));
      }
      ;
      if (modulesResult instanceof Left) {
        return pure15(new Left("Failed to load modules.json"));
      }
      ;
      if (locResult instanceof Left) {
        return pure15(new Left(locResult.value0));
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.Data (line 52, column 3 - line 56, column 35): " + [modulesResult.constructor.name, locResult.constructor.name]);
    });
  });

  // output/PSD3.CodeAtlas.Types/index.js
  var ProjectCode = /* @__PURE__ */ (function() {
    function ProjectCode2() {
    }
    ;
    ProjectCode2.value = new ProjectCode2();
    return ProjectCode2;
  })();
  var LibraryCode = /* @__PURE__ */ (function() {
    function LibraryCode2() {
    }
    ;
    LibraryCode2.value = new LibraryCode2();
    return LibraryCode2;
  })();
  var DeclarationsTab = /* @__PURE__ */ (function() {
    function DeclarationsTab2() {
    }
    ;
    DeclarationsTab2.value = new DeclarationsTab2();
    return DeclarationsTab2;
  })();
  var VisualizationTab = /* @__PURE__ */ (function() {
    function VisualizationTab2() {
    }
    ;
    VisualizationTab2.value = new VisualizationTab2();
    return VisualizationTab2;
  })();
  var InteractiveGraphTab = /* @__PURE__ */ (function() {
    function InteractiveGraphTab2() {
    }
    ;
    InteractiveGraphTab2.value = new InteractiveGraphTab2();
    return InteractiveGraphTab2;
  })();
  var showAtlasTab = {
    show: function(v) {
      if (v instanceof DeclarationsTab) {
        return "Declarations";
      }
      ;
      if (v instanceof VisualizationTab) {
        return "Visualization";
      }
      ;
      if (v instanceof InteractiveGraphTab) {
        return "Interactive";
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.Types (line 13, column 1 - line 16, column 43): " + [v.constructor.name]);
    }
  };
  var eqSourceType = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof ProjectCode && y28 instanceof ProjectCode) {
          return true;
        }
        ;
        if (x30 instanceof LibraryCode && y28 instanceof LibraryCode) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eqAtlasTab = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof DeclarationsTab && y28 instanceof DeclarationsTab) {
          return true;
        }
        ;
        if (x30 instanceof VisualizationTab && y28 instanceof VisualizationTab) {
          return true;
        }
        ;
        if (x30 instanceof InteractiveGraphTab && y28 instanceof InteractiveGraphTab) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Array.NonEmpty.Internal/index.js
  var functorNonEmptyArray = functorArray;

  // output/Data.Array.NonEmpty/index.js
  var fromJust5 = /* @__PURE__ */ fromJust();
  var toArray3 = function(v) {
    return v;
  };
  var adaptMaybe = function(f) {
    return function($123) {
      return fromJust5(f(toArray3($123)));
    };
  };
  var head5 = /* @__PURE__ */ adaptMaybe(head2);

  // output/Data.Lens.Internal.Forget/index.js
  var profunctorForget = {
    dimap: function(f) {
      return function(v) {
        return function(v1) {
          return function($36) {
            return v1(f($36));
          };
        };
      };
    }
  };
  var strongForget = {
    first: function(v) {
      return function($37) {
        return v(fst($37));
      };
    },
    second: function(v) {
      return function($38) {
        return v(snd($38));
      };
    },
    Profunctor0: function() {
      return profunctorForget;
    }
  };

  // output/Data.Profunctor.Strong/index.js
  var strongFn = {
    first: function(a2b) {
      return function(v) {
        return new Tuple(a2b(v.value0), v.value1);
      };
    },
    second: /* @__PURE__ */ map(functorTuple),
    Profunctor0: function() {
      return profunctorFn;
    }
  };
  var first = function(dict) {
    return dict.first;
  };

  // output/Data.Lens.Iso/index.js
  var coerce4 = /* @__PURE__ */ coerce();
  var iso = function(f) {
    return function(g) {
      return function(dictProfunctor) {
        var dimap2 = dimap(dictProfunctor);
        return function(pab) {
          return dimap2(f)(g)(pab);
        };
      };
    };
  };
  var coerced = function() {
    return function() {
      return function(dictProfunctor) {
        return iso(coerce4)(coerce4)(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Iso.Newtype/index.js
  var coerced2 = /* @__PURE__ */ coerced()();
  var _Newtype = function() {
    return function() {
      return function(dictProfunctor) {
        return coerced2(dictProfunctor);
      };
    };
  };

  // output/Data.Lens.Lens/index.js
  var lens$prime = function(to2) {
    return function(dictStrong) {
      var dimap2 = dimap(dictStrong.Profunctor0());
      var first2 = first(dictStrong);
      return function(pab) {
        return dimap2(to2)(function(v) {
          return v.value1(v.value0);
        })(first2(pab));
      };
    };
  };
  var lens = function(get13) {
    return function(set5) {
      return function(dictStrong) {
        return lens$prime(function(s) {
          return new Tuple(get13(s), function(b2) {
            return set5(s)(b2);
          });
        })(dictStrong);
      };
    };
  };

  // output/Data.Set/index.js
  var foldMap2 = /* @__PURE__ */ foldMap(foldableList);
  var foldl3 = /* @__PURE__ */ foldl(foldableList);
  var foldr4 = /* @__PURE__ */ foldr(foldableList);
  var fromFoldable1 = /* @__PURE__ */ fromFoldable3(foldableList);
  var unsafeIndex2 = /* @__PURE__ */ unsafeIndex();
  var bind7 = /* @__PURE__ */ bind(bindST);
  var pure16 = /* @__PURE__ */ pure(applicativeST);
  var tailRecM22 = /* @__PURE__ */ tailRecM2(monadRecST);
  var $$Set = function(x30) {
    return x30;
  };
  var toList2 = function(v) {
    return keys(v);
  };
  var toUnfoldable6 = function(dictUnfoldable) {
    var $127 = toUnfoldable(dictUnfoldable);
    return function($128) {
      return $127(toList2($128));
    };
  };
  var singleton10 = function(a2) {
    return singleton4(a2)(unit);
  };
  var member2 = function(dictOrd) {
    var member12 = member(dictOrd);
    return function(a2) {
      return function(v) {
        return member12(a2)(v);
      };
    };
  };
  var isEmpty2 = function(v) {
    return isEmpty(v);
  };
  var insert6 = function(dictOrd) {
    var insert17 = insert(dictOrd);
    return function(a2) {
      return function(v) {
        return insert17(a2)(unit)(v);
      };
    };
  };
  var fromMap = $$Set;
  var foldableSet = {
    foldMap: function(dictMonoid) {
      var foldMap12 = foldMap2(dictMonoid);
      return function(f) {
        var $129 = foldMap12(f);
        return function($130) {
          return $129(toList2($130));
        };
      };
    },
    foldl: function(f) {
      return function(x30) {
        var $131 = foldl3(f)(x30);
        return function($132) {
          return $131(toList2($132));
        };
      };
    },
    foldr: function(f) {
      return function(x30) {
        var $133 = foldr4(f)(x30);
        return function($134) {
          return $133(toList2($134));
        };
      };
    }
  };
  var empty7 = empty2;
  var fromFoldable5 = function(dictFoldable) {
    var foldl22 = foldl(dictFoldable);
    return function(dictOrd) {
      var insert17 = insert6(dictOrd);
      return foldl22(function(m) {
        return function(a2) {
          return insert17(a2)(m);
        };
      })(empty7);
    };
  };
  var fromFoldable22 = /* @__PURE__ */ fromFoldable5(foldableArray);
  var intersection = function(dictOrd) {
    var compare4 = compare(dictOrd);
    var fromFoldable34 = fromFoldable22(dictOrd);
    return function(s1) {
      return function(s2) {
        var toArray4 = function($135) {
          return fromFoldable1(toList2($135));
        };
        var rs = toArray4(s2);
        var rl = length4(rs);
        var ls = toArray4(s1);
        var ll = length4(ls);
        var intersect2 = function(acc) {
          var go2 = function(l) {
            return function(r) {
              var $122 = l < ll && r < rl;
              if ($122) {
                var v = compare4(unsafeIndex2(ls)(l))(unsafeIndex2(rs)(r));
                if (v instanceof EQ) {
                  return function __do4() {
                    push(unsafeIndex2(ls)(l))(acc)();
                    return new Loop({
                      a: l + 1 | 0,
                      b: r + 1 | 0
                    });
                  };
                }
                ;
                if (v instanceof LT) {
                  return pure16(new Loop({
                    a: l + 1 | 0,
                    b: r
                  }));
                }
                ;
                if (v instanceof GT) {
                  return pure16(new Loop({
                    a: l,
                    b: r + 1 | 0
                  }));
                }
                ;
                throw new Error("Failed pattern match at Data.Set (line 184, column 12 - line 189, column 43): " + [v.constructor.name]);
              }
              ;
              return pure16(new Done(acc));
            };
          };
          return tailRecM22(go2)(0)(0);
        };
        return fromFoldable34(bind7(bind7(newSTArray)(intersect2))(unsafeFreeze)());
      };
    };
  };
  var $$delete5 = function(dictOrd) {
    var delete1 = $$delete(dictOrd);
    return function(a2) {
      return function(v) {
        return delete1(a2)(v);
      };
    };
  };
  var difference2 = function(dictOrd) {
    var delete1 = $$delete5(dictOrd);
    return function(s1) {
      return function(s2) {
        return foldl3(flip(delete1))(s1)(toList2(s2));
      };
    };
  };

  // output/Data.Lens.Setter/index.js
  var over2 = function(l) {
    return l;
  };
  var set = function(l) {
    return function(b2) {
      return over2(l)($$const(b2));
    };
  };
  var modifying = function(dictMonadState) {
    var $$void12 = $$void(dictMonadState.Monad0().Bind1().Apply0().Functor0());
    var modify5 = modify(dictMonadState);
    return function(p2) {
      return function(f) {
        return $$void12(modify5(over2(p2)(f)));
      };
    };
  };

  // output/Data.Lens.Getter/index.js
  var unwrap6 = /* @__PURE__ */ unwrap();
  var identity12 = /* @__PURE__ */ identity(categoryFn);
  var view = function(l) {
    return unwrap6(l(identity12));
  };
  var viewOn = function(s) {
    return function(l) {
      return view(l)(s);
    };
  };
  var use = function(dictMonadState) {
    var gets2 = gets(dictMonadState);
    return function(p2) {
      return gets2(function(v) {
        return viewOn(v)(p2);
      });
    };
  };

  // output/Record/index.js
  var set2 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function() {
        return function(l) {
          return function(b2) {
            return function(r) {
              return unsafeSet(reflectSymbol2(l))(b2)(r);
            };
          };
        };
      };
    };
  };
  var get4 = function(dictIsSymbol) {
    var reflectSymbol2 = reflectSymbol(dictIsSymbol);
    return function() {
      return function(l) {
        return function(r) {
          return unsafeGet(reflectSymbol2(l))(r);
        };
      };
    };
  };

  // output/Data.Lens.Record/index.js
  var prop3 = function(dictIsSymbol) {
    var get13 = get4(dictIsSymbol)();
    var set5 = set2(dictIsSymbol)()();
    return function() {
      return function() {
        return function(l) {
          return function(dictStrong) {
            return lens(get13(l))(flip(set5(l)))(dictStrong);
          };
        };
      };
    };
  };

  // output/PSD3.Internal.FFI/foreign.js
  function d3Append_(element3) {
    return (selection2) => {
      return selection2.append(element3);
    };
  }
  function d3DataWithKeyFunction_(data) {
    return (keyFn) => (selection2) => {
      return selection2.data(data, keyFn);
    };
  }
  function d3EnterAndAppend_(element3) {
    return (selection2) => {
      return selection2.enter().append(element3);
    };
  }
  function d3GetExitSelection_(selection2) {
    return selection2.exit();
  }
  function d3GetEnterSelection_(selection2) {
    return selection2.enter();
  }
  function d3FilterSelection_(selection2) {
    return (selector) => selection2.filter(selector);
  }
  function d3LowerSelection_(selection2) {
    return selection2.lower();
  }
  function d3MergeSelectionWith_(enter) {
    return (update4) => {
      return enter.merge(update4);
    };
  }
  function d3OrderSelection_(selection2) {
    return selection2.order();
  }
  function d3RaiseSelection_(selection2) {
    return selection2.raise();
  }
  function d3RemoveSelection_(selection2) {
    return selection2.remove();
  }
  function d3SelectAllInDOM_(selector) {
    return d3.selectAll(selector);
  }
  function d3SelectFirstInDOM_(selector) {
    return d3.select(selector);
  }
  function d3SelectionIsEmpty_(selection2) {
    return selection2.empty();
  }
  function d3SelectionSelect_(selector) {
    return (selection2) => {
      return selection2.select(selector);
    };
  }
  function d3SelectionSelectAll_(selector) {
    return (selection2) => {
      return selection2.selectAll(selector);
    };
  }
  function d3SetAttr_(name16) {
    return (value19) => (selection2) => {
      return selection2.attr(name16, value19);
    };
  }
  function d3SetHTML_(value19) {
    return (selection2) => {
      return selection2.html(value19);
    };
  }
  function d3SetProperty_(value19) {
    return (selection2) => {
      return selection2.property(value19);
    };
  }
  function d3SetText_(value19) {
    return (selection2) => {
      return selection2.text(value19);
    };
  }
  function d3SortSelection_(selection2) {
    return (compare4) => selection2.sort(compare4);
  }
  function simulationDrag_(label5) {
    return (selection2) => (simulation) => (dragFn) => selection2.call(dragFn(label5, simulation));
  }
  function disableDrag_(selection2) {
    return selection2.on(".drag", null);
  }
  function getIndexFromDatum_(datum2) {
    return typeof datum2.index == `undefined` ? "?" : datum2.index;
  }
  function selectionOn_(selection2) {
    return (event) => (callback) => {
      return selection2.on(event, callback);
    };
  }
  function d3AddTransition_(selection2) {
    return (transition2) => {
      var handle;
      if (transition2.name == "") {
        handle = selection2.transition();
        if (transition2.duration != 0) {
          handle.duration(transition2.duration);
        }
        if (transition2.delay != 0) {
          handle.delay(transition2.delay);
        }
      } else {
        handle = selection2.transition(transition2.name);
      }
      return handle;
    };
  }
  function simdrag_(label5, simulation) {
    function dragstarted(event) {
      if (!event.active) simulation.alphaTarget(0.3).restart();
      event.subject.fx = event.subject.x;
      event.subject.fy = event.subject.y;
    }
    function dragged(event) {
      event.subject.fx = event.x;
      event.subject.fy = event.y;
    }
    function dragended(event) {
      if (!event.active) simulation.alphaTarget(0);
      event.subject.fx = null;
      event.subject.fy = null;
    }
    return d3.drag().on("start." + label5, dragstarted).on("drag." + label5, dragged).on("end." + label5, dragended);
  }
  function simdragHorizontal_(label5, simulation) {
    function dragstarted(event) {
      if (!event.active) simulation.alphaTarget(0.3).restart();
      event.subject.fx = event.subject.x;
    }
    function dragged(event) {
      event.subject.fx = event.x;
    }
    function dragended(event) {
      if (!event.active) simulation.alphaTarget(0);
      event.subject.fx = null;
    }
    return d3.drag().on("start." + label5, dragstarted).on("drag." + label5, dragged).on("end." + label5, dragended);
  }
  function highlightConnectedNodes_(selection2) {
    return (connectedIds) => {
      const connectedSet = new Set(connectedIds);
      selection2.selectAll(".node-group").classed("highlighted", (d9) => connectedSet.has(d9.id)).classed("dimmed", (d9) => !connectedSet.has(d9.id));
    };
  }
  function clearHighlights_(selection2) {
    selection2.selectAll(".node-group").classed("highlighted", false).classed("dimmed", false);
  }
  function unpinAllNodes_(simulation) {
    simulation.nodes().forEach((node) => {
      node.fy = null;
    });
    simulation.alpha(0.3).restart();
  }
  function filterToConnectedNodes_(simulation) {
    return (keyFn) => (nodeIds) => {
      const allNodes3 = simulation.nodes();
      const linkForce = simulation.force(linksForceName_);
      const allLinks = linkForce ? linkForce.links() : [];
      const idSet = new Set(nodeIds);
      const filteredNodes = allNodes3.filter((node) => idSet.has(keyFn(node)));
      const filteredLinks = allLinks.filter((link4) => {
        const sourceId = typeof link4.source === "object" ? keyFn(link4.source) : link4.source;
        const targetId = typeof link4.target === "object" ? keyFn(link4.target) : link4.target;
        return idSet.has(sourceId) && idSet.has(targetId);
      });
      simulation.nodes(filteredNodes);
      if (linkForce) {
        linkForce.links(filteredLinks);
      }
      d3.select("div.svg-container").selectAll("g.node g.node-group").filter((d9) => !idSet.has(keyFn(d9))).remove();
      d3.select("div.svg-container").selectAll("g.link line").filter((d9) => {
        const sourceId = typeof d9.source === "object" ? keyFn(d9.source) : d9.source;
        const targetId = typeof d9.target === "object" ? keyFn(d9.target) : d9.target;
        return !idSet.has(sourceId) || !idSet.has(targetId);
      }).remove();
      simulation.alpha(0.5).restart();
    };
  }
  var linksForceName_ = "links";
  function disableTick_(simulation) {
    return (name16) => {
      return simulation.on("tick." + name16, () => null);
    };
  }
  function forceCenter_() {
    return d3.forceCenter();
  }
  function forceCollideFn_() {
    return d3.forceCollide();
  }
  function forceLink_() {
    return d3.forceLink().id((d9) => d9.id);
  }
  function forceMany_() {
    return d3.forceManyBody();
  }
  function forceRadial_() {
    return d3.forceRadial();
  }
  function forceX_() {
    return d3.forceX();
  }
  function forceY_() {
    return d3.forceY();
  }
  function getNodes_(simulation) {
    return simulation.nodes();
  }
  function keyIsID_(d9) {
    return d9.id;
  }
  function setAlpha_(simulation) {
    return (alpha) => {
      console.log(`FFI: setting simulation.alpha to ${alpha}`);
      simulation.alpha(alpha);
    };
  }
  function setAlphaDecay_(simulation) {
    return (alphaDecay) => simulation.alphaDecay(alphaDecay);
  }
  function setAlphaMin_(simulation) {
    return (alphaMin) => simulation.alphaMin(alphaMin);
  }
  function setAlphaTarget_(simulation) {
    return (alphaTarget) => simulation.alphaTarget(alphaTarget);
  }
  function setAsNullForceInSimulation_(simulation) {
    return (label5) => simulation.force(label5, null);
  }
  function setForceDistance_(force2) {
    return (attr3) => force2.distance(attr3);
  }
  function setForceDistanceMax_(force2) {
    return (attr3) => force2.distanceMax(attr3);
  }
  function setForceDistanceMin_(force2) {
    return (attr3) => force2.distanceMin(attr3);
  }
  function setForceIterations_(force2) {
    return (attr3) => force2.iterations(attr3);
  }
  function setForceRadius_(force2) {
    return (attr3) => force2.radius(attr3);
  }
  function setForceStrength_(force2) {
    return (attr3) => force2.strength(attr3);
  }
  function setForceTheta_(force2) {
    return (attr3) => force2.theta(attr3);
  }
  function setForceX_(force2) {
    return (attr3) => force2.x(attr3);
  }
  function setForceY_(force2) {
    return (attr3) => force2.y(attr3);
  }
  function setVelocityDecay_(simulation) {
    return (velocityDecay) => simulation.velocityDecay(velocityDecay);
  }
  function startSimulation_(simulation) {
    console.log(`FFI: restarting the simulation, alpha before: ${simulation.alpha()}`);
    simulation.alpha(1).restart();
    console.log(`FFI: restarted simulation, alpha after: ${simulation.alpha()}`);
  }
  function stopSimulation_(simulation) {
    return simulation.stop();
  }
  function initSimulation_(config) {
    return (keyFn) => {
      const simulation = d3.forceSimulation([]).force(linksForceName_, d3.forceLink([]).id(keyFn)).alpha(config.alpha).alphaTarget(config.alphaTarget).alphaMin(config.alphaMin).alphaDecay(config.alphaDecay).velocityDecay(config.velocityDecay);
      if (true) {
        console.log(`FFI: initSimulation${simulation}`);
      }
      return simulation;
    };
  }
  function readSimulationVariables_(simulation) {
    return {
      alpha: simulation.alpha(),
      alphaTarget: simulation.alphaTarget(),
      alphaMin: simulation.alphaMin(),
      alphaDecay: simulation.alphaDecay(),
      velocityDecay: simulation.velocityDecay()
    };
  }
  unpin = (d9) => {
    d9.fx = null;
    d9.fy = null;
    return d9;
  };
  getBaseForAssign = (newNodeMap, key) => {
    let newnode = newNodeMap.get(key);
    if (newnode) {
      var updatedCount;
      if (typeof newnode.updatedCount === "undefined") {
        updatedCount = 0;
      } else {
        updatedCount = newnode.updatedCount + 1;
      }
      return { fx: newnode.fx, fy: newnode.fy, updatedCount };
    } else {
      return d;
    }
  };
  function setNodes_(simulation) {
    return (nodes) => {
      console.log(`FFI: setting nodes in simulation, there are ${nodes.length} nodes`);
      const oldNodes = simulation.nodes();
      const oldNodeMap = new Map(oldNodes.map((d9) => [d9.id, d9]));
      const nodesWithPositions = nodes.map((newNode) => {
        const oldNode = oldNodeMap.get(newNode.id);
        if (oldNode) {
          return Object.assign({}, newNode, {
            x: oldNode.x,
            y: oldNode.y,
            vx: oldNode.vx,
            vy: oldNode.vy,
            // Only override fx/fy if new node has them explicitly set
            fx: newNode.fx !== void 0 ? newNode.fx : oldNode.fx,
            fy: newNode.fy !== void 0 ? newNode.fy : oldNode.fy
          });
        }
        return newNode;
      });
      simulation.nodes(nodesWithPositions);
      return simulation.nodes();
    };
  }
  function setLinks_(simulation) {
    return (links) => {
      console.log(`FFI: setting links in simulation, there are ${links.length} links`);
      simulation.force(linksForceName_).links(links);
    };
  }
  function swizzleLinks_(links) {
    return (simNodes) => (keyFn) => {
      console.log(`FFI: swizzling links in simulation, there are ${links.length} links`);
      const nodeById = new Map(simNodes.map((d9) => [keyFn(d9), d9]));
      const swizzledLinks = links.filter((link4, index5, arr) => {
        if (typeof link4.source !== "object") {
          link4.source = nodeById.get(link4.source);
        } else {
          link4.source = nodeById.get(keyFn(link4.source));
        }
        if (typeof link4.target !== "object") {
          link4.target = nodeById.get(link4.target);
        } else {
          link4.target = nodeById.get(keyFn(link4.target));
        }
        if (typeof link4.source === "undefined" || link4.target === "undefined") {
          return false;
        } else {
          link4.id = keyFn(link4.source) + "-" + keyFn(link4.target);
          return true;
        }
      });
      return swizzledLinks;
    };
  }
  function getLinksFromSimulation_(simulation) {
    linksForce = simulation.force(linksForceName_);
    if (typeof linksForce === `undefined`) {
      return [];
    }
    const result = linksForce.links();
    if (typeof result === `undefined`) {
      return [];
    }
    return result;
  }
  function onTick_(simulation) {
    return (name16) => (tickFn) => {
      var result = simulation.on("tick." + name16, () => {
        tickFn();
      });
      return result;
    };
  }
  function putForceInSimulation_(simulation) {
    return (label5) => (force2) => {
      simulation.force(label5, force2);
    };
  }
  function descendants_(tree2) {
    return tree2.descendants();
  }
  function getClusterLayoutFn_() {
    return d3.cluster();
  }
  function getTreeLayoutFn_() {
    return d3.tree();
  }
  function hasChildren_(d9) {
    return d9.children === "undefined" ? false : true;
  }
  function getHierarchyValue_(d9) {
    return d9.value === "undefined" ? null : d9.value;
  }
  function getHierarchyChildren_(d9) {
    return !d9.children ? [] : d9.children;
  }
  function hierarchyFromJSON_(json2) {
    return d3.hierarchy(json2);
  }
  function hNodeDepth_(node) {
    return node.depth;
  }
  function hNodeHeight_(node) {
    return node.height;
  }
  function hNodeX_(node) {
    return node.x;
  }
  function hNodeY_(node) {
    return node.y;
  }
  function links_(tree2) {
    return tree2.links();
  }
  function runLayoutFn_(layout) {
    return (root3) => layout(root3);
  }
  function sharesParent_(a2) {
    return (b2) => a2.parent == b2.parent;
  }
  function treeSetNodeSize_(tree2) {
    return (widthHeight) => tree2.nodeSize(widthHeight);
  }
  function treeSetSeparation_(tree2) {
    return (separationFn) => tree2.separation(separationFn);
  }
  function treeSetSize_(tree2) {
    return (widthHeight) => tree2.size(widthHeight);
  }
  function treeSortForCirclePack_(root3) {
    return root3.sum(function(d9) {
      return d9.value;
    }).sort(function(a2, b2) {
      return b2.value - a2.value;
    });
  }
  function treeSortForTreeMap_(root3) {
    return root3.sum(function(d9) {
      return d9.value;
    }).sort(function(a2, b2) {
      return b2.height - a2.height || b2.value - a2.value;
    });
  }
  function treeSortForTree_Spago_(root3) {
    return root3.sum(function(d9) {
      return d9.value;
    }).sort(function(a2, b2) {
      const result = b2.height - a2.height || a2.data.name.localeCompare(b2.data.name);
      return result;
    });
  }
  function treeMinMax_(root3) {
    let max_x = -Infinity;
    let min_x = Infinity;
    let max_y = -Infinity;
    let min_y = Infinity;
    root3.each((d9) => {
      if (d9.x > max_x) max_x = d9.x;
      if (d9.y > max_y) max_y = d9.y;
      if (d9.x < min_x) min_x = d9.x;
      if (d9.y < min_y) min_y = d9.y;
    });
    return { xMin: min_x, xMax: max_x, yMin: min_y, yMax: max_y };
  }
  var linkHorizontal_ = d3.linkHorizontal().x((d9) => d9.y).y((d9) => d9.x);
  var linkHorizontal2_ = d3.linkHorizontal().x((d9) => d9.x).y((d9) => d9.y);
  var linkVertical_ = d3.linkVertical().x((d9) => d9.x).y((d9) => d9.y);
  function linkClusterHorizontal_(levelSpacing) {
    return (d9) => `M${d9.target.y}, ${d9.target.x}
   C${d9.source.y + levelSpacing / 2},${d9.target.x}
   ${d9.source.y + levelSpacing / 2},${d9.source.x}
   ${d9.source.y},${d9.source.x}`;
  }
  function linkClusterVertical_(levelSpacing) {
    return (d9) => `M${d9.target.x}, ${d9.target.y}
   C${d9.target.x}, ${d9.source.y + levelSpacing / 2}
   ${d9.source.x},${d9.source.y + levelSpacing / 2}
   ${d9.source.x},${d9.source.y}`;
  }
  function linkRadial_(angleFn) {
    return (radiusFn) => d3.linkRadial().angle(angleFn).radius(radiusFn);
  }
  function chordLayout_(matrix) {
    return d3.chord()(matrix);
  }
  function chordGroups_(chordLayout) {
    return chordLayout.groups;
  }
  function chordArray_(chordLayout) {
    return Array.from(chordLayout);
  }
  function ribbonGenerator_() {
    return d3.ribbon();
  }
  function arcGenerator_() {
    return d3.arc();
  }
  function ribbonPath_(generator) {
    return (chord) => generator(chord);
  }
  function arcPath_(generator) {
    return (group3) => generator(group3);
  }
  function setRibbonRadius_(generator) {
    return (radius17) => {
      generator.radius(radius17);
      return generator;
    };
  }
  function setArcInnerRadius_(generator) {
    return (radius17) => {
      generator.innerRadius(radius17);
      return generator;
    };
  }
  function setArcOuterRadius_(generator) {
    return (radius17) => {
      generator.outerRadius(radius17);
      return generator;
    };
  }
  function packLayout_() {
    return d3.pack();
  }
  function packSetSize_(layout) {
    return (width26) => (height26) => {
      layout.size([width26, height26]);
      return layout;
    };
  }
  function packSetPadding_(layout) {
    return (padding) => {
      layout.padding(padding);
      return layout;
    };
  }
  function runPackLayout_(layout) {
    return (root3) => layout(root3);
  }
  function hNodeR_(node) {
    return node.r;
  }
  function treemapLayout_() {
    return d3.treemap();
  }
  function treemapSetSize_(layout) {
    return (width26) => (height26) => {
      layout.size([width26, height26]);
      return layout;
    };
  }
  function treemapSetPadding_(layout) {
    return (padding) => {
      layout.padding(padding);
      return layout;
    };
  }
  function runTreemapLayout_(layout) {
    return (root3) => layout(root3);
  }
  function hNodeX0_(node) {
    return node.x0;
  }
  function hNodeY0_(node) {
    return node.y0;
  }
  function hNodeX1_(node) {
    return node.x1;
  }
  function hNodeY1_(node) {
    return node.y1;
  }
  function partitionLayout_() {
    return d3.partition();
  }
  function partitionSetSize_(layout) {
    return (width26) => (height26) => {
      layout.size([width26, height26]);
      return layout;
    };
  }
  function partitionSetPadding_(layout) {
    return (padding) => {
      layout.padding(padding);
      return layout;
    };
  }
  function runPartitionLayout_(layout) {
    return (root3) => layout(root3);
  }
  function treeSortForPartition_(root3) {
    return root3.sum(function(d9) {
      return d9.value;
    }).sort(function(a2, b2) {
      return b2.height - a2.height || b2.value - a2.value;
    });
  }
  function d3AttachZoomDefaultExtent_(selection2) {
    return (config) => {
      function zoomed({ transform: transform3 }) {
        config.target.attr("transform", transform3);
      }
      return selection2.call(
        d3.zoom().scaleExtent(config.scaleExtent).on(`zoom.${config.name}`, zoomed)
      );
    };
  }
  function d3AttachZoom_(selection2) {
    return (config) => {
      selection2.call(
        d3.zoom().extent(config.extent).scaleExtent(config.scaleExtent).on(`zoom.${config.name}`, (event) => {
          config.target.attr("transform", event.transform);
        })
      );
      return selection2;
    };
  }

  // output/PSD3.Data.Tree/foreign.js
  function idTreeLeaf_(obj) {
    const treeObj = Object.assign({}, obj);
    treeObj.isTreeLeaf = true;
    return treeObj;
  }
  function idTreeParent_(obj) {
    return (children3) => {
      const treeObj = Object.assign({}, obj);
      treeObj.isTreeLeaf = false;
      treeObj.children = children3;
      return treeObj;
    };
  }
  var emptyTreeJson_ = {};

  // output/PSD3.Data.Tree/index.js
  var lookup7 = /* @__PURE__ */ lookup(ordInt);
  var map31 = /* @__PURE__ */ map(functorArray);
  var fromFoldable6 = /* @__PURE__ */ fromFoldable3(foldableList);
  var TidyTree = /* @__PURE__ */ (function() {
    function TidyTree2() {
    }
    ;
    TidyTree2.value = new TidyTree2();
    return TidyTree2;
  })();
  var Dendrogram = /* @__PURE__ */ (function() {
    function Dendrogram2() {
    }
    ;
    Dendrogram2.value = new Dendrogram2();
    return Dendrogram2;
  })();
  var Radial = /* @__PURE__ */ (function() {
    function Radial2() {
    }
    ;
    Radial2.value = new Radial2();
    return Radial2;
  })();
  var Horizontal = /* @__PURE__ */ (function() {
    function Horizontal2() {
    }
    ;
    Horizontal2.value = new Horizontal2();
    return Horizontal2;
  })();
  var Vertical = /* @__PURE__ */ (function() {
    function Vertical2() {
    }
    ;
    Vertical2.value = new Vertical2();
    return Vertical2;
  })();
  var makeD3TreeJSONFromTreeID = function(root3) {
    return function(nodesMap) {
      var go2 = function(v) {
        var v1 = lookup7(v.value0)(nodesMap);
        if (v1 instanceof Nothing) {
          return emptyTreeJson_;
        }
        ;
        if (v1 instanceof Just) {
          if (v.value1 instanceof Nil) {
            return idTreeLeaf_(v1.value0);
          }
          ;
          return idTreeParent_(v1.value0)(map31(go2)(fromFoldable6(v.value1)));
        }
        ;
        throw new Error("Failed pattern match at PSD3.Data.Tree (line 49, column 7 - line 53, column 84): " + [v1.constructor.name]);
      };
      return go2(root3);
    };
  };
  var eqTreeLayout = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof Radial && y28 instanceof Radial) {
          return true;
        }
        ;
        if (x30 instanceof Horizontal && y28 instanceof Horizontal) {
          return true;
        }
        ;
        if (x30 instanceof Vertical && y28 instanceof Vertical) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/PSD3.Internal.FFI/index.js
  var getLayout = function(layout) {
    if (layout instanceof TidyTree) {
      return getTreeLayoutFn_(unit);
    }
    ;
    if (layout instanceof Dendrogram) {
      return getClusterLayoutFn_(unit);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Internal.FFI (line 264, column 3 - line 266, column 43): " + [layout.constructor.name]);
  };

  // output/PSD3.Internal.Simulation.Types/index.js
  var trace2 = /* @__PURE__ */ trace();
  var _Newtype2 = /* @__PURE__ */ _Newtype()();
  var prop5 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "velocityDecay";
    }
  })()();
  var prop32 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "status";
    }
  })()();
  var prop42 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "name";
    }
  })()();
  var prop11 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "simulation";
    }
  })()();
  var prop12 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "forceLibrary";
    }
  })()();
  var prop13 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "handle_";
    }
  })()();
  var prop15 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "alphaTarget";
    }
  })()();
  var prop16 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "alphaMin";
    }
  })()();
  var prop17 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "alphaDecay";
    }
  })()();
  var prop18 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "alpha";
    }
  })()();
  var Step3 = /* @__PURE__ */ (function() {
    function Step4(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Step4.create = function(value0) {
      return function(value1) {
        return new Step4(value0, value1);
      };
    };
    return Step4;
  })();
  var StepTransformFFI = /* @__PURE__ */ (function() {
    function StepTransformFFI2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    StepTransformFFI2.create = function(value0) {
      return function(value1) {
        return new StepTransformFFI2(value0, value1);
      };
    };
    return StepTransformFFI2;
  })();
  var Alpha = /* @__PURE__ */ (function() {
    function Alpha2(value0) {
      this.value0 = value0;
    }
    ;
    Alpha2.create = function(value0) {
      return new Alpha2(value0);
    };
    return Alpha2;
  })();
  var AlphaTarget = /* @__PURE__ */ (function() {
    function AlphaTarget2(value0) {
      this.value0 = value0;
    }
    ;
    AlphaTarget2.create = function(value0) {
      return new AlphaTarget2(value0);
    };
    return AlphaTarget2;
  })();
  var AlphaMin = /* @__PURE__ */ (function() {
    function AlphaMin2(value0) {
      this.value0 = value0;
    }
    ;
    AlphaMin2.create = function(value0) {
      return new AlphaMin2(value0);
    };
    return AlphaMin2;
  })();
  var AlphaDecay = /* @__PURE__ */ (function() {
    function AlphaDecay2(value0) {
      this.value0 = value0;
    }
    ;
    AlphaDecay2.create = function(value0) {
      return new AlphaDecay2(value0);
    };
    return AlphaDecay2;
  })();
  var VelocityDecay = /* @__PURE__ */ (function() {
    function VelocityDecay2(value0) {
      this.value0 = value0;
    }
    ;
    VelocityDecay2.create = function(value0) {
      return new VelocityDecay2(value0);
    };
    return VelocityDecay2;
  })();
  var ForceManyBody = /* @__PURE__ */ (function() {
    function ForceManyBody2() {
    }
    ;
    ForceManyBody2.value = new ForceManyBody2();
    return ForceManyBody2;
  })();
  var ForceCenter = /* @__PURE__ */ (function() {
    function ForceCenter2() {
    }
    ;
    ForceCenter2.value = new ForceCenter2();
    return ForceCenter2;
  })();
  var ForceCollide = /* @__PURE__ */ (function() {
    function ForceCollide2() {
    }
    ;
    ForceCollide2.value = new ForceCollide2();
    return ForceCollide2;
  })();
  var ForceX = /* @__PURE__ */ (function() {
    function ForceX2() {
    }
    ;
    ForceX2.value = new ForceX2();
    return ForceX2;
  })();
  var ForceY = /* @__PURE__ */ (function() {
    function ForceY2() {
    }
    ;
    ForceY2.value = new ForceY2();
    return ForceY2;
  })();
  var ForceRadial = /* @__PURE__ */ (function() {
    function ForceRadial2() {
    }
    ;
    ForceRadial2.value = new ForceRadial2();
    return ForceRadial2;
  })();
  var RegularForce = /* @__PURE__ */ (function() {
    function RegularForce2(value0) {
      this.value0 = value0;
    }
    ;
    RegularForce2.create = function(value0) {
      return new RegularForce2(value0);
    };
    return RegularForce2;
  })();
  var LinkForce = /* @__PURE__ */ (function() {
    function LinkForce2() {
    }
    ;
    LinkForce2.value = new LinkForce2();
    return LinkForce2;
  })();
  var ForceActive = /* @__PURE__ */ (function() {
    function ForceActive2() {
    }
    ;
    ForceActive2.value = new ForceActive2();
    return ForceActive2;
  })();
  var ForceDisabled = /* @__PURE__ */ (function() {
    function ForceDisabled2() {
    }
    ;
    ForceDisabled2.value = new ForceDisabled2();
    return ForceDisabled2;
  })();
  var ForceFilter = /* @__PURE__ */ (function() {
    function ForceFilter2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ForceFilter2.create = function(value0) {
      return function(value1) {
        return new ForceFilter2(value0, value1);
      };
    };
    return ForceFilter2;
  })();
  var ForceT = function(x30) {
    return x30;
  };
  var showRegularForceType = {
    show: function(v) {
      if (v instanceof ForceManyBody) {
        return "ForceManyBody";
      }
      ;
      if (v instanceof ForceCenter) {
        return "ForceCenter";
      }
      ;
      if (v instanceof ForceCollide) {
        return "ForceCollide";
      }
      ;
      if (v instanceof ForceX) {
        return "ForceX";
      }
      ;
      if (v instanceof ForceY) {
        return "ForceY";
      }
      ;
      if (v instanceof ForceRadial) {
        return "ForceRadial";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Simulation.Types (line 221, column 1 - line 227, column 46): " + [v.constructor.name]);
    }
  };
  var showForceFilter = function(v) {
    if (v instanceof Just) {
      return v.value0.value0;
    }
    ;
    if (v instanceof Nothing) {
      return " (no filter)";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Internal.Simulation.Types (line 203, column 1 - line 203, column 47): " + [v.constructor.name]);
  };
  var eqForceStatus = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof ForceActive && y28 instanceof ForceActive) {
          return true;
        }
        ;
        if (x30 instanceof ForceDisabled && y28 instanceof ForceDisabled) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var defaultConfigSimulation = {
    alpha: 1,
    alphaTarget: 0,
    alphaMin: 1e-3,
    alphaDecay: 0.0228,
    velocityDecay: 0.4
  };
  var initialSimulationState = function(forces2) {
    var v = trace2({
      simulation: "initialized",
      forceLibrary: forces2
    })(function(v1) {
      return unit;
    });
    return {
      handle_: initSimulation_(defaultConfigSimulation)(keyIsID_),
      data: {
        nodes: [],
        links: []
      },
      key: keyIsID_,
      forceLibrary: forces2,
      ticks: empty2,
      alpha: defaultConfigSimulation.alpha,
      alphaTarget: defaultConfigSimulation.alphaTarget,
      alphaMin: defaultConfigSimulation.alphaMin,
      alphaDecay: defaultConfigSimulation.alphaDecay,
      velocityDecay: defaultConfigSimulation.velocityDecay
    };
  };
  var allNodes = /* @__PURE__ */ (function() {
    return Nothing.value;
  })();
  var _velocityDecay = function(dictStrong) {
    var $225 = _Newtype2(dictStrong.Profunctor0());
    var $226 = prop5($$Proxy.value)(dictStrong);
    return function($227) {
      return $225($226($227));
    };
  };
  var _status = function(dictStrong) {
    var $238 = _Newtype2(dictStrong.Profunctor0());
    var $239 = prop32($$Proxy.value)(dictStrong);
    return function($240) {
      return $238($239($240));
    };
  };
  var _name = function(dictStrong) {
    var $241 = _Newtype2(dictStrong.Profunctor0());
    var $242 = prop42($$Proxy.value)(dictStrong);
    return function($243) {
      return $241($242($243));
    };
  };
  var _d3Simulation = function(dictStrong) {
    return prop11($$Proxy.value)(dictStrong);
  };
  var _forceLibrary = function(dictStrong) {
    var $265 = _d3Simulation(dictStrong);
    var $266 = _Newtype2(dictStrong.Profunctor0());
    var $267 = prop12($$Proxy.value)(dictStrong);
    return function($268) {
      return $265($266($267($268)));
    };
  };
  var _handle = function(dictStrong) {
    var $272 = _d3Simulation(dictStrong);
    var $273 = _Newtype2(dictStrong.Profunctor0());
    var $274 = prop13($$Proxy.value)(dictStrong);
    return function($275) {
      return $272($273($274($275)));
    };
  };
  var _alphaTarget = function(dictStrong) {
    var $279 = _Newtype2(dictStrong.Profunctor0());
    var $280 = prop15($$Proxy.value)(dictStrong);
    return function($281) {
      return $279($280($281));
    };
  };
  var _alphaMin = function(dictStrong) {
    var $282 = _Newtype2(dictStrong.Profunctor0());
    var $283 = prop16($$Proxy.value)(dictStrong);
    return function($284) {
      return $282($283($284));
    };
  };
  var _alphaDecay = function(dictStrong) {
    var $285 = _Newtype2(dictStrong.Profunctor0());
    var $286 = prop17($$Proxy.value)(dictStrong);
    return function($287) {
      return $285($286($287));
    };
  };
  var _alpha = function(dictStrong) {
    var $288 = _Newtype2(dictStrong.Profunctor0());
    var $289 = prop18($$Proxy.value)(dictStrong);
    return function($290) {
      return $288($289($290));
    };
  };

  // output/PSD3.CodeAtlas.State/index.js
  var initialState = function(v) {
    return {
      activeTab: DeclarationsTab.value,
      declarationsData: Nothing.value,
      functionCallsData: Nothing.value,
      moduleGraphData: Nothing.value,
      simulation: initialSimulationState(empty2),
      searchQuery: "",
      selectedKindFilter: Nothing.value,
      selectedModuleFilter: Nothing.value,
      selectedSourceFilter: Nothing.value,
      loading: true,
      error: Nothing.value
    };
  };

  // output/PSD3.CodeAtlas.Tabs.Declarations/index.js
  var show4 = /* @__PURE__ */ show(showInt);
  var type_19 = /* @__PURE__ */ type_17(isPropInputType);
  var value14 = /* @__PURE__ */ value12(isPropString);
  var append12 = /* @__PURE__ */ append(semigroupArray);
  var mapFlipped4 = /* @__PURE__ */ mapFlipped(functorArray);
  var eq13 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqString));
  var eq22 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqSourceType));
  var eq32 = /* @__PURE__ */ eq(eqSourceType);
  var compare2 = /* @__PURE__ */ compare(ordString);
  var bind8 = /* @__PURE__ */ bind(bindArray);
  var truncate = function(maxLen) {
    return function(text21) {
      var $28 = length8(text21) > maxLen;
      if ($28) {
        return take4(maxLen - 3 | 0)(text21) + "...";
      }
      ;
      return text21;
    };
  };
  var renderStats = function(stats) {
    return div2([classes(["atlas-stats"])])([div2([classes(["stat-card"])])([div2([classes(["stat-value"])])([text5(show4(stats.totalModules))]), div2([classes(["stat-label"])])([text5("Modules")])]), div2([classes(["stat-card"])])([div2([classes(["stat-value"])])([text5(show4(stats.totalDeclarations))]), div2([classes(["stat-label"])])([text5("Declarations")])]), div2([classes(["stat-card"])])([div2([classes(["stat-value"])])([text5(show4(length4(stats.byKind)))]), div2([classes(["stat-label"])])([text5("Kinds")])])]);
  };
  var renderFilters = function(state3) {
    return function(data_2) {
      return div2([classes(["atlas-filters"])])([div2([classes(["filter-group"])])([label_([text5("Search")]), input2([type_19(InputText.value), placeholder3("Search declarations..."), value14(state3.searchQuery), onValueInput(SetSearchQuery.create), classes(["search-input"])])]), div2([classes(["filter-group"])])([label_([text5("Kind")]), select3([onValueChange(function(val) {
        return new SetKindFilter((function() {
          var $29 = val === "";
          if ($29) {
            return Nothing.value;
          }
          ;
          return new Just(val);
        })());
      }), classes(["filter-select"])])(append12([option([value14("")])([text5("All")])])(mapFlipped4(data_2.stats.byKind)(function(kindStat) {
        return option([value14(kindStat.kind), selected2(eq13(state3.selectedKindFilter)(new Just(kindStat.kind)))])([text5(kindStat.kind + (" (" + (show4(kindStat.count) + ")")))]);
      })))]), div2([classes(["filter-group"])])([label_([text5("Source")]), select3([onValueChange(function(val) {
        return new SetSourceFilter((function() {
          if (val === "project") {
            return new Just(ProjectCode.value);
          }
          ;
          if (val === "library") {
            return new Just(LibraryCode.value);
          }
          ;
          return Nothing.value;
        })());
      }), classes(["filter-select"])])([option([value14(""), selected2(eq22(state3.selectedSourceFilter)(Nothing.value))])([text5("All")]), option([value14("project"), selected2(eq22(state3.selectedSourceFilter)(new Just(ProjectCode.value)))])([text5("Project Code")]), option([value14("library"), selected2(eq22(state3.selectedSourceFilter)(new Just(LibraryCode.value)))])([text5("Library Code")])])]), button([onClick(function(v) {
        return ClearFilters.value;
      }), classes(["clear-filters-btn"]), disabled10(state3.searchQuery === "" && (eq13(state3.selectedKindFilter)(Nothing.value) && eq22(state3.selectedSourceFilter)(Nothing.value)))])([text5("Clear Filters")])]);
    };
  };
  var renderDeclarationRow = function(decl) {
    return tr([classes(["declaration-row"])])([td([classes(["decl-name"])])([code_([text5(decl.title)])]), td([classes(["decl-kind"])])([span3([classes(["kind-badge", "kind-" + decl.kind])])([text5(decl.kind)])]), td([classes(["decl-module"])])([text5(decl.module)]), td([classes(["decl-comments"])])([text5(truncate(100)(decl.comments))])]);
  };
  var getSourceType = function(decl) {
    var $31 = take4(4)(decl.sourceSpan.name) === "src/";
    if ($31) {
      return ProjectCode.value;
    }
    ;
    return LibraryCode.value;
  };
  var filterBySource = function(v) {
    return function(v1) {
      if (v instanceof Nothing) {
        return v1;
      }
      ;
      if (v instanceof Just) {
        return filter2(function(decl) {
          return eq32(getSourceType(decl))(v.value0);
        })(v1);
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.Declarations (line 209, column 1 - line 209, column 77): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var filterBySearch = function(v) {
    return function(v1) {
      if (v === "") {
        return v1;
      }
      ;
      var lowerQuery = toLower(v);
      return filter2(function(decl) {
        return contains(lowerQuery)(toLower(decl.title)) || (contains(lowerQuery)(toLower(decl.module)) || contains(lowerQuery)(toLower(decl.comments)));
      })(v1);
    };
  };
  var filterByKind = function(v) {
    return function(v1) {
      if (v instanceof Nothing) {
        return v1;
      }
      ;
      if (v instanceof Just) {
        return filter2(function(decl) {
          return decl.kind === v.value0;
        })(v1);
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.Declarations (line 203, column 1 - line 203, column 71): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var compareDeclarations = function(a2) {
    return function(b2) {
      var v = compare2(a2.module)(b2.module);
      if (v instanceof EQ) {
        return compare2(a2.title)(b2.title);
      }
      ;
      return v;
    };
  };
  var renderDeclarationsTable = function(state3) {
    return function(data_2) {
      var allDeclarations = bind8(data_2.modules)(function(mod3) {
        return mapFlipped4(mod3.declarations)(function(decl) {
          return {
            comments: decl.comments,
            kind: decl.kind,
            sourceSpan: decl.sourceSpan,
            title: decl.title,
            module: mod3.name
          };
        });
      });
      var filtered = take(1e3)(sortBy(compareDeclarations)(filterBySource(state3.selectedSourceFilter)(filterByKind(state3.selectedKindFilter)(filterBySearch(state3.searchQuery)(allDeclarations)))));
      var resultCount = length4(filtered);
      var totalCount = length4(allDeclarations);
      return div2([classes(["declarations-table-container"])])([div2([classes(["result-count"])])([text5("Showing " + (show4(resultCount) + (" of " + (show4(totalCount) + " declarations")))), (function() {
        var $41 = resultCount >= 1e3;
        if ($41) {
          return span3([classes(["limit-note"])])([text5(" (limited to first 1000)")]);
        }
        ;
        return text5("");
      })()]), table([classes(["declarations-table"])])([thead_([tr_([th_([text5("Name")]), th_([text5("Kind")]), th_([text5("Module")]), th_([text5("Documentation")])])]), tbody_(mapFlipped4(filtered)(renderDeclarationRow))])]);
    };
  };
  var render = function(state3) {
    if (state3.declarationsData instanceof Nothing) {
      return div_([text5("No data loaded")]);
    }
    ;
    if (state3.declarationsData instanceof Just) {
      return div2([classes(["declarations-tab"])])([renderStats(state3.declarationsData.value0.stats), renderFilters(state3)(state3.declarationsData.value0), renderDeclarationsTable(state3)(state3.declarationsData.value0)]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.Declarations (line 20, column 3 - line 35, column 10): " + [state3.declarationsData.constructor.name]);
  };

  // output/PSD3.Capabilities.Selection/index.js
  var updateJoin = function(dict) {
    return dict.updateJoin;
  };
  var simpleJoin = function(dict) {
    return dict.simpleJoin;
  };
  var setAttributes = function(dict) {
    return dict.setAttributes;
  };
  var selectUnder = function(dict) {
    return dict.selectUnder;
  };
  var openSelection = function(dict) {
    return dict.openSelection;
  };
  var on2 = function(dict) {
    return dict.on;
  };
  var mergeSelections = function(dict) {
    return dict.mergeSelections;
  };
  var attach = function(dict) {
    return dict.attach;
  };
  var appendTo = function(dict) {
    return dict.appendTo;
  };

  // output/PSD3.Capabilities.Simulation/index.js
  var update3 = function(dict) {
    return dict.update;
  };
  var stop = function(dict) {
    return dict.stop;
  };
  var start2 = function(dict) {
    return dict.start;
  };
  var init3 = function(dict) {
    return dict.init;
  };
  var addTickFunction = function(dict) {
    return dict.addTickFunction;
  };

  // output/PSD3.Internal.Attributes.Instances/index.js
  var Static = /* @__PURE__ */ (function() {
    function Static2(value0) {
      this.value0 = value0;
    }
    ;
    Static2.create = function(value0) {
      return new Static2(value0);
    };
    return Static2;
  })();
  var Fn = /* @__PURE__ */ (function() {
    function Fn2(value0) {
      this.value0 = value0;
    }
    ;
    Fn2.create = function(value0) {
      return new Fn2(value0);
    };
    return Fn2;
  })();
  var FnI = /* @__PURE__ */ (function() {
    function FnI2(value0) {
      this.value0 = value0;
    }
    ;
    FnI2.create = function(value0) {
      return new FnI2(value0);
    };
    return FnI2;
  })();
  var StringAttr = /* @__PURE__ */ (function() {
    function StringAttr2(value0) {
      this.value0 = value0;
    }
    ;
    StringAttr2.create = function(value0) {
      return new StringAttr2(value0);
    };
    return StringAttr2;
  })();
  var NumberAttr = /* @__PURE__ */ (function() {
    function NumberAttr2(value0) {
      this.value0 = value0;
    }
    ;
    NumberAttr2.create = function(value0) {
      return new NumberAttr2(value0);
    };
    return NumberAttr2;
  })();
  var ArrayAttr = /* @__PURE__ */ (function() {
    function ArrayAttr2(value0) {
      this.value0 = value0;
    }
    ;
    ArrayAttr2.create = function(value0) {
      return new ArrayAttr2(value0);
    };
    return ArrayAttr2;
  })();
  var AttributeSetter = /* @__PURE__ */ (function() {
    function AttributeSetter2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    AttributeSetter2.create = function(value0) {
      return function(value1) {
        return new AttributeSetter2(value0, value1);
      };
    };
    return AttributeSetter2;
  })();
  var unboxAttr = function(v) {
    if (v instanceof StringAttr && v.value0 instanceof Static) {
      return v.value0.value0;
    }
    ;
    if (v instanceof StringAttr && v.value0 instanceof Fn) {
      return v.value0.value0;
    }
    ;
    if (v instanceof StringAttr && v.value0 instanceof FnI) {
      return v.value0.value0;
    }
    ;
    if (v instanceof NumberAttr && v.value0 instanceof Static) {
      return v.value0.value0;
    }
    ;
    if (v instanceof NumberAttr && v.value0 instanceof Fn) {
      return v.value0.value0;
    }
    ;
    if (v instanceof NumberAttr && v.value0 instanceof FnI) {
      return v.value0.value0;
    }
    ;
    if (v instanceof ArrayAttr && v.value0 instanceof Static) {
      return v.value0.value0;
    }
    ;
    if (v instanceof ArrayAttr && v.value0 instanceof Fn) {
      return v.value0.value0;
    }
    ;
    if (v instanceof ArrayAttr && v.value0 instanceof FnI) {
      return v.value0.value0;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Internal.Attributes.Instances (line 49, column 3 - line 60, column 46): " + [v.constructor.name]);
  };
  var toAttrStringFnI = {
    toAttr: function($35) {
      return StringAttr.create(FnI.create(mkFn2($35)));
    }
  };
  var toAttrStringFn = {
    toAttr: function($36) {
      return StringAttr.create(Fn.create($36));
    }
  };
  var toAttrString = {
    toAttr: function($37) {
      return StringAttr.create(Static.create($37));
    }
  };
  var toAttrNumberFnI = {
    toAttr: function($38) {
      return NumberAttr.create(FnI.create(mkFn2($38)));
    }
  };
  var toAttrNumberFn = {
    toAttr: function($39) {
      return NumberAttr.create(Fn.create($39));
    }
  };
  var toAttrNumber = {
    toAttr: function($40) {
      return NumberAttr.create(Static.create($40));
    }
  };
  var toAttr = function(dict) {
    return dict.toAttr;
  };

  // output/PSD3.Internal.Types/index.js
  var MouseEnter = /* @__PURE__ */ (function() {
    function MouseEnter2() {
    }
    ;
    MouseEnter2.value = new MouseEnter2();
    return MouseEnter2;
  })();
  var MouseLeave = /* @__PURE__ */ (function() {
    function MouseLeave2() {
    }
    ;
    MouseLeave2.value = new MouseLeave2();
    return MouseLeave2;
  })();
  var MouseClick = /* @__PURE__ */ (function() {
    function MouseClick2() {
    }
    ;
    MouseClick2.value = new MouseClick2();
    return MouseClick2;
  })();
  var MouseDown = /* @__PURE__ */ (function() {
    function MouseDown2() {
    }
    ;
    MouseDown2.value = new MouseDown2();
    return MouseDown2;
  })();
  var MouseUp = /* @__PURE__ */ (function() {
    function MouseUp2() {
    }
    ;
    MouseUp2.value = new MouseUp2();
    return MouseUp2;
  })();
  var Div = /* @__PURE__ */ (function() {
    function Div2() {
    }
    ;
    Div2.value = new Div2();
    return Div2;
  })();
  var Svg = /* @__PURE__ */ (function() {
    function Svg2() {
    }
    ;
    Svg2.value = new Svg2();
    return Svg2;
  })();
  var Circle = /* @__PURE__ */ (function() {
    function Circle2() {
    }
    ;
    Circle2.value = new Circle2();
    return Circle2;
  })();
  var Line = /* @__PURE__ */ (function() {
    function Line2() {
    }
    ;
    Line2.value = new Line2();
    return Line2;
  })();
  var Group = /* @__PURE__ */ (function() {
    function Group2() {
    }
    ;
    Group2.value = new Group2();
    return Group2;
  })();
  var Text2 = /* @__PURE__ */ (function() {
    function Text3() {
    }
    ;
    Text3.value = new Text3();
    return Text3;
  })();
  var Path = /* @__PURE__ */ (function() {
    function Path5() {
    }
    ;
    Path5.value = new Path5();
    return Path5;
  })();
  var Rect = /* @__PURE__ */ (function() {
    function Rect2() {
    }
    ;
    Rect2.value = new Rect2();
    return Rect2;
  })();
  var DefaultCubic = /* @__PURE__ */ (function() {
    function DefaultCubic2() {
    }
    ;
    DefaultCubic2.value = new DefaultCubic2();
    return DefaultCubic2;
  })();
  var showMouseEvent = {
    show: function(v) {
      if (v instanceof MouseEnter) {
        return "mouseenter";
      }
      ;
      if (v instanceof MouseLeave) {
        return "mouseleave";
      }
      ;
      if (v instanceof MouseClick) {
        return "click";
      }
      ;
      if (v instanceof MouseDown) {
        return "mousedown";
      }
      ;
      if (v instanceof MouseUp) {
        return "mouseup";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Types (line 46, column 1 - line 51, column 30): " + [v.constructor.name]);
    }
  };
  var showElement = {
    show: function(v) {
      if (v instanceof Div) {
        return "div";
      }
      ;
      if (v instanceof Svg) {
        return "svg";
      }
      ;
      if (v instanceof Circle) {
        return "circle";
      }
      ;
      if (v instanceof Line) {
        return "line";
      }
      ;
      if (v instanceof Group) {
        return "g";
      }
      ;
      if (v instanceof Text2) {
        return "text";
      }
      ;
      if (v instanceof Path) {
        return "path";
      }
      ;
      if (v instanceof Rect) {
        return "rect";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Types (line 25, column 1 - line 33, column 23): " + [v.constructor.name]);
    }
  };

  // output/PSD3.Internal.Selection.Types/index.js
  var show5 = /* @__PURE__ */ show(showMouseEvent);
  var Order = /* @__PURE__ */ (function() {
    function Order2() {
    }
    ;
    Order2.value = new Order2();
    return Order2;
  })();
  var Sort = /* @__PURE__ */ (function() {
    function Sort2(value0) {
      this.value0 = value0;
    }
    ;
    Sort2.create = function(value0) {
      return new Sort2(value0);
    };
    return Sort2;
  })();
  var Raise2 = /* @__PURE__ */ (function() {
    function Raise3() {
    }
    ;
    Raise3.value = new Raise3();
    return Raise3;
  })();
  var Lower = /* @__PURE__ */ (function() {
    function Lower2() {
    }
    ;
    Lower2.value = new Lower2();
    return Lower2;
  })();
  var AttrT = /* @__PURE__ */ (function() {
    function AttrT2(value0) {
      this.value0 = value0;
    }
    ;
    AttrT2.create = function(value0) {
      return new AttrT2(value0);
    };
    return AttrT2;
  })();
  var TextT = /* @__PURE__ */ (function() {
    function TextT2(value0) {
      this.value0 = value0;
    }
    ;
    TextT2.create = function(value0) {
      return new TextT2(value0);
    };
    return TextT2;
  })();
  var HTMLT = /* @__PURE__ */ (function() {
    function HTMLT2(value0) {
      this.value0 = value0;
    }
    ;
    HTMLT2.create = function(value0) {
      return new HTMLT2(value0);
    };
    return HTMLT2;
  })();
  var PropertyT = /* @__PURE__ */ (function() {
    function PropertyT2(value0) {
      this.value0 = value0;
    }
    ;
    PropertyT2.create = function(value0) {
      return new PropertyT2(value0);
    };
    return PropertyT2;
  })();
  var OrderingT = /* @__PURE__ */ (function() {
    function OrderingT2(value0) {
      this.value0 = value0;
    }
    ;
    OrderingT2.create = function(value0) {
      return new OrderingT2(value0);
    };
    return OrderingT2;
  })();
  var TransitionT = /* @__PURE__ */ (function() {
    function TransitionT2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    TransitionT2.create = function(value0) {
      return function(value1) {
        return new TransitionT2(value0, value1);
      };
    };
    return TransitionT2;
  })();
  var RemoveT = /* @__PURE__ */ (function() {
    function RemoveT2() {
    }
    ;
    RemoveT2.value = new RemoveT2();
    return RemoveT2;
  })();
  var OnT = /* @__PURE__ */ (function() {
    function OnT2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    OnT2.create = function(value0) {
      return function(value1) {
        return new OnT2(value0, value1);
      };
    };
    return OnT2;
  })();
  var OnT$prime = /* @__PURE__ */ (function() {
    function OnT$prime2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    OnT$prime2.create = function(value0) {
      return function(value1) {
        return new OnT$prime2(value0, value1);
      };
    };
    return OnT$prime2;
  })();
  var DefaultDrag = /* @__PURE__ */ (function() {
    function DefaultDrag2() {
    }
    ;
    DefaultDrag2.value = new DefaultDrag2();
    return DefaultDrag2;
  })();
  var NoDrag = /* @__PURE__ */ (function() {
    function NoDrag2() {
    }
    ;
    NoDrag2.value = new NoDrag2();
    return NoDrag2;
  })();
  var CustomDrag = /* @__PURE__ */ (function() {
    function CustomDrag2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    CustomDrag2.create = function(value0) {
      return function(value1) {
        return new CustomDrag2(value0, value1);
      };
    };
    return CustomDrag2;
  })();
  var Drag = /* @__PURE__ */ (function() {
    function Drag2(value0) {
      this.value0 = value0;
    }
    ;
    Drag2.create = function(value0) {
      return new Drag2(value0);
    };
    return Drag2;
  })();
  var Zoom = /* @__PURE__ */ (function() {
    function Zoom2(value0) {
      this.value0 = value0;
    }
    ;
    Zoom2.create = function(value0) {
      return new Zoom2(value0);
    };
    return Zoom2;
  })();
  var showOrderingAttribute = {
    show: function(v) {
      if (v instanceof Order) {
        return "Order";
      }
      ;
      if (v instanceof Raise2) {
        return "Raise";
      }
      ;
      if (v instanceof Lower) {
        return "Lower";
      }
      ;
      if (v instanceof Sort) {
        return "Sort";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Selection.Types (line 71, column 1 - line 75, column 25): " + [v.constructor.name]);
    }
  };
  var applySelectionAttributeD3 = function(v) {
    return function(v1) {
      if (v1 instanceof AttrT) {
        return d3SetAttr_(v1.value0.value0)(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof TextT) {
        return d3SetText_(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof PropertyT) {
        return d3SetProperty_(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof HTMLT) {
        return d3SetHTML_(unboxAttr(v1.value0.value1))(v);
      }
      ;
      if (v1 instanceof RemoveT) {
        var removed_ = d3RemoveSelection_(v);
        return removed_;
      }
      ;
      if (v1 instanceof TransitionT) {
        var tHandler = d3AddTransition_(v)(v1.value1);
        var v2 = foldl2(applySelectionAttributeD3)(tHandler)(v1.value0);
        return v;
      }
      ;
      if (v1 instanceof OnT) {
        return selectionOn_(v)(show5(v1.value0))(v1.value1);
      }
      ;
      if (v1 instanceof OnT$prime) {
        return selectionOn_(v)(show5(v1.value0))(v1.value1);
      }
      ;
      if (v1 instanceof OrderingT) {
        if (v1.value0 instanceof Order) {
          return d3OrderSelection_(v);
        }
        ;
        if (v1.value0 instanceof Sort) {
          return d3SortSelection_(v)(v1.value0.value0);
        }
        ;
        if (v1.value0 instanceof Raise2) {
          return d3RaiseSelection_(v);
        }
        ;
        if (v1.value0 instanceof Lower) {
          return d3LowerSelection_(v);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Internal.Selection.Types (line 108, column 3 - line 112, column 51): " + [v1.value0.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Selection.Types (line 78, column 1 - line 78, column 80): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  // output/PSD3.Internal.Attributes.Sugar/index.js
  var toAttr2 = /* @__PURE__ */ toAttr(toAttrString);
  var intercalate5 = /* @__PURE__ */ intercalate3(monoidString);
  var map32 = /* @__PURE__ */ map(functorArray);
  var show6 = /* @__PURE__ */ show(showNumber);
  var append13 = /* @__PURE__ */ append(semigroupArray);
  var flap2 = /* @__PURE__ */ flap(functorArray);
  var Meet = /* @__PURE__ */ (function() {
    function Meet2() {
    }
    ;
    Meet2.value = new Meet2();
    return Meet2;
  })();
  var Slice = /* @__PURE__ */ (function() {
    function Slice2() {
    }
    ;
    Slice2.value = new Slice2();
    return Slice2;
  })();
  var None2 = /* @__PURE__ */ (function() {
    function None3() {
    }
    ;
    None3.value = new None3();
    return None3;
  })();
  var YMin = /* @__PURE__ */ (function() {
    function YMin2() {
    }
    ;
    YMin2.value = new YMin2();
    return YMin2;
  })();
  var YMid = /* @__PURE__ */ (function() {
    function YMid2() {
    }
    ;
    YMid2.value = new YMid2();
    return YMid2;
  })();
  var YMax = /* @__PURE__ */ (function() {
    function YMax2() {
    }
    ;
    YMax2.value = new YMax2();
    return YMax2;
  })();
  var XMin = /* @__PURE__ */ (function() {
    function XMin2() {
    }
    ;
    XMin2.value = new XMin2();
    return XMin2;
  })();
  var XMid = /* @__PURE__ */ (function() {
    function XMid2() {
    }
    ;
    XMid2.value = new XMid2();
    return XMid2;
  })();
  var XMax = /* @__PURE__ */ (function() {
    function XMax2() {
    }
    ;
    XMax2.value = new XMax2();
    return XMax2;
  })();
  var AspectRatio = /* @__PURE__ */ (function() {
    function AspectRatio2(value0, value1, value22) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value22;
    }
    ;
    AspectRatio2.create = function(value0) {
      return function(value1) {
        return function(value22) {
          return new AspectRatio2(value0, value1, value22);
        };
      };
    };
    return AspectRatio2;
  })();
  var showAspectRatioPreserve = {
    show: function(v) {
      if (v instanceof Meet) {
        return "meet";
      }
      ;
      if (v instanceof Slice) {
        return "slice";
      }
      ;
      if (v instanceof None2) {
        return "none";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Attributes.Sugar (line 63, column 1 - line 66, column 22): " + [v.constructor.name]);
    }
  };
  var show12 = /* @__PURE__ */ show(showAspectRatioPreserve);
  var showAlignAspectRatio_Y = {
    show: function(v) {
      if (v instanceof YMin) {
        return "YMin";
      }
      ;
      if (v instanceof YMid) {
        return "YMid";
      }
      ;
      if (v instanceof YMax) {
        return "YMax";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Attributes.Sugar (line 58, column 1 - line 61, column 21): " + [v.constructor.name]);
    }
  };
  var show22 = /* @__PURE__ */ show(showAlignAspectRatio_Y);
  var showAlignAspectRatio_X = {
    show: function(v) {
      if (v instanceof XMin) {
        return "xMin";
      }
      ;
      if (v instanceof XMid) {
        return "xMid";
      }
      ;
      if (v instanceof XMax) {
        return "xMax";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Attributes.Sugar (line 53, column 1 - line 56, column 21): " + [v.constructor.name]);
    }
  };
  var show32 = /* @__PURE__ */ show(showAlignAspectRatio_X);
  var showAspectRatioSpec = {
    show: function(v) {
      if (v.value2 instanceof None2) {
        return "none";
      }
      ;
      return show32(v.value0) + (show22(v.value1) + (" " + show12(v.value2)));
    }
  };
  var y2 = function(dictToAttr) {
    var $109 = AttributeSetter.create("y2");
    var $110 = toAttr(dictToAttr);
    return function($111) {
      return AttrT.create($109($110($111)));
    };
  };
  var y1 = function(dictToAttr) {
    var $112 = AttributeSetter.create("y1");
    var $113 = toAttr(dictToAttr);
    return function($114) {
      return AttrT.create($112($113($114)));
    };
  };
  var y = function(dictToAttr) {
    var $115 = AttributeSetter.create("y");
    var $116 = toAttr(dictToAttr);
    return function($117) {
      return AttrT.create($115($116($117)));
    };
  };
  var x2 = function(dictToAttr) {
    var $118 = AttributeSetter.create("x2");
    var $119 = toAttr(dictToAttr);
    return function($120) {
      return AttrT.create($118($119($120)));
    };
  };
  var x1 = function(dictToAttr) {
    var $121 = AttributeSetter.create("x1");
    var $122 = toAttr(dictToAttr);
    return function($123) {
      return AttrT.create($121($122($123)));
    };
  };
  var x = function(dictToAttr) {
    var $124 = AttributeSetter.create("x");
    var $125 = toAttr(dictToAttr);
    return function($126) {
      return AttrT.create($124($125($126)));
    };
  };
  var width8 = function(dictToAttr) {
    var $127 = AttributeSetter.create("width");
    var $128 = toAttr(dictToAttr);
    return function($129) {
      return AttrT.create($127($128($129)));
    };
  };
  var viewBox = function(xo) {
    return function(yo) {
      return function(w) {
        return function(h) {
          var vb = intercalate5(" ")(map32(show6)([xo, yo, w, h]));
          return AttrT.create(AttributeSetter.create("viewBox")(toAttr2(vb)));
        };
      };
    };
  };
  var transform$prime = /* @__PURE__ */ (function() {
    var $130 = AttributeSetter.create("transform");
    return function($131) {
      return AttrT.create($130(StringAttr.create(Fn.create($131))));
    };
  })();
  var to = function(v) {
    return function(v1) {
      if (v instanceof TransitionT && v.value0.length === 0) {
        return [new TransitionT(v1, v.value1)];
      }
      ;
      if (v instanceof TransitionT) {
        return [new TransitionT(append13(v.value0)(v1), v.value1)];
      }
      ;
      return cons3(v)(v1);
    };
  };
  var textAnchor = function(dictToAttr) {
    var $132 = AttributeSetter.create("text-anchor");
    var $133 = toAttr(dictToAttr);
    return function($134) {
      return AttrT.create($132($133($134)));
    };
  };
  var text6 = function(dictToAttr) {
    var $135 = AttributeSetter.create("text");
    var $136 = toAttr(dictToAttr);
    return function($137) {
      return TextT.create($135($136($137)));
    };
  };
  var strokeWidth = function(dictToAttr) {
    var $138 = AttributeSetter.create("stroke-width");
    var $139 = toAttr(dictToAttr);
    return function($140) {
      return AttrT.create($138($139($140)));
    };
  };
  var strokeOpacity = function(dictToAttr) {
    var $141 = AttributeSetter.create("stroke-opacity");
    var $142 = toAttr(dictToAttr);
    return function($143) {
      return AttrT.create($141($142($143)));
    };
  };
  var strokeColor = function(dictToAttr) {
    var $144 = AttributeSetter.create("stroke");
    var $145 = toAttr(dictToAttr);
    return function($146) {
      return AttrT.create($144($145($146)));
    };
  };
  var remove = /* @__PURE__ */ (function() {
    return RemoveT.value;
  })();
  var radius = function(dictToAttr) {
    var $156 = AttributeSetter.create("r");
    var $157 = toAttr(dictToAttr);
    return function($158) {
      return AttrT.create($156($157($158)));
    };
  };
  var preserveAspectRatio = /* @__PURE__ */ (function() {
    var $159 = AttributeSetter.create("preserveAspectRatio");
    var $160 = show(showAspectRatioSpec);
    return function($161) {
      return AttrT.create($159(toAttr2($160($161))));
    };
  })();
  var opacity = function(dictToAttr) {
    var $168 = AttributeSetter.create("opacity");
    var $169 = toAttr(dictToAttr);
    return function($170) {
      return AttrT.create($168($169($170)));
    };
  };
  var onMouseEventEffectful = function(event) {
    return function(listener) {
      return new OnT$prime(event, mkEffectFn3(listener));
    };
  };
  var height8 = function(dictToAttr) {
    var $171 = AttributeSetter.create("height");
    var $172 = toAttr(dictToAttr);
    return function($173) {
      return AttrT.create($171($172($173)));
    };
  };
  var fontSize = function(dictToAttr) {
    var $174 = AttributeSetter.create("font-size");
    var $175 = toAttr(dictToAttr);
    return function($176) {
      return AttrT.create($174($175($176)));
    };
  };
  var fontFamily = function(dictToAttr) {
    var $177 = AttributeSetter.create("font-family");
    var $178 = toAttr(dictToAttr);
    return function($179) {
      return AttrT.create($177($178($179)));
    };
  };
  var fillOpacity = function(dictToAttr) {
    var $180 = AttributeSetter.create("fill-opacity");
    var $181 = toAttr(dictToAttr);
    return function($182) {
      return AttrT.create($180($181($182)));
    };
  };
  var fill = function(dictToAttr) {
    var $183 = AttributeSetter.create("fill");
    var $184 = toAttr(dictToAttr);
    return function($185) {
      return AttrT.create($183($184($185)));
    };
  };
  var dy = function(dictToAttr) {
    var $186 = AttributeSetter.create("dy");
    var $187 = toAttr(dictToAttr);
    return function($188) {
      return AttrT.create($186($187($188)));
    };
  };
  var defaultTransition = /* @__PURE__ */ (function() {
    return {
      name: "",
      delay: 0,
      duration: 0,
      easing: DefaultCubic.value
    };
  })();
  var transitionWithDuration = function(duration2) {
    return new TransitionT([], {
      name: defaultTransition.name,
      delay: defaultTransition.delay,
      easing: defaultTransition.easing,
      duration: duration2
    });
  };
  var d2 = function(dictToAttr) {
    var $192 = AttributeSetter.create("d");
    var $193 = toAttr(dictToAttr);
    return function($194) {
      return AttrT.create($192($193($194)));
    };
  };
  var cy = function(dictToAttr) {
    var $195 = AttributeSetter.create("cy");
    var $196 = toAttr(dictToAttr);
    return function($197) {
      return AttrT.create($195($196($197)));
    };
  };
  var cx = function(dictToAttr) {
    var $198 = AttributeSetter.create("cx");
    var $199 = toAttr(dictToAttr);
    return function($200) {
      return AttrT.create($198($199($200)));
    };
  };
  var cursor = function(dictToAttr) {
    var $201 = AttributeSetter.create("cursor");
    var $202 = toAttr(dictToAttr);
    return function($203) {
      return AttrT.create($201($202($203)));
    };
  };
  var classed = function(dictToAttr) {
    var $204 = AttributeSetter.create("class");
    var $205 = toAttr(dictToAttr);
    return function($206) {
      return AttrT.create($204($205($206)));
    };
  };
  var assembleTransforms = function(fs) {
    return function(d1) {
      return intercalate5(" ")(flap2(fs)(d1));
    };
  };
  var transform = function($210) {
    return transform$prime(assembleTransforms($210));
  };
  var andThen = function(dictSemigroup) {
    return append(dictSemigroup);
  };

  // output/PSD3.Internal.Simulation.Config/index.js
  var y3 = function(dictToAttr) {
    var $34 = AttributeSetter.create("y");
    var $35 = toAttr(dictToAttr);
    return function($36) {
      return ForceT($34($35($36)));
    };
  };
  var x3 = function(dictToAttr) {
    var $37 = AttributeSetter.create("x");
    var $38 = toAttr(dictToAttr);
    return function($39) {
      return ForceT($37($38($39)));
    };
  };
  var theta = function(dictToAttr) {
    var $40 = AttributeSetter.create("theta");
    var $41 = toAttr(dictToAttr);
    return function($42) {
      return ForceT($40($41($42)));
    };
  };
  var strength = function(dictToAttr) {
    var $45 = AttributeSetter.create("strength");
    var $46 = toAttr(dictToAttr);
    return function($47) {
      return ForceT($45($46($47)));
    };
  };
  var radius2 = function(dictToAttr) {
    var $48 = AttributeSetter.create("radius");
    var $49 = toAttr(dictToAttr);
    return function($50) {
      return ForceT($48($49($50)));
    };
  };
  var numKey = /* @__PURE__ */ (function() {
    var $51 = AttributeSetter.create("keyFn");
    return function($52) {
      return ForceT($51(NumberAttr.create(Fn.create($52))));
    };
  })();
  var distanceMin = function(dictToAttr) {
    var $65 = AttributeSetter.create("distanceMin");
    var $66 = toAttr(dictToAttr);
    return function($67) {
      return ForceT($65($66($67)));
    };
  };
  var distanceMax = function(dictToAttr) {
    var $68 = AttributeSetter.create("distanceMax");
    var $69 = toAttr(dictToAttr);
    return function($70) {
      return ForceT($68($69($70)));
    };
  };
  var distance = function(dictToAttr) {
    var $71 = AttributeSetter.create("distance");
    var $72 = toAttr(dictToAttr);
    return function($73) {
      return ForceT($71($72($73)));
    };
  };

  // output/PSD3.Internal.Simulation.Forces/index.js
  var _status2 = /* @__PURE__ */ _status(strongFn);
  var show7 = /* @__PURE__ */ show(showRegularForceType);
  var _name2 = /* @__PURE__ */ _name(strongForget);
  var fromFoldable7 = /* @__PURE__ */ fromFoldable2(ordString);
  var elem3 = /* @__PURE__ */ elem2(eqString);
  var unwrap7 = /* @__PURE__ */ unwrap();
  var map113 = /* @__PURE__ */ map(functorArray);
  var showType = function(v) {
    if (v instanceof LinkForce) {
      return "linkForce";
    }
    ;
    if (v instanceof RegularForce) {
      return show7(v.value0);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 32, column 3 - line 34, column 29): " + [v.constructor.name]);
  };
  var removeForceFromSimulation = function(v) {
    return function(simulation_) {
      if (v.type instanceof RegularForce) {
        return setAsNullForceInSimulation_(simulation_)(v.name);
      }
      ;
      if (v.type instanceof LinkForce) {
        return setAsNullForceInSimulation_(simulation_)(v.name);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 111, column 3 - line 114, column 73): " + [v.type.constructor.name]);
    };
  };
  var putForceInSimulation = function(v) {
    return function(simulation_) {
      if (v.type instanceof RegularForce) {
        return putForceInSimulation_(simulation_)(v.name)(v.force_);
      }
      ;
      if (v.type instanceof LinkForce) {
        return putForceInSimulation_(simulation_)(v.name)(v.force_);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 102, column 3 - line 106, column 80): " + [v.type.constructor.name]);
    };
  };
  var initialize = function(dictFoldable) {
    var fromFoldable114 = fromFoldable7(dictFoldable);
    return function(dictFunctor) {
      var map211 = map(dictFunctor);
      return function(forces2) {
        return fromFoldable114(map211(function(f) {
          return new Tuple(view(_name2)(f), f);
        })(forces2));
      };
    };
  };
  var enableForce = /* @__PURE__ */ (function() {
    return set(_status2)(ForceActive.value);
  })();
  var enableByLabels = function(simulation) {
    return function(labels9) {
      return function(force2) {
        var $43 = elem3(view(_name2)(force2))(labels9);
        if ($43) {
          var v = putForceInSimulation(force2)(simulation);
          return enableForce(force2);
        }
        ;
        return force2;
      };
    };
  };
  var disableForce = /* @__PURE__ */ (function() {
    return set(_status2)(ForceDisabled.value);
  })();
  var disableByLabels = function(simulation) {
    return function(labels9) {
      return function(force2) {
        var $45 = elem3(view(_name2)(force2))(labels9);
        if ($45) {
          var v = removeForceFromSimulation(force2)(simulation);
          return disableForce(force2);
        }
        ;
        return force2;
      };
    };
  };
  var createRegularForce_ = function(v) {
    if (v instanceof ForceManyBody) {
      return forceMany_(unit);
    }
    ;
    if (v instanceof ForceCenter) {
      return forceCenter_(unit);
    }
    ;
    if (v instanceof ForceCollide) {
      return forceCollideFn_(unit);
    }
    ;
    if (v instanceof ForceX) {
      return forceX_(unit);
    }
    ;
    if (v instanceof ForceY) {
      return forceY_(unit);
    }
    ;
    if (v instanceof ForceRadial) {
      return forceRadial_(unit);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 166, column 23 - line 172, column 52): " + [v.constructor.name]);
  };
  var createForce_ = function(v) {
    if (v instanceof RegularForce) {
      return createRegularForce_(v.value0);
    }
    ;
    if (v instanceof LinkForce) {
      return forceLink_(unit);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 160, column 3 - line 162, column 38): " + [v.constructor.name]);
  };
  var createLinkForce = function(f) {
    return function(cs) {
      return {
        type: LinkForce.value,
        name: linksForceName_,
        status: ForceDisabled.value,
        filter: f,
        attributes: cs,
        force_: createForce_(LinkForce.value)
      };
    };
  };
  var createForce = function(l) {
    return function(t) {
      return function(f) {
        return function(cs) {
          return {
            type: t,
            name: l,
            status: ForceDisabled.value,
            filter: f,
            attributes: cs,
            force_: createForce_(t)
          };
        };
      };
    };
  };
  var attrFilter = function(filter$prime) {
    return function(default$prime) {
      var addFilterToStatic = function(filter6) {
        return function(value19) {
          return function($$default) {
            return function(d9) {
              var $49 = filter6(d9);
              if ($49) {
                return value19;
              }
              ;
              return $$default;
            };
          };
        };
      };
      var addFilterToFn = function(filter6) {
        return function(fn) {
          return function($$default) {
            return function(d9) {
              var $50 = filter6(d9);
              if ($50) {
                return fn(d9);
              }
              ;
              return $$default;
            };
          };
        };
      };
      return function(v) {
        if (v instanceof StringAttr && v.value0 instanceof Static) {
          return new StringAttr(new Static(v.value0.value0));
        }
        ;
        if (v instanceof StringAttr && v.value0 instanceof Fn) {
          return new StringAttr(new Fn(v.value0.value0));
        }
        ;
        if (v instanceof StringAttr && v.value0 instanceof FnI) {
          return new StringAttr(new FnI(v.value0.value0));
        }
        ;
        if (v instanceof NumberAttr && v.value0 instanceof Static) {
          return new NumberAttr(new Fn(addFilterToStatic(filter$prime)(v.value0.value0)(default$prime)));
        }
        ;
        if (v instanceof NumberAttr && v.value0 instanceof Fn) {
          return new NumberAttr(new Fn(addFilterToFn(filter$prime)(v.value0.value0)(default$prime)));
        }
        ;
        if (v instanceof NumberAttr && v.value0 instanceof FnI) {
          return new NumberAttr(new FnI(v.value0.value0));
        }
        ;
        if (v instanceof ArrayAttr && v.value0 instanceof Static) {
          return new ArrayAttr(new Static(v.value0.value0));
        }
        ;
        if (v instanceof ArrayAttr && v.value0 instanceof Fn) {
          return new ArrayAttr(new Fn(v.value0.value0));
        }
        ;
        if (v instanceof ArrayAttr && v.value0 instanceof FnI) {
          return new ArrayAttr(new FnI(v.value0.value0));
        }
        ;
        throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 211, column 3 - line 222, column 49): " + [v.constructor.name]);
      };
    };
  };
  var setForceAttr = function(force_) {
    return function(maybeFilter) {
      return function(v) {
        if (v.value0 === "strength") {
          if (maybeFilter instanceof Nothing) {
            return setForceStrength_(force_)(unboxAttr(v.value1));
          }
          ;
          if (maybeFilter instanceof Just) {
            return setForceStrength_(force_)(unboxAttr(attrFilter(maybeFilter.value0.value1)(0)(v.value1)));
          }
          ;
          throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 181, column 7 - line 185, column 82): " + [maybeFilter.constructor.name]);
        }
        ;
        if (v.value0 === "radius") {
          return setForceRadius_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "theta") {
          return setForceTheta_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "distanceMin") {
          return setForceDistanceMin_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "distanceMax") {
          return setForceDistanceMax_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "iterations") {
          return setForceIterations_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "x") {
          return setForceX_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "y") {
          return setForceY_(force_)(unboxAttr(v.value1));
        }
        ;
        if (v.value0 === "distance") {
          return setForceDistance_(force_)(unboxAttr(v.value1));
        }
        ;
        return force_;
      };
    };
  };
  var updateForceInSimulation = function(simulation) {
    return function(force2) {
      var f = unwrap7(force2);
      var v = map113(function(a2) {
        return setForceAttr(f.force_)(f.filter)(unwrap7(a2));
      })(f.attributes);
      if (f.status instanceof ForceActive) {
        return putForceInSimulation(force2)(simulation);
      }
      ;
      if (f.status instanceof ForceDisabled) {
        return removeForceFromSimulation(force2)(simulation);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Internal.Simulation.Forces (line 95, column 5 - line 97, column 66): " + [f.status.constructor.name]);
    };
  };

  // output/PSD3.Internal.Zoom/index.js
  var DefaultZoomExtent = /* @__PURE__ */ (function() {
    function DefaultZoomExtent2() {
    }
    ;
    DefaultZoomExtent2.value = new DefaultZoomExtent2();
    return DefaultZoomExtent2;
  })();
  var ZoomExtent = /* @__PURE__ */ (function() {
    function ZoomExtent2(value0) {
      this.value0 = value0;
    }
    ;
    ZoomExtent2.create = function(value0) {
      return new ZoomExtent2(value0);
    };
    return ZoomExtent2;
  })();
  var ScaleExtent = /* @__PURE__ */ (function() {
    function ScaleExtent2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    ScaleExtent2.create = function(value0) {
      return function(value1) {
        return new ScaleExtent2(value0, value1);
      };
    };
    return ScaleExtent2;
  })();

  // output/Utility/index.js
  var map33 = /* @__PURE__ */ map(functorNonEmptyArray);
  var getWindowWidthHeight = function __do2() {
    var win = windowImpl();
    var w = innerWidth(win)();
    var h = innerHeight(win)();
    return new Tuple(toNumber(w), toNumber(h));
  };
  var equalSnd = function(dictEq) {
    var eq18 = eq(dictEq);
    return function(a2) {
      return function(b2) {
        return eq18(snd(a2))(snd(b2));
      };
    };
  };
  var compareSnd = function(dictOrd) {
    var compare4 = compare(dictOrd);
    return function(a2) {
      return function(b2) {
        return compare4(snd(a2))(snd(b2));
      };
    };
  };
  var chunk = function(tuples) {
    var $$package = snd(head5(tuples));
    var contains3 = toArray3(map33(fst)(tuples));
    return new Tuple($$package, contains3);
  };

  // output/PSD3.CodeAtlas.Tabs.InteractiveGraph/index.js
  var fromFoldable8 = /* @__PURE__ */ fromFoldable5(foldableArray)(ordString);
  var mapFlipped5 = /* @__PURE__ */ mapFlipped(functorArray);
  var member3 = /* @__PURE__ */ member2(ordString);
  var show8 = /* @__PURE__ */ show(showElement);
  var classed2 = /* @__PURE__ */ classed(toAttrString);
  var radius3 = /* @__PURE__ */ radius(toAttrNumberFn);
  var fill2 = /* @__PURE__ */ fill(toAttrStringFn);
  var text7 = /* @__PURE__ */ text6(toAttrStringFn);
  var discard6 = /* @__PURE__ */ discard(discardUnit);
  var lookup8 = /* @__PURE__ */ lookup(ordString);
  var toUnfoldable7 = /* @__PURE__ */ toUnfoldable6(unfoldableArray);
  var strokeWidth2 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var strokeColor2 = /* @__PURE__ */ strokeColor(toAttrString);
  var show13 = /* @__PURE__ */ show(showNumber);
  var x12 = /* @__PURE__ */ x1(toAttrNumberFn);
  var y12 = /* @__PURE__ */ y1(toAttrNumberFn);
  var x22 = /* @__PURE__ */ x2(toAttrNumberFn);
  var y22 = /* @__PURE__ */ y2(toAttrNumberFn);
  var fromFoldable12 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var fromFoldable23 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var maximum2 = /* @__PURE__ */ maximum(ordInt)(foldableArray);
  var insert8 = /* @__PURE__ */ insert(ordString);
  var fromFoldable32 = /* @__PURE__ */ fromFoldable3(foldableList);
  var insert13 = /* @__PURE__ */ insert6(ordString);
  var show23 = /* @__PURE__ */ show(/* @__PURE__ */ showArray(showInt));
  var map34 = /* @__PURE__ */ map(functorArray);
  var show33 = /* @__PURE__ */ show(showInt);
  var strokeOpacity2 = /* @__PURE__ */ strokeOpacity(toAttrNumber);
  var strength2 = /* @__PURE__ */ strength(toAttrNumber);
  var theta2 = /* @__PURE__ */ theta(toAttrNumber);
  var distanceMin2 = /* @__PURE__ */ distanceMin(toAttrNumber);
  var radius1 = /* @__PURE__ */ radius2(toAttrNumberFnI);
  var x4 = /* @__PURE__ */ x3(toAttrNumber);
  var y4 = /* @__PURE__ */ y3(toAttrNumber);
  var distance2 = /* @__PURE__ */ distance(toAttrNumber);
  var _handle2 = /* @__PURE__ */ _handle(strongForget);
  var x32 = /* @__PURE__ */ x(toAttrNumber);
  var y32 = /* @__PURE__ */ y(toAttrNumber);
  var width9 = /* @__PURE__ */ width8(toAttrNumber);
  var height9 = /* @__PURE__ */ height8(toAttrNumber);
  var fill1 = /* @__PURE__ */ fill(toAttrString);
  var radius22 = /* @__PURE__ */ radius(toAttrNumber);
  var text1 = /* @__PURE__ */ text6(toAttrString);
  var unboxModuleNode = function(datum2) {
    return datum2;
  };
  var unboxLink = unsafeCoerce2;
  var nodeRadius = function(loc) {
    return log(toNumber(loc)) + 10;
  };
  var nodeColor = function(path3) {
    if (take4(4)(path3) === "src/") {
      var $153 = contains("src/lib/PSD3")(path3);
      if ($153) {
        return "#2E7D32";
      }
      ;
      var $154 = contains("src/lib/")(path3);
      if ($154) {
        return "#4CAF50";
      }
      ;
      var $155 = contains("src/website/")(path3);
      if ($155) {
        return "#D32F2F";
      }
      ;
      return "#1976D2";
    }
    ;
    if (otherwise) {
      return "#757575";
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.InteractiveGraph (line 74, column 1 - line 74, column 30): " + [path3.constructor.name]);
  };
  var modulesToLinks = function(modules) {
    var sourceModuleNames = fromFoldable8(mapFlipped5(modules)(function(v) {
      return v.name;
    }));
    return concat(mapFlipped5(modules)(function(m) {
      return filter2(function(link4) {
        return member3(link4.target)(sourceModuleNames);
      })(mapFlipped5(m.depends)(function(dep) {
        return {
          id: m.name + ("->" + dep),
          source: m.name,
          target: dep
        };
      }));
    }));
  };
  var link_ = {
    source: function($185) {
      return (function(v) {
        return v.source;
      })(unboxLink($185));
    },
    target: function($186) {
      return (function(v) {
        return v.target;
      })(unboxLink($186));
    }
  };
  var datum_ = {
    id: function($187) {
      return (function(v) {
        return v.id;
      })(unboxModuleNode($187));
    },
    x: function($188) {
      return (function(v) {
        return v.x;
      })(unboxModuleNode($188));
    },
    y: function($189) {
      return (function(v) {
        return v.y;
      })(unboxModuleNode($189));
    },
    name: function($190) {
      return (function(v) {
        return v.name;
      })(unboxModuleNode($190));
    },
    loc: function($191) {
      return (function(v) {
        return v.loc;
      })(unboxModuleNode($191));
    },
    path: function($192) {
      return (function(v) {
        return v.path;
      })(unboxModuleNode($192));
    }
  };
  var updateGraph = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard6(dictBind);
    return function(dictMonadEffect) {
      return function(dictMonadState) {
        return function(dictSelectionM) {
          var openSelection2 = openSelection(dictSelectionM);
          var updateJoin2 = updateJoin(dictSelectionM);
          var appendTo2 = appendTo(dictSelectionM);
          var setAttributes2 = setAttributes(dictSelectionM);
          var selectUnder2 = selectUnder(dictSelectionM);
          var mergeSelections2 = mergeSelections(dictSelectionM);
          var on3 = on2(dictSelectionM);
          return function(dictSimulationM2) {
            var update4 = update3(dictSimulationM2);
            var addTickFunction2 = addTickFunction(dictSimulationM2);
            return function(v) {
              return bind71(update4({
                nodes: new Just(v.filteredNodes),
                links: new Just(v.filteredLinks),
                nodeFilter: Nothing.value,
                linkFilter: Nothing.value,
                activeForces: Nothing.value,
                config: Nothing.value,
                keyFn: keyIsID_
              }))(function(enhanced) {
                return bind71(openSelection2(v.nodesGroup)(show8(Group.value)))(function(node) {
                  return bind71(openSelection2(v.linksGroup)(show8(Line.value)))(function(link4) {
                    return bind71(updateJoin2(node)(Group.value)(enhanced.nodes)(keyIsID_))(function(node$prime) {
                      return bind71(appendTo2(node$prime.enter)(Group.value)([classed2("node-group")]))(function(nodeEnter) {
                        return bind71(appendTo2(nodeEnter)(Circle.value)([radius3(function($193) {
                          return nodeRadius(datum_.loc($193));
                        }), fill2(function($194) {
                          return nodeColor(datum_.path($194));
                        }), classed2("node-circle")]))(function() {
                          return bind71(appendTo2(nodeEnter)(Text2.value)([text7(datum_.name), classed2("node-label")]))(function() {
                            return discard112(setAttributes2(node$prime.exit)([remove]))(function() {
                              return discard112(setAttributes2(node$prime.update)([classed2("node-group")]))(function() {
                                return bind71(selectUnder2(node$prime.update)(show8(Circle.value)))(function(updateCircles) {
                                  return discard112(setAttributes2(updateCircles)([radius3(function($195) {
                                    return nodeRadius(datum_.loc($195));
                                  }), fill2(function($196) {
                                    return nodeColor(datum_.path($196));
                                  })]))(function() {
                                    return bind71(selectUnder2(node$prime.update)(show8(Text2.value)))(function(updateLabels) {
                                      return discard112(setAttributes2(updateLabels)([text7(datum_.name)]))(function() {
                                        return bind71(mergeSelections2(nodeEnter)(node$prime.update))(function(mergedNodes) {
                                          var onMouseLeave = function(v1, v2, v3) {
                                            return clearHighlights_(v.zoomGroup);
                                          };
                                          var onMouseEnter = function(v1, datum2, v2) {
                                            var nodeId = datum_.id(datum2);
                                            var connected = fromMaybe(empty7)(lookup8(nodeId)(v.adjacencyMap));
                                            var connectedIds = toUnfoldable7(connected);
                                            var allHighlighted = cons3(nodeId)(connectedIds);
                                            return highlightConnectedNodes_(v.zoomGroup)(allHighlighted);
                                          };
                                          return discard112(setAttributes2(mergedNodes)([new OnT$prime(MouseEnter.value, onMouseEnter), new OnT$prime(MouseLeave.value, onMouseLeave)]))(function() {
                                            return bind71(on3(mergedNodes)(new Drag(new CustomDrag("moduleGraph", simdragHorizontal_))))(function() {
                                              return bind71(updateJoin2(link4)(Line.value)(enhanced.links)(keyIsID_))(function(link$prime) {
                                                return bind71(appendTo2(link$prime.enter)(Line.value)([strokeWidth2(1.5), strokeColor2("#999")]))(function(linkEnter) {
                                                  return discard112(setAttributes2(link$prime.exit)([remove]))(function() {
                                                    return discard112(setAttributes2(link$prime.update)([strokeWidth2(1.5), strokeColor2("#999")]))(function() {
                                                      return bind71(mergeSelections2(linkEnter)(link$prime.update))(function(mergedLinks) {
                                                        var translateNode = function(d9) {
                                                          return "translate(" + (show13(datum_.x(d9)) + ("," + (show13(datum_.y(d9)) + ")")));
                                                        };
                                                        return discard112(addTickFunction2("nodes")(new Step3(mergedNodes, [transform$prime(translateNode)])))(function() {
                                                          return addTickFunction2("links")(new Step3(mergedLinks, [x12(function($197) {
                                                            return (function(v1) {
                                                              return v1.x;
                                                            })(link_.source($197));
                                                          }), y12(function($198) {
                                                            return (function(v1) {
                                                              return v1.y;
                                                            })(link_.source($198));
                                                          }), x22(function($199) {
                                                            return (function(v1) {
                                                              return v1.x;
                                                            })(link_.target($199));
                                                          }), y22(function($200) {
                                                            return (function(v1) {
                                                              return v1.y;
                                                            })(link_.target($200));
                                                          })]));
                                                        });
                                                      });
                                                    });
                                                  });
                                                });
                                              });
                                            });
                                          });
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
  };
  var computeLayers = function(modules) {
    var moduleNames = fromFoldable8(mapFlipped5(modules)(function(v) {
      return v.name;
    }));
    var sourceDeps = fromFoldable12(mapFlipped5(modules)(function(m) {
      return new Tuple(m.name, fromFoldable8(filter2(function(dep) {
        return member3(dep)(moduleNames);
      })(m.depends)));
    }));
    var computeDepth = function(name16) {
      return function(depths) {
        var v = lookup8(name16)(depths);
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        if (v instanceof Nothing) {
          var v1 = lookup8(name16)(sourceDeps);
          if (v1 instanceof Nothing) {
            return 0;
          }
          ;
          if (v1 instanceof Just) {
            var $166 = isEmpty2(v1.value0);
            if ($166) {
              return 0;
            }
            ;
            var depDepths = mapFlipped5(fromFoldable23(v1.value0))(function(dep) {
              return computeDepth(dep)(depths);
            });
            var v2 = maximum2(depDepths);
            if (v2 instanceof Just) {
              return v2.value0 + 1 | 0;
            }
            ;
            if (v2 instanceof Nothing) {
              return 0;
            }
            ;
            throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.InteractiveGraph (line 114, column 22 - line 116, column 36): " + [v2.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.InteractiveGraph (line 107, column 11 - line 116, column 36): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.InteractiveGraph (line 104, column 7 - line 116, column 36): " + [v.constructor.name]);
      };
    };
    var go2 = function($copy_depths) {
      return function($copy_names) {
        var $tco_var_depths = $copy_depths;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(depths, names) {
          var v = uncons2(names);
          if (v instanceof Nothing) {
            $tco_done = true;
            return depths;
          }
          ;
          if (v instanceof Just) {
            var depth = computeDepth(v.value0.head)(depths);
            var depths$prime = insert8(v.value0.head)(depth)(depths);
            $tco_var_depths = depths$prime;
            $copy_names = v.value0.tail;
            return;
          }
          ;
          throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.InteractiveGraph (line 120, column 7 - line 125, column 29): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_depths, $copy_names);
        }
        ;
        return $tco_result;
      };
    };
    return go2(empty2)(mapFlipped5(modules)(function(v) {
      return v.name;
    }));
  };
  var modulesToNodes = function(modules) {
    var layers = computeLayers(modules);
    var layerValues = fromFoldable32(values(layers));
    var maxLayer = fromMaybe(0)(maximum2(layerValues));
    var verticalOffset = toNumber(maxLayer) * 150 * 0.5;
    return mapWithIndex3(function(i2) {
      return function(m) {
        var theta1 = toNumber(i2) * 0.5;
        var r = 50 + toNumber(i2) * 2;
        var layer = fromMaybe(0)(lookup8(m.name)(layers));
        var yPos = verticalOffset - toNumber(layer) * 150;
        return {
          id: m.name,
          name: m.name,
          loc: m.loc,
          path: m.path,
          x: r * cos(theta1),
          y: yPos,
          vx: 0,
          vy: 0,
          fx: nullImpl,
          fy: toNullable(new Just(yPos))
        };
      };
    })(modules);
  };
  var buildAdjacencyMap = function(links) {
    var addEdge = function(acc) {
      return function(link4) {
        var sourceSet = fromMaybe(empty7)(lookup8(link4.source)(acc));
        var targetSet = fromMaybe(empty7)(lookup8(link4.target)(acc));
        return insert8(link4.source)(insert13(link4.target)(sourceSet))(insert8(link4.target)(insert13(link4.source)(targetSet))(acc));
      };
    };
    return foldl2(addEdge)(empty2)(links);
  };
  var initialize2 = function(dictBind) {
    var discard112 = discard6(dictBind);
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var pure115 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictMonadState) {
        var use3 = use(dictMonadState);
        return function(dictSelectionM) {
          var attach2 = attach(dictSelectionM);
          var appendTo2 = appendTo(dictSelectionM);
          var on3 = on2(dictSelectionM);
          var setAttributes2 = setAttributes(dictSelectionM);
          return function(dictSimulationM) {
            var init5 = init3(dictSimulationM);
            return function(graphData) {
              var sourceModules = filter2(function(m) {
                return take4(4)(m.path) === "src/";
              })(graphData.modules);
              var moduleNodes = modulesToNodes(sourceModules);
              var moduleLinks = modulesToLinks(sourceModules);
              var adjacencyMap = buildAdjacencyMap(moduleLinks);
              var layers = computeLayers(sourceModules);
              var layerValues = fromFoldable32(values(layers));
              var maxLayer = fromMaybe(0)(maximum2(layerValues));
              return discard112(liftEffect51(log2("Sample module LOCs: " + show23(map34(function(v) {
                return v.loc;
              })(take(5)(sourceModules))))))(function() {
                return discard112(liftEffect51(log2("Total source modules: " + show33(length4(sourceModules)))))(function() {
                  return discard112(liftEffect51(log2("Max layer: " + show33(maxLayer))))(function() {
                    return bind71(liftEffect51(getWindowWidthHeight))(function(v) {
                      return bind71(attach2("div.svg-container"))(function(root3) {
                        return bind71(appendTo2(root3)(Svg.value)([viewBox(-v.value0 / 2)(-v.value1 / 2)(v.value0)(v.value1), classed2("module-graph")]))(function(svg2) {
                          return bind71(appendTo2(svg2)(Group.value)([classed2("zoom-group")]))(function(zoomGroup) {
                            return bind71(appendTo2(zoomGroup)(Group.value)([classed2("link"), strokeColor2("#999"), strokeOpacity2(0.4)]))(function(linksGroup) {
                              return bind71(appendTo2(zoomGroup)(Group.value)([classed2("node"), strokeColor2("#fff"), strokeWidth2(1.5)]))(function(nodesGroup) {
                                var collisionRadius = function(datum2) {
                                  return function(v1) {
                                    return nodeRadius((function(v2) {
                                      return v2.loc;
                                    })(datum2));
                                  };
                                };
                                var forces2 = [createForce("manyBody")(new RegularForce(ForceManyBody.value))(allNodes)([strength2(-150), theta2(0.9), distanceMin2(1)]), createForce("collision")(new RegularForce(ForceCollide.value))(allNodes)([radius1(collisionRadius)]), createForce("center")(new RegularForce(ForceCenter.value))(allNodes)([x4(0), y4(0), strength2(0.3)]), createLinkForce(Nothing.value)([distance2(100)])];
                                var activeForces = fromFoldable8(["manyBody", "collision", "center", "links"]);
                                return bind71(init5({
                                  nodes: moduleNodes,
                                  links: moduleLinks,
                                  forces: forces2,
                                  activeForces,
                                  config: {
                                    alpha: 1,
                                    alphaTarget: 0,
                                    alphaMin: 1e-3,
                                    alphaDecay: 0.0228,
                                    velocityDecay: 0.4
                                  },
                                  keyFn: keyIsID_,
                                  ticks: fromFoldable12([])
                                }))(function() {
                                  return bind71(on3(svg2)(new Zoom({
                                    extent: new ZoomExtent({
                                      top: 0,
                                      left: 0,
                                      bottom: v.value1,
                                      right: v.value0
                                    }),
                                    scale: new ScaleExtent(0.1, 4),
                                    name: "ModuleGraph",
                                    target: zoomGroup
                                  })))(function() {
                                    return bind71(use3(_handle2))(function(simHandle) {
                                      var unpinHandler = function(v1, v2, v3) {
                                        return unpinAllNodes_(simHandle);
                                      };
                                      return bind71(appendTo2(svg2)(Group.value)([classed2("unpin-button")]))(function(unpinButton) {
                                        return bind71(appendTo2(unpinButton)(Rect.value)([x32(-v.value0 / 2 + 10), y32(-v.value1 / 2 + 10), width9(80), height9(30), fill1("#f39c12"), radius22(5), classed2("unpin-button-bg")]))(function() {
                                          return bind71(appendTo2(unpinButton)(Text2.value)([x32(-v.value0 / 2 + 50), y32(-v.value1 / 2 + 25), text1("Unpin All"), fill1("#fff"), classed2("unpin-button-text")]))(function() {
                                            return discard112(setAttributes2(unpinButton)([new OnT$prime(MouseClick.value, unpinHandler)]))(function() {
                                              return pure115({
                                                svg: svg2,
                                                zoomGroup,
                                                nodesGroup,
                                                linksGroup,
                                                moduleNodes,
                                                moduleLinks,
                                                adjacencyMap
                                              });
                                            });
                                          });
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
  };
  var drawInteractiveGraph = function(dictBind) {
    var bind71 = bind(dictBind);
    var initialize1 = initialize2(dictBind);
    var discard112 = discard6(dictBind);
    var updateGraph1 = updateGraph(dictBind);
    return function(dictMonadEffect) {
      var initialize22 = initialize1(dictMonadEffect);
      var updateGraph2 = updateGraph1(dictMonadEffect);
      var pure115 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictMonadState) {
        var initialize32 = initialize22(dictMonadState);
        var use3 = use(dictMonadState);
        var updateGraph3 = updateGraph2(dictMonadState);
        return function(dictSelectionM) {
          var initialize42 = initialize32(dictSelectionM);
          var updateGraph4 = updateGraph3(dictSelectionM);
          var openSelection2 = openSelection(dictSelectionM);
          var setAttributes2 = setAttributes(dictSelectionM);
          return function(dictSimulationM) {
            var initialize5 = initialize42(dictSimulationM);
            var start5 = start2(dictSimulationM);
            return function(dictSimulationM2) {
              var updateGraph5 = updateGraph4(dictSimulationM2);
              return function(graphData) {
                return function(selector) {
                  return bind71(initialize5(graphData))(function(v) {
                    return bind71(use3(_handle2))(function(simHandle) {
                      var onClick2 = function(v1, datum2, v2) {
                        var nodeId = datum_.id(datum2);
                        var connected = fromMaybe(empty7)(lookup8(nodeId)(v.adjacencyMap));
                        var connectedIds = toUnfoldable7(connected);
                        var allConnected = cons3(nodeId)(connectedIds);
                        return filterToConnectedNodes_(simHandle)(keyIsID_)(allConnected);
                      };
                      return discard112(updateGraph5({
                        nodesGroup: v.nodesGroup,
                        linksGroup: v.linksGroup,
                        zoomGroup: v.zoomGroup,
                        filteredNodes: v.moduleNodes,
                        filteredLinks: v.moduleLinks,
                        adjacencyMap: v.adjacencyMap
                      }))(function() {
                        return bind71(openSelection2(v.nodesGroup)(show8(Group.value)))(function(initialNodes) {
                          return discard112(setAttributes2(initialNodes)([new OnT$prime(MouseClick.value, onClick2)]))(function() {
                            return discard112(start5)(function() {
                              return pure115(unit);
                            });
                          });
                        });
                      });
                    });
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/PSD3.CodeAtlas.Tabs.ModuleGraph/index.js
  var fromFoldable9 = /* @__PURE__ */ fromFoldable5(foldableArray)(ordString);
  var mapFlipped6 = /* @__PURE__ */ mapFlipped(functorArray);
  var member4 = /* @__PURE__ */ member2(ordString);
  var fromFoldable13 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var lookup9 = /* @__PURE__ */ lookup(ordString);
  var fromFoldable24 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var maximum3 = /* @__PURE__ */ maximum(ordInt)(foldableArray);
  var insert9 = /* @__PURE__ */ insert(ordString);
  var fromFoldable33 = /* @__PURE__ */ fromFoldable3(foldableList);
  var insert14 = /* @__PURE__ */ insert6(ordString);
  var discard7 = /* @__PURE__ */ discard(discardUnit);
  var show9 = /* @__PURE__ */ show(/* @__PURE__ */ showArray(showInt));
  var map35 = /* @__PURE__ */ map(functorArray);
  var show14 = /* @__PURE__ */ show(showInt);
  var classed3 = /* @__PURE__ */ classed(toAttrString);
  var strokeColor3 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeOpacity3 = /* @__PURE__ */ strokeOpacity(toAttrNumber);
  var strokeWidth3 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var strength3 = /* @__PURE__ */ strength(toAttrNumber);
  var theta3 = /* @__PURE__ */ theta(toAttrNumber);
  var distanceMin3 = /* @__PURE__ */ distanceMin(toAttrNumber);
  var radius4 = /* @__PURE__ */ radius2(toAttrNumberFnI);
  var x5 = /* @__PURE__ */ x3(toAttrNumber);
  var y5 = /* @__PURE__ */ y3(toAttrNumber);
  var distance3 = /* @__PURE__ */ distance(toAttrNumber);
  var radius12 = /* @__PURE__ */ radius(toAttrNumberFn);
  var fill3 = /* @__PURE__ */ fill(toAttrStringFn);
  var text8 = /* @__PURE__ */ text6(toAttrStringFn);
  var toUnfoldable8 = /* @__PURE__ */ toUnfoldable6(unfoldableArray);
  var show24 = /* @__PURE__ */ show(showNumber);
  var x13 = /* @__PURE__ */ x1(toAttrNumberFn);
  var y13 = /* @__PURE__ */ y1(toAttrNumberFn);
  var x23 = /* @__PURE__ */ x2(toAttrNumberFn);
  var y23 = /* @__PURE__ */ y2(toAttrNumberFn);
  var _handle3 = /* @__PURE__ */ _handle(strongForget);
  var x33 = /* @__PURE__ */ x(toAttrNumber);
  var y33 = /* @__PURE__ */ y(toAttrNumber);
  var width10 = /* @__PURE__ */ width8(toAttrNumber);
  var height10 = /* @__PURE__ */ height8(toAttrNumber);
  var fill12 = /* @__PURE__ */ fill(toAttrString);
  var radius23 = /* @__PURE__ */ radius(toAttrNumber);
  var text12 = /* @__PURE__ */ text6(toAttrString);
  var unboxModuleNode2 = function(datum2) {
    return datum2;
  };
  var unboxModuleLink = function(datum2) {
    return datum2;
  };
  var nodeRadius2 = function(loc) {
    return log(toNumber(loc)) + 10;
  };
  var nodeColor2 = function(path3) {
    if (take4(4)(path3) === "src/") {
      var $104 = contains("src/lib/PSD3")(path3);
      if ($104) {
        return "#2E7D32";
      }
      ;
      var $105 = contains("src/lib/")(path3);
      if ($105) {
        return "#4CAF50";
      }
      ;
      var $106 = contains("src/website/")(path3);
      if ($106) {
        return "#D32F2F";
      }
      ;
      return "#1976D2";
    }
    ;
    if (otherwise) {
      return "#757575";
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.ModuleGraph (line 79, column 1 - line 79, column 30): " + [path3.constructor.name]);
  };
  var modulesToLinks2 = function(modules) {
    var sourceModuleNames = fromFoldable9(mapFlipped6(modules)(function(v) {
      return v.name;
    }));
    return concat(mapFlipped6(modules)(function(m) {
      return mapMaybe(function(dep) {
        var $107 = member4(dep)(sourceModuleNames);
        if ($107) {
          return new Just({
            id: m.name + ("->" + dep),
            source: m.name,
            target: dep
          });
        }
        ;
        return Nothing.value;
      })(m.depends);
    }));
  };
  var link_2 = {
    source: function($126) {
      return (function(v) {
        return v.source;
      })(unboxModuleLink($126));
    },
    target: function($127) {
      return (function(v) {
        return v.target;
      })(unboxModuleLink($127));
    }
  };
  var datum_2 = {
    id: function($128) {
      return (function(v) {
        return v.id;
      })(unboxModuleNode2($128));
    },
    x: function($129) {
      return (function(v) {
        return v.x;
      })(unboxModuleNode2($129));
    },
    y: function($130) {
      return (function(v) {
        return v.y;
      })(unboxModuleNode2($130));
    },
    name: function($131) {
      return (function(v) {
        return v.name;
      })(unboxModuleNode2($131));
    },
    loc: function($132) {
      return (function(v) {
        return v.loc;
      })(unboxModuleNode2($132));
    },
    path: function($133) {
      return (function(v) {
        return v.path;
      })(unboxModuleNode2($133));
    }
  };
  var computeLayers2 = function(modules) {
    var moduleNames = fromFoldable9(mapFlipped6(modules)(function(v) {
      return v.name;
    }));
    var sourceDeps = fromFoldable13(mapFlipped6(modules)(function(m) {
      return new Tuple(m.name, fromFoldable9(filter2(function(dep) {
        return member4(dep)(moduleNames);
      })(m.depends)));
    }));
    var computeDepth = function(name16) {
      return function(depths) {
        var v = lookup9(name16)(depths);
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        if (v instanceof Nothing) {
          var v1 = lookup9(name16)(sourceDeps);
          if (v1 instanceof Nothing) {
            return 0;
          }
          ;
          if (v1 instanceof Just) {
            var $111 = isEmpty2(v1.value0);
            if ($111) {
              return 0;
            }
            ;
            var depDepths = mapFlipped6(fromFoldable24(v1.value0))(function(dep) {
              return computeDepth(dep)(depths);
            });
            var v2 = maximum3(depDepths);
            if (v2 instanceof Just) {
              return v2.value0 + 1 | 0;
            }
            ;
            if (v2 instanceof Nothing) {
              return 0;
            }
            ;
            throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.ModuleGraph (line 122, column 22 - line 124, column 36): " + [v2.constructor.name]);
          }
          ;
          throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.ModuleGraph (line 114, column 11 - line 124, column 36): " + [v1.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.ModuleGraph (line 111, column 7 - line 124, column 36): " + [v.constructor.name]);
      };
    };
    var go2 = function($copy_depths) {
      return function($copy_names) {
        var $tco_var_depths = $copy_depths;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(depths, names) {
          var v = uncons2(names);
          if (v instanceof Nothing) {
            $tco_done = true;
            return depths;
          }
          ;
          if (v instanceof Just) {
            var depth = computeDepth(v.value0.head)(depths);
            var depths$prime = insert9(v.value0.head)(depth)(depths);
            $tco_var_depths = depths$prime;
            $copy_names = v.value0.tail;
            return;
          }
          ;
          throw new Error("Failed pattern match at PSD3.CodeAtlas.Tabs.ModuleGraph (line 129, column 7 - line 134, column 29): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_depths, $copy_names);
        }
        ;
        return $tco_result;
      };
    };
    return go2(empty2)(mapFlipped6(modules)(function(v) {
      return v.name;
    }));
  };
  var modulesToNodes2 = function(modules) {
    var layers = computeLayers2(modules);
    var layerValues = fromFoldable33(values(layers));
    var maxLayer = fromMaybe(0)(maximum3(layerValues));
    var verticalOffset = toNumber(maxLayer) * 150 * 0.5;
    return mapWithIndex3(function(i2) {
      return function(m) {
        var theta1 = toNumber(i2) * 0.5;
        var r = 50 + toNumber(i2) * 2;
        var layer = fromMaybe(0)(lookup9(m.name)(layers));
        var yPos = verticalOffset - toNumber(layer) * 150;
        return {
          id: m.name,
          name: m.name,
          loc: m.loc,
          path: m.path,
          x: r * cos(theta1),
          y: yPos,
          vx: 0,
          vy: 0,
          fx: nullImpl,
          fy: toNullable(new Just(yPos))
        };
      };
    })(modules);
  };
  var drawModuleGraph = function(dictBind) {
    var discard112 = discard7(dictBind);
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var pure115 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictMonadState) {
        var use3 = use(dictMonadState);
        return function(dictSelectionM) {
          var attach2 = attach(dictSelectionM);
          var appendTo2 = appendTo(dictSelectionM);
          var simpleJoin2 = simpleJoin(dictSelectionM);
          var setAttributes2 = setAttributes(dictSelectionM);
          var on3 = on2(dictSelectionM);
          return function(dictSimulationM2) {
            var SimulationM1 = dictSimulationM2.SimulationM1();
            var init5 = init3(SimulationM1);
            var addTickFunction2 = addTickFunction(dictSimulationM2);
            var start5 = start2(SimulationM1);
            return function(graphData) {
              return function(selector) {
                var sourceModules = filter2(function(m) {
                  return take4(4)(m.path) === "src/";
                })(graphData.modules);
                var nodes = modulesToNodes2(sourceModules);
                var links = modulesToLinks2(sourceModules);
                var adjacencyMap = (function() {
                  var addEdge = function(acc) {
                    return function(link4) {
                      var sourceSet = fromMaybe(empty7)(lookup9(link4.source)(acc));
                      var targetSet = fromMaybe(empty7)(lookup9(link4.target)(acc));
                      return insert9(link4.source)(insert14(link4.target)(sourceSet))(insert9(link4.target)(insert14(link4.source)(targetSet))(acc));
                    };
                  };
                  return foldl2(addEdge)(empty2)(links);
                })();
                var layers = computeLayers2(sourceModules);
                var layerValues = fromFoldable33(values(layers));
                var maxLayer = fromMaybe(0)(maximum3(layerValues));
                return discard112(liftEffect51(log2("Sample module LOCs: " + show9(map35(function(v) {
                  return v.loc;
                })(take(5)(sourceModules))))))(function() {
                  return discard112(liftEffect51(log2("Total source modules: " + show14(length4(sourceModules)))))(function() {
                    return discard112(liftEffect51(log2("Max layer: " + show14(maxLayer))))(function() {
                      return discard112(liftEffect51(log2("Sample layers: " + show9(take(10)(layerValues)))))(function() {
                        return bind71(liftEffect51(getWindowWidthHeight))(function(v) {
                          return bind71(attach2(selector))(function(v1) {
                            return bind71(appendTo2(v1)(Svg.value)([viewBox(-v.value0 / 2)(-v.value1 / 2)(v.value0)(v.value1), classed3("module-graph")]))(function(svg2) {
                              return bind71(appendTo2(svg2)(Group.value)([classed3("zoom-group")]))(function(zoomGroup) {
                                return bind71(appendTo2(zoomGroup)(Group.value)([classed3("link"), strokeColor3("#999"), strokeOpacity3(0.4)]))(function(linksGroup) {
                                  return bind71(appendTo2(zoomGroup)(Group.value)([classed3("node"), strokeColor3("#fff"), strokeWidth3(1.5)]))(function(nodesGroup) {
                                    var collisionRadius = function(datum2) {
                                      return function(idx) {
                                        return nodeRadius2((function(v2) {
                                          return v2.loc;
                                        })(datum2));
                                      };
                                    };
                                    var forces2 = [createForce("manyBody")(new RegularForce(ForceManyBody.value))(allNodes)([strength3(-150), theta3(0.9), distanceMin3(1)]), createForce("collision")(new RegularForce(ForceCollide.value))(allNodes)([radius4(collisionRadius)]), createForce("center")(new RegularForce(ForceCenter.value))(allNodes)([x5(0), y5(0), strength3(0.3)]), createLinkForce(Nothing.value)([distance3(100)])];
                                    var activeForces = fromFoldable9(["manyBody", "collision", "center", "links"]);
                                    return bind71(init5({
                                      nodes,
                                      links,
                                      forces: forces2,
                                      activeForces,
                                      config: {
                                        alpha: 1,
                                        alphaTarget: 0,
                                        alphaMin: 1e-3,
                                        alphaDecay: 0.0228,
                                        velocityDecay: 0.4
                                      },
                                      keyFn: keyIsID_,
                                      ticks: fromFoldable13([])
                                    }))(function(v2) {
                                      return bind71(simpleJoin2(nodesGroup)(Group.value)(v2.nodes)(keyIsID_))(function(nodeGroups) {
                                        return discard112(setAttributes2(nodeGroups)([classed3("node-group")]))(function() {
                                          return bind71(appendTo2(nodeGroups)(Circle.value)([radius12(function($134) {
                                            return nodeRadius2(datum_2.loc($134));
                                          }), fill3(function($135) {
                                            return nodeColor2(datum_2.path($135));
                                          }), classed3("node-circle")]))(function(circles) {
                                            return bind71(appendTo2(nodeGroups)(Text2.value)([text8(datum_2.name), classed3("node-label")]))(function(labels9) {
                                              var onMouseLeave = function(event, datum2, $$this) {
                                                return clearHighlights_(zoomGroup);
                                              };
                                              var onMouseEnter = function(event, datum2, $$this) {
                                                var nodeId = datum_2.id(datum2);
                                                var connected = fromMaybe(empty7)(lookup9(nodeId)(adjacencyMap));
                                                var connectedIds = toUnfoldable8(connected);
                                                var allHighlighted = cons3(nodeId)(connectedIds);
                                                return highlightConnectedNodes_(zoomGroup)(allHighlighted);
                                              };
                                              return discard112(setAttributes2(nodeGroups)([new OnT$prime(MouseEnter.value, onMouseEnter), new OnT$prime(MouseLeave.value, onMouseLeave)]))(function() {
                                                return bind71(simpleJoin2(linksGroup)(Line.value)(v2.links)(keyIsID_))(function(linksSelection) {
                                                  return discard112(setAttributes2(linksSelection)([strokeWidth3(1.5), strokeColor3("#999")]))(function() {
                                                    var translateNode = function(d9) {
                                                      return "translate(" + (show24(datum_2.x(d9)) + ("," + (show24(datum_2.y(d9)) + ")")));
                                                    };
                                                    return discard112(addTickFunction2("nodes")(new Step3(nodeGroups, [transform$prime(translateNode)])))(function() {
                                                      return discard112(addTickFunction2("links")(new Step3(linksSelection, [x13(function($136) {
                                                        return (function(v3) {
                                                          return v3.x;
                                                        })(link_2.source($136));
                                                      }), y13(function($137) {
                                                        return (function(v3) {
                                                          return v3.y;
                                                        })(link_2.source($137));
                                                      }), x23(function($138) {
                                                        return (function(v3) {
                                                          return v3.x;
                                                        })(link_2.target($138));
                                                      }), y23(function($139) {
                                                        return (function(v3) {
                                                          return v3.y;
                                                        })(link_2.target($139));
                                                      })])))(function() {
                                                        return bind71(on3(nodeGroups)(new Drag(new CustomDrag("moduleGraph", simdragHorizontal_))))(function() {
                                                          return bind71(on3(svg2)(new Zoom({
                                                            extent: new ZoomExtent({
                                                              top: 0,
                                                              left: 0,
                                                              bottom: v.value1,
                                                              right: v.value0
                                                            }),
                                                            scale: new ScaleExtent(0.1, 4),
                                                            name: "ModuleGraph",
                                                            target: zoomGroup
                                                          })))(function() {
                                                            return bind71(use3(_handle3))(function(simHandle) {
                                                              var unpinHandler = function(event, datum2, $$this) {
                                                                return unpinAllNodes_(simHandle);
                                                              };
                                                              return bind71(appendTo2(svg2)(Group.value)([classed3("unpin-button")]))(function(unpinButton) {
                                                                return bind71(appendTo2(unpinButton)(Rect.value)([x33(-v.value0 / 2 + 10), y33(-v.value1 / 2 + 10), width10(80), height10(30), fill12("#f39c12"), radius23(5), classed3("unpin-button-bg")]))(function() {
                                                                  return bind71(appendTo2(unpinButton)(Text2.value)([x33(-v.value0 / 2 + 50), y33(-v.value1 / 2 + 25), text12("Unpin All"), fill12("#fff"), classed3("unpin-button-text")]))(function(unpinText) {
                                                                    return discard112(setAttributes2(unpinButton)([new OnT$prime(MouseClick.value, unpinHandler)]))(function() {
                                                                      return discard112(start5)(function() {
                                                                        return pure115(unit);
                                                                      });
                                                                    });
                                                                  });
                                                                });
                                                              });
                                                            });
                                                          });
                                                        });
                                                      });
                                                    });
                                                  });
                                                });
                                              });
                                            });
                                          });
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              };
            };
          };
        };
      };
    };
  };

  // node_modules/d3-array/src/ascending.js
  function ascending(a2, b2) {
    return a2 == null || b2 == null ? NaN : a2 < b2 ? -1 : a2 > b2 ? 1 : a2 >= b2 ? 0 : NaN;
  }

  // node_modules/d3-array/src/descending.js
  function descending(a2, b2) {
    return a2 == null || b2 == null ? NaN : b2 < a2 ? -1 : b2 > a2 ? 1 : b2 >= a2 ? 0 : NaN;
  }

  // node_modules/d3-array/src/bisector.js
  function bisector(f) {
    let compare12, compare22, delta;
    if (f.length !== 2) {
      compare12 = ascending;
      compare22 = (d9, x30) => ascending(f(d9), x30);
      delta = (d9, x30) => f(d9) - x30;
    } else {
      compare12 = f === ascending || f === descending ? f : zero2;
      compare22 = f;
      delta = f;
    }
    function left4(a2, x30, lo = 0, hi = a2.length) {
      if (lo < hi) {
        if (compare12(x30, x30) !== 0) return hi;
        do {
          const mid = lo + hi >>> 1;
          if (compare22(a2[mid], x30) < 0) lo = mid + 1;
          else hi = mid;
        } while (lo < hi);
      }
      return lo;
    }
    function right4(a2, x30, lo = 0, hi = a2.length) {
      if (lo < hi) {
        if (compare12(x30, x30) !== 0) return hi;
        do {
          const mid = lo + hi >>> 1;
          if (compare22(a2[mid], x30) <= 0) lo = mid + 1;
          else hi = mid;
        } while (lo < hi);
      }
      return lo;
    }
    function center3(a2, x30, lo = 0, hi = a2.length) {
      const i2 = left4(a2, x30, lo, hi - 1);
      return i2 > lo && delta(a2[i2 - 1], x30) > -delta(a2[i2], x30) ? i2 - 1 : i2;
    }
    return { left: left4, center: center3, right: right4 };
  }
  function zero2() {
    return 0;
  }

  // node_modules/d3-array/src/number.js
  function number(x30) {
    return x30 === null ? NaN : +x30;
  }

  // node_modules/d3-array/src/bisect.js
  var ascendingBisect = bisector(ascending);
  var bisectRight = ascendingBisect.right;
  var bisectLeft = ascendingBisect.left;
  var bisectCenter = bisector(number).center;
  var bisect_default = bisectRight;

  // node_modules/internmap/src/index.js
  var InternMap = class extends Map {
    constructor(entries, key = keyof) {
      super();
      Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: key } });
      if (entries != null) for (const [key2, value19] of entries) this.set(key2, value19);
    }
    get(key) {
      return super.get(intern_get(this, key));
    }
    has(key) {
      return super.has(intern_get(this, key));
    }
    set(key, value19) {
      return super.set(intern_set(this, key), value19);
    }
    delete(key) {
      return super.delete(intern_delete(this, key));
    }
  };
  function intern_get({ _intern, _key }, value19) {
    const key = _key(value19);
    return _intern.has(key) ? _intern.get(key) : value19;
  }
  function intern_set({ _intern, _key }, value19) {
    const key = _key(value19);
    if (_intern.has(key)) return _intern.get(key);
    _intern.set(key, value19);
    return value19;
  }
  function intern_delete({ _intern, _key }, value19) {
    const key = _key(value19);
    if (_intern.has(key)) {
      value19 = _intern.get(key);
      _intern.delete(key);
    }
    return value19;
  }
  function keyof(value19) {
    return value19 !== null && typeof value19 === "object" ? value19.valueOf() : value19;
  }

  // node_modules/d3-array/src/ticks.js
  var e10 = Math.sqrt(50);
  var e5 = Math.sqrt(10);
  var e2 = Math.sqrt(2);
  function tickSpec(start5, stop3, count) {
    const step5 = (stop3 - start5) / Math.max(0, count), power = Math.floor(Math.log10(step5)), error4 = step5 / Math.pow(10, power), factor = error4 >= e10 ? 10 : error4 >= e5 ? 5 : error4 >= e2 ? 2 : 1;
    let i1, i2, inc;
    if (power < 0) {
      inc = Math.pow(10, -power) / factor;
      i1 = Math.round(start5 * inc);
      i2 = Math.round(stop3 * inc);
      if (i1 / inc < start5) ++i1;
      if (i2 / inc > stop3) --i2;
      inc = -inc;
    } else {
      inc = Math.pow(10, power) * factor;
      i1 = Math.round(start5 / inc);
      i2 = Math.round(stop3 / inc);
      if (i1 * inc < start5) ++i1;
      if (i2 * inc > stop3) --i2;
    }
    if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start5, stop3, count * 2);
    return [i1, i2, inc];
  }
  function ticks(start5, stop3, count) {
    stop3 = +stop3, start5 = +start5, count = +count;
    if (!(count > 0)) return [];
    if (start5 === stop3) return [start5];
    const reverse3 = stop3 < start5, [i1, i2, inc] = reverse3 ? tickSpec(stop3, start5, count) : tickSpec(start5, stop3, count);
    if (!(i2 >= i1)) return [];
    const n = i2 - i1 + 1, ticks2 = new Array(n);
    if (reverse3) {
      if (inc < 0) for (let i3 = 0; i3 < n; ++i3) ticks2[i3] = (i2 - i3) / -inc;
      else for (let i3 = 0; i3 < n; ++i3) ticks2[i3] = (i2 - i3) * inc;
    } else {
      if (inc < 0) for (let i3 = 0; i3 < n; ++i3) ticks2[i3] = (i1 + i3) / -inc;
      else for (let i3 = 0; i3 < n; ++i3) ticks2[i3] = (i1 + i3) * inc;
    }
    return ticks2;
  }
  function tickIncrement(start5, stop3, count) {
    stop3 = +stop3, start5 = +start5, count = +count;
    return tickSpec(start5, stop3, count)[2];
  }
  function tickStep(start5, stop3, count) {
    stop3 = +stop3, start5 = +start5, count = +count;
    const reverse3 = stop3 < start5, inc = reverse3 ? tickIncrement(stop3, start5, count) : tickIncrement(start5, stop3, count);
    return (reverse3 ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);
  }

  // node_modules/d3-axis/src/identity.js
  function identity_default(x30) {
    return x30;
  }

  // node_modules/d3-axis/src/axis.js
  var top4 = 1;
  var right2 = 2;
  var bottom4 = 3;
  var left2 = 4;
  var epsilon = 1e-6;
  function translateX(x30) {
    return "translate(" + x30 + ",0)";
  }
  function translateY(y28) {
    return "translate(0," + y28 + ")";
  }
  function number2(scale) {
    return (d9) => +scale(d9);
  }
  function center(scale, offset) {
    offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
    if (scale.round()) offset = Math.round(offset);
    return (d9) => +scale(d9) + offset;
  }
  function entering() {
    return !this.__axis;
  }
  function axis(orient, scale) {
    var tickArguments = [], tickValues = null, tickFormat2 = null, tickSizeInner = 6, tickSizeOuter = 6, tickPadding = 3, offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5, k = orient === top4 || orient === left2 ? -1 : 1, x30 = orient === left2 || orient === right2 ? "x" : "y", transform3 = orient === top4 || orient === bottom4 ? translateX : translateY;
    function axis2(context) {
      var values2 = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues, format2 = tickFormat2 == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity_default : tickFormat2, spacing = Math.max(tickSizeInner, 0) + tickPadding, range3 = scale.range(), range0 = +range3[0] + offset, range1 = +range3[range3.length - 1] + offset, position2 = (scale.bandwidth ? center : number2)(scale.copy(), offset), selection2 = context.selection ? context.selection() : context, path3 = selection2.selectAll(".domain").data([null]), tick = selection2.selectAll(".tick").data(values2, scale).order(), tickExit = tick.exit(), tickEnter = tick.enter().append("g").attr("class", "tick"), line = tick.select("line"), text21 = tick.select("text");
      path3 = path3.merge(path3.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
      tick = tick.merge(tickEnter);
      line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x30 + "2", k * tickSizeInner));
      text21 = text21.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x30, k * spacing).attr("dy", orient === top4 ? "0em" : orient === bottom4 ? "0.71em" : "0.32em"));
      if (context !== selection2) {
        path3 = path3.transition(context);
        tick = tick.transition(context);
        line = line.transition(context);
        text21 = text21.transition(context);
        tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function(d9) {
          return isFinite(d9 = position2(d9)) ? transform3(d9 + offset) : this.getAttribute("transform");
        });
        tickEnter.attr("opacity", epsilon).attr("transform", function(d9) {
          var p2 = this.parentNode.__axis;
          return transform3((p2 && isFinite(p2 = p2(d9)) ? p2 : position2(d9)) + offset);
        });
      }
      tickExit.remove();
      path3.attr("d", orient === left2 || orient === right2 ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1);
      tick.attr("opacity", 1).attr("transform", function(d9) {
        return transform3(position2(d9) + offset);
      });
      line.attr(x30 + "2", k * tickSizeInner);
      text21.attr(x30, k * spacing).text(format2);
      selection2.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right2 ? "start" : orient === left2 ? "end" : "middle");
      selection2.each(function() {
        this.__axis = position2;
      });
    }
    axis2.scale = function(_) {
      return arguments.length ? (scale = _, axis2) : scale;
    };
    axis2.ticks = function() {
      return tickArguments = Array.from(arguments), axis2;
    };
    axis2.tickArguments = function(_) {
      return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis2) : tickArguments.slice();
    };
    axis2.tickValues = function(_) {
      return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis2) : tickValues && tickValues.slice();
    };
    axis2.tickFormat = function(_) {
      return arguments.length ? (tickFormat2 = _, axis2) : tickFormat2;
    };
    axis2.tickSize = function(_) {
      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis2) : tickSizeInner;
    };
    axis2.tickSizeInner = function(_) {
      return arguments.length ? (tickSizeInner = +_, axis2) : tickSizeInner;
    };
    axis2.tickSizeOuter = function(_) {
      return arguments.length ? (tickSizeOuter = +_, axis2) : tickSizeOuter;
    };
    axis2.tickPadding = function(_) {
      return arguments.length ? (tickPadding = +_, axis2) : tickPadding;
    };
    axis2.offset = function(_) {
      return arguments.length ? (offset = +_, axis2) : offset;
    };
    return axis2;
  }
  function axisBottom(scale) {
    return axis(bottom4, scale);
  }
  function axisLeft(scale) {
    return axis(left2, scale);
  }

  // node_modules/d3-dispatch/src/dispatch.js
  var noop = { value: () => {
  } };
  function dispatch() {
    for (var i2 = 0, n = arguments.length, _ = {}, t; i2 < n; ++i2) {
      if (!(t = arguments[i2] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
      _[t] = [];
    }
    return new Dispatch(_);
  }
  function Dispatch(_) {
    this._ = _;
  }
  function parseTypenames(typenames, types) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name16 = "", i2 = t.indexOf(".");
      if (i2 >= 0) name16 = t.slice(i2 + 1), t = t.slice(0, i2);
      if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
      return { type: t, name: name16 };
    });
  }
  Dispatch.prototype = dispatch.prototype = {
    constructor: Dispatch,
    on: function(typename, callback) {
      var _ = this._, T = parseTypenames(typename + "", _), t, i2 = -1, n = T.length;
      if (arguments.length < 2) {
        while (++i2 < n) if ((t = (typename = T[i2]).type) && (t = get5(_[t], typename.name))) return t;
        return;
      }
      if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
      while (++i2 < n) {
        if (t = (typename = T[i2]).type) _[t] = set3(_[t], typename.name, callback);
        else if (callback == null) for (t in _) _[t] = set3(_[t], typename.name, null);
      }
      return this;
    },
    copy: function() {
      var copy3 = {}, _ = this._;
      for (var t in _) copy3[t] = _[t].slice();
      return new Dispatch(copy3);
    },
    call: function(type2, that) {
      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i2 = 0, n, t; i2 < n; ++i2) args[i2] = arguments[i2 + 2];
      if (!this._.hasOwnProperty(type2)) throw new Error("unknown type: " + type2);
      for (t = this._[type2], i2 = 0, n = t.length; i2 < n; ++i2) t[i2].value.apply(that, args);
    },
    apply: function(type2, that, args) {
      if (!this._.hasOwnProperty(type2)) throw new Error("unknown type: " + type2);
      for (var t = this._[type2], i2 = 0, n = t.length; i2 < n; ++i2) t[i2].value.apply(that, args);
    }
  };
  function get5(type2, name16) {
    for (var i2 = 0, n = type2.length, c; i2 < n; ++i2) {
      if ((c = type2[i2]).name === name16) {
        return c.value;
      }
    }
  }
  function set3(type2, name16, callback) {
    for (var i2 = 0, n = type2.length; i2 < n; ++i2) {
      if (type2[i2].name === name16) {
        type2[i2] = noop, type2 = type2.slice(0, i2).concat(type2.slice(i2 + 1));
        break;
      }
    }
    if (callback != null) type2.push({ name: name16, value: callback });
    return type2;
  }
  var dispatch_default = dispatch;

  // node_modules/d3-selection/src/namespaces.js
  var xhtml = "http://www.w3.org/1999/xhtml";
  var namespaces_default = {
    svg: "http://www.w3.org/2000/svg",
    xhtml,
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };

  // node_modules/d3-selection/src/namespace.js
  function namespace_default(name16) {
    var prefix = name16 += "", i2 = prefix.indexOf(":");
    if (i2 >= 0 && (prefix = name16.slice(0, i2)) !== "xmlns") name16 = name16.slice(i2 + 1);
    return namespaces_default.hasOwnProperty(prefix) ? { space: namespaces_default[prefix], local: name16 } : name16;
  }

  // node_modules/d3-selection/src/creator.js
  function creatorInherit(name16) {
    return function() {
      var document3 = this.ownerDocument, uri = this.namespaceURI;
      return uri === xhtml && document3.documentElement.namespaceURI === xhtml ? document3.createElement(name16) : document3.createElementNS(uri, name16);
    };
  }
  function creatorFixed(fullname) {
    return function() {
      return this.ownerDocument.createElementNS(fullname.space, fullname.local);
    };
  }
  function creator_default(name16) {
    var fullname = namespace_default(name16);
    return (fullname.local ? creatorFixed : creatorInherit)(fullname);
  }

  // node_modules/d3-selection/src/selector.js
  function none2() {
  }
  function selector_default(selector) {
    return selector == null ? none2 : function() {
      return this.querySelector(selector);
    };
  }

  // node_modules/d3-selection/src/selection/select.js
  function select_default(select5) {
    if (typeof select5 !== "function") select5 = selector_default(select5);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, subgroup = subgroups[j] = new Array(n), node, subnode, i2 = 0; i2 < n; ++i2) {
        if ((node = group3[i2]) && (subnode = select5.call(node, node.__data__, i2, group3))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          subgroup[i2] = subnode;
        }
      }
    }
    return new Selection(subgroups, this._parents);
  }

  // node_modules/d3-selection/src/array.js
  function array(x30) {
    return x30 == null ? [] : Array.isArray(x30) ? x30 : Array.from(x30);
  }

  // node_modules/d3-selection/src/selectorAll.js
  function empty8() {
    return [];
  }
  function selectorAll_default(selector) {
    return selector == null ? empty8 : function() {
      return this.querySelectorAll(selector);
    };
  }

  // node_modules/d3-selection/src/selection/selectAll.js
  function arrayAll(select5) {
    return function() {
      return array(select5.apply(this, arguments));
    };
  }
  function selectAll_default(select5) {
    if (typeof select5 === "function") select5 = arrayAll(select5);
    else select5 = selectorAll_default(select5);
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, node, i2 = 0; i2 < n; ++i2) {
        if (node = group3[i2]) {
          subgroups.push(select5.call(node, node.__data__, i2, group3));
          parents.push(node);
        }
      }
    }
    return new Selection(subgroups, parents);
  }

  // node_modules/d3-selection/src/matcher.js
  function matcher_default(selector) {
    return function() {
      return this.matches(selector);
    };
  }
  function childMatcher(selector) {
    return function(node) {
      return node.matches(selector);
    };
  }

  // node_modules/d3-selection/src/selection/selectChild.js
  var find3 = Array.prototype.find;
  function childFind(match2) {
    return function() {
      return find3.call(this.children, match2);
    };
  }
  function childFirst() {
    return this.firstElementChild;
  }
  function selectChild_default(match2) {
    return this.select(match2 == null ? childFirst : childFind(typeof match2 === "function" ? match2 : childMatcher(match2)));
  }

  // node_modules/d3-selection/src/selection/selectChildren.js
  var filter4 = Array.prototype.filter;
  function children2() {
    return Array.from(this.children);
  }
  function childrenFilter(match2) {
    return function() {
      return filter4.call(this.children, match2);
    };
  }
  function selectChildren_default(match2) {
    return this.selectAll(match2 == null ? children2 : childrenFilter(typeof match2 === "function" ? match2 : childMatcher(match2)));
  }

  // node_modules/d3-selection/src/selection/filter.js
  function filter_default(match2) {
    if (typeof match2 !== "function") match2 = matcher_default(match2);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, subgroup = subgroups[j] = [], node, i2 = 0; i2 < n; ++i2) {
        if ((node = group3[i2]) && match2.call(node, node.__data__, i2, group3)) {
          subgroup.push(node);
        }
      }
    }
    return new Selection(subgroups, this._parents);
  }

  // node_modules/d3-selection/src/selection/sparse.js
  function sparse_default(update4) {
    return new Array(update4.length);
  }

  // node_modules/d3-selection/src/selection/enter.js
  function enter_default() {
    return new Selection(this._enter || this._groups.map(sparse_default), this._parents);
  }
  function EnterNode(parent2, datum2) {
    this.ownerDocument = parent2.ownerDocument;
    this.namespaceURI = parent2.namespaceURI;
    this._next = null;
    this._parent = parent2;
    this.__data__ = datum2;
  }
  EnterNode.prototype = {
    constructor: EnterNode,
    appendChild: function(child) {
      return this._parent.insertBefore(child, this._next);
    },
    insertBefore: function(child, next2) {
      return this._parent.insertBefore(child, next2);
    },
    querySelector: function(selector) {
      return this._parent.querySelector(selector);
    },
    querySelectorAll: function(selector) {
      return this._parent.querySelectorAll(selector);
    }
  };

  // node_modules/d3-selection/src/constant.js
  function constant_default(x30) {
    return function() {
      return x30;
    };
  }

  // node_modules/d3-selection/src/selection/data.js
  function bindIndex(parent2, group3, enter, update4, exit, data) {
    var i2 = 0, node, groupLength = group3.length, dataLength = data.length;
    for (; i2 < dataLength; ++i2) {
      if (node = group3[i2]) {
        node.__data__ = data[i2];
        update4[i2] = node;
      } else {
        enter[i2] = new EnterNode(parent2, data[i2]);
      }
    }
    for (; i2 < groupLength; ++i2) {
      if (node = group3[i2]) {
        exit[i2] = node;
      }
    }
  }
  function bindKey(parent2, group3, enter, update4, exit, data, key) {
    var i2, node, nodeByKeyValue = /* @__PURE__ */ new Map(), groupLength = group3.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;
    for (i2 = 0; i2 < groupLength; ++i2) {
      if (node = group3[i2]) {
        keyValues[i2] = keyValue = key.call(node, node.__data__, i2, group3) + "";
        if (nodeByKeyValue.has(keyValue)) {
          exit[i2] = node;
        } else {
          nodeByKeyValue.set(keyValue, node);
        }
      }
    }
    for (i2 = 0; i2 < dataLength; ++i2) {
      keyValue = key.call(parent2, data[i2], i2, data) + "";
      if (node = nodeByKeyValue.get(keyValue)) {
        update4[i2] = node;
        node.__data__ = data[i2];
        nodeByKeyValue.delete(keyValue);
      } else {
        enter[i2] = new EnterNode(parent2, data[i2]);
      }
    }
    for (i2 = 0; i2 < groupLength; ++i2) {
      if ((node = group3[i2]) && nodeByKeyValue.get(keyValues[i2]) === node) {
        exit[i2] = node;
      }
    }
  }
  function datum(node) {
    return node.__data__;
  }
  function data_default(value19, key) {
    if (!arguments.length) return Array.from(this, datum);
    var bind71 = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
    if (typeof value19 !== "function") value19 = constant_default(value19);
    for (var m = groups.length, update4 = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
      var parent2 = parents[j], group3 = groups[j], groupLength = group3.length, data = arraylike(value19.call(parent2, parent2 && parent2.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update4[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
      bind71(parent2, group3, enterGroup, updateGroup, exitGroup, data, key);
      for (var i0 = 0, i1 = 0, previous, next2; i0 < dataLength; ++i0) {
        if (previous = enterGroup[i0]) {
          if (i0 >= i1) i1 = i0 + 1;
          while (!(next2 = updateGroup[i1]) && ++i1 < dataLength) ;
          previous._next = next2 || null;
        }
      }
    }
    update4 = new Selection(update4, parents);
    update4._enter = enter;
    update4._exit = exit;
    return update4;
  }
  function arraylike(data) {
    return typeof data === "object" && "length" in data ? data : Array.from(data);
  }

  // node_modules/d3-selection/src/selection/exit.js
  function exit_default() {
    return new Selection(this._exit || this._groups.map(sparse_default), this._parents);
  }

  // node_modules/d3-selection/src/selection/join.js
  function join_default(onenter, onupdate, onexit) {
    var enter = this.enter(), update4 = this, exit = this.exit();
    if (typeof onenter === "function") {
      enter = onenter(enter);
      if (enter) enter = enter.selection();
    } else {
      enter = enter.append(onenter + "");
    }
    if (onupdate != null) {
      update4 = onupdate(update4);
      if (update4) update4 = update4.selection();
    }
    if (onexit == null) exit.remove();
    else onexit(exit);
    return enter && update4 ? enter.merge(update4).order() : update4;
  }

  // node_modules/d3-selection/src/selection/merge.js
  function merge_default(context) {
    var selection2 = context.selection ? context.selection() : context;
    for (var groups0 = this._groups, groups1 = selection2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i2 = 0; i2 < n; ++i2) {
        if (node = group0[i2] || group1[i2]) {
          merge[i2] = node;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Selection(merges, this._parents);
  }

  // node_modules/d3-selection/src/selection/order.js
  function order_default() {
    for (var groups = this._groups, j = -1, m = groups.length; ++j < m; ) {
      for (var group3 = groups[j], i2 = group3.length - 1, next2 = group3[i2], node; --i2 >= 0; ) {
        if (node = group3[i2]) {
          if (next2 && node.compareDocumentPosition(next2) ^ 4) next2.parentNode.insertBefore(node, next2);
          next2 = node;
        }
      }
    }
    return this;
  }

  // node_modules/d3-selection/src/selection/sort.js
  function sort_default(compare4) {
    if (!compare4) compare4 = ascending2;
    function compareNode(a2, b2) {
      return a2 && b2 ? compare4(a2.__data__, b2.__data__) : !a2 - !b2;
    }
    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, sortgroup = sortgroups[j] = new Array(n), node, i2 = 0; i2 < n; ++i2) {
        if (node = group3[i2]) {
          sortgroup[i2] = node;
        }
      }
      sortgroup.sort(compareNode);
    }
    return new Selection(sortgroups, this._parents).order();
  }
  function ascending2(a2, b2) {
    return a2 < b2 ? -1 : a2 > b2 ? 1 : a2 >= b2 ? 0 : NaN;
  }

  // node_modules/d3-selection/src/selection/call.js
  function call_default() {
    var callback = arguments[0];
    arguments[0] = this;
    callback.apply(null, arguments);
    return this;
  }

  // node_modules/d3-selection/src/selection/nodes.js
  function nodes_default() {
    return Array.from(this);
  }

  // node_modules/d3-selection/src/selection/node.js
  function node_default() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group3 = groups[j], i2 = 0, n = group3.length; i2 < n; ++i2) {
        var node = group3[i2];
        if (node) return node;
      }
    }
    return null;
  }

  // node_modules/d3-selection/src/selection/size.js
  function size_default() {
    let size5 = 0;
    for (const node of this) ++size5;
    return size5;
  }

  // node_modules/d3-selection/src/selection/empty.js
  function empty_default() {
    return !this.node();
  }

  // node_modules/d3-selection/src/selection/each.js
  function each_default(callback) {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group3 = groups[j], i2 = 0, n = group3.length, node; i2 < n; ++i2) {
        if (node = group3[i2]) callback.call(node, node.__data__, i2, group3);
      }
    }
    return this;
  }

  // node_modules/d3-selection/src/selection/attr.js
  function attrRemove(name16) {
    return function() {
      this.removeAttribute(name16);
    };
  }
  function attrRemoveNS(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant(name16, value19) {
    return function() {
      this.setAttribute(name16, value19);
    };
  }
  function attrConstantNS(fullname, value19) {
    return function() {
      this.setAttributeNS(fullname.space, fullname.local, value19);
    };
  }
  function attrFunction(name16, value19) {
    return function() {
      var v = value19.apply(this, arguments);
      if (v == null) this.removeAttribute(name16);
      else this.setAttribute(name16, v);
    };
  }
  function attrFunctionNS(fullname, value19) {
    return function() {
      var v = value19.apply(this, arguments);
      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
      else this.setAttributeNS(fullname.space, fullname.local, v);
    };
  }
  function attr_default(name16, value19) {
    var fullname = namespace_default(name16);
    if (arguments.length < 2) {
      var node = this.node();
      return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
    }
    return this.each((value19 == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value19 === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value19));
  }

  // node_modules/d3-selection/src/window.js
  function window_default(node) {
    return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
  }

  // node_modules/d3-selection/src/selection/style.js
  function styleRemove(name16) {
    return function() {
      this.style.removeProperty(name16);
    };
  }
  function styleConstant(name16, value19, priority) {
    return function() {
      this.style.setProperty(name16, value19, priority);
    };
  }
  function styleFunction(name16, value19, priority) {
    return function() {
      var v = value19.apply(this, arguments);
      if (v == null) this.style.removeProperty(name16);
      else this.style.setProperty(name16, v, priority);
    };
  }
  function style_default(name16, value19, priority) {
    return arguments.length > 1 ? this.each((value19 == null ? styleRemove : typeof value19 === "function" ? styleFunction : styleConstant)(name16, value19, priority == null ? "" : priority)) : styleValue(this.node(), name16);
  }
  function styleValue(node, name16) {
    return node.style.getPropertyValue(name16) || window_default(node).getComputedStyle(node, null).getPropertyValue(name16);
  }

  // node_modules/d3-selection/src/selection/property.js
  function propertyRemove(name16) {
    return function() {
      delete this[name16];
    };
  }
  function propertyConstant(name16, value19) {
    return function() {
      this[name16] = value19;
    };
  }
  function propertyFunction(name16, value19) {
    return function() {
      var v = value19.apply(this, arguments);
      if (v == null) delete this[name16];
      else this[name16] = v;
    };
  }
  function property_default(name16, value19) {
    return arguments.length > 1 ? this.each((value19 == null ? propertyRemove : typeof value19 === "function" ? propertyFunction : propertyConstant)(name16, value19)) : this.node()[name16];
  }

  // node_modules/d3-selection/src/selection/classed.js
  function classArray(string2) {
    return string2.trim().split(/^|\s+/);
  }
  function classList2(node) {
    return node.classList || new ClassList(node);
  }
  function ClassList(node) {
    this._node = node;
    this._names = classArray(node.getAttribute("class") || "");
  }
  ClassList.prototype = {
    add: function(name16) {
      var i2 = this._names.indexOf(name16);
      if (i2 < 0) {
        this._names.push(name16);
        this._node.setAttribute("class", this._names.join(" "));
      }
    },
    remove: function(name16) {
      var i2 = this._names.indexOf(name16);
      if (i2 >= 0) {
        this._names.splice(i2, 1);
        this._node.setAttribute("class", this._names.join(" "));
      }
    },
    contains: function(name16) {
      return this._names.indexOf(name16) >= 0;
    }
  };
  function classedAdd(node, names) {
    var list = classList2(node), i2 = -1, n = names.length;
    while (++i2 < n) list.add(names[i2]);
  }
  function classedRemove(node, names) {
    var list = classList2(node), i2 = -1, n = names.length;
    while (++i2 < n) list.remove(names[i2]);
  }
  function classedTrue(names) {
    return function() {
      classedAdd(this, names);
    };
  }
  function classedFalse(names) {
    return function() {
      classedRemove(this, names);
    };
  }
  function classedFunction(names, value19) {
    return function() {
      (value19.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
    };
  }
  function classed_default(name16, value19) {
    var names = classArray(name16 + "");
    if (arguments.length < 2) {
      var list = classList2(this.node()), i2 = -1, n = names.length;
      while (++i2 < n) if (!list.contains(names[i2])) return false;
      return true;
    }
    return this.each((typeof value19 === "function" ? classedFunction : value19 ? classedTrue : classedFalse)(names, value19));
  }

  // node_modules/d3-selection/src/selection/text.js
  function textRemove() {
    this.textContent = "";
  }
  function textConstant(value19) {
    return function() {
      this.textContent = value19;
    };
  }
  function textFunction(value19) {
    return function() {
      var v = value19.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    };
  }
  function text_default(value19) {
    return arguments.length ? this.each(value19 == null ? textRemove : (typeof value19 === "function" ? textFunction : textConstant)(value19)) : this.node().textContent;
  }

  // node_modules/d3-selection/src/selection/html.js
  function htmlRemove() {
    this.innerHTML = "";
  }
  function htmlConstant(value19) {
    return function() {
      this.innerHTML = value19;
    };
  }
  function htmlFunction(value19) {
    return function() {
      var v = value19.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    };
  }
  function html_default(value19) {
    return arguments.length ? this.each(value19 == null ? htmlRemove : (typeof value19 === "function" ? htmlFunction : htmlConstant)(value19)) : this.node().innerHTML;
  }

  // node_modules/d3-selection/src/selection/raise.js
  function raise2() {
    if (this.nextSibling) this.parentNode.appendChild(this);
  }
  function raise_default() {
    return this.each(raise2);
  }

  // node_modules/d3-selection/src/selection/lower.js
  function lower() {
    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
  }
  function lower_default() {
    return this.each(lower);
  }

  // node_modules/d3-selection/src/selection/append.js
  function append_default(name16) {
    var create5 = typeof name16 === "function" ? name16 : creator_default(name16);
    return this.select(function() {
      return this.appendChild(create5.apply(this, arguments));
    });
  }

  // node_modules/d3-selection/src/selection/insert.js
  function constantNull() {
    return null;
  }
  function insert_default(name16, before) {
    var create5 = typeof name16 === "function" ? name16 : creator_default(name16), select5 = before == null ? constantNull : typeof before === "function" ? before : selector_default(before);
    return this.select(function() {
      return this.insertBefore(create5.apply(this, arguments), select5.apply(this, arguments) || null);
    });
  }

  // node_modules/d3-selection/src/selection/remove.js
  function remove2() {
    var parent2 = this.parentNode;
    if (parent2) parent2.removeChild(this);
  }
  function remove_default() {
    return this.each(remove2);
  }

  // node_modules/d3-selection/src/selection/clone.js
  function selection_cloneShallow() {
    var clone2 = this.cloneNode(false), parent2 = this.parentNode;
    return parent2 ? parent2.insertBefore(clone2, this.nextSibling) : clone2;
  }
  function selection_cloneDeep() {
    var clone2 = this.cloneNode(true), parent2 = this.parentNode;
    return parent2 ? parent2.insertBefore(clone2, this.nextSibling) : clone2;
  }
  function clone_default(deep) {
    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
  }

  // node_modules/d3-selection/src/selection/datum.js
  function datum_default(value19) {
    return arguments.length ? this.property("__data__", value19) : this.node().__data__;
  }

  // node_modules/d3-selection/src/selection/on.js
  function contextListener(listener) {
    return function(event) {
      listener.call(this, event, this.__data__);
    };
  }
  function parseTypenames2(typenames) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name16 = "", i2 = t.indexOf(".");
      if (i2 >= 0) name16 = t.slice(i2 + 1), t = t.slice(0, i2);
      return { type: t, name: name16 };
    });
  }
  function onRemove(typename) {
    return function() {
      var on3 = this.__on;
      if (!on3) return;
      for (var j = 0, i2 = -1, m = on3.length, o; j < m; ++j) {
        if (o = on3[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
        } else {
          on3[++i2] = o;
        }
      }
      if (++i2) on3.length = i2;
      else delete this.__on;
    };
  }
  function onAdd(typename, value19, options2) {
    return function() {
      var on3 = this.__on, o, listener = contextListener(value19);
      if (on3) for (var j = 0, m = on3.length; j < m; ++j) {
        if ((o = on3[j]).type === typename.type && o.name === typename.name) {
          this.removeEventListener(o.type, o.listener, o.options);
          this.addEventListener(o.type, o.listener = listener, o.options = options2);
          o.value = value19;
          return;
        }
      }
      this.addEventListener(typename.type, listener, options2);
      o = { type: typename.type, name: typename.name, value: value19, listener, options: options2 };
      if (!on3) this.__on = [o];
      else on3.push(o);
    };
  }
  function on_default(typename, value19, options2) {
    var typenames = parseTypenames2(typename + ""), i2, n = typenames.length, t;
    if (arguments.length < 2) {
      var on3 = this.node().__on;
      if (on3) for (var j = 0, m = on3.length, o; j < m; ++j) {
        for (i2 = 0, o = on3[j]; i2 < n; ++i2) {
          if ((t = typenames[i2]).type === o.type && t.name === o.name) {
            return o.value;
          }
        }
      }
      return;
    }
    on3 = value19 ? onAdd : onRemove;
    for (i2 = 0; i2 < n; ++i2) this.each(on3(typenames[i2], value19, options2));
    return this;
  }

  // node_modules/d3-selection/src/selection/dispatch.js
  function dispatchEvent2(node, type2, params) {
    var window2 = window_default(node), event = window2.CustomEvent;
    if (typeof event === "function") {
      event = new event(type2, params);
    } else {
      event = window2.document.createEvent("Event");
      if (params) event.initEvent(type2, params.bubbles, params.cancelable), event.detail = params.detail;
      else event.initEvent(type2, false, false);
    }
    node.dispatchEvent(event);
  }
  function dispatchConstant(type2, params) {
    return function() {
      return dispatchEvent2(this, type2, params);
    };
  }
  function dispatchFunction(type2, params) {
    return function() {
      return dispatchEvent2(this, type2, params.apply(this, arguments));
    };
  }
  function dispatch_default2(type2, params) {
    return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type2, params));
  }

  // node_modules/d3-selection/src/selection/iterator.js
  function* iterator_default() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group3 = groups[j], i2 = 0, n = group3.length, node; i2 < n; ++i2) {
        if (node = group3[i2]) yield node;
      }
    }
  }

  // node_modules/d3-selection/src/selection/index.js
  var root = [null];
  function Selection(groups, parents) {
    this._groups = groups;
    this._parents = parents;
  }
  function selection() {
    return new Selection([[document.documentElement]], root);
  }
  function selection_selection() {
    return this;
  }
  Selection.prototype = selection.prototype = {
    constructor: Selection,
    select: select_default,
    selectAll: selectAll_default,
    selectChild: selectChild_default,
    selectChildren: selectChildren_default,
    filter: filter_default,
    data: data_default,
    enter: enter_default,
    exit: exit_default,
    join: join_default,
    merge: merge_default,
    selection: selection_selection,
    order: order_default,
    sort: sort_default,
    call: call_default,
    nodes: nodes_default,
    node: node_default,
    size: size_default,
    empty: empty_default,
    each: each_default,
    attr: attr_default,
    style: style_default,
    property: property_default,
    classed: classed_default,
    text: text_default,
    html: html_default,
    raise: raise_default,
    lower: lower_default,
    append: append_default,
    insert: insert_default,
    remove: remove_default,
    clone: clone_default,
    datum: datum_default,
    on: on_default,
    dispatch: dispatch_default2,
    [Symbol.iterator]: iterator_default
  };
  var selection_default = selection;

  // node_modules/d3-color/src/define.js
  function define_default(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
  }
  function extend2(parent2, definition) {
    var prototype = Object.create(parent2.prototype);
    for (var key in definition) prototype[key] = definition[key];
    return prototype;
  }

  // node_modules/d3-color/src/color.js
  function Color() {
  }
  var darker = 0.7;
  var brighter = 1 / darker;
  var reI = "\\s*([+-]?\\d+)\\s*";
  var reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var reHex = /^#([0-9a-f]{3,8})$/;
  var reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`);
  var reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`);
  var reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`);
  var reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`);
  var reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`);
  var reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
  var named = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  };
  define_default(Color, color, {
    copy(channels) {
      return Object.assign(new this.constructor(), this, channels);
    },
    displayable() {
      return this.rgb().displayable();
    },
    hex: color_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: color_formatHex,
    formatHex8: color_formatHex8,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
  });
  function color_formatHex() {
    return this.rgb().formatHex();
  }
  function color_formatHex8() {
    return this.rgb().formatHex8();
  }
  function color_formatHsl() {
    return hslConvert(this).formatHsl();
  }
  function color_formatRgb() {
    return this.rgb().formatRgb();
  }
  function color(format2) {
    var m, l;
    format2 = (format2 + "").trim().toLowerCase();
    return (m = reHex.exec(format2)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format2)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format2)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format2)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format2)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format2)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format2) ? rgbn(named[format2]) : format2 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
  }
  function rgbn(n) {
    return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
  }
  function rgba(r, g, b2, a2) {
    if (a2 <= 0) r = g = b2 = NaN;
    return new Rgb(r, g, b2, a2);
  }
  function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb();
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
  }
  function rgb(r, g, b2, opacity3) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b2, opacity3 == null ? 1 : opacity3);
  }
  function Rgb(r, g, b2, opacity3) {
    this.r = +r;
    this.g = +g;
    this.b = +b2;
    this.opacity = +opacity3;
  }
  define_default(Rgb, rgb, extend2(Color, {
    brighter(k) {
      k = k == null ? brighter : Math.pow(brighter, k);
      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    darker(k) {
      k = k == null ? darker : Math.pow(darker, k);
      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    rgb() {
      return this;
    },
    clamp() {
      return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
    },
    displayable() {
      return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
    },
    hex: rgb_formatHex,
    // Deprecated! Use color.formatHex.
    formatHex: rgb_formatHex,
    formatHex8: rgb_formatHex8,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
  }));
  function rgb_formatHex() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
  }
  function rgb_formatHex8() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
  }
  function rgb_formatRgb() {
    const a2 = clampa(this.opacity);
    return `${a2 === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a2 === 1 ? ")" : `, ${a2})`}`;
  }
  function clampa(opacity3) {
    return isNaN(opacity3) ? 1 : Math.max(0, Math.min(1, opacity3));
  }
  function clampi(value19) {
    return Math.max(0, Math.min(255, Math.round(value19) || 0));
  }
  function hex(value19) {
    value19 = clampi(value19);
    return (value19 < 16 ? "0" : "") + value19.toString(16);
  }
  function hsla(h, s, l, a2) {
    if (a2 <= 0) h = s = l = NaN;
    else if (l <= 0 || l >= 1) h = s = NaN;
    else if (s <= 0) h = NaN;
    return new Hsl(h, s, l, a2);
  }
  function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl();
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b2 = o.b / 255, min9 = Math.min(r, g, b2), max9 = Math.max(r, g, b2), h = NaN, s = max9 - min9, l = (max9 + min9) / 2;
    if (s) {
      if (r === max9) h = (g - b2) / s + (g < b2) * 6;
      else if (g === max9) h = (b2 - r) / s + 2;
      else h = (r - g) / s + 4;
      s /= l < 0.5 ? max9 + min9 : 2 - max9 - min9;
      h *= 60;
    } else {
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new Hsl(h, s, l, o.opacity);
  }
  function hsl(h, s, l, opacity3) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity3 == null ? 1 : opacity3);
  }
  function Hsl(h, s, l, opacity3) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity3;
  }
  define_default(Hsl, hsl, extend2(Color, {
    brighter(k) {
      k = k == null ? brighter : Math.pow(brighter, k);
      return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    darker(k) {
      k = k == null ? darker : Math.pow(darker, k);
      return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    rgb() {
      var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
      return new Rgb(
        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
        hsl2rgb(h, m1, m2),
        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
        this.opacity
      );
    },
    clamp() {
      return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
    },
    displayable() {
      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
    },
    formatHsl() {
      const a2 = clampa(this.opacity);
      return `${a2 === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a2 === 1 ? ")" : `, ${a2})`}`;
    }
  }));
  function clamph(value19) {
    value19 = (value19 || 0) % 360;
    return value19 < 0 ? value19 + 360 : value19;
  }
  function clampt(value19) {
    return Math.max(0, Math.min(1, value19 || 0));
  }
  function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
  }

  // node_modules/d3-interpolate/src/basis.js
  function basis(t1, v0, v1, v2, v3) {
    var t2 = t1 * t1, t3 = t2 * t1;
    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
  }
  function basis_default(values2) {
    var n = values2.length - 1;
    return function(t) {
      var i2 = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n), v1 = values2[i2], v2 = values2[i2 + 1], v0 = i2 > 0 ? values2[i2 - 1] : 2 * v1 - v2, v3 = i2 < n - 1 ? values2[i2 + 2] : 2 * v2 - v1;
      return basis((t - i2 / n) * n, v0, v1, v2, v3);
    };
  }

  // node_modules/d3-interpolate/src/basisClosed.js
  function basisClosed_default(values2) {
    var n = values2.length;
    return function(t) {
      var i2 = Math.floor(((t %= 1) < 0 ? ++t : t) * n), v0 = values2[(i2 + n - 1) % n], v1 = values2[i2 % n], v2 = values2[(i2 + 1) % n], v3 = values2[(i2 + 2) % n];
      return basis((t - i2 / n) * n, v0, v1, v2, v3);
    };
  }

  // node_modules/d3-interpolate/src/constant.js
  var constant_default2 = (x30) => () => x30;

  // node_modules/d3-interpolate/src/color.js
  function linear(a2, d9) {
    return function(t) {
      return a2 + t * d9;
    };
  }
  function exponential(a2, b2, y28) {
    return a2 = Math.pow(a2, y28), b2 = Math.pow(b2, y28) - a2, y28 = 1 / y28, function(t) {
      return Math.pow(a2 + t * b2, y28);
    };
  }
  function gamma(y28) {
    return (y28 = +y28) === 1 ? nogamma : function(a2, b2) {
      return b2 - a2 ? exponential(a2, b2, y28) : constant_default2(isNaN(a2) ? b2 : a2);
    };
  }
  function nogamma(a2, b2) {
    var d9 = b2 - a2;
    return d9 ? linear(a2, d9) : constant_default2(isNaN(a2) ? b2 : a2);
  }

  // node_modules/d3-interpolate/src/rgb.js
  var rgb_default = (function rgbGamma(y28) {
    var color2 = gamma(y28);
    function rgb2(start5, end2) {
      var r = color2((start5 = rgb(start5)).r, (end2 = rgb(end2)).r), g = color2(start5.g, end2.g), b2 = color2(start5.b, end2.b), opacity3 = nogamma(start5.opacity, end2.opacity);
      return function(t) {
        start5.r = r(t);
        start5.g = g(t);
        start5.b = b2(t);
        start5.opacity = opacity3(t);
        return start5 + "";
      };
    }
    rgb2.gamma = rgbGamma;
    return rgb2;
  })(1);
  function rgbSpline(spline) {
    return function(colors2) {
      var n = colors2.length, r = new Array(n), g = new Array(n), b2 = new Array(n), i2, color2;
      for (i2 = 0; i2 < n; ++i2) {
        color2 = rgb(colors2[i2]);
        r[i2] = color2.r || 0;
        g[i2] = color2.g || 0;
        b2[i2] = color2.b || 0;
      }
      r = spline(r);
      g = spline(g);
      b2 = spline(b2);
      color2.opacity = 1;
      return function(t) {
        color2.r = r(t);
        color2.g = g(t);
        color2.b = b2(t);
        return color2 + "";
      };
    };
  }
  var rgbBasis = rgbSpline(basis_default);
  var rgbBasisClosed = rgbSpline(basisClosed_default);

  // node_modules/d3-interpolate/src/numberArray.js
  function numberArray_default(a2, b2) {
    if (!b2) b2 = [];
    var n = a2 ? Math.min(b2.length, a2.length) : 0, c = b2.slice(), i2;
    return function(t) {
      for (i2 = 0; i2 < n; ++i2) c[i2] = a2[i2] * (1 - t) + b2[i2] * t;
      return c;
    };
  }
  function isNumberArray(x30) {
    return ArrayBuffer.isView(x30) && !(x30 instanceof DataView);
  }

  // node_modules/d3-interpolate/src/array.js
  function genericArray(a2, b2) {
    var nb = b2 ? b2.length : 0, na = a2 ? Math.min(nb, a2.length) : 0, x30 = new Array(na), c = new Array(nb), i2;
    for (i2 = 0; i2 < na; ++i2) x30[i2] = value_default(a2[i2], b2[i2]);
    for (; i2 < nb; ++i2) c[i2] = b2[i2];
    return function(t) {
      for (i2 = 0; i2 < na; ++i2) c[i2] = x30[i2](t);
      return c;
    };
  }

  // node_modules/d3-interpolate/src/date.js
  function date_default(a2, b2) {
    var d9 = /* @__PURE__ */ new Date();
    return a2 = +a2, b2 = +b2, function(t) {
      return d9.setTime(a2 * (1 - t) + b2 * t), d9;
    };
  }

  // node_modules/d3-interpolate/src/number.js
  function number_default(a2, b2) {
    return a2 = +a2, b2 = +b2, function(t) {
      return a2 * (1 - t) + b2 * t;
    };
  }

  // node_modules/d3-interpolate/src/object.js
  function object_default(a2, b2) {
    var i2 = {}, c = {}, k;
    if (a2 === null || typeof a2 !== "object") a2 = {};
    if (b2 === null || typeof b2 !== "object") b2 = {};
    for (k in b2) {
      if (k in a2) {
        i2[k] = value_default(a2[k], b2[k]);
      } else {
        c[k] = b2[k];
      }
    }
    return function(t) {
      for (k in i2) c[k] = i2[k](t);
      return c;
    };
  }

  // node_modules/d3-interpolate/src/string.js
  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var reB = new RegExp(reA.source, "g");
  function zero3(b2) {
    return function() {
      return b2;
    };
  }
  function one2(b2) {
    return function(t) {
      return b2(t) + "";
    };
  }
  function string_default(a2, b2) {
    var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i2 = -1, s = [], q2 = [];
    a2 = a2 + "", b2 = b2 + "";
    while ((am = reA.exec(a2)) && (bm = reB.exec(b2))) {
      if ((bs = bm.index) > bi) {
        bs = b2.slice(bi, bs);
        if (s[i2]) s[i2] += bs;
        else s[++i2] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i2]) s[i2] += bm;
        else s[++i2] = bm;
      } else {
        s[++i2] = null;
        q2.push({ i: i2, x: number_default(am, bm) });
      }
      bi = reB.lastIndex;
    }
    if (bi < b2.length) {
      bs = b2.slice(bi);
      if (s[i2]) s[i2] += bs;
      else s[++i2] = bs;
    }
    return s.length < 2 ? q2[0] ? one2(q2[0].x) : zero3(b2) : (b2 = q2.length, function(t) {
      for (var i3 = 0, o; i3 < b2; ++i3) s[(o = q2[i3]).i] = o.x(t);
      return s.join("");
    });
  }

  // node_modules/d3-interpolate/src/value.js
  function value_default(a2, b2) {
    var t = typeof b2, c;
    return b2 == null || t === "boolean" ? constant_default2(b2) : (t === "number" ? number_default : t === "string" ? (c = color(b2)) ? (b2 = c, rgb_default) : string_default : b2 instanceof color ? rgb_default : b2 instanceof Date ? date_default : isNumberArray(b2) ? numberArray_default : Array.isArray(b2) ? genericArray : typeof b2.valueOf !== "function" && typeof b2.toString !== "function" || isNaN(b2) ? object_default : number_default)(a2, b2);
  }

  // node_modules/d3-interpolate/src/round.js
  function round_default(a2, b2) {
    return a2 = +a2, b2 = +b2, function(t) {
      return Math.round(a2 * (1 - t) + b2 * t);
    };
  }

  // node_modules/d3-interpolate/src/transform/decompose.js
  var degrees = 180 / Math.PI;
  var identity13 = {
    translateX: 0,
    translateY: 0,
    rotate: 0,
    skewX: 0,
    scaleX: 1,
    scaleY: 1
  };
  function decompose_default(a2, b2, c, d9, e, f) {
    var scaleX2, scaleY2, skewX;
    if (scaleX2 = Math.sqrt(a2 * a2 + b2 * b2)) a2 /= scaleX2, b2 /= scaleX2;
    if (skewX = a2 * c + b2 * d9) c -= a2 * skewX, d9 -= b2 * skewX;
    if (scaleY2 = Math.sqrt(c * c + d9 * d9)) c /= scaleY2, d9 /= scaleY2, skewX /= scaleY2;
    if (a2 * d9 < b2 * c) a2 = -a2, b2 = -b2, skewX = -skewX, scaleX2 = -scaleX2;
    return {
      translateX: e,
      translateY: f,
      rotate: Math.atan2(b2, a2) * degrees,
      skewX: Math.atan(skewX) * degrees,
      scaleX: scaleX2,
      scaleY: scaleY2
    };
  }

  // node_modules/d3-interpolate/src/transform/parse.js
  var svgNode;
  function parseCss(value19) {
    const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value19 + "");
    return m.isIdentity ? identity13 : decompose_default(m.a, m.b, m.c, m.d, m.e, m.f);
  }
  function parseSvg(value19) {
    if (value19 == null) return identity13;
    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
    svgNode.setAttribute("transform", value19);
    if (!(value19 = svgNode.transform.baseVal.consolidate())) return identity13;
    value19 = value19.matrix;
    return decompose_default(value19.a, value19.b, value19.c, value19.d, value19.e, value19.f);
  }

  // node_modules/d3-interpolate/src/transform/index.js
  function interpolateTransform(parse8, pxComma, pxParen, degParen) {
    function pop4(s) {
      return s.length ? s.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s, q2) {
      if (xa !== xb || ya !== yb) {
        var i2 = s.push("translate(", null, pxComma, null, pxParen);
        q2.push({ i: i2 - 4, x: number_default(xa, xb) }, { i: i2 - 2, x: number_default(ya, yb) });
      } else if (xb || yb) {
        s.push("translate(" + xb + pxComma + yb + pxParen);
      }
    }
    function rotate(a2, b2, s, q2) {
      if (a2 !== b2) {
        if (a2 - b2 > 180) b2 += 360;
        else if (b2 - a2 > 180) a2 += 360;
        q2.push({ i: s.push(pop4(s) + "rotate(", null, degParen) - 2, x: number_default(a2, b2) });
      } else if (b2) {
        s.push(pop4(s) + "rotate(" + b2 + degParen);
      }
    }
    function skewX(a2, b2, s, q2) {
      if (a2 !== b2) {
        q2.push({ i: s.push(pop4(s) + "skewX(", null, degParen) - 2, x: number_default(a2, b2) });
      } else if (b2) {
        s.push(pop4(s) + "skewX(" + b2 + degParen);
      }
    }
    function scale(xa, ya, xb, yb, s, q2) {
      if (xa !== xb || ya !== yb) {
        var i2 = s.push(pop4(s) + "scale(", null, ",", null, ")");
        q2.push({ i: i2 - 4, x: number_default(xa, xb) }, { i: i2 - 2, x: number_default(ya, yb) });
      } else if (xb !== 1 || yb !== 1) {
        s.push(pop4(s) + "scale(" + xb + "," + yb + ")");
      }
    }
    return function(a2, b2) {
      var s = [], q2 = [];
      a2 = parse8(a2), b2 = parse8(b2);
      translate(a2.translateX, a2.translateY, b2.translateX, b2.translateY, s, q2);
      rotate(a2.rotate, b2.rotate, s, q2);
      skewX(a2.skewX, b2.skewX, s, q2);
      scale(a2.scaleX, a2.scaleY, b2.scaleX, b2.scaleY, s, q2);
      a2 = b2 = null;
      return function(t) {
        var i2 = -1, n = q2.length, o;
        while (++i2 < n) s[(o = q2[i2]).i] = o.x(t);
        return s.join("");
      };
    };
  }
  var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
  var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

  // node_modules/d3-timer/src/timer.js
  var frame = 0;
  var timeout = 0;
  var interval = 0;
  var pokeDelay = 1e3;
  var taskHead;
  var taskTail;
  var clockLast = 0;
  var clockNow = 0;
  var clockSkew = 0;
  var clock = typeof performance === "object" && performance.now ? performance : Date;
  var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
    setTimeout(f, 17);
  };
  function now2() {
    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
  }
  function clearNow() {
    clockNow = 0;
  }
  function Timer() {
    this._call = this._time = this._next = null;
  }
  Timer.prototype = timer.prototype = {
    constructor: Timer,
    restart: function(callback, delay2, time3) {
      if (typeof callback !== "function") throw new TypeError("callback is not a function");
      time3 = (time3 == null ? now2() : +time3) + (delay2 == null ? 0 : +delay2);
      if (!this._next && taskTail !== this) {
        if (taskTail) taskTail._next = this;
        else taskHead = this;
        taskTail = this;
      }
      this._call = callback;
      this._time = time3;
      sleep();
    },
    stop: function() {
      if (this._call) {
        this._call = null;
        this._time = Infinity;
        sleep();
      }
    }
  };
  function timer(callback, delay2, time3) {
    var t = new Timer();
    t.restart(callback, delay2, time3);
    return t;
  }
  function timerFlush() {
    now2();
    ++frame;
    var t = taskHead, e;
    while (t) {
      if ((e = clockNow - t._time) >= 0) t._call.call(void 0, e);
      t = t._next;
    }
    --frame;
  }
  function wake() {
    clockNow = (clockLast = clock.now()) + clockSkew;
    frame = timeout = 0;
    try {
      timerFlush();
    } finally {
      frame = 0;
      nap();
      clockNow = 0;
    }
  }
  function poke3() {
    var now3 = clock.now(), delay2 = now3 - clockLast;
    if (delay2 > pokeDelay) clockSkew -= delay2, clockLast = now3;
  }
  function nap() {
    var t0, t1 = taskHead, t2, time3 = Infinity;
    while (t1) {
      if (t1._call) {
        if (time3 > t1._time) time3 = t1._time;
        t0 = t1, t1 = t1._next;
      } else {
        t2 = t1._next, t1._next = null;
        t1 = t0 ? t0._next = t2 : taskHead = t2;
      }
    }
    taskTail = t0;
    sleep(time3);
  }
  function sleep(time3) {
    if (frame) return;
    if (timeout) timeout = clearTimeout(timeout);
    var delay2 = time3 - clockNow;
    if (delay2 > 24) {
      if (time3 < Infinity) timeout = setTimeout(wake, time3 - clock.now() - clockSkew);
      if (interval) interval = clearInterval(interval);
    } else {
      if (!interval) clockLast = clock.now(), interval = setInterval(poke3, pokeDelay);
      frame = 1, setFrame(wake);
    }
  }

  // node_modules/d3-timer/src/timeout.js
  function timeout_default(callback, delay2, time3) {
    var t = new Timer();
    delay2 = delay2 == null ? 0 : +delay2;
    t.restart((elapsed) => {
      t.stop();
      callback(elapsed + delay2);
    }, delay2, time3);
    return t;
  }

  // node_modules/d3-transition/src/transition/schedule.js
  var emptyOn = dispatch_default("start", "end", "cancel", "interrupt");
  var emptyTween = [];
  var CREATED = 0;
  var SCHEDULED = 1;
  var STARTING = 2;
  var STARTED = 3;
  var RUNNING = 4;
  var ENDING = 5;
  var ENDED = 6;
  function schedule_default(node, name16, id5, index5, group3, timing) {
    var schedules = node.__transition;
    if (!schedules) node.__transition = {};
    else if (id5 in schedules) return;
    create4(node, id5, {
      name: name16,
      index: index5,
      // For context during callback.
      group: group3,
      // For context during callback.
      on: emptyOn,
      tween: emptyTween,
      time: timing.time,
      delay: timing.delay,
      duration: timing.duration,
      ease: timing.ease,
      timer: null,
      state: CREATED
    });
  }
  function init4(node, id5) {
    var schedule = get6(node, id5);
    if (schedule.state > CREATED) throw new Error("too late; already scheduled");
    return schedule;
  }
  function set4(node, id5) {
    var schedule = get6(node, id5);
    if (schedule.state > STARTED) throw new Error("too late; already running");
    return schedule;
  }
  function get6(node, id5) {
    var schedule = node.__transition;
    if (!schedule || !(schedule = schedule[id5])) throw new Error("transition not found");
    return schedule;
  }
  function create4(node, id5, self) {
    var schedules = node.__transition, tween;
    schedules[id5] = self;
    self.timer = timer(schedule, 0, self.time);
    function schedule(elapsed) {
      self.state = SCHEDULED;
      self.timer.restart(start5, self.delay, self.time);
      if (self.delay <= elapsed) start5(elapsed - self.delay);
    }
    function start5(elapsed) {
      var i2, j, n, o;
      if (self.state !== SCHEDULED) return stop3();
      for (i2 in schedules) {
        o = schedules[i2];
        if (o.name !== self.name) continue;
        if (o.state === STARTED) return timeout_default(start5);
        if (o.state === RUNNING) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("interrupt", node, node.__data__, o.index, o.group);
          delete schedules[i2];
        } else if (+i2 < id5) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i2];
        }
      }
      timeout_default(function() {
        if (self.state === STARTED) {
          self.state = RUNNING;
          self.timer.restart(tick, self.delay, self.time);
          tick(elapsed);
        }
      });
      self.state = STARTING;
      self.on.call("start", node, node.__data__, self.index, self.group);
      if (self.state !== STARTING) return;
      self.state = STARTED;
      tween = new Array(n = self.tween.length);
      for (i2 = 0, j = -1; i2 < n; ++i2) {
        if (o = self.tween[i2].value.call(node, node.__data__, self.index, self.group)) {
          tween[++j] = o;
        }
      }
      tween.length = j + 1;
    }
    function tick(elapsed) {
      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop3), self.state = ENDING, 1), i2 = -1, n = tween.length;
      while (++i2 < n) {
        tween[i2].call(node, t);
      }
      if (self.state === ENDING) {
        self.on.call("end", node, node.__data__, self.index, self.group);
        stop3();
      }
    }
    function stop3() {
      self.state = ENDED;
      self.timer.stop();
      delete schedules[id5];
      for (var i2 in schedules) return;
      delete node.__transition;
    }
  }

  // node_modules/d3-transition/src/interrupt.js
  function interrupt_default(node, name16) {
    var schedules = node.__transition, schedule, active, empty9 = true, i2;
    if (!schedules) return;
    name16 = name16 == null ? null : name16 + "";
    for (i2 in schedules) {
      if ((schedule = schedules[i2]).name !== name16) {
        empty9 = false;
        continue;
      }
      active = schedule.state > STARTING && schedule.state < ENDING;
      schedule.state = ENDED;
      schedule.timer.stop();
      schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
      delete schedules[i2];
    }
    if (empty9) delete node.__transition;
  }

  // node_modules/d3-transition/src/selection/interrupt.js
  function interrupt_default2(name16) {
    return this.each(function() {
      interrupt_default(this, name16);
    });
  }

  // node_modules/d3-transition/src/transition/tween.js
  function tweenRemove(id5, name16) {
    var tween0, tween1;
    return function() {
      var schedule = set4(this, id5), tween = schedule.tween;
      if (tween !== tween0) {
        tween1 = tween0 = tween;
        for (var i2 = 0, n = tween1.length; i2 < n; ++i2) {
          if (tween1[i2].name === name16) {
            tween1 = tween1.slice();
            tween1.splice(i2, 1);
            break;
          }
        }
      }
      schedule.tween = tween1;
    };
  }
  function tweenFunction(id5, name16, value19) {
    var tween0, tween1;
    if (typeof value19 !== "function") throw new Error();
    return function() {
      var schedule = set4(this, id5), tween = schedule.tween;
      if (tween !== tween0) {
        tween1 = (tween0 = tween).slice();
        for (var t = { name: name16, value: value19 }, i2 = 0, n = tween1.length; i2 < n; ++i2) {
          if (tween1[i2].name === name16) {
            tween1[i2] = t;
            break;
          }
        }
        if (i2 === n) tween1.push(t);
      }
      schedule.tween = tween1;
    };
  }
  function tween_default(name16, value19) {
    var id5 = this._id;
    name16 += "";
    if (arguments.length < 2) {
      var tween = get6(this.node(), id5).tween;
      for (var i2 = 0, n = tween.length, t; i2 < n; ++i2) {
        if ((t = tween[i2]).name === name16) {
          return t.value;
        }
      }
      return null;
    }
    return this.each((value19 == null ? tweenRemove : tweenFunction)(id5, name16, value19));
  }
  function tweenValue(transition2, name16, value19) {
    var id5 = transition2._id;
    transition2.each(function() {
      var schedule = set4(this, id5);
      (schedule.value || (schedule.value = {}))[name16] = value19.apply(this, arguments);
    });
    return function(node) {
      return get6(node, id5).value[name16];
    };
  }

  // node_modules/d3-transition/src/transition/interpolate.js
  function interpolate_default(a2, b2) {
    var c;
    return (typeof b2 === "number" ? number_default : b2 instanceof color ? rgb_default : (c = color(b2)) ? (b2 = c, rgb_default) : string_default)(a2, b2);
  }

  // node_modules/d3-transition/src/transition/attr.js
  function attrRemove2(name16) {
    return function() {
      this.removeAttribute(name16);
    };
  }
  function attrRemoveNS2(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant2(name16, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = this.getAttribute(name16);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function attrConstantNS2(fullname, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = this.getAttributeNS(fullname.space, fullname.local);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function attrFunction2(name16, interpolate, value19) {
    var string00, string10, interpolate0;
    return function() {
      var string0, value1 = value19(this), string1;
      if (value1 == null) return void this.removeAttribute(name16);
      string0 = this.getAttribute(name16);
      string1 = value1 + "";
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function attrFunctionNS2(fullname, interpolate, value19) {
    var string00, string10, interpolate0;
    return function() {
      var string0, value1 = value19(this), string1;
      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
      string0 = this.getAttributeNS(fullname.space, fullname.local);
      string1 = value1 + "";
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function attr_default2(name16, value19) {
    var fullname = namespace_default(name16), i2 = fullname === "transform" ? interpolateTransformSvg : interpolate_default;
    return this.attrTween(name16, typeof value19 === "function" ? (fullname.local ? attrFunctionNS2 : attrFunction2)(fullname, i2, tweenValue(this, "attr." + name16, value19)) : value19 == null ? (fullname.local ? attrRemoveNS2 : attrRemove2)(fullname) : (fullname.local ? attrConstantNS2 : attrConstant2)(fullname, i2, value19));
  }

  // node_modules/d3-transition/src/transition/attrTween.js
  function attrInterpolate(name16, i2) {
    return function(t) {
      this.setAttribute(name16, i2.call(this, t));
    };
  }
  function attrInterpolateNS(fullname, i2) {
    return function(t) {
      this.setAttributeNS(fullname.space, fullname.local, i2.call(this, t));
    };
  }
  function attrTweenNS(fullname, value19) {
    var t0, i0;
    function tween() {
      var i2 = value19.apply(this, arguments);
      if (i2 !== i0) t0 = (i0 = i2) && attrInterpolateNS(fullname, i2);
      return t0;
    }
    tween._value = value19;
    return tween;
  }
  function attrTween(name16, value19) {
    var t0, i0;
    function tween() {
      var i2 = value19.apply(this, arguments);
      if (i2 !== i0) t0 = (i0 = i2) && attrInterpolate(name16, i2);
      return t0;
    }
    tween._value = value19;
    return tween;
  }
  function attrTween_default(name16, value19) {
    var key = "attr." + name16;
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value19 == null) return this.tween(key, null);
    if (typeof value19 !== "function") throw new Error();
    var fullname = namespace_default(name16);
    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value19));
  }

  // node_modules/d3-transition/src/transition/delay.js
  function delayFunction(id5, value19) {
    return function() {
      init4(this, id5).delay = +value19.apply(this, arguments);
    };
  }
  function delayConstant(id5, value19) {
    return value19 = +value19, function() {
      init4(this, id5).delay = value19;
    };
  }
  function delay_default(value19) {
    var id5 = this._id;
    return arguments.length ? this.each((typeof value19 === "function" ? delayFunction : delayConstant)(id5, value19)) : get6(this.node(), id5).delay;
  }

  // node_modules/d3-transition/src/transition/duration.js
  function durationFunction(id5, value19) {
    return function() {
      set4(this, id5).duration = +value19.apply(this, arguments);
    };
  }
  function durationConstant(id5, value19) {
    return value19 = +value19, function() {
      set4(this, id5).duration = value19;
    };
  }
  function duration_default(value19) {
    var id5 = this._id;
    return arguments.length ? this.each((typeof value19 === "function" ? durationFunction : durationConstant)(id5, value19)) : get6(this.node(), id5).duration;
  }

  // node_modules/d3-transition/src/transition/ease.js
  function easeConstant(id5, value19) {
    if (typeof value19 !== "function") throw new Error();
    return function() {
      set4(this, id5).ease = value19;
    };
  }
  function ease_default(value19) {
    var id5 = this._id;
    return arguments.length ? this.each(easeConstant(id5, value19)) : get6(this.node(), id5).ease;
  }

  // node_modules/d3-transition/src/transition/easeVarying.js
  function easeVarying(id5, value19) {
    return function() {
      var v = value19.apply(this, arguments);
      if (typeof v !== "function") throw new Error();
      set4(this, id5).ease = v;
    };
  }
  function easeVarying_default(value19) {
    if (typeof value19 !== "function") throw new Error();
    return this.each(easeVarying(this._id, value19));
  }

  // node_modules/d3-transition/src/transition/filter.js
  function filter_default2(match2) {
    if (typeof match2 !== "function") match2 = matcher_default(match2);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, subgroup = subgroups[j] = [], node, i2 = 0; i2 < n; ++i2) {
        if ((node = group3[i2]) && match2.call(node, node.__data__, i2, group3)) {
          subgroup.push(node);
        }
      }
    }
    return new Transition(subgroups, this._parents, this._name, this._id);
  }

  // node_modules/d3-transition/src/transition/merge.js
  function merge_default2(transition2) {
    if (transition2._id !== this._id) throw new Error();
    for (var groups0 = this._groups, groups1 = transition2._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i2 = 0; i2 < n; ++i2) {
        if (node = group0[i2] || group1[i2]) {
          merge[i2] = node;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Transition(merges, this._parents, this._name, this._id);
  }

  // node_modules/d3-transition/src/transition/on.js
  function start3(name16) {
    return (name16 + "").trim().split(/^|\s+/).every(function(t) {
      var i2 = t.indexOf(".");
      if (i2 >= 0) t = t.slice(0, i2);
      return !t || t === "start";
    });
  }
  function onFunction(id5, name16, listener) {
    var on0, on1, sit = start3(name16) ? init4 : set4;
    return function() {
      var schedule = sit(this, id5), on3 = schedule.on;
      if (on3 !== on0) (on1 = (on0 = on3).copy()).on(name16, listener);
      schedule.on = on1;
    };
  }
  function on_default2(name16, listener) {
    var id5 = this._id;
    return arguments.length < 2 ? get6(this.node(), id5).on.on(name16) : this.each(onFunction(id5, name16, listener));
  }

  // node_modules/d3-transition/src/transition/remove.js
  function removeFunction(id5) {
    return function() {
      var parent2 = this.parentNode;
      for (var i2 in this.__transition) if (+i2 !== id5) return;
      if (parent2) parent2.removeChild(this);
    };
  }
  function remove_default2() {
    return this.on("end.remove", removeFunction(this._id));
  }

  // node_modules/d3-transition/src/transition/select.js
  function select_default2(select5) {
    var name16 = this._name, id5 = this._id;
    if (typeof select5 !== "function") select5 = selector_default(select5);
    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, subgroup = subgroups[j] = new Array(n), node, subnode, i2 = 0; i2 < n; ++i2) {
        if ((node = group3[i2]) && (subnode = select5.call(node, node.__data__, i2, group3))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          subgroup[i2] = subnode;
          schedule_default(subgroup[i2], name16, id5, i2, subgroup, get6(node, id5));
        }
      }
    }
    return new Transition(subgroups, this._parents, name16, id5);
  }

  // node_modules/d3-transition/src/transition/selectAll.js
  function selectAll_default2(select5) {
    var name16 = this._name, id5 = this._id;
    if (typeof select5 !== "function") select5 = selectorAll_default(select5);
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, node, i2 = 0; i2 < n; ++i2) {
        if (node = group3[i2]) {
          for (var children3 = select5.call(node, node.__data__, i2, group3), child, inherit2 = get6(node, id5), k = 0, l = children3.length; k < l; ++k) {
            if (child = children3[k]) {
              schedule_default(child, name16, id5, k, children3, inherit2);
            }
          }
          subgroups.push(children3);
          parents.push(node);
        }
      }
    }
    return new Transition(subgroups, parents, name16, id5);
  }

  // node_modules/d3-transition/src/transition/selection.js
  var Selection2 = selection_default.prototype.constructor;
  function selection_default2() {
    return new Selection2(this._groups, this._parents);
  }

  // node_modules/d3-transition/src/transition/style.js
  function styleNull(name16, interpolate) {
    var string00, string10, interpolate0;
    return function() {
      var string0 = styleValue(this, name16), string1 = (this.style.removeProperty(name16), styleValue(this, name16));
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
    };
  }
  function styleRemove2(name16) {
    return function() {
      this.style.removeProperty(name16);
    };
  }
  function styleConstant2(name16, interpolate, value1) {
    var string00, string1 = value1 + "", interpolate0;
    return function() {
      var string0 = styleValue(this, name16);
      return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
    };
  }
  function styleFunction2(name16, interpolate, value19) {
    var string00, string10, interpolate0;
    return function() {
      var string0 = styleValue(this, name16), value1 = value19(this), string1 = value1 + "";
      if (value1 == null) string1 = value1 = (this.style.removeProperty(name16), styleValue(this, name16));
      return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
    };
  }
  function styleMaybeRemove(id5, name16) {
    var on0, on1, listener0, key = "style." + name16, event = "end." + key, remove3;
    return function() {
      var schedule = set4(this, id5), on3 = schedule.on, listener = schedule.value[key] == null ? remove3 || (remove3 = styleRemove2(name16)) : void 0;
      if (on3 !== on0 || listener0 !== listener) (on1 = (on0 = on3).copy()).on(event, listener0 = listener);
      schedule.on = on1;
    };
  }
  function style_default2(name16, value19, priority) {
    var i2 = (name16 += "") === "transform" ? interpolateTransformCss : interpolate_default;
    return value19 == null ? this.styleTween(name16, styleNull(name16, i2)).on("end.style." + name16, styleRemove2(name16)) : typeof value19 === "function" ? this.styleTween(name16, styleFunction2(name16, i2, tweenValue(this, "style." + name16, value19))).each(styleMaybeRemove(this._id, name16)) : this.styleTween(name16, styleConstant2(name16, i2, value19), priority).on("end.style." + name16, null);
  }

  // node_modules/d3-transition/src/transition/styleTween.js
  function styleInterpolate(name16, i2, priority) {
    return function(t) {
      this.style.setProperty(name16, i2.call(this, t), priority);
    };
  }
  function styleTween(name16, value19, priority) {
    var t, i0;
    function tween() {
      var i2 = value19.apply(this, arguments);
      if (i2 !== i0) t = (i0 = i2) && styleInterpolate(name16, i2, priority);
      return t;
    }
    tween._value = value19;
    return tween;
  }
  function styleTween_default(name16, value19, priority) {
    var key = "style." + (name16 += "");
    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
    if (value19 == null) return this.tween(key, null);
    if (typeof value19 !== "function") throw new Error();
    return this.tween(key, styleTween(name16, value19, priority == null ? "" : priority));
  }

  // node_modules/d3-transition/src/transition/text.js
  function textConstant2(value19) {
    return function() {
      this.textContent = value19;
    };
  }
  function textFunction2(value19) {
    return function() {
      var value1 = value19(this);
      this.textContent = value1 == null ? "" : value1;
    };
  }
  function text_default2(value19) {
    return this.tween("text", typeof value19 === "function" ? textFunction2(tweenValue(this, "text", value19)) : textConstant2(value19 == null ? "" : value19 + ""));
  }

  // node_modules/d3-transition/src/transition/textTween.js
  function textInterpolate(i2) {
    return function(t) {
      this.textContent = i2.call(this, t);
    };
  }
  function textTween(value19) {
    var t0, i0;
    function tween() {
      var i2 = value19.apply(this, arguments);
      if (i2 !== i0) t0 = (i0 = i2) && textInterpolate(i2);
      return t0;
    }
    tween._value = value19;
    return tween;
  }
  function textTween_default(value19) {
    var key = "text";
    if (arguments.length < 1) return (key = this.tween(key)) && key._value;
    if (value19 == null) return this.tween(key, null);
    if (typeof value19 !== "function") throw new Error();
    return this.tween(key, textTween(value19));
  }

  // node_modules/d3-transition/src/transition/transition.js
  function transition_default() {
    var name16 = this._name, id0 = this._id, id1 = newId();
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, node, i2 = 0; i2 < n; ++i2) {
        if (node = group3[i2]) {
          var inherit2 = get6(node, id0);
          schedule_default(node, name16, id1, i2, group3, {
            time: inherit2.time + inherit2.delay + inherit2.duration,
            delay: 0,
            duration: inherit2.duration,
            ease: inherit2.ease
          });
        }
      }
    }
    return new Transition(groups, this._parents, name16, id1);
  }

  // node_modules/d3-transition/src/transition/end.js
  function end_default() {
    var on0, on1, that = this, id5 = that._id, size5 = that.size();
    return new Promise(function(resolve, reject) {
      var cancel = { value: reject }, end2 = { value: function() {
        if (--size5 === 0) resolve();
      } };
      that.each(function() {
        var schedule = set4(this, id5), on3 = schedule.on;
        if (on3 !== on0) {
          on1 = (on0 = on3).copy();
          on1._.cancel.push(cancel);
          on1._.interrupt.push(cancel);
          on1._.end.push(end2);
        }
        schedule.on = on1;
      });
      if (size5 === 0) resolve();
    });
  }

  // node_modules/d3-transition/src/transition/index.js
  var id4 = 0;
  function Transition(groups, parents, name16, id5) {
    this._groups = groups;
    this._parents = parents;
    this._name = name16;
    this._id = id5;
  }
  function transition(name16) {
    return selection_default().transition(name16);
  }
  function newId() {
    return ++id4;
  }
  var selection_prototype = selection_default.prototype;
  Transition.prototype = transition.prototype = {
    constructor: Transition,
    select: select_default2,
    selectAll: selectAll_default2,
    selectChild: selection_prototype.selectChild,
    selectChildren: selection_prototype.selectChildren,
    filter: filter_default2,
    merge: merge_default2,
    selection: selection_default2,
    transition: transition_default,
    call: selection_prototype.call,
    nodes: selection_prototype.nodes,
    node: selection_prototype.node,
    size: selection_prototype.size,
    empty: selection_prototype.empty,
    each: selection_prototype.each,
    on: on_default2,
    attr: attr_default2,
    attrTween: attrTween_default,
    style: style_default2,
    styleTween: styleTween_default,
    text: text_default2,
    textTween: textTween_default,
    remove: remove_default2,
    tween: tween_default,
    delay: delay_default,
    duration: duration_default,
    ease: ease_default,
    easeVarying: easeVarying_default,
    end: end_default,
    [Symbol.iterator]: selection_prototype[Symbol.iterator]
  };

  // node_modules/d3-ease/src/cubic.js
  function cubicInOut(t) {
    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
  }

  // node_modules/d3-transition/src/selection/transition.js
  var defaultTiming = {
    time: null,
    // Set on use.
    delay: 0,
    duration: 250,
    ease: cubicInOut
  };
  function inherit(node, id5) {
    var timing;
    while (!(timing = node.__transition) || !(timing = timing[id5])) {
      if (!(node = node.parentNode)) {
        throw new Error(`transition ${id5} not found`);
      }
    }
    return timing;
  }
  function transition_default2(name16) {
    var id5, timing;
    if (name16 instanceof Transition) {
      id5 = name16._id, name16 = name16._name;
    } else {
      id5 = newId(), (timing = defaultTiming).time = now2(), name16 = name16 == null ? null : name16 + "";
    }
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group3 = groups[j], n = group3.length, node, i2 = 0; i2 < n; ++i2) {
        if (node = group3[i2]) {
          schedule_default(node, name16, id5, i2, group3, timing || inherit(node, id5));
        }
      }
    }
    return new Transition(groups, this._parents, name16, id5);
  }

  // node_modules/d3-transition/src/selection/index.js
  selection_default.prototype.interrupt = interrupt_default2;
  selection_default.prototype.transition = transition_default2;

  // node_modules/d3-brush/src/brush.js
  var { abs: abs2, max: max7, min: min6 } = Math;
  function number1(e) {
    return [+e[0], +e[1]];
  }
  function number22(e) {
    return [number1(e[0]), number1(e[1])];
  }
  var X = {
    name: "x",
    handles: ["w", "e"].map(type),
    input: function(x30, e) {
      return x30 == null ? null : [[+x30[0], e[0][1]], [+x30[1], e[1][1]]];
    },
    output: function(xy) {
      return xy && [xy[0][0], xy[1][0]];
    }
  };
  var Y = {
    name: "y",
    handles: ["n", "s"].map(type),
    input: function(y28, e) {
      return y28 == null ? null : [[e[0][0], +y28[0]], [e[1][0], +y28[1]]];
    },
    output: function(xy) {
      return xy && [xy[0][1], xy[1][1]];
    }
  };
  var XY = {
    name: "xy",
    handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
    input: function(xy) {
      return xy == null ? null : number22(xy);
    },
    output: function(xy) {
      return xy;
    }
  };
  function type(t) {
    return { type: t };
  }

  // node_modules/d3-path/src/path.js
  var pi2 = Math.PI;
  var tau = 2 * pi2;
  var epsilon2 = 1e-6;
  var tauEpsilon = tau - epsilon2;
  function Path2() {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null;
    this._ = "";
  }
  function path() {
    return new Path2();
  }
  Path2.prototype = path.prototype = {
    constructor: Path2,
    moveTo: function(x30, y28) {
      this._ += "M" + (this._x0 = this._x1 = +x30) + "," + (this._y0 = this._y1 = +y28);
    },
    closePath: function() {
      if (this._x1 !== null) {
        this._x1 = this._x0, this._y1 = this._y0;
        this._ += "Z";
      }
    },
    lineTo: function(x30, y28) {
      this._ += "L" + (this._x1 = +x30) + "," + (this._y1 = +y28);
    },
    quadraticCurveTo: function(x111, y111, x30, y28) {
      this._ += "Q" + +x111 + "," + +y111 + "," + (this._x1 = +x30) + "," + (this._y1 = +y28);
    },
    bezierCurveTo: function(x111, y111, x210, y28, x30, y29) {
      this._ += "C" + +x111 + "," + +y111 + "," + +x210 + "," + +y28 + "," + (this._x1 = +x30) + "," + (this._y1 = +y29);
    },
    arcTo: function(x111, y111, x210, y28, r) {
      x111 = +x111, y111 = +y111, x210 = +x210, y28 = +y28, r = +r;
      var x0 = this._x1, y0 = this._y1, x212 = x210 - x111, y212 = y28 - y111, x01 = x0 - x111, y01 = y0 - y111, l01_2 = x01 * x01 + y01 * y01;
      if (r < 0) throw new Error("negative radius: " + r);
      if (this._x1 === null) {
        this._ += "M" + (this._x1 = x111) + "," + (this._y1 = y111);
      } else if (!(l01_2 > epsilon2)) ;
      else if (!(Math.abs(y01 * x212 - y212 * x01) > epsilon2) || !r) {
        this._ += "L" + (this._x1 = x111) + "," + (this._y1 = y111);
      } else {
        var x202 = x210 - x0, y202 = y28 - y0, l21_2 = x212 * x212 + y212 * y212, l20_2 = x202 * x202 + y202 * y202, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
        if (Math.abs(t01 - 1) > epsilon2) {
          this._ += "L" + (x111 + t01 * x01) + "," + (y111 + t01 * y01);
        }
        this._ += "A" + r + "," + r + ",0,0," + +(y01 * x202 > x01 * y202) + "," + (this._x1 = x111 + t21 * x212) + "," + (this._y1 = y111 + t21 * y212);
      }
    },
    arc: function(x30, y28, r, a0, a1, ccw) {
      x30 = +x30, y28 = +y28, r = +r, ccw = !!ccw;
      var dx = r * Math.cos(a0), dy4 = r * Math.sin(a0), x0 = x30 + dx, y0 = y28 + dy4, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
      if (r < 0) throw new Error("negative radius: " + r);
      if (this._x1 === null) {
        this._ += "M" + x0 + "," + y0;
      } else if (Math.abs(this._x1 - x0) > epsilon2 || Math.abs(this._y1 - y0) > epsilon2) {
        this._ += "L" + x0 + "," + y0;
      }
      if (!r) return;
      if (da < 0) da = da % tau + tau;
      if (da > tauEpsilon) {
        this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x30 - dx) + "," + (y28 - dy4) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
      } else if (da > epsilon2) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi2) + "," + cw + "," + (this._x1 = x30 + r * Math.cos(a1)) + "," + (this._y1 = y28 + r * Math.sin(a1));
      }
    },
    rect: function(x30, y28, w, h) {
      this._ += "M" + (this._x0 = this._x1 = +x30) + "," + (this._y0 = this._y1 = +y28) + "h" + +w + "v" + +h + "h" + -w + "Z";
    },
    toString: function() {
      return this._;
    }
  };
  var path_default = path;

  // node_modules/d3-format/src/formatDecimal.js
  function formatDecimal_default(x30) {
    return Math.abs(x30 = Math.round(x30)) >= 1e21 ? x30.toLocaleString("en").replace(/,/g, "") : x30.toString(10);
  }
  function formatDecimalParts(x30, p2) {
    if ((i2 = (x30 = p2 ? x30.toExponential(p2 - 1) : x30.toExponential()).indexOf("e")) < 0) return null;
    var i2, coefficient = x30.slice(0, i2);
    return [
      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
      +x30.slice(i2 + 1)
    ];
  }

  // node_modules/d3-format/src/exponent.js
  function exponent_default(x30) {
    return x30 = formatDecimalParts(Math.abs(x30)), x30 ? x30[1] : NaN;
  }

  // node_modules/d3-format/src/formatGroup.js
  function formatGroup_default(grouping, thousands) {
    return function(value19, width26) {
      var i2 = value19.length, t = [], j = 0, g = grouping[0], length9 = 0;
      while (i2 > 0 && g > 0) {
        if (length9 + g + 1 > width26) g = Math.max(1, width26 - length9);
        t.push(value19.substring(i2 -= g, i2 + g));
        if ((length9 += g + 1) > width26) break;
        g = grouping[j = (j + 1) % grouping.length];
      }
      return t.reverse().join(thousands);
    };
  }

  // node_modules/d3-format/src/formatNumerals.js
  function formatNumerals_default(numerals) {
    return function(value19) {
      return value19.replace(/[0-9]/g, function(i2) {
        return numerals[+i2];
      });
    };
  }

  // node_modules/d3-format/src/formatSpecifier.js
  var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function formatSpecifier(specifier) {
    if (!(match2 = re.exec(specifier))) throw new Error("invalid format: " + specifier);
    var match2;
    return new FormatSpecifier({
      fill: match2[1],
      align: match2[2],
      sign: match2[3],
      symbol: match2[4],
      zero: match2[5],
      width: match2[6],
      comma: match2[7],
      precision: match2[8] && match2[8].slice(1),
      trim: match2[9],
      type: match2[10]
    });
  }
  formatSpecifier.prototype = FormatSpecifier.prototype;
  function FormatSpecifier(specifier) {
    this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
    this.align = specifier.align === void 0 ? ">" : specifier.align + "";
    this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
    this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
    this.zero = !!specifier.zero;
    this.width = specifier.width === void 0 ? void 0 : +specifier.width;
    this.comma = !!specifier.comma;
    this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
    this.trim = !!specifier.trim;
    this.type = specifier.type === void 0 ? "" : specifier.type + "";
  }
  FormatSpecifier.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };

  // node_modules/d3-format/src/formatTrim.js
  function formatTrim_default(s) {
    out: for (var n = s.length, i2 = 1, i0 = -1, i1; i2 < n; ++i2) {
      switch (s[i2]) {
        case ".":
          i0 = i1 = i2;
          break;
        case "0":
          if (i0 === 0) i0 = i2;
          i1 = i2;
          break;
        default:
          if (!+s[i2]) break out;
          if (i0 > 0) i0 = 0;
          break;
      }
    }
    return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
  }

  // node_modules/d3-format/src/formatPrefixAuto.js
  var prefixExponent;
  function formatPrefixAuto_default(x30, p2) {
    var d9 = formatDecimalParts(x30, p2);
    if (!d9) return x30 + "";
    var coefficient = d9[0], exponent = d9[1], i2 = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
    return i2 === n ? coefficient : i2 > n ? coefficient + new Array(i2 - n + 1).join("0") : i2 > 0 ? coefficient.slice(0, i2) + "." + coefficient.slice(i2) : "0." + new Array(1 - i2).join("0") + formatDecimalParts(x30, Math.max(0, p2 + i2 - 1))[0];
  }

  // node_modules/d3-format/src/formatRounded.js
  function formatRounded_default(x30, p2) {
    var d9 = formatDecimalParts(x30, p2);
    if (!d9) return x30 + "";
    var coefficient = d9[0], exponent = d9[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
  }

  // node_modules/d3-format/src/formatTypes.js
  var formatTypes_default = {
    "%": (x30, p2) => (x30 * 100).toFixed(p2),
    "b": (x30) => Math.round(x30).toString(2),
    "c": (x30) => x30 + "",
    "d": formatDecimal_default,
    "e": (x30, p2) => x30.toExponential(p2),
    "f": (x30, p2) => x30.toFixed(p2),
    "g": (x30, p2) => x30.toPrecision(p2),
    "o": (x30) => Math.round(x30).toString(8),
    "p": (x30, p2) => formatRounded_default(x30 * 100, p2),
    "r": formatRounded_default,
    "s": formatPrefixAuto_default,
    "X": (x30) => Math.round(x30).toString(16).toUpperCase(),
    "x": (x30) => Math.round(x30).toString(16)
  };

  // node_modules/d3-format/src/identity.js
  function identity_default2(x30) {
    return x30;
  }

  // node_modules/d3-format/src/locale.js
  var map36 = Array.prototype.map;
  var prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function locale_default(locale2) {
    var group3 = locale2.grouping === void 0 || locale2.thousands === void 0 ? identity_default2 : formatGroup_default(map36.call(locale2.grouping, Number), locale2.thousands + ""), currencyPrefix = locale2.currency === void 0 ? "" : locale2.currency[0] + "", currencySuffix = locale2.currency === void 0 ? "" : locale2.currency[1] + "", decimal = locale2.decimal === void 0 ? "." : locale2.decimal + "", numerals = locale2.numerals === void 0 ? identity_default2 : formatNumerals_default(map36.call(locale2.numerals, String)), percent = locale2.percent === void 0 ? "%" : locale2.percent + "", minus = locale2.minus === void 0 ? "\u2212" : locale2.minus + "", nan2 = locale2.nan === void 0 ? "NaN" : locale2.nan + "";
    function newFormat(specifier) {
      specifier = formatSpecifier(specifier);
      var fill26 = specifier.fill, align = specifier.align, sign2 = specifier.sign, symbol = specifier.symbol, zero4 = specifier.zero, width26 = specifier.width, comma = specifier.comma, precision = specifier.precision, trim2 = specifier.trim, type2 = specifier.type;
      if (type2 === "n") comma = true, type2 = "g";
      else if (!formatTypes_default[type2]) precision === void 0 && (precision = 12), trim2 = true, type2 = "g";
      if (zero4 || fill26 === "0" && align === "=") zero4 = true, fill26 = "0", align = "=";
      var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type2) ? "0" + type2.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type2) ? percent : "";
      var formatType = formatTypes_default[type2], maybeSuffix = /[defgprs%]/.test(type2);
      precision = precision === void 0 ? 6 : /[gprs]/.test(type2) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
      function format2(value19) {
        var valuePrefix = prefix, valueSuffix = suffix, i2, n, c;
        if (type2 === "c") {
          valueSuffix = formatType(value19) + valueSuffix;
          value19 = "";
        } else {
          value19 = +value19;
          var valueNegative = value19 < 0 || 1 / value19 < 0;
          value19 = isNaN(value19) ? nan2 : formatType(Math.abs(value19), precision);
          if (trim2) value19 = formatTrim_default(value19);
          if (valueNegative && +value19 === 0 && sign2 !== "+") valueNegative = false;
          valuePrefix = (valueNegative ? sign2 === "(" ? sign2 : minus : sign2 === "-" || sign2 === "(" ? "" : sign2) + valuePrefix;
          valueSuffix = (type2 === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign2 === "(" ? ")" : "");
          if (maybeSuffix) {
            i2 = -1, n = value19.length;
            while (++i2 < n) {
              if (c = value19.charCodeAt(i2), 48 > c || c > 57) {
                valueSuffix = (c === 46 ? decimal + value19.slice(i2 + 1) : value19.slice(i2)) + valueSuffix;
                value19 = value19.slice(0, i2);
                break;
              }
            }
          }
        }
        if (comma && !zero4) value19 = group3(value19, Infinity);
        var length9 = valuePrefix.length + value19.length + valueSuffix.length, padding = length9 < width26 ? new Array(width26 - length9 + 1).join(fill26) : "";
        if (comma && zero4) value19 = group3(padding + value19, padding.length ? width26 - valueSuffix.length : Infinity), padding = "";
        switch (align) {
          case "<":
            value19 = valuePrefix + value19 + valueSuffix + padding;
            break;
          case "=":
            value19 = valuePrefix + padding + value19 + valueSuffix;
            break;
          case "^":
            value19 = padding.slice(0, length9 = padding.length >> 1) + valuePrefix + value19 + valueSuffix + padding.slice(length9);
            break;
          default:
            value19 = padding + valuePrefix + value19 + valueSuffix;
            break;
        }
        return numerals(value19);
      }
      format2.toString = function() {
        return specifier + "";
      };
      return format2;
    }
    function formatPrefix2(specifier, value19) {
      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent_default(value19) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
      return function(value20) {
        return f(k * value20) + prefix;
      };
    }
    return {
      format: newFormat,
      formatPrefix: formatPrefix2
    };
  }

  // node_modules/d3-format/src/defaultLocale.js
  var locale;
  var format;
  var formatPrefix;
  defaultLocale({
    thousands: ",",
    grouping: [3],
    currency: ["$", ""]
  });
  function defaultLocale(definition) {
    locale = locale_default(definition);
    format = locale.format;
    formatPrefix = locale.formatPrefix;
    return locale;
  }

  // node_modules/d3-format/src/precisionFixed.js
  function precisionFixed_default(step5) {
    return Math.max(0, -exponent_default(Math.abs(step5)));
  }

  // node_modules/d3-format/src/precisionPrefix.js
  function precisionPrefix_default(step5, value19) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent_default(value19) / 3))) * 3 - exponent_default(Math.abs(step5)));
  }

  // node_modules/d3-format/src/precisionRound.js
  function precisionRound_default(step5, max9) {
    step5 = Math.abs(step5), max9 = Math.abs(max9) - step5;
    return Math.max(0, exponent_default(max9) - exponent_default(step5)) + 1;
  }

  // node_modules/d3-scale/src/init.js
  function initRange(domain, range3) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        this.range(domain);
        break;
      default:
        this.range(range3).domain(domain);
        break;
    }
    return this;
  }

  // node_modules/d3-scale/src/ordinal.js
  var implicit = Symbol("implicit");
  function ordinal() {
    var index5 = new InternMap(), domain = [], range3 = [], unknown = implicit;
    function scale(d9) {
      let i2 = index5.get(d9);
      if (i2 === void 0) {
        if (unknown !== implicit) return unknown;
        index5.set(d9, i2 = domain.push(d9) - 1);
      }
      return range3[i2 % range3.length];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain.slice();
      domain = [], index5 = new InternMap();
      for (const value19 of _) {
        if (index5.has(value19)) continue;
        index5.set(value19, domain.push(value19) - 1);
      }
      return scale;
    };
    scale.range = function(_) {
      return arguments.length ? (range3 = Array.from(_), scale) : range3.slice();
    };
    scale.unknown = function(_) {
      return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
      return ordinal(domain, range3).unknown(unknown);
    };
    initRange.apply(scale, arguments);
    return scale;
  }

  // node_modules/d3-scale/src/constant.js
  function constants(x30) {
    return function() {
      return x30;
    };
  }

  // node_modules/d3-scale/src/number.js
  function number3(x30) {
    return +x30;
  }

  // node_modules/d3-scale/src/continuous.js
  var unit2 = [0, 1];
  function identity14(x30) {
    return x30;
  }
  function normalize2(a2, b2) {
    return (b2 -= a2 = +a2) ? function(x30) {
      return (x30 - a2) / b2;
    } : constants(isNaN(b2) ? NaN : 0.5);
  }
  function clamper(a2, b2) {
    var t;
    if (a2 > b2) t = a2, a2 = b2, b2 = t;
    return function(x30) {
      return Math.max(a2, Math.min(b2, x30));
    };
  }
  function bimap3(domain, range3, interpolate) {
    var d0 = domain[0], d1 = domain[1], r0 = range3[0], r1 = range3[1];
    if (d1 < d0) d0 = normalize2(d1, d0), r0 = interpolate(r1, r0);
    else d0 = normalize2(d0, d1), r0 = interpolate(r0, r1);
    return function(x30) {
      return r0(d0(x30));
    };
  }
  function polymap(domain, range3, interpolate) {
    var j = Math.min(domain.length, range3.length) - 1, d9 = new Array(j), r = new Array(j), i2 = -1;
    if (domain[j] < domain[0]) {
      domain = domain.slice().reverse();
      range3 = range3.slice().reverse();
    }
    while (++i2 < j) {
      d9[i2] = normalize2(domain[i2], domain[i2 + 1]);
      r[i2] = interpolate(range3[i2], range3[i2 + 1]);
    }
    return function(x30) {
      var i3 = bisect_default(domain, x30, 1, j) - 1;
      return r[i3](d9[i3](x30));
    };
  }
  function copy2(source2, target7) {
    return target7.domain(source2.domain()).range(source2.range()).interpolate(source2.interpolate()).clamp(source2.clamp()).unknown(source2.unknown());
  }
  function transformer() {
    var domain = unit2, range3 = unit2, interpolate = value_default, transform3, untransform, unknown, clamp2 = identity14, piecewise, output2, input3;
    function rescale() {
      var n = Math.min(domain.length, range3.length);
      if (clamp2 !== identity14) clamp2 = clamper(domain[0], domain[n - 1]);
      piecewise = n > 2 ? polymap : bimap3;
      output2 = input3 = null;
      return scale;
    }
    function scale(x30) {
      return x30 == null || isNaN(x30 = +x30) ? unknown : (output2 || (output2 = piecewise(domain.map(transform3), range3, interpolate)))(transform3(clamp2(x30)));
    }
    scale.invert = function(y28) {
      return clamp2(untransform((input3 || (input3 = piecewise(range3, domain.map(transform3), number_default)))(y28)));
    };
    scale.domain = function(_) {
      return arguments.length ? (domain = Array.from(_, number3), rescale()) : domain.slice();
    };
    scale.range = function(_) {
      return arguments.length ? (range3 = Array.from(_), rescale()) : range3.slice();
    };
    scale.rangeRound = function(_) {
      return range3 = Array.from(_), interpolate = round_default, rescale();
    };
    scale.clamp = function(_) {
      return arguments.length ? (clamp2 = _ ? true : identity14, rescale()) : clamp2 !== identity14;
    };
    scale.interpolate = function(_) {
      return arguments.length ? (interpolate = _, rescale()) : interpolate;
    };
    scale.unknown = function(_) {
      return arguments.length ? (unknown = _, scale) : unknown;
    };
    return function(t, u2) {
      transform3 = t, untransform = u2;
      return rescale();
    };
  }
  function continuous() {
    return transformer()(identity14, identity14);
  }

  // node_modules/d3-scale/src/tickFormat.js
  function tickFormat(start5, stop3, count, specifier) {
    var step5 = tickStep(start5, stop3, count), precision;
    specifier = formatSpecifier(specifier == null ? ",f" : specifier);
    switch (specifier.type) {
      case "s": {
        var value19 = Math.max(Math.abs(start5), Math.abs(stop3));
        if (specifier.precision == null && !isNaN(precision = precisionPrefix_default(step5, value19))) specifier.precision = precision;
        return formatPrefix(specifier, value19);
      }
      case "":
      case "e":
      case "g":
      case "p":
      case "r": {
        if (specifier.precision == null && !isNaN(precision = precisionRound_default(step5, Math.max(Math.abs(start5), Math.abs(stop3))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }
      case "f":
      case "%": {
        if (specifier.precision == null && !isNaN(precision = precisionFixed_default(step5))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
    }
    return format(specifier);
  }

  // node_modules/d3-scale/src/linear.js
  function linearish(scale) {
    var domain = scale.domain;
    scale.ticks = function(count) {
      var d9 = domain();
      return ticks(d9[0], d9[d9.length - 1], count == null ? 10 : count);
    };
    scale.tickFormat = function(count, specifier) {
      var d9 = domain();
      return tickFormat(d9[0], d9[d9.length - 1], count == null ? 10 : count, specifier);
    };
    scale.nice = function(count) {
      if (count == null) count = 10;
      var d9 = domain();
      var i0 = 0;
      var i1 = d9.length - 1;
      var start5 = d9[i0];
      var stop3 = d9[i1];
      var prestep;
      var step5;
      var maxIter = 10;
      if (stop3 < start5) {
        step5 = start5, start5 = stop3, stop3 = step5;
        step5 = i0, i0 = i1, i1 = step5;
      }
      while (maxIter-- > 0) {
        step5 = tickIncrement(start5, stop3, count);
        if (step5 === prestep) {
          d9[i0] = start5;
          d9[i1] = stop3;
          return domain(d9);
        } else if (step5 > 0) {
          start5 = Math.floor(start5 / step5) * step5;
          stop3 = Math.ceil(stop3 / step5) * step5;
        } else if (step5 < 0) {
          start5 = Math.ceil(start5 * step5) / step5;
          stop3 = Math.floor(stop3 * step5) / step5;
        } else {
          break;
        }
        prestep = step5;
      }
      return scale;
    };
    return scale;
  }
  function linear2() {
    var scale = continuous();
    scale.copy = function() {
      return copy2(scale, linear2());
    };
    initRange.apply(scale, arguments);
    return linearish(scale);
  }

  // node_modules/d3-scale-chromatic/src/colors.js
  function colors_default(specifier) {
    var n = specifier.length / 6 | 0, colors2 = new Array(n), i2 = 0;
    while (i2 < n) colors2[i2] = "#" + specifier.slice(i2 * 6, ++i2 * 6);
    return colors2;
  }

  // node_modules/d3-scale-chromatic/src/categorical/category10.js
  var category10_default = colors_default("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

  // node_modules/d3-shape/src/constant.js
  function constant_default4(x30) {
    return function constant2() {
      return x30;
    };
  }

  // node_modules/d3-shape/src/array.js
  var slice3 = Array.prototype.slice;
  function array_default(x30) {
    return typeof x30 === "object" && "length" in x30 ? x30 : Array.from(x30);
  }

  // node_modules/d3-shape/src/curve/linear.js
  function Linear(context) {
    this._context = context;
  }
  Linear.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._point = 0;
    },
    lineEnd: function() {
      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x30, y28) {
      x30 = +x30, y28 = +y28;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x30, y28) : this._context.moveTo(x30, y28);
          break;
        case 1:
          this._point = 2;
        // falls through
        default:
          this._context.lineTo(x30, y28);
          break;
      }
    }
  };
  function linear_default(context) {
    return new Linear(context);
  }

  // node_modules/d3-shape/src/point.js
  function x6(p2) {
    return p2[0];
  }
  function y6(p2) {
    return p2[1];
  }

  // node_modules/d3-shape/src/line.js
  function line_default(x30, y28) {
    var defined = constant_default4(true), context = null, curve = linear_default, output2 = null;
    x30 = typeof x30 === "function" ? x30 : x30 === void 0 ? x6 : constant_default4(x30);
    y28 = typeof y28 === "function" ? y28 : y28 === void 0 ? y6 : constant_default4(y28);
    function line(data) {
      var i2, n = (data = array_default(data)).length, d9, defined0 = false, buffer;
      if (context == null) output2 = curve(buffer = path_default());
      for (i2 = 0; i2 <= n; ++i2) {
        if (!(i2 < n && defined(d9 = data[i2], i2, data)) === defined0) {
          if (defined0 = !defined0) output2.lineStart();
          else output2.lineEnd();
        }
        if (defined0) output2.point(+x30(d9, i2, data), +y28(d9, i2, data));
      }
      if (buffer) return output2 = null, buffer + "" || null;
    }
    line.x = function(_) {
      return arguments.length ? (x30 = typeof _ === "function" ? _ : constant_default4(+_), line) : x30;
    };
    line.y = function(_) {
      return arguments.length ? (y28 = typeof _ === "function" ? _ : constant_default4(+_), line) : y28;
    };
    line.defined = function(_) {
      return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default4(!!_), line) : defined;
    };
    line.curve = function(_) {
      return arguments.length ? (curve = _, context != null && (output2 = curve(context)), line) : curve;
    };
    line.context = function(_) {
      return arguments.length ? (_ == null ? context = output2 = null : output2 = curve(context = _), line) : context;
    };
    return line;
  }

  // node_modules/d3-zoom/src/transform.js
  function Transform(k, x30, y28) {
    this.k = k;
    this.x = x30;
    this.y = y28;
  }
  Transform.prototype = {
    constructor: Transform,
    scale: function(k) {
      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
    },
    translate: function(x30, y28) {
      return x30 === 0 & y28 === 0 ? this : new Transform(this.k, this.x + this.k * x30, this.y + this.k * y28);
    },
    apply: function(point) {
      return [point[0] * this.k + this.x, point[1] * this.k + this.y];
    },
    applyX: function(x30) {
      return x30 * this.k + this.x;
    },
    applyY: function(y28) {
      return y28 * this.k + this.y;
    },
    invert: function(location2) {
      return [(location2[0] - this.x) / this.k, (location2[1] - this.y) / this.k];
    },
    invertX: function(x30) {
      return (x30 - this.x) / this.k;
    },
    invertY: function(y28) {
      return (y28 - this.y) / this.k;
    },
    rescaleX: function(x30) {
      return x30.copy().domain(x30.range().map(this.invertX, this).map(x30.invert, x30));
    },
    rescaleY: function(y28) {
      return y28.copy().domain(y28.range().map(this.invertY, this).map(y28.invert, y28));
    },
    toString: function() {
      return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
    }
  };
  var identity15 = new Transform(1, 0, 0);
  transform2.prototype = Transform.prototype;
  function transform2(node) {
    while (!node.__zoom) if (!(node = node.parentNode)) return identity15;
    return node.__zoom;
  }

  // node_modules/d3-sankey/node_modules/d3-array/src/max.js
  function max8(values2, valueof) {
    let max9;
    if (valueof === void 0) {
      for (const value19 of values2) {
        if (value19 != null && (max9 < value19 || max9 === void 0 && value19 >= value19)) {
          max9 = value19;
        }
      }
    } else {
      let index5 = -1;
      for (let value19 of values2) {
        if ((value19 = valueof(value19, ++index5, values2)) != null && (max9 < value19 || max9 === void 0 && value19 >= value19)) {
          max9 = value19;
        }
      }
    }
    return max9;
  }

  // node_modules/d3-sankey/node_modules/d3-array/src/min.js
  function min7(values2, valueof) {
    let min9;
    if (valueof === void 0) {
      for (const value19 of values2) {
        if (value19 != null && (min9 > value19 || min9 === void 0 && value19 >= value19)) {
          min9 = value19;
        }
      }
    } else {
      let index5 = -1;
      for (let value19 of values2) {
        if ((value19 = valueof(value19, ++index5, values2)) != null && (min9 > value19 || min9 === void 0 && value19 >= value19)) {
          min9 = value19;
        }
      }
    }
    return min9;
  }

  // node_modules/d3-sankey/node_modules/d3-array/src/sum.js
  function sum2(values2, valueof) {
    let sum4 = 0;
    if (valueof === void 0) {
      for (let value19 of values2) {
        if (value19 = +value19) {
          sum4 += value19;
        }
      }
    } else {
      let index5 = -1;
      for (let value19 of values2) {
        if (value19 = +valueof(value19, ++index5, values2)) {
          sum4 += value19;
        }
      }
    }
    return sum4;
  }

  // node_modules/d3-sankey/src/align.js
  function targetDepth(d9) {
    return d9.target.depth;
  }
  function left3(node) {
    return node.depth;
  }
  function right3(node, n) {
    return n - 1 - node.height;
  }
  function justify(node, n) {
    return node.sourceLinks.length ? node.depth : n - 1;
  }
  function center2(node) {
    return node.targetLinks.length ? node.depth : node.sourceLinks.length ? min7(node.sourceLinks, targetDepth) - 1 : 0;
  }

  // node_modules/d3-sankey/src/constant.js
  function constant(x30) {
    return function() {
      return x30;
    };
  }

  // node_modules/d3-sankey/src/sankey.js
  function ascendingSourceBreadth(a2, b2) {
    return ascendingBreadth(a2.source, b2.source) || a2.index - b2.index;
  }
  function ascendingTargetBreadth(a2, b2) {
    return ascendingBreadth(a2.target, b2.target) || a2.index - b2.index;
  }
  function ascendingBreadth(a2, b2) {
    return a2.y0 - b2.y0;
  }
  function value15(d9) {
    return d9.value;
  }
  function defaultId(d9) {
    return d9.index;
  }
  function defaultNodes(graph) {
    return graph.nodes;
  }
  function defaultLinks(graph) {
    return graph.links;
  }
  function find4(nodeById, id5) {
    const node = nodeById.get(id5);
    if (!node) throw new Error("missing: " + id5);
    return node;
  }
  function computeLinkBreadths({ nodes }) {
    for (const node of nodes) {
      let y0 = node.y0;
      let y111 = y0;
      for (const link4 of node.sourceLinks) {
        link4.y0 = y0 + link4.width / 2;
        y0 += link4.width;
      }
      for (const link4 of node.targetLinks) {
        link4.y1 = y111 + link4.width / 2;
        y111 += link4.width;
      }
    }
  }
  function Sankey() {
    let x0 = 0, y0 = 0, x111 = 1, y111 = 1;
    let dx = 24;
    let dy4 = 8, py;
    let id5 = defaultId;
    let align = justify;
    let sort2;
    let linkSort;
    let nodes = defaultNodes;
    let links = defaultLinks;
    let iterations = 6;
    function sankey() {
      const graph = { nodes: nodes.apply(null, arguments), links: links.apply(null, arguments) };
      computeNodeLinks(graph);
      computeNodeValues(graph);
      computeNodeDepths(graph);
      computeNodeHeights(graph);
      computeNodeBreadths(graph);
      computeLinkBreadths(graph);
      return graph;
    }
    sankey.update = function(graph) {
      computeLinkBreadths(graph);
      return graph;
    };
    sankey.nodeId = function(_) {
      return arguments.length ? (id5 = typeof _ === "function" ? _ : constant(_), sankey) : id5;
    };
    sankey.nodeAlign = function(_) {
      return arguments.length ? (align = typeof _ === "function" ? _ : constant(_), sankey) : align;
    };
    sankey.nodeSort = function(_) {
      return arguments.length ? (sort2 = _, sankey) : sort2;
    };
    sankey.nodeWidth = function(_) {
      return arguments.length ? (dx = +_, sankey) : dx;
    };
    sankey.nodePadding = function(_) {
      return arguments.length ? (dy4 = py = +_, sankey) : dy4;
    };
    sankey.nodes = function(_) {
      return arguments.length ? (nodes = typeof _ === "function" ? _ : constant(_), sankey) : nodes;
    };
    sankey.links = function(_) {
      return arguments.length ? (links = typeof _ === "function" ? _ : constant(_), sankey) : links;
    };
    sankey.linkSort = function(_) {
      return arguments.length ? (linkSort = _, sankey) : linkSort;
    };
    sankey.size = function(_) {
      return arguments.length ? (x0 = y0 = 0, x111 = +_[0], y111 = +_[1], sankey) : [x111 - x0, y111 - y0];
    };
    sankey.extent = function(_) {
      return arguments.length ? (x0 = +_[0][0], x111 = +_[1][0], y0 = +_[0][1], y111 = +_[1][1], sankey) : [[x0, y0], [x111, y111]];
    };
    sankey.iterations = function(_) {
      return arguments.length ? (iterations = +_, sankey) : iterations;
    };
    function computeNodeLinks({ nodes: nodes2, links: links2 }) {
      for (const [i2, node] of nodes2.entries()) {
        node.index = i2;
        node.sourceLinks = [];
        node.targetLinks = [];
      }
      const nodeById = new Map(nodes2.map((d9, i2) => [id5(d9, i2, nodes2), d9]));
      for (const [i2, link4] of links2.entries()) {
        link4.index = i2;
        let { source: source2, target: target7 } = link4;
        if (typeof source2 !== "object") source2 = link4.source = find4(nodeById, source2);
        if (typeof target7 !== "object") target7 = link4.target = find4(nodeById, target7);
        source2.sourceLinks.push(link4);
        target7.targetLinks.push(link4);
      }
      if (linkSort != null) {
        for (const { sourceLinks, targetLinks } of nodes2) {
          sourceLinks.sort(linkSort);
          targetLinks.sort(linkSort);
        }
      }
    }
    function computeNodeValues({ nodes: nodes2 }) {
      for (const node of nodes2) {
        node.value = node.fixedValue === void 0 ? Math.max(sum2(node.sourceLinks, value15), sum2(node.targetLinks, value15)) : node.fixedValue;
      }
    }
    function computeNodeDepths({ nodes: nodes2 }) {
      const n = nodes2.length;
      let current = new Set(nodes2);
      let next2 = /* @__PURE__ */ new Set();
      let x30 = 0;
      while (current.size) {
        for (const node of current) {
          node.depth = x30;
          for (const { target: target7 } of node.sourceLinks) {
            next2.add(target7);
          }
        }
        if (++x30 > n) throw new Error("circular link");
        current = next2;
        next2 = /* @__PURE__ */ new Set();
      }
    }
    function computeNodeHeights({ nodes: nodes2 }) {
      const n = nodes2.length;
      let current = new Set(nodes2);
      let next2 = /* @__PURE__ */ new Set();
      let x30 = 0;
      while (current.size) {
        for (const node of current) {
          node.height = x30;
          for (const { source: source2 } of node.targetLinks) {
            next2.add(source2);
          }
        }
        if (++x30 > n) throw new Error("circular link");
        current = next2;
        next2 = /* @__PURE__ */ new Set();
      }
    }
    function computeNodeLayers({ nodes: nodes2 }) {
      const x30 = max8(nodes2, (d9) => d9.depth) + 1;
      const kx = (x111 - x0 - dx) / (x30 - 1);
      const columns = new Array(x30);
      for (const node of nodes2) {
        const i2 = Math.max(0, Math.min(x30 - 1, Math.floor(align.call(null, node, x30))));
        node.layer = i2;
        node.x0 = x0 + i2 * kx;
        node.x1 = node.x0 + dx;
        if (columns[i2]) columns[i2].push(node);
        else columns[i2] = [node];
      }
      if (sort2) for (const column of columns) {
        column.sort(sort2);
      }
      return columns;
    }
    function initializeNodeBreadths(columns) {
      const ky = min7(columns, (c) => (y111 - y0 - (c.length - 1) * py) / sum2(c, value15));
      for (const nodes2 of columns) {
        let y28 = y0;
        for (const node of nodes2) {
          node.y0 = y28;
          node.y1 = y28 + node.value * ky;
          y28 = node.y1 + py;
          for (const link4 of node.sourceLinks) {
            link4.width = link4.value * ky;
          }
        }
        y28 = (y111 - y28 + py) / (nodes2.length + 1);
        for (let i2 = 0; i2 < nodes2.length; ++i2) {
          const node = nodes2[i2];
          node.y0 += y28 * (i2 + 1);
          node.y1 += y28 * (i2 + 1);
        }
        reorderLinks(nodes2);
      }
    }
    function computeNodeBreadths(graph) {
      const columns = computeNodeLayers(graph);
      py = Math.min(dy4, (y111 - y0) / (max8(columns, (c) => c.length) - 1));
      initializeNodeBreadths(columns);
      for (let i2 = 0; i2 < iterations; ++i2) {
        const alpha = Math.pow(0.99, i2);
        const beta = Math.max(1 - alpha, (i2 + 1) / iterations);
        relaxRightToLeft(columns, alpha, beta);
        relaxLeftToRight(columns, alpha, beta);
      }
    }
    function relaxLeftToRight(columns, alpha, beta) {
      for (let i2 = 1, n = columns.length; i2 < n; ++i2) {
        const column = columns[i2];
        for (const target7 of column) {
          let y28 = 0;
          let w = 0;
          for (const { source: source2, value: value19 } of target7.targetLinks) {
            let v = value19 * (target7.layer - source2.layer);
            y28 += targetTop(source2, target7) * v;
            w += v;
          }
          if (!(w > 0)) continue;
          let dy5 = (y28 / w - target7.y0) * alpha;
          target7.y0 += dy5;
          target7.y1 += dy5;
          reorderNodeLinks(target7);
        }
        if (sort2 === void 0) column.sort(ascendingBreadth);
        resolveCollisions(column, beta);
      }
    }
    function relaxRightToLeft(columns, alpha, beta) {
      for (let n = columns.length, i2 = n - 2; i2 >= 0; --i2) {
        const column = columns[i2];
        for (const source2 of column) {
          let y28 = 0;
          let w = 0;
          for (const { target: target7, value: value19 } of source2.sourceLinks) {
            let v = value19 * (target7.layer - source2.layer);
            y28 += sourceTop(source2, target7) * v;
            w += v;
          }
          if (!(w > 0)) continue;
          let dy5 = (y28 / w - source2.y0) * alpha;
          source2.y0 += dy5;
          source2.y1 += dy5;
          reorderNodeLinks(source2);
        }
        if (sort2 === void 0) column.sort(ascendingBreadth);
        resolveCollisions(column, beta);
      }
    }
    function resolveCollisions(nodes2, alpha) {
      const i2 = nodes2.length >> 1;
      const subject = nodes2[i2];
      resolveCollisionsBottomToTop(nodes2, subject.y0 - py, i2 - 1, alpha);
      resolveCollisionsTopToBottom(nodes2, subject.y1 + py, i2 + 1, alpha);
      resolveCollisionsBottomToTop(nodes2, y111, nodes2.length - 1, alpha);
      resolveCollisionsTopToBottom(nodes2, y0, 0, alpha);
    }
    function resolveCollisionsTopToBottom(nodes2, y28, i2, alpha) {
      for (; i2 < nodes2.length; ++i2) {
        const node = nodes2[i2];
        const dy5 = (y28 - node.y0) * alpha;
        if (dy5 > 1e-6) node.y0 += dy5, node.y1 += dy5;
        y28 = node.y1 + py;
      }
    }
    function resolveCollisionsBottomToTop(nodes2, y28, i2, alpha) {
      for (; i2 >= 0; --i2) {
        const node = nodes2[i2];
        const dy5 = (node.y1 - y28) * alpha;
        if (dy5 > 1e-6) node.y0 -= dy5, node.y1 -= dy5;
        y28 = node.y0 - py;
      }
    }
    function reorderNodeLinks({ sourceLinks, targetLinks }) {
      if (linkSort === void 0) {
        for (const { source: { sourceLinks: sourceLinks2 } } of targetLinks) {
          sourceLinks2.sort(ascendingTargetBreadth);
        }
        for (const { target: { targetLinks: targetLinks2 } } of sourceLinks) {
          targetLinks2.sort(ascendingSourceBreadth);
        }
      }
    }
    function reorderLinks(nodes2) {
      if (linkSort === void 0) {
        for (const { sourceLinks, targetLinks } of nodes2) {
          sourceLinks.sort(ascendingTargetBreadth);
          targetLinks.sort(ascendingSourceBreadth);
        }
      }
    }
    function targetTop(source2, target7) {
      let y28 = source2.y0 - (source2.sourceLinks.length - 1) * py / 2;
      for (const { target: node, width: width26 } of source2.sourceLinks) {
        if (node === target7) break;
        y28 += width26 + py;
      }
      for (const { source: node, width: width26 } of target7.targetLinks) {
        if (node === source2) break;
        y28 -= width26;
      }
      return y28;
    }
    function sourceTop(source2, target7) {
      let y28 = target7.y0 - (target7.targetLinks.length - 1) * py / 2;
      for (const { source: node, width: width26 } of target7.targetLinks) {
        if (node === source2) break;
        y28 += width26 + py;
      }
      for (const { target: node, width: width26 } of source2.sourceLinks) {
        if (node === target7) break;
        y28 -= width26;
      }
      return y28;
    }
    return sankey;
  }

  // node_modules/d3-sankey/node_modules/d3-path/src/path.js
  var pi3 = Math.PI;
  var tau2 = 2 * pi3;
  var epsilon3 = 1e-6;
  var tauEpsilon2 = tau2 - epsilon3;
  function Path3() {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null;
    this._ = "";
  }
  function path2() {
    return new Path3();
  }
  Path3.prototype = path2.prototype = {
    constructor: Path3,
    moveTo: function(x30, y28) {
      this._ += "M" + (this._x0 = this._x1 = +x30) + "," + (this._y0 = this._y1 = +y28);
    },
    closePath: function() {
      if (this._x1 !== null) {
        this._x1 = this._x0, this._y1 = this._y0;
        this._ += "Z";
      }
    },
    lineTo: function(x30, y28) {
      this._ += "L" + (this._x1 = +x30) + "," + (this._y1 = +y28);
    },
    quadraticCurveTo: function(x111, y111, x30, y28) {
      this._ += "Q" + +x111 + "," + +y111 + "," + (this._x1 = +x30) + "," + (this._y1 = +y28);
    },
    bezierCurveTo: function(x111, y111, x210, y28, x30, y29) {
      this._ += "C" + +x111 + "," + +y111 + "," + +x210 + "," + +y28 + "," + (this._x1 = +x30) + "," + (this._y1 = +y29);
    },
    arcTo: function(x111, y111, x210, y28, r) {
      x111 = +x111, y111 = +y111, x210 = +x210, y28 = +y28, r = +r;
      var x0 = this._x1, y0 = this._y1, x212 = x210 - x111, y212 = y28 - y111, x01 = x0 - x111, y01 = y0 - y111, l01_2 = x01 * x01 + y01 * y01;
      if (r < 0) throw new Error("negative radius: " + r);
      if (this._x1 === null) {
        this._ += "M" + (this._x1 = x111) + "," + (this._y1 = y111);
      } else if (!(l01_2 > epsilon3)) ;
      else if (!(Math.abs(y01 * x212 - y212 * x01) > epsilon3) || !r) {
        this._ += "L" + (this._x1 = x111) + "," + (this._y1 = y111);
      } else {
        var x202 = x210 - x0, y202 = y28 - y0, l21_2 = x212 * x212 + y212 * y212, l20_2 = x202 * x202 + y202 * y202, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi3 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
        if (Math.abs(t01 - 1) > epsilon3) {
          this._ += "L" + (x111 + t01 * x01) + "," + (y111 + t01 * y01);
        }
        this._ += "A" + r + "," + r + ",0,0," + +(y01 * x202 > x01 * y202) + "," + (this._x1 = x111 + t21 * x212) + "," + (this._y1 = y111 + t21 * y212);
      }
    },
    arc: function(x30, y28, r, a0, a1, ccw) {
      x30 = +x30, y28 = +y28, r = +r, ccw = !!ccw;
      var dx = r * Math.cos(a0), dy4 = r * Math.sin(a0), x0 = x30 + dx, y0 = y28 + dy4, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
      if (r < 0) throw new Error("negative radius: " + r);
      if (this._x1 === null) {
        this._ += "M" + x0 + "," + y0;
      } else if (Math.abs(this._x1 - x0) > epsilon3 || Math.abs(this._y1 - y0) > epsilon3) {
        this._ += "L" + x0 + "," + y0;
      }
      if (!r) return;
      if (da < 0) da = da % tau2 + tau2;
      if (da > tauEpsilon2) {
        this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x30 - dx) + "," + (y28 - dy4) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
      } else if (da > epsilon3) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi3) + "," + cw + "," + (this._x1 = x30 + r * Math.cos(a1)) + "," + (this._y1 = y28 + r * Math.sin(a1));
      }
    },
    rect: function(x30, y28, w, h) {
      this._ += "M" + (this._x0 = this._x1 = +x30) + "," + (this._y0 = this._y1 = +y28) + "h" + +w + "v" + +h + "h" + -w + "Z";
    },
    toString: function() {
      return this._;
    }
  };
  var path_default2 = path2;

  // node_modules/d3-sankey/node_modules/d3-shape/src/constant.js
  function constant_default6(x30) {
    return function constant2() {
      return x30;
    };
  }

  // node_modules/d3-sankey/node_modules/d3-shape/src/point.js
  function x7(p2) {
    return p2[0];
  }
  function y7(p2) {
    return p2[1];
  }

  // node_modules/d3-sankey/node_modules/d3-shape/src/array.js
  var slice4 = Array.prototype.slice;

  // node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js
  function linkSource(d9) {
    return d9.source;
  }
  function linkTarget(d9) {
    return d9.target;
  }
  function link3(curve) {
    var source2 = linkSource, target7 = linkTarget, x30 = x7, y28 = y7, context = null;
    function link4() {
      var buffer, argv = slice4.call(arguments), s = source2.apply(this, argv), t = target7.apply(this, argv);
      if (!context) context = buffer = path_default2();
      curve(context, +x30.apply(this, (argv[0] = s, argv)), +y28.apply(this, argv), +x30.apply(this, (argv[0] = t, argv)), +y28.apply(this, argv));
      if (buffer) return context = null, buffer + "" || null;
    }
    link4.source = function(_) {
      return arguments.length ? (source2 = _, link4) : source2;
    };
    link4.target = function(_) {
      return arguments.length ? (target7 = _, link4) : target7;
    };
    link4.x = function(_) {
      return arguments.length ? (x30 = typeof _ === "function" ? _ : constant_default6(+_), link4) : x30;
    };
    link4.y = function(_) {
      return arguments.length ? (y28 = typeof _ === "function" ? _ : constant_default6(+_), link4) : y28;
    };
    link4.context = function(_) {
      return arguments.length ? (context = _ == null ? null : _, link4) : context;
    };
    return link4;
  }
  function curveHorizontal(context, x0, y0, x111, y111) {
    context.moveTo(x0, y0);
    context.bezierCurveTo(x0 = (x0 + x111) / 2, y0, x0, y111, x111, y111);
  }
  function linkHorizontal() {
    return link3(curveHorizontal);
  }

  // node_modules/d3-sankey/src/sankeyLinkHorizontal.js
  function horizontalSource(d9) {
    return [d9.source.x1, d9.y0];
  }
  function horizontalTarget(d9) {
    return [d9.target.x0, d9.y1];
  }
  function sankeyLinkHorizontal_default() {
    return linkHorizontal().source(horizontalSource).target(horizontalTarget);
  }

  // output/PSD3.Internal.Sankey.Functions/foreign.js
  var getAlignmentFunction = (alignment) => {
    switch (alignment) {
      case "left":
        return left3;
      case "right":
        return right3;
      case "center":
        return center2;
      case "justify":
      default:
        return justify;
    }
  };
  var sankeySetDataWithConfig_ = (data) => (width26) => (height26) => (config) => () => {
    const sankeyGenerator = Sankey().nodeWidth(config.nodeWidth).nodePadding(config.nodePadding).nodeAlign(getAlignmentFunction(config.alignment)).extent([[1, 1], [width26 - 1, height26 - 5]]);
    const dataCopy = {
      nodes: data.nodes.map((n) => ({ ...n })),
      links: data.links.map((l) => ({ ...l }))
    };
    const graph = sankeyGenerator(dataCopy);
    const colorScale = ordinal(category10_default);
    graph.nodes.forEach((node) => {
      node.color = colorScale(node.name);
    });
    graph.links.forEach((link4) => {
      link4.width = link4.width || Math.max(1, link4.value);
      switch (config.linkColorMode) {
        case "target":
          link4.color = link4.target.color || colorScale(link4.target.name);
          break;
        case "source-target":
          const sourceColor = color(link4.source.color || colorScale(link4.source.name));
          const targetColor = color(link4.target.color || colorScale(link4.target.name));
          const blended = rgb(
            (sourceColor.r + targetColor.r) / 2,
            (sourceColor.g + targetColor.g) / 2,
            (sourceColor.b + targetColor.b) / 2
          );
          link4.color = blended.toString();
          break;
        case "static":
          link4.color = "#ccc";
          break;
        case "source":
        default:
          link4.color = link4.source.color || colorScale(link4.source.name);
          break;
      }
    });
    return graph;
  };
  var sankeySetData_ = (data) => (width26) => (height26) => () => {
    return sankeySetDataWithConfig_(data)(width26)(height26)({
      alignment: "justify",
      linkColorMode: "source",
      nodeWidth: 15,
      nodePadding: 10
    })();
  };
  var sankeyLinkPath_ = sankeyLinkHorizontal_default();

  // output/PSD3.Internal.Sankey.Functions/index.js
  var sankeySetDataWithConfig = function(dictMonadEffect) {
    var liftEffect51 = liftEffect(dictMonadEffect);
    return function(data_2) {
      return function(width26) {
        return function(height26) {
          return function(config) {
            return liftEffect51(sankeySetDataWithConfig_(data_2)(width26)(height26)(config));
          };
        };
      };
    };
  };
  var sankeySetData = function(dictMonadEffect) {
    var liftEffect51 = liftEffect(dictMonadEffect);
    return function(data_2) {
      return function(width26) {
        return function(height26) {
          return liftEffect51(sankeySetData_(data_2)(width26)(height26));
        };
      };
    };
  };

  // output/PSD3.Internal.Selection.Functions/index.js
  var spy2 = /* @__PURE__ */ spy();
  var foldl4 = /* @__PURE__ */ foldl(foldableArray);
  var show10 = /* @__PURE__ */ show(showElement);
  var discard8 = /* @__PURE__ */ discard(discardUnit);
  var selectionUpdateJoin = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(openSelection2) {
      return function(e) {
        return function(theData) {
          return function(keyFn) {
            var updateSelection = d3DataWithKeyFunction_(theData)(keyFn)(openSelection2);
            var exitSelection = d3GetExitSelection_(updateSelection);
            var enterSelection = d3GetEnterSelection_(updateSelection);
            return pure45({
              enter: enterSelection,
              exit: exitSelection,
              update: updateSelection
            });
          };
        };
      };
    };
  };
  var selectionSelectUnder = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection2) {
      return function(selector) {
        return pure45(d3SelectionSelectAll_(selector)(selection2));
      };
    };
  };
  var selectionOpenSelection = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection2) {
      return function(selector) {
        var v = spy2("open selection: ")(selector);
        return pure45(d3SelectionSelectAll_(selector)(selection2));
      };
    };
  };
  var selectionOn = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(v) {
      return function(v1) {
        if (v1 instanceof Drag) {
          return pure45(unit);
        }
        ;
        if (v1 instanceof Zoom) {
          var v2 = (function() {
            if (v1.value0.extent instanceof DefaultZoomExtent) {
              return d3AttachZoomDefaultExtent_(v)({
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v
              });
            }
            ;
            if (v1.value0.extent instanceof ZoomExtent) {
              return d3AttachZoom_(v)({
                extent: [[v1.value0.extent.value0.left, v1.value0.extent.value0.top], [v1.value0.extent.value0.right, v1.value0.extent.value0.bottom]],
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.Internal.Selection.Functions (line 82, column 9 - line 96, column 14): " + [v1.value0.extent.constructor.name]);
          })();
          return pure45(unit);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Internal.Selection.Functions (line 65, column 1 - line 65, column 104): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var selectionModifySelection = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection_) {
      return function(attributes) {
        var v = foldl4(applySelectionAttributeD3)(selection_)(attributes);
        return pure45(unit);
      };
    };
  };
  var selectionMergeSelections = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selectionA) {
      return function(selectionB) {
        return pure45(d3MergeSelectionWith_(selectionA)(selectionB));
      };
    };
  };
  var selectionJoin = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection2) {
      return function(e) {
        return function(theData) {
          return function(keyFn) {
            var element3 = spy2("Join: ")(show10(e));
            var selectS = d3SelectionSelectAll_(element3)(selection2);
            var dataSelection = d3DataWithKeyFunction_(theData)(keyFn)(selectS);
            var enterSelection = d3EnterAndAppend_(element3)(dataSelection);
            return pure45(enterSelection);
          };
        };
      };
    };
  };
  var selectionFilterSelection = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selection_) {
      return function(selector) {
        return pure45(d3FilterSelection_(selection_)(selector));
      };
    };
  };
  var selectionAttach = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(selector) {
      return pure45(d3SelectAllInDOM_(selector));
    };
  };
  var selectionAppendElement = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var discard112 = discard8(Monad0.Bind1());
    var selectionModifySelection1 = selectionModifySelection(dictSelectionM);
    var pure45 = pure(Monad0.Applicative0());
    return function(selection_) {
      return function(element3) {
        return function(attributes) {
          var appended_ = d3Append_(show10(element3))(selection_);
          return discard112(selectionModifySelection1(appended_)(attributes))(function() {
            return pure45(appended_);
          });
        };
      };
    };
  };

  // output/Data.Map/index.js
  var keys3 = /* @__PURE__ */ (function() {
    var $38 = $$void(functorMap);
    return function($39) {
      return fromMap($38($39));
    };
  })();

  // output/PSD3.Internal.Simulation.Functions/index.js
  var _handle4 = /* @__PURE__ */ _handle(strongForget);
  var discard9 = /* @__PURE__ */ discard(discardUnit);
  var _forceLibrary2 = /* @__PURE__ */ _forceLibrary(strongFn);
  var _forceLibrary1 = /* @__PURE__ */ _forceLibrary(strongForget);
  var map37 = /* @__PURE__ */ map(functorMap);
  var _d3Simulation2 = /* @__PURE__ */ _d3Simulation(strongFn);
  var _alpha2 = /* @__PURE__ */ _alpha(strongFn);
  var _alphaTarget2 = /* @__PURE__ */ _alphaTarget(strongFn);
  var _alphaMin2 = /* @__PURE__ */ _alphaMin(strongFn);
  var _alphaDecay2 = /* @__PURE__ */ _alphaDecay(strongFn);
  var _velocityDecay2 = /* @__PURE__ */ _velocityDecay(strongFn);
  var fromFoldable10 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var difference4 = /* @__PURE__ */ difference2(ordString);
  var fromFoldable14 = /* @__PURE__ */ fromFoldable5(foldableSet)(ordString);
  var intersection3 = /* @__PURE__ */ intersection(ordString);
  var spy3 = /* @__PURE__ */ spy();
  var simulationStop = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var pure45 = pure(Monad0.Applicative0());
    return bind(Monad0.Bind1())(use(dictMonadState)(_handle4))(function(handle) {
      var v = stopSimulation_(handle);
      return pure45(unit);
    });
  };
  var simulationStart = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var Bind1 = Monad0.Bind1();
    var discard112 = discard9(Bind1);
    var modifying2 = modifying(dictMonadState);
    var pure45 = pure(Monad0.Applicative0());
    return bind(Bind1)(use(dictMonadState)(_handle4))(function(handle) {
      return discard112(modifying2(function($245) {
        return _d3Simulation2(_alpha2($245));
      })($$const(1)))(function() {
        return pure45(startSimulation_(handle));
      });
    });
  };
  var simulationSetVariable = function(dictMonadState) {
    var bind71 = bind(dictMonadState.Monad0().Bind1());
    var use3 = use(dictMonadState);
    var modifying2 = modifying(dictMonadState);
    return function(v) {
      return bind71(use3(_handle4))(function(handle) {
        if (v instanceof Alpha) {
          var v1 = setAlpha_(handle)(v.value0);
          return modifying2(function($246) {
            return _d3Simulation2(_alpha2($246));
          })($$const(v.value0));
        }
        ;
        if (v instanceof AlphaTarget) {
          var v1 = setAlphaTarget_(handle)(v.value0);
          return modifying2(function($247) {
            return _d3Simulation2(_alphaTarget2($247));
          })($$const(v.value0));
        }
        ;
        if (v instanceof AlphaMin) {
          var v1 = setAlphaMin_(handle)(v.value0);
          return modifying2(function($248) {
            return _d3Simulation2(_alphaMin2($248));
          })($$const(v.value0));
        }
        ;
        if (v instanceof AlphaDecay) {
          var v1 = setAlphaDecay_(handle)(v.value0);
          return modifying2(function($249) {
            return _d3Simulation2(_alphaDecay2($249));
          })($$const(v.value0));
        }
        ;
        if (v instanceof VelocityDecay) {
          var v1 = setVelocityDecay_(handle)(v.value0);
          return modifying2(function($250) {
            return _d3Simulation2(_velocityDecay2($250));
          })($$const(v.value0));
        }
        ;
        throw new Error("Failed pattern match at PSD3.Internal.Simulation.Functions (line 115, column 3 - line 130, column 52): " + [v.constructor.name]);
      });
    };
  };
  var simulationSetNodes = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadState) {
      var use3 = use(dictMonadState);
      var pure45 = pure(dictMonadState.Monad0().Applicative0());
      return function(nodes) {
        return bind71(use3(_handle4))(function(handle) {
          var v = setNodes_(handle)(nodes);
          var opaqueNodes = getNodes_(handle);
          return pure45(opaqueNodes);
        });
      };
    };
  };
  var simulationSetLinks = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadState) {
      var use3 = use(dictMonadState);
      var pure45 = pure(dictMonadState.Monad0().Applicative0());
      return function(links) {
        return function(nodes) {
          return function(keyFn) {
            return bind71(use3(_handle4))(function(handle) {
              var v = setLinks_(handle)(swizzleLinks_(links)(nodes)(keyFn));
              var swizzledLinks = getLinksFromSimulation_(handle);
              return pure45(swizzledLinks);
            });
          };
        };
      };
    };
  };
  var simulationOn = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var bind71 = bind(Monad0.Bind1());
    var use3 = use(dictMonadState);
    var pure45 = pure(Monad0.Applicative0());
    return function(v) {
      return function(v1) {
        if (v1 instanceof Drag) {
          return bind71(use3(_handle4))(function(handle) {
            var v22 = (function() {
              if (v1.value0 instanceof DefaultDrag) {
                return simulationDrag_("default")(v)(handle)(simdrag_);
              }
              ;
              if (v1.value0 instanceof NoDrag) {
                return disableDrag_(v);
              }
              ;
              if (v1.value0 instanceof CustomDrag) {
                return simulationDrag_(v1.value0.value0)(v)(handle)(v1.value0.value1);
              }
              ;
              throw new Error("Failed pattern match at PSD3.Internal.Simulation.Functions (line 306, column 11 - line 309, column 78): " + [v1.value0.constructor.name]);
            })();
            return pure45(unit);
          });
        }
        ;
        if (v1 instanceof Zoom) {
          var v2 = (function() {
            if (v1.value0.extent instanceof DefaultZoomExtent) {
              return d3AttachZoomDefaultExtent_(v)({
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v1.value0.target
              });
            }
            ;
            if (v1.value0.extent instanceof ZoomExtent) {
              return d3AttachZoom_(v)({
                extent: [[v1.value0.extent.value0.left, v1.value0.extent.value0.top], [v1.value0.extent.value0.right, v1.value0.extent.value0.bottom]],
                scaleExtent: [v1.value0.scale.value0, v1.value0.scale.value1],
                name: v1.value0.name,
                target: v1.value0.target
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.Internal.Simulation.Functions (line 317, column 9 - line 331, column 14): " + [v1.value0.extent.constructor.name]);
          })();
          return pure45(unit);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Internal.Simulation.Functions (line 301, column 1 - line 303, column 51): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
  var simulationEnableForcesByLabel = function(dictMonadState) {
    var bind71 = bind(dictMonadState.Monad0().Bind1());
    var use3 = use(dictMonadState);
    var modifying2 = modifying(dictMonadState);
    return function(labels9) {
      return bind71(use3(_handle4))(function(handle) {
        return bind71(use3(_forceLibrary1))(function(forces2) {
          return modifying2(_forceLibrary2)($$const(map37(enableByLabels(handle)(labels9))(forces2)));
        });
      });
    };
  };
  var simulationDisableForcesByLabel = function(dictMonadState) {
    var bind71 = bind(dictMonadState.Monad0().Bind1());
    var use3 = use(dictMonadState);
    var modifying2 = modifying(dictMonadState);
    return function(labels9) {
      return bind71(use3(_handle4))(function(handle) {
        return bind71(use3(_forceLibrary1))(function(forces2) {
          return modifying2(_forceLibrary2)($$const(map37(disableByLabels(handle)(labels9))(forces2)));
        });
      });
    };
  };
  var simulationActualizeForces = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind71 = bind(Bind1);
    var use3 = use(dictMonadState);
    var discard112 = discard9(Bind1);
    var simulationEnableForcesByLabel1 = simulationEnableForcesByLabel(dictMonadState);
    var simulationDisableForcesByLabel1 = simulationDisableForcesByLabel(dictMonadState);
    var pure45 = pure(Monad0.Applicative0());
    return function(activeForces) {
      return bind71(use3(_handle4))(function(handle) {
        return bind71(use3(_forceLibrary1))(function(library) {
          var allLabels = keys3(library);
          var disableLabels = fromFoldable10(difference4(fromFoldable14(allLabels))(activeForces));
          var enableLabels = fromFoldable10(intersection3(activeForces)(fromFoldable14(allLabels)));
          var v = spy3("\u{1F527} actualizeForces - enabling")(enableLabels);
          var v1 = spy3("\u{1F527} actualizeForces - disabling")(disableLabels);
          return discard112(simulationEnableForcesByLabel1(enableLabels))(function() {
            return discard112(simulationDisableForcesByLabel1(disableLabels))(function() {
              return bind71(use3(_forceLibrary1))(function(updatedLibrary) {
                var v2 = map37(updateForceInSimulation(handle))(updatedLibrary);
                return pure45(unit);
              });
            });
          });
        });
      });
    };
  };

  // output/PSD3.Interpreter.D3/index.js
  var monadStateStateT2 = /* @__PURE__ */ monadStateStateT(monadEffect);
  var monadEffectState2 = /* @__PURE__ */ monadEffectState(monadEffectEffect);
  var monadStateT2 = /* @__PURE__ */ monadStateT(monadEffect);
  var liftA12 = /* @__PURE__ */ liftA1(applicativeEffect);
  var discard10 = /* @__PURE__ */ discard(discardUnit);
  var bindStateT2 = /* @__PURE__ */ bindStateT(monadEffect);
  var applicativeStateT2 = /* @__PURE__ */ applicativeStateT(monadEffect);
  var fromFoldable11 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var mapFlipped7 = /* @__PURE__ */ mapFlipped(functorArray);
  var _name3 = /* @__PURE__ */ _name(strongForget);
  var _Newtype3 = /* @__PURE__ */ _Newtype()()(profunctorFn);
  var prop6 = /* @__PURE__ */ prop3({
    reflectSymbol: function() {
      return "forceLibrary";
    }
  })()();
  var _handle5 = /* @__PURE__ */ _handle(strongForget);
  var toUnfoldable9 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var run_D3M_Simulation = function(simulation) {
    return function(v) {
      return runStateT(v)(simulation);
    };
  };
  var runD3M = function(v) {
    return runStateT(v)(unit);
  };
  var monadStateD3SimM = monadStateStateT2;
  var simulationOn2 = /* @__PURE__ */ simulationOn(monadStateD3SimM);
  var modify_3 = /* @__PURE__ */ modify_(monadStateD3SimM);
  var simulationActualizeForces2 = /* @__PURE__ */ simulationActualizeForces(monadStateD3SimM);
  var simulationSetVariable2 = /* @__PURE__ */ simulationSetVariable(monadStateD3SimM);
  var use2 = /* @__PURE__ */ use(monadStateD3SimM);
  var monadStateD3SankeyM = monadStateStateT2;
  var monadEffD3SimM = monadEffectState2;
  var monadEffD3SankeyM = monadEffectState2;
  var sankeySetData2 = /* @__PURE__ */ sankeySetData(monadEffD3SankeyM);
  var sankeySetDataWithConfig2 = /* @__PURE__ */ sankeySetDataWithConfig(monadEffD3SankeyM);
  var monadEffD3M = monadEffectState2;
  var monadD3SimM = monadStateT2;
  var selectionMD3Selection_D3S = {
    appendTo: function(s_) {
      return selectionAppendElement(selectionMD3Selection_D3S)(s_);
    },
    selectUnder: function(s_) {
      return selectionSelectUnder(selectionMD3Selection_D3S)(s_);
    },
    attach: function(selector) {
      return selectionAttach(selectionMD3Selection_D3S)(selector);
    },
    filterSelection: function(s_) {
      return selectionFilterSelection(selectionMD3Selection_D3S)(s_);
    },
    mergeSelections: function(s_) {
      return selectionMergeSelections(selectionMD3Selection_D3S)(s_);
    },
    setAttributes: function(s_) {
      return selectionModifySelection(selectionMD3Selection_D3S)(s_);
    },
    on: function(s_) {
      return simulationOn2(s_);
    },
    openSelection: function(s_) {
      return selectionOpenSelection(selectionMD3Selection_D3S)(s_);
    },
    simpleJoin: function(s_) {
      return selectionJoin(selectionMD3Selection_D3S)(s_);
    },
    updateJoin: function(s_) {
      return selectionUpdateJoin(selectionMD3Selection_D3S)(s_);
    },
    Monad0: function() {
      return monadD3SimM;
    }
  };
  var monadD3SankeyM = monadStateT2;
  var selectionMD3Selection_D3S1 = {
    appendTo: function(s_) {
      return selectionAppendElement(selectionMD3Selection_D3S1)(s_);
    },
    selectUnder: function(s_) {
      return selectionSelectUnder(selectionMD3Selection_D3S1)(s_);
    },
    attach: function(selector) {
      return selectionAttach(selectionMD3Selection_D3S1)(selector);
    },
    filterSelection: function(s_) {
      return selectionFilterSelection(selectionMD3Selection_D3S1)(s_);
    },
    mergeSelections: function(s_) {
      return selectionMergeSelections(selectionMD3Selection_D3S1)(s_);
    },
    setAttributes: function(s_) {
      return selectionModifySelection(selectionMD3Selection_D3S1)(s_);
    },
    on: function(s_) {
      return selectionOn(selectionMD3Selection_D3S1)(s_);
    },
    openSelection: function(s_) {
      return selectionOpenSelection(selectionMD3Selection_D3S1)(s_);
    },
    simpleJoin: function(s_) {
      return selectionJoin(selectionMD3Selection_D3S1)(s_);
    },
    updateJoin: function(s_) {
      return selectionUpdateJoin(selectionMD3Selection_D3S1)(s_);
    },
    Monad0: function() {
      return monadD3SankeyM;
    }
  };
  var sankeyMD3Selection_D3Sank = {
    setSankeyData: function(data_2) {
      return function(width26) {
        return function(height26) {
          return sankeySetData2(data_2)(width26)(height26);
        };
      };
    },
    setSankeyDataWithConfig: function(data_2) {
      return function(width26) {
        return function(height26) {
          return function(config) {
            return sankeySetDataWithConfig2(data_2)(width26)(height26)(config);
          };
        };
      };
    },
    Monad0: function() {
      return monadD3SankeyM;
    },
    SelectionM1: function() {
      return selectionMD3Selection_D3S1;
    }
  };
  var monadD3M = monadStateT2;
  var exec_D3M_Simulation = function(simulation) {
    return function(v) {
      return liftA12(snd)(runStateT(v)(simulation));
    };
  };
  var runWithD3_Simulation = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(dictMonadState) {
      var get13 = get(dictMonadState);
      var modify_1 = modify_(dictMonadState);
      return function(dictMonadEffect) {
        var liftEffect51 = liftEffect(dictMonadEffect);
        return function(state_T) {
          return bind116(get13)(function(state3) {
            return bind116(liftEffect51(exec_D3M_Simulation(state3)(state_T)))(function(state$prime) {
              return modify_1(function(v) {
                return state$prime;
              });
            });
          });
        };
      };
    };
  };
  var exec_D3M_Sankey = function(state3) {
    return function(v) {
      return liftA12(snd)(runStateT(v)(state3));
    };
  };
  var runWithD3_Sankey = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(dictMonadState) {
      var get13 = get(dictMonadState);
      var modify_1 = modify_(dictMonadState);
      return function(dictMonadEffect) {
        var liftEffect51 = liftEffect(dictMonadEffect);
        return function(state_T) {
          return bind116(get13)(function(state3) {
            return bind116(liftEffect51(exec_D3M_Sankey(state3)(state_T)))(function(state$prime) {
              return modify_1(function(v) {
                return state$prime;
              });
            });
          });
        };
      };
    };
  };
  var eval_D3M = function(v) {
    return liftA12(fst)(runStateT(v)(unit));
  };
  var evalEffectSimulation = function(dictBind) {
    var bind116 = bind(dictBind);
    var discard211 = discard10(dictBind);
    return function(dictMonadState) {
      var get13 = get(dictMonadState);
      var modify_1 = modify_(dictMonadState);
      return function(dictMonadEffect) {
        var liftEffect51 = liftEffect(dictMonadEffect);
        var pure115 = pure(dictMonadEffect.Monad0().Applicative0());
        return function(state_T) {
          return bind116(get13)(function(state3) {
            return bind116(liftEffect51(run_D3M_Simulation(state3)(state_T)))(function(v) {
              return discard211(modify_1(function(v1) {
                return v.value1;
              }))(function() {
                return pure115(v.value0);
              });
            });
          });
        };
      };
    };
  };
  var d3TaglessD3M = {
    attach: function(selector) {
      return selectionAttach(d3TaglessD3M)(selector);
    },
    selectUnder: function(s_) {
      return selectionSelectUnder(d3TaglessD3M)(s_);
    },
    appendTo: function(s_) {
      return selectionAppendElement(d3TaglessD3M)(s_);
    },
    filterSelection: function(s_) {
      return selectionFilterSelection(d3TaglessD3M)(s_);
    },
    openSelection: function(s_) {
      return selectionOpenSelection(d3TaglessD3M)(s_);
    },
    mergeSelections: function(s_) {
      return selectionMergeSelections(d3TaglessD3M)(s_);
    },
    setAttributes: function(s_) {
      return selectionModifySelection(d3TaglessD3M)(s_);
    },
    simpleJoin: function(s_) {
      return selectionJoin(d3TaglessD3M)(s_);
    },
    updateJoin: function(s_) {
      return selectionUpdateJoin(d3TaglessD3M)(s_);
    },
    on: function(s_) {
      return selectionOn(d3TaglessD3M)(s_);
    },
    Monad0: function() {
      return monadD3M;
    }
  };
  var bindD3SimM = bindStateT2;
  var discard12 = /* @__PURE__ */ discard10(bindD3SimM);
  var bind9 = /* @__PURE__ */ bind(bindD3SimM);
  var simulationSetNodes2 = /* @__PURE__ */ simulationSetNodes(bindD3SimM)(monadStateD3SimM);
  var simulationSetLinks2 = /* @__PURE__ */ simulationSetLinks(bindD3SimM)(monadStateD3SimM);
  var bindD3SankeyM = bindStateT2;
  var bindD3M = bindStateT2;
  var applicativeD3SimM = applicativeStateT2;
  var pure17 = /* @__PURE__ */ pure(applicativeD3SimM);
  var sequence2 = /* @__PURE__ */ sequence(traversableArray)(applicativeD3SimM);
  var simulationMD3Selection_D3 = {
    init: function(config) {
      var forcesMap = fromFoldable11(mapFlipped7(config.forces)(function(f) {
        return new Tuple(view(_name3)(f), f);
      }));
      return discard12(modify_3(function(state3) {
        var $134 = {};
        for (var $135 in state3) {
          if ({}.hasOwnProperty.call(state3, $135)) {
            $134[$135] = state3[$135];
          }
          ;
        }
        ;
        $134.simulation = set((function() {
          var $163 = prop6($$Proxy.value)(strongFn);
          return function($164) {
            return _Newtype3($163($164));
          };
        })())(forcesMap)(state3.simulation);
        return $134;
      }))(function() {
        return bind9(simulationSetNodes2(config.nodes))(function(nodesInSim) {
          return discard12(simulationActualizeForces2(config.activeForces))(function() {
            return bind9(simulationSetLinks2(config.links)(config.nodes)(config.keyFn))(function(linksInSim) {
              return discard12(simulationSetVariable2(new AlphaTarget(config.config.alphaTarget)))(function() {
                return discard12(simulationSetVariable2(new AlphaMin(config.config.alphaMin)))(function() {
                  return discard12(simulationSetVariable2(new AlphaDecay(config.config.alphaDecay)))(function() {
                    return discard12(simulationSetVariable2(new VelocityDecay(config.config.velocityDecay)))(function() {
                      return bind9(use2(_handle5))(function(handle) {
                        var addTick = function(label5) {
                          return function(step5) {
                            if (step5 instanceof StepTransformFFI) {
                              return pure17(unit);
                            }
                            ;
                            if (step5 instanceof Step3) {
                              var makeTick = function(v2) {
                                var v1 = mapFlipped7(step5.value1)(applySelectionAttributeD3(step5.value0));
                                return unit;
                              };
                              var v = onTick_(handle)(label5)(makeTick);
                              return pure17(unit);
                            }
                            ;
                            throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 158, column 30 - line 165, column 22): " + [step5.constructor.name]);
                          };
                        };
                        return bind9(sequence2(mapFlipped7(toUnfoldable9(config.ticks))(function(v) {
                          return addTick(v.value0)(v.value1);
                        })))(function() {
                          return pure17({
                            nodes: nodesInSim,
                            links: linksInSim
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    },
    start: /* @__PURE__ */ simulationStart(monadStateD3SimM),
    stop: /* @__PURE__ */ simulationStop(monadStateD3SimM),
    Monad0: function() {
      return monadD3SimM;
    },
    SelectionM1: function() {
      return selectionMD3Selection_D3S;
    }
  };
  var simulationM2D3Selection_D = {
    update: function(config) {
      return bind9(use2(_handle5))(function(handle) {
        return bind9(pure17(getNodes_(handle)))(function(currentNodes) {
          return discard12((function() {
            if (config.config instanceof Nothing) {
              return pure17(unit);
            }
            ;
            if (config.config instanceof Just) {
              return discard12(simulationSetVariable2(new AlphaTarget(config.config.value0.alphaTarget)))(function() {
                return discard12(simulationSetVariable2(new AlphaMin(config.config.value0.alphaMin)))(function() {
                  return discard12(simulationSetVariable2(new AlphaDecay(config.config.value0.alphaDecay)))(function() {
                    return simulationSetVariable2(new VelocityDecay(config.config.value0.velocityDecay));
                  });
                });
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 187, column 5 - line 193, column 70): " + [config.config.constructor.name]);
          })())(function() {
            return bind9((function() {
              if (config.nodes instanceof Nothing) {
                return pure17(currentNodes);
              }
              ;
              if (config.nodes instanceof Just) {
                return pure17(config.nodes.value0);
              }
              ;
              throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 197, column 26 - line 199, column 37): " + [config.nodes.constructor.name]);
            })())(function(nodesBeforeFilter) {
              var nodesFiltered = (function() {
                if (config.nodeFilter instanceof Nothing) {
                  return nodesBeforeFilter;
                }
                ;
                if (config.nodeFilter instanceof Just) {
                  return filter2(config.nodeFilter.value0)(nodesBeforeFilter);
                }
                ;
                throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 200, column 25 - line 202, column 69): " + [config.nodeFilter.constructor.name]);
              })();
              return bind9(simulationSetNodes2(nodesFiltered))(function(nodesInSim) {
                return discard12((function() {
                  if (config.activeForces instanceof Nothing) {
                    return pure17(unit);
                  }
                  ;
                  if (config.activeForces instanceof Just) {
                    return simulationActualizeForces2(config.activeForces.value0);
                  }
                  ;
                  throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 206, column 5 - line 208, column 54): " + [config.activeForces.constructor.name]);
                })())(function() {
                  return bind9((function() {
                    if (config.links instanceof Nothing) {
                      return pure17(getLinksFromSimulation_(handle));
                    }
                    ;
                    if (config.links instanceof Just) {
                      var linksFiltered = (function() {
                        if (config.linkFilter instanceof Nothing) {
                          return config.links.value0;
                        }
                        ;
                        if (config.linkFilter instanceof Just) {
                          return filter2(config.linkFilter.value0)(config.links.value0);
                        }
                        ;
                        throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 215, column 29 - line 217, column 64): " + [config.linkFilter.constructor.name]);
                      })();
                      return simulationSetLinks2(linksFiltered)(nodesInSim)(config.keyFn);
                    }
                    ;
                    throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 211, column 19 - line 218, column 65): " + [config.links.constructor.name]);
                  })())(function(linksInSim) {
                    return pure17({
                      nodes: nodesInSim,
                      links: linksInSim
                    });
                  });
                });
              });
            });
          });
        });
      });
    },
    addTickFunction: function(v) {
      return function(v1) {
        if (v1 instanceof StepTransformFFI) {
          return pure17(unit);
        }
        ;
        if (v1 instanceof Step3) {
          return bind9(use2(_handle5))(function(handle) {
            var makeTick = function(v22) {
              var v3 = mapFlipped7(v1.value1)(applySelectionAttributeD3(v1.value0));
              return unit;
            };
            var v2 = onTick_(handle)(v)(makeTick);
            return pure17(unit);
          });
        }
        ;
        throw new Error("Failed pattern match at PSD3.Interpreter.D3 (line 180, column 1 - line 236, column 14): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    removeTickFunction: function(label5) {
      return bind9(use2(_handle5))(function(handle) {
        var v = disableTick_(handle)(label5);
        return pure17(unit);
      });
    },
    Monad0: function() {
      return monadD3SimM;
    },
    SimulationM1: function() {
      return simulationMD3Selection_D3;
    }
  };

  // output/PSD3.CodeAtlas.CodeAtlas/index.js
  var eq4 = /* @__PURE__ */ eq(eqAtlasTab);
  var show11 = /* @__PURE__ */ show(showAtlasTab);
  var bind10 = /* @__PURE__ */ bind(bindHalogenM);
  var discard11 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_4 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var get7 = /* @__PURE__ */ get(monadStateHalogenM);
  var runWithD3_Simulation2 = /* @__PURE__ */ runWithD3_Simulation(bindHalogenM)(monadStateHalogenM);
  var drawModuleGraph2 = /* @__PURE__ */ drawModuleGraph(bindD3SimM)(monadEffD3SimM)(monadStateD3SimM)(selectionMD3Selection_D3S)(simulationM2D3Selection_D);
  var pure18 = /* @__PURE__ */ pure(applicativeHalogenM);
  var drawInteractiveGraph2 = /* @__PURE__ */ drawInteractiveGraph(bindD3SimM)(monadEffD3SimM)(monadStateD3SimM)(selectionMD3Selection_D3S)(simulationMD3Selection_D3)(simulationM2D3Selection_D);
  var renderTab = function(tab) {
    return function(activeTab) {
      return button([classes(["code-atlas-tab", (function() {
        var $44 = eq4(tab)(activeTab);
        if ($44) {
          return "code-atlas-tab--active";
        }
        ;
        return "";
      })()]), onClick(function(v) {
        return new SetActiveTab(tab);
      })])([text5(show11(tab))]);
    };
  };
  var render2 = function(state3) {
    return div2([classes(["code-atlas-page"])])([header([classes(["code-atlas-header"])])([h1_([text5("Code Atlas")]), p([classes(["code-atlas-subtitle"])])([text5("Explore the codebase through declarations, function calls, and type dependencies")])]), div2([classes(["code-atlas-tabs"])])([renderTab(DeclarationsTab.value)(state3.activeTab), renderTab(VisualizationTab.value)(state3.activeTab), renderTab(InteractiveGraphTab.value)(state3.activeTab)]), div2([classes(["code-atlas-content"])])([(function() {
      if (state3.loading) {
        return div2([classes(["code-atlas-loading"])])([text5("Loading codebase data...")]);
      }
      ;
      if (!state3.loading) {
        if (state3.error instanceof Just) {
          return div2([classes(["code-atlas-error"])])([h3_([text5("Error Loading Data")]), p_([text5(state3.error.value0)]), p_([text5("Make sure you've generated the data files:")]), pre_([text5("npm run build\nnode scripts/generate-spago-data.js")])]);
        }
        ;
        if (state3.error instanceof Nothing) {
          if (state3.activeTab instanceof DeclarationsTab) {
            return render(state3);
          }
          ;
          if (state3.activeTab instanceof VisualizationTab) {
            return div2([classes(["module-graph-container"])])([div2([classes(["svg-container"])])([])]);
          }
          ;
          if (state3.activeTab instanceof InteractiveGraphTab) {
            return div2([classes(["interactive-graph-container"])])([div2([classes(["svg-container"])])([])]);
          }
          ;
          throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 73, column 26 - line 91, column 22): " + [state3.activeTab.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 63, column 22 - line 91, column 22): " + [state3.error.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 57, column 11 - line 91, column 22): " + [state3.loading.constructor.name]);
    })()])]);
  };
  var handleAction = function(dictMonadAff) {
    var liftAff36 = liftAff(monadAffHalogenM(dictMonadAff));
    var runWithD3_Simulation1 = runWithD3_Simulation2(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    return function(v) {
      if (v instanceof Initialize2) {
        return bind10(liftAff36(loadDeclarations))(function(declarationsResult) {
          return bind10(liftAff36(loadFunctionCalls))(function(functionCallsResult) {
            return bind10(liftAff36(loadModules))(function(modulesResult) {
              if (declarationsResult instanceof Right && (functionCallsResult instanceof Right && modulesResult instanceof Right)) {
                return discard11(modify_4(function(v1) {
                  var $53 = {};
                  for (var $54 in v1) {
                    if ({}.hasOwnProperty.call(v1, $54)) {
                      $53[$54] = v1[$54];
                    }
                    ;
                  }
                  ;
                  $53.loading = false;
                  return $53;
                }))(function() {
                  return handleAction(dictMonadAff)(new DataLoaded(declarationsResult.value0, functionCallsResult.value0, modulesResult.value0));
                });
              }
              ;
              if (declarationsResult instanceof Left) {
                return modify_4(function(v1) {
                  var $59 = {};
                  for (var $60 in v1) {
                    if ({}.hasOwnProperty.call(v1, $60)) {
                      $59[$60] = v1[$60];
                    }
                    ;
                  }
                  ;
                  $59.loading = false;
                  $59.error = new Just(declarationsResult.value0);
                  return $59;
                });
              }
              ;
              if (functionCallsResult instanceof Left) {
                return modify_4(function(v1) {
                  var $63 = {};
                  for (var $64 in v1) {
                    if ({}.hasOwnProperty.call(v1, $64)) {
                      $63[$64] = v1[$64];
                    }
                    ;
                  }
                  ;
                  $63.loading = false;
                  $63.error = new Just(functionCallsResult.value0);
                  return $63;
                });
              }
              ;
              if (modulesResult instanceof Left) {
                return modify_4(function(v1) {
                  var $67 = {};
                  for (var $68 in v1) {
                    if ({}.hasOwnProperty.call(v1, $68)) {
                      $67[$68] = v1[$68];
                    }
                    ;
                  }
                  ;
                  $67.loading = false;
                  $67.error = new Just(modulesResult.value0);
                  return $67;
                });
              }
              ;
              throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 116, column 5 - line 128, column 58): " + [declarationsResult.constructor.name, functionCallsResult.constructor.name, modulesResult.constructor.name]);
            });
          });
        });
      }
      ;
      if (v instanceof DataLoaded) {
        return modify_4(function(v1) {
          var $71 = {};
          for (var $72 in v1) {
            if ({}.hasOwnProperty.call(v1, $72)) {
              $71[$72] = v1[$72];
            }
            ;
          }
          ;
          $71.declarationsData = new Just(v.value0);
          $71.functionCallsData = new Just(v.value1);
          $71.moduleGraphData = new Just(v.value2);
          return $71;
        });
      }
      ;
      if (v instanceof DataLoadFailed) {
        return modify_4(function(v1) {
          var $77 = {};
          for (var $78 in v1) {
            if ({}.hasOwnProperty.call(v1, $78)) {
              $77[$78] = v1[$78];
            }
            ;
          }
          ;
          $77.error = new Just(v.value0);
          $77.loading = false;
          return $77;
        });
      }
      ;
      if (v instanceof SetActiveTab) {
        return discard11(modify_4(function(v1) {
          var $81 = {};
          for (var $82 in v1) {
            if ({}.hasOwnProperty.call(v1, $82)) {
              $81[$82] = v1[$82];
            }
            ;
          }
          ;
          $81.activeTab = v.value0;
          return $81;
        }))(function() {
          if (v.value0 instanceof VisualizationTab) {
            return bind10(get7)(function(state3) {
              if (state3.moduleGraphData instanceof Just) {
                return runWithD3_Simulation1(drawModuleGraph2(state3.moduleGraphData.value0)("div.svg-container"));
              }
              ;
              if (state3.moduleGraphData instanceof Nothing) {
                return pure18(unit);
              }
              ;
              throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 147, column 9 - line 151, column 31): " + [state3.moduleGraphData.constructor.name]);
            });
          }
          ;
          if (v.value0 instanceof InteractiveGraphTab) {
            return bind10(get7)(function(state3) {
              if (state3.moduleGraphData instanceof Just) {
                return runWithD3_Simulation1(drawInteractiveGraph2(state3.moduleGraphData.value0)("div.svg-container"));
              }
              ;
              if (state3.moduleGraphData instanceof Nothing) {
                return pure18(unit);
              }
              ;
              throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 155, column 9 - line 159, column 31): " + [state3.moduleGraphData.constructor.name]);
            });
          }
          ;
          return pure18(unit);
        });
      }
      ;
      if (v instanceof SetSearchQuery) {
        return modify_4(function(v1) {
          var $90 = {};
          for (var $91 in v1) {
            if ({}.hasOwnProperty.call(v1, $91)) {
              $90[$91] = v1[$91];
            }
            ;
          }
          ;
          $90.searchQuery = v.value0;
          return $90;
        });
      }
      ;
      if (v instanceof SetKindFilter) {
        return modify_4(function(v1) {
          var $94 = {};
          for (var $95 in v1) {
            if ({}.hasOwnProperty.call(v1, $95)) {
              $94[$95] = v1[$95];
            }
            ;
          }
          ;
          $94.selectedKindFilter = v.value0;
          return $94;
        });
      }
      ;
      if (v instanceof SetModuleFilter) {
        return modify_4(function(v1) {
          var $98 = {};
          for (var $99 in v1) {
            if ({}.hasOwnProperty.call(v1, $99)) {
              $98[$99] = v1[$99];
            }
            ;
          }
          ;
          $98.selectedModuleFilter = v.value0;
          return $98;
        });
      }
      ;
      if (v instanceof SetSourceFilter) {
        return modify_4(function(v1) {
          var $102 = {};
          for (var $103 in v1) {
            if ({}.hasOwnProperty.call(v1, $103)) {
              $102[$103] = v1[$103];
            }
            ;
          }
          ;
          $102.selectedSourceFilter = v.value0;
          return $102;
        });
      }
      ;
      if (v instanceof ClearFilters) {
        return modify_4(function(v1) {
          var $106 = {};
          for (var $107 in v1) {
            if ({}.hasOwnProperty.call(v1, $107)) {
              $106[$107] = v1[$107];
            }
            ;
          }
          ;
          $106.searchQuery = "";
          $106.selectedKindFilter = Nothing.value;
          $106.selectedModuleFilter = Nothing.value;
          $106.selectedSourceFilter = Nothing.value;
          return $106;
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.CodeAtlas.CodeAtlas (line 109, column 16 - line 181, column 8): " + [v.constructor.name]);
    };
  };
  var component = function(dictMonadAff) {
    return mkComponent({
      initialState,
      render: render2,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction(dictMonadAff),
        initialize: new Just(Initialize2.value)
      })
    });
  };

  // output/PSD3.CodeAtlas.CodeAtlasWrapper/index.js
  var component2 = /* @__PURE__ */ component(monadAffAff);

  // output/PSD3.Website.Types/index.js
  var UnderstandingSection = /* @__PURE__ */ (function() {
    function UnderstandingSection2() {
    }
    ;
    UnderstandingSection2.value = new UnderstandingSection2();
    return UnderstandingSection2;
  })();
  var TutorialSection = /* @__PURE__ */ (function() {
    function TutorialSection2() {
    }
    ;
    TutorialSection2.value = new TutorialSection2();
    return TutorialSection2;
  })();
  var HowToSection = /* @__PURE__ */ (function() {
    function HowToSection2() {
    }
    ;
    HowToSection2.value = new HowToSection2();
    return HowToSection2;
  })();
  var APISection = /* @__PURE__ */ (function() {
    function APISection2() {
    }
    ;
    APISection2.value = new APISection2();
    return APISection2;
  })();
  var Home = /* @__PURE__ */ (function() {
    function Home2() {
    }
    ;
    Home2.value = new Home2();
    return Home2;
  })();
  var GettingStarted = /* @__PURE__ */ (function() {
    function GettingStarted2() {
    }
    ;
    GettingStarted2.value = new GettingStarted2();
    return GettingStarted2;
  })();
  var Wizard = /* @__PURE__ */ (function() {
    function Wizard2() {
    }
    ;
    Wizard2.value = new Wizard2();
    return Wizard2;
  })();
  var HowtoIndex = /* @__PURE__ */ (function() {
    function HowtoIndex2() {
    }
    ;
    HowtoIndex2.value = new HowtoIndex2();
    return HowtoIndex2;
  })();
  var Reference = /* @__PURE__ */ (function() {
    function Reference2() {
    }
    ;
    Reference2.value = new Reference2();
    return Reference2;
  })();
  var ReferenceModule = /* @__PURE__ */ (function() {
    function ReferenceModule2(value0) {
      this.value0 = value0;
    }
    ;
    ReferenceModule2.create = function(value0) {
      return new ReferenceModule2(value0);
    };
    return ReferenceModule2;
  })();
  var About = /* @__PURE__ */ (function() {
    function About2() {
    }
    ;
    About2.value = new About2();
    return About2;
  })();
  var UnderstandingConcepts = /* @__PURE__ */ (function() {
    function UnderstandingConcepts2() {
    }
    ;
    UnderstandingConcepts2.value = new UnderstandingConcepts2();
    return UnderstandingConcepts2;
  })();
  var UnderstandingPatterns = /* @__PURE__ */ (function() {
    function UnderstandingPatterns2() {
    }
    ;
    UnderstandingPatterns2.value = new UnderstandingPatterns2();
    return UnderstandingPatterns2;
  })();
  var UnderstandingPhilosophy = /* @__PURE__ */ (function() {
    function UnderstandingPhilosophy2() {
    }
    ;
    UnderstandingPhilosophy2.value = new UnderstandingPhilosophy2();
    return UnderstandingPhilosophy2;
  })();
  var SimpleCharts1 = /* @__PURE__ */ (function() {
    function SimpleCharts12() {
    }
    ;
    SimpleCharts12.value = new SimpleCharts12();
    return SimpleCharts12;
  })();
  var SimpleCharts2 = /* @__PURE__ */ (function() {
    function SimpleCharts22() {
    }
    ;
    SimpleCharts22.value = new SimpleCharts22();
    return SimpleCharts22;
  })();
  var DataFlowViz = /* @__PURE__ */ (function() {
    function DataFlowViz2() {
    }
    ;
    DataFlowViz2.value = new DataFlowViz2();
    return DataFlowViz2;
  })();
  var Movement = /* @__PURE__ */ (function() {
    function Movement2() {
    }
    ;
    Movement2.value = new Movement2();
    return Movement2;
  })();
  var Hierarchies = /* @__PURE__ */ (function() {
    function Hierarchies2() {
    }
    ;
    Hierarchies2.value = new Hierarchies2();
    return Hierarchies2;
  })();
  var Interpreters = /* @__PURE__ */ (function() {
    function Interpreters2() {
    }
    ;
    Interpreters2.value = new Interpreters2();
    return Interpreters2;
  })();
  var CodeExplorer = /* @__PURE__ */ (function() {
    function CodeExplorer2() {
    }
    ;
    CodeExplorer2.value = new CodeExplorer2();
    return CodeExplorer2;
  })();
  var Explore = /* @__PURE__ */ (function() {
    function Explore2(value0) {
      this.value0 = value0;
    }
    ;
    Explore2.create = function(value0) {
      return new Explore2(value0);
    };
    return Explore2;
  })();
  var WealthHealth = /* @__PURE__ */ (function() {
    function WealthHealth2() {
    }
    ;
    WealthHealth2.value = new WealthHealth2();
    return WealthHealth2;
  })();
  var CodeAtlas = /* @__PURE__ */ (function() {
    function CodeAtlas2() {
    }
    ;
    CodeAtlas2.value = new CodeAtlas2();
    return CodeAtlas2;
  })();
  var NotFound = /* @__PURE__ */ (function() {
    function NotFound2() {
    }
    ;
    NotFound2.value = new NotFound2();
    return NotFound2;
  })();
  var eqSection = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof UnderstandingSection && y28 instanceof UnderstandingSection) {
          return true;
        }
        ;
        if (x30 instanceof TutorialSection && y28 instanceof TutorialSection) {
          return true;
        }
        ;
        if (x30 instanceof HowToSection && y28 instanceof HowToSection) {
          return true;
        }
        ;
        if (x30 instanceof APISection && y28 instanceof APISection) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eqRoute = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof Home && y28 instanceof Home) {
          return true;
        }
        ;
        if (x30 instanceof GettingStarted && y28 instanceof GettingStarted) {
          return true;
        }
        ;
        if (x30 instanceof Wizard && y28 instanceof Wizard) {
          return true;
        }
        ;
        if (x30 instanceof HowtoIndex && y28 instanceof HowtoIndex) {
          return true;
        }
        ;
        if (x30 instanceof Reference && y28 instanceof Reference) {
          return true;
        }
        ;
        if (x30 instanceof ReferenceModule && y28 instanceof ReferenceModule) {
          return x30.value0 === y28.value0;
        }
        ;
        if (x30 instanceof About && y28 instanceof About) {
          return true;
        }
        ;
        if (x30 instanceof UnderstandingConcepts && y28 instanceof UnderstandingConcepts) {
          return true;
        }
        ;
        if (x30 instanceof UnderstandingPatterns && y28 instanceof UnderstandingPatterns) {
          return true;
        }
        ;
        if (x30 instanceof UnderstandingPhilosophy && y28 instanceof UnderstandingPhilosophy) {
          return true;
        }
        ;
        if (x30 instanceof SimpleCharts1 && y28 instanceof SimpleCharts1) {
          return true;
        }
        ;
        if (x30 instanceof SimpleCharts2 && y28 instanceof SimpleCharts2) {
          return true;
        }
        ;
        if (x30 instanceof DataFlowViz && y28 instanceof DataFlowViz) {
          return true;
        }
        ;
        if (x30 instanceof Movement && y28 instanceof Movement) {
          return true;
        }
        ;
        if (x30 instanceof Hierarchies && y28 instanceof Hierarchies) {
          return true;
        }
        ;
        if (x30 instanceof Interpreters && y28 instanceof Interpreters) {
          return true;
        }
        ;
        if (x30 instanceof CodeExplorer && y28 instanceof CodeExplorer) {
          return true;
        }
        ;
        if (x30 instanceof Explore && y28 instanceof Explore) {
          return x30.value0 === y28.value0;
        }
        ;
        if (x30 instanceof WealthHealth && y28 instanceof WealthHealth) {
          return true;
        }
        ;
        if (x30 instanceof CodeAtlas && y28 instanceof CodeAtlas) {
          return true;
        }
        ;
        if (x30 instanceof NotFound && y28 instanceof NotFound) {
          return true;
        }
        ;
        return false;
      };
    }
  };

  // output/Data.Semiring.Free/index.js
  var append14 = /* @__PURE__ */ append(semigroupList);
  var bind11 = /* @__PURE__ */ bind(bindList);
  var pure19 = /* @__PURE__ */ pure(applicativeList);
  var semiringFree = /* @__PURE__ */ (function() {
    return {
      add: function(v) {
        return function(v1) {
          return append14(v)(v1);
        };
      },
      zero: Nil.value,
      mul: function(v) {
        return function(v1) {
          return bind11(v)(function(xs) {
            return bind11(v1)(function(ys) {
              return pure19(append14(xs)(ys));
            });
          });
        };
      },
      one: singleton3(Nil.value)
    };
  })();
  var free = function(a2) {
    return singleton3(singleton3(a2));
  };

  // output/Data.Validation.Semiring/index.js
  var V = function(x30) {
    return x30;
  };
  var validation = function(v) {
    return function(v1) {
      return function(v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }
        ;
        if (v2 instanceof Right) {
          return v1(v2.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Validation.Semiring (line 49, column 1 - line 49, column 84): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
  var invalid2 = function($113) {
    return V(Left.create($113));
  };
  var functorV = functorEither;
  var applyV = function(dictSemiring) {
    var mul3 = mul(dictSemiring);
    return {
      apply: function(v) {
        return function(v1) {
          if (v instanceof Left && v1 instanceof Left) {
            return new Left(mul3(v.value0)(v1.value0));
          }
          ;
          if (v instanceof Left) {
            return new Left(v.value0);
          }
          ;
          if (v1 instanceof Left) {
            return new Left(v1.value0);
          }
          ;
          if (v instanceof Right && v1 instanceof Right) {
            return new Right(v.value0(v1.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Validation.Semiring (line 90, column 1 - line 94, column 54): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorV;
      }
    };
  };
  var applicativeV = function(dictSemiring) {
    var applyV1 = applyV(dictSemiring);
    return {
      pure: function($121) {
        return V(Right.create($121));
      },
      Apply0: function() {
        return applyV1;
      }
    };
  };
  var altV = function(dictSemiring) {
    var add2 = add(dictSemiring);
    return {
      alt: function(v) {
        return function(v1) {
          if (v instanceof Left && v1 instanceof Left) {
            return new Left(add2(v.value0)(v1.value0));
          }
          ;
          if (v instanceof Left) {
            return v1;
          }
          ;
          if (v instanceof Right) {
            return new Right(v.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Validation.Semiring (line 105, column 1 - line 108, column 36): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorV;
      }
    };
  };

  // output/Routing.Match.Error/index.js
  var UnexpectedPath = /* @__PURE__ */ (function() {
    function UnexpectedPath2(value0) {
      this.value0 = value0;
    }
    ;
    UnexpectedPath2.create = function(value0) {
      return new UnexpectedPath2(value0);
    };
    return UnexpectedPath2;
  })();
  var ExpectedBoolean = /* @__PURE__ */ (function() {
    function ExpectedBoolean2() {
    }
    ;
    ExpectedBoolean2.value = new ExpectedBoolean2();
    return ExpectedBoolean2;
  })();
  var ExpectedEnd = /* @__PURE__ */ (function() {
    function ExpectedEnd2() {
    }
    ;
    ExpectedEnd2.value = new ExpectedEnd2();
    return ExpectedEnd2;
  })();
  var ExpectedNumber = /* @__PURE__ */ (function() {
    function ExpectedNumber2() {
    }
    ;
    ExpectedNumber2.value = new ExpectedNumber2();
    return ExpectedNumber2;
  })();
  var ExpectedInt = /* @__PURE__ */ (function() {
    function ExpectedInt2() {
    }
    ;
    ExpectedInt2.value = new ExpectedInt2();
    return ExpectedInt2;
  })();
  var ExpectedString = /* @__PURE__ */ (function() {
    function ExpectedString2() {
    }
    ;
    ExpectedString2.value = new ExpectedString2();
    return ExpectedString2;
  })();
  var ExpectedQuery = /* @__PURE__ */ (function() {
    function ExpectedQuery2() {
    }
    ;
    ExpectedQuery2.value = new ExpectedQuery2();
    return ExpectedQuery2;
  })();
  var ExpectedPathPart = /* @__PURE__ */ (function() {
    function ExpectedPathPart2() {
    }
    ;
    ExpectedPathPart2.value = new ExpectedPathPart2();
    return ExpectedPathPart2;
  })();
  var KeyNotFound = /* @__PURE__ */ (function() {
    function KeyNotFound2(value0) {
      this.value0 = value0;
    }
    ;
    KeyNotFound2.create = function(value0) {
      return new KeyNotFound2(value0);
    };
    return KeyNotFound2;
  })();
  var Fail = /* @__PURE__ */ (function() {
    function Fail2(value0) {
      this.value0 = value0;
    }
    ;
    Fail2.create = function(value0) {
      return new Fail2(value0);
    };
    return Fail2;
  })();
  var showMatchError = function(err) {
    if (err instanceof UnexpectedPath) {
      return "expected path part: " + err.value0;
    }
    ;
    if (err instanceof KeyNotFound) {
      return "key: " + (err.value0 + " has not found in query part");
    }
    ;
    if (err instanceof ExpectedQuery) {
      return "expected query - found path";
    }
    ;
    if (err instanceof ExpectedNumber) {
      return "expected number";
    }
    ;
    if (err instanceof ExpectedInt) {
      return "expected int";
    }
    ;
    if (err instanceof ExpectedBoolean) {
      return "expected boolean";
    }
    ;
    if (err instanceof ExpectedEnd) {
      return "expected end";
    }
    ;
    if (err instanceof ExpectedString) {
      return "expected string var";
    }
    ;
    if (err instanceof ExpectedPathPart) {
      return "expected path part, found query";
    }
    ;
    if (err instanceof Fail) {
      return "match error: " + err.value0;
    }
    ;
    throw new Error("Failed pattern match at Routing.Match.Error (line 19, column 3 - line 29, column 39): " + [err.constructor.name]);
  };

  // output/Routing.Types/index.js
  var Path4 = /* @__PURE__ */ (function() {
    function Path5(value0) {
      this.value0 = value0;
    }
    ;
    Path5.create = function(value0) {
      return new Path5(value0);
    };
    return Path5;
  })();
  var Query2 = /* @__PURE__ */ (function() {
    function Query3(value0) {
      this.value0 = value0;
    }
    ;
    Query3.create = function(value0) {
      return new Query3(value0);
    };
    return Query3;
  })();

  // output/Routing.Match/index.js
  var pure20 = /* @__PURE__ */ pure(/* @__PURE__ */ applicativeV(semiringFree));
  var foldl5 = /* @__PURE__ */ foldl(foldableList);
  var bind16 = /* @__PURE__ */ bind(bindList);
  var map38 = /* @__PURE__ */ map(functorList);
  var unwrap8 = /* @__PURE__ */ unwrap();
  var pure110 = /* @__PURE__ */ pure(applicativeList);
  var mul2 = /* @__PURE__ */ mul(semiringFree);
  var identity16 = /* @__PURE__ */ identity(categoryFn);
  var one3 = /* @__PURE__ */ one(semiringFree);
  var alt7 = /* @__PURE__ */ alt(/* @__PURE__ */ altV(semiringFree));
  var str = function(route) {
    if (route instanceof Cons && route.value0 instanceof Path4) {
      return pure20(new Tuple(route.value1, route.value0.value0));
    }
    ;
    return invalid2(free(ExpectedString.value));
  };
  var runMatch = function(v) {
    return function(route) {
      var foldErrors = function(errs) {
        return new Left(foldl5(function(b2) {
          return function(a2) {
            return a2 + ("\n" + b2);
          };
        })("")(bind16(map38(reverse)(unwrap8(errs)))(function(es) {
          return pure110(foldl5(function(b2) {
            return function(a2) {
              return a2 + (";" + b2);
            };
          })("")(map38(showMatchError)(es)));
        })));
      };
      return validation(foldErrors)(function($109) {
        return Right.create(snd($109));
      })(v(route));
    };
  };
  var matchFunctor = {
    map: function(fn) {
      return function(v) {
        return function(r) {
          return validation(invalid2)(function(v1) {
            return pure20(new Tuple(v1.value0, fn(v1.value1)));
          })(v(r));
        };
      };
    }
  };
  var matchApply = {
    apply: function(v) {
      return function(v1) {
        var processFnRes = function(v2) {
          return validation(invalid2)(function(v3) {
            return pure20(new Tuple(v3.value0, v2.value1(v3.value1)));
          })(v1(v2.value0));
        };
        var processFnErr = function(r) {
          return function(err) {
            return invalid2(mul2(err)(validation(identity16)($$const(one3))(v1(r))));
          };
        };
        return function(r) {
          return validation(processFnErr(r))(processFnRes)(v(r));
        };
      };
    },
    Functor0: function() {
      return matchFunctor;
    }
  };
  var matchApplicative = {
    pure: function(a2) {
      return function(r) {
        return pure20(new Tuple(r, a2));
      };
    },
    Apply0: function() {
      return matchApply;
    }
  };
  var matchAlt = {
    alt: function(v) {
      return function(v1) {
        return function(r) {
          return alt7(v(r))(v1(r));
        };
      };
    },
    Functor0: function() {
      return matchFunctor;
    }
  };
  var lit = function(input3) {
    return function(route) {
      if (route instanceof Cons && (route.value0 instanceof Path4 && route.value0.value0 === input3)) {
        return pure20(new Tuple(route.value1, unit));
      }
      ;
      if (route instanceof Cons && route.value0 instanceof Path4) {
        return invalid2(free(new UnexpectedPath(input3)));
      }
      ;
      return invalid2(free(ExpectedPathPart.value));
    };
  };
  var root2 = /* @__PURE__ */ lit("");
  var end = function(route) {
    if (route instanceof Nil) {
      return pure20(new Tuple(Nil.value, unit));
    }
    ;
    return invalid2(free(ExpectedEnd.value));
  };

  // output/PSD3.RoutingDSL/index.js
  var applyFirst2 = /* @__PURE__ */ applyFirst(matchApply);
  var voidRight2 = /* @__PURE__ */ voidRight(matchFunctor);
  var map39 = /* @__PURE__ */ map(matchFunctor);
  var applySecond2 = /* @__PURE__ */ applySecond(matchApply);
  var alt8 = /* @__PURE__ */ alt(matchAlt);
  var wizard = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Wizard.value)(lit("wizard")))(end);
  })();
  var wealthHealth = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(WealthHealth.value)(lit("wealth-health")))(end);
  })();
  var understandingPhilosophy = /* @__PURE__ */ (function() {
    return applyFirst2(applyFirst2(voidRight2(UnderstandingPhilosophy.value)(lit("understanding")))(lit("philosophy")))(end);
  })();
  var understandingPatterns = /* @__PURE__ */ (function() {
    return applyFirst2(applyFirst2(voidRight2(UnderstandingPatterns.value)(lit("understanding")))(lit("patterns")))(end);
  })();
  var understandingConcepts = /* @__PURE__ */ (function() {
    return applyFirst2(applyFirst2(voidRight2(UnderstandingConcepts.value)(lit("understanding")))(lit("concepts")))(end);
  })();
  var simpleCharts2 = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(SimpleCharts2.value)(lit("simple-charts-2")))(end);
  })();
  var simpleCharts1 = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(SimpleCharts1.value)(lit("simple-charts-1")))(end);
  })();
  var routeToPath = function(v) {
    if (v instanceof Home) {
      return "/home";
    }
    ;
    if (v instanceof GettingStarted) {
      return "/getting-started";
    }
    ;
    if (v instanceof Wizard) {
      return "/wizard";
    }
    ;
    if (v instanceof HowtoIndex) {
      return "/howto";
    }
    ;
    if (v instanceof Reference) {
      return "/reference";
    }
    ;
    if (v instanceof ReferenceModule) {
      return "/reference/" + v.value0;
    }
    ;
    if (v instanceof About) {
      return "/understanding/philosophy";
    }
    ;
    if (v instanceof UnderstandingConcepts) {
      return "/understanding/concepts";
    }
    ;
    if (v instanceof UnderstandingPatterns) {
      return "/understanding/patterns";
    }
    ;
    if (v instanceof UnderstandingPhilosophy) {
      return "/understanding/philosophy";
    }
    ;
    if (v instanceof SimpleCharts1) {
      return "/simple-charts-1";
    }
    ;
    if (v instanceof SimpleCharts2) {
      return "/simple-charts-2";
    }
    ;
    if (v instanceof DataFlowViz) {
      return "/data-flow";
    }
    ;
    if (v instanceof Movement) {
      return "/movement";
    }
    ;
    if (v instanceof Hierarchies) {
      return "/hierarchies";
    }
    ;
    if (v instanceof Interpreters) {
      return "/interpreters";
    }
    ;
    if (v instanceof CodeExplorer) {
      return "/code-explorer";
    }
    ;
    if (v instanceof Explore) {
      return "/explore/" + v.value0;
    }
    ;
    if (v instanceof WealthHealth) {
      return "/wealth-health";
    }
    ;
    if (v instanceof CodeAtlas) {
      return "/code-atlas";
    }
    ;
    if (v instanceof NotFound) {
      return "/not-found";
    }
    ;
    throw new Error("Failed pattern match at PSD3.RoutingDSL (line 134, column 1 - line 134, column 31): " + [v.constructor.name]);
  };
  var rootRedirect = /* @__PURE__ */ (function() {
    return voidRight2(Home.value)(end);
  })();
  var referenceModule = /* @__PURE__ */ (function() {
    return applyFirst2(map39(ReferenceModule.create)(applySecond2(lit("reference"))(str)))(end);
  })();
  var reference = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Reference.value)(lit("reference")))(end);
  })();
  var notFound = /* @__PURE__ */ (function() {
    return pure(matchApplicative)(NotFound.value);
  })();
  var movement = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Movement.value)(lit("movement")))(end);
  })();
  var interpreters = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Interpreters.value)(lit("interpreters")))(end);
  })();
  var howtoIndex = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(HowtoIndex.value)(lit("howto")))(end);
  })();
  var home = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Home.value)(lit("home")))(end);
  })();
  var hierarchies = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(Hierarchies.value)(lit("hierarchies")))(end);
  })();
  var gettingStarted = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(GettingStarted.value)(lit("getting-started")))(end);
  })();
  var explore = /* @__PURE__ */ (function() {
    return applyFirst2(map39(Explore.create)(applySecond2(lit("explore"))(str)))(end);
  })();
  var dataFlowViz = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(DataFlowViz.value)(lit("data-flow")))(end);
  })();
  var codeExplorer = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(CodeExplorer.value)(lit("code-explorer")))(end);
  })();
  var codeAtlas = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(CodeAtlas.value)(lit("code-atlas")))(end);
  })();
  var about = /* @__PURE__ */ (function() {
    return applyFirst2(voidRight2(UnderstandingPhilosophy.value)(lit("about")))(end);
  })();
  var routes = /* @__PURE__ */ alt8(home)(/* @__PURE__ */ alt8(gettingStarted)(/* @__PURE__ */ alt8(wizard)(/* @__PURE__ */ alt8(howtoIndex)(/* @__PURE__ */ alt8(referenceModule)(/* @__PURE__ */ alt8(reference)(/* @__PURE__ */ alt8(understandingConcepts)(/* @__PURE__ */ alt8(understandingPatterns)(/* @__PURE__ */ alt8(understandingPhilosophy)(/* @__PURE__ */ alt8(about)(/* @__PURE__ */ alt8(simpleCharts1)(/* @__PURE__ */ alt8(simpleCharts2)(/* @__PURE__ */ alt8(dataFlowViz)(/* @__PURE__ */ alt8(movement)(/* @__PURE__ */ alt8(hierarchies)(/* @__PURE__ */ alt8(interpreters)(/* @__PURE__ */ alt8(codeExplorer)(/* @__PURE__ */ alt8(explore)(/* @__PURE__ */ alt8(wealthHealth)(/* @__PURE__ */ alt8(codeAtlas)(/* @__PURE__ */ alt8(rootRedirect)(notFound)))))))))))))))))))));
  var routing = /* @__PURE__ */ applySecond2(root2)(routes);

  // output/PSD3.Shared.RHSNavigation/index.js
  var eq5 = /* @__PURE__ */ eq(eqRoute);
  var navLink = function(route) {
    return function(label5) {
      return function(currentRoute) {
        var $3 = eq5(route)(currentRoute);
        if ($3) {
          return span3([classes(["explanation-page__nav-link", "explanation-page__nav-link--active"])])([text5(label5)]);
        }
        ;
        return a([href4("#" + routeToPath(route)), classes(["explanation-page__nav-link"])])([text5(label5 + " \u2192")]);
      };
    };
  };
  var render3 = function(currentRoute) {
    return div2([classes(["explanation-page__nav-panel"])])([h3([classes(["explanation-page__nav-title"])])([text5("How-to Guides")]), nav([classes(["explanation-page__nav-links"])])([navLink(HowtoIndex.value)("\u2190 All Guides")(currentRoute), hr([classes(["explanation-page__nav-divider"])]), p([classes(["explanation-page__nav-section-title"])])([text5("Basic Visualizations")]), navLink(new Explore("TLCSimple"))("Three Little Circles")(currentRoute), navLink(new Explore("GUP"))("General Update Pattern")(currentRoute), navLink(new Explore("TLCParabola"))("Data-Driven Positioning")(currentRoute), navLink(new Explore("BarChartDraw"))("Build a Bar Chart")(currentRoute), navLink(new Explore("LineChartDraw"))("Build a Line Chart")(currentRoute), navLink(new Explore("ScatterPlotQuartet"))("Anscombe's Quartet")(currentRoute), hr([classes(["explanation-page__nav-divider"])]), a([href4("https://github.com/afcondon/purescript-d3-tagless"), target5("_blank"), rel4("noopener noreferrer"), classes(["explanation-page__nav-link", "explanation-page__nav-link--external"])])([text5("GitHub \u2197")])])]);
  };
  var component3 = /* @__PURE__ */ mkComponent({
    initialState: /* @__PURE__ */ identity(categoryFn),
    render: render3,
    "eval": /* @__PURE__ */ mkEval(defaultEval)
  });

  // output/PSD3.Shared.Utilities/foreign.js
  function highlightString_(codetext) {
    const highlightedCode = Prism.highlight(codetext, Prism.languages.haskell, "haskell");
    return highlightedCode;
  }

  // output/Html.Parser/foreign.js
  function getAttributes(node) {
    var entries = [];
    for (var i2 = 0; i2 < node.attributes.length; i2++) {
      let { name: name16, value: value19 } = node.attributes.item(i2);
      entries.push([name16, value19]);
    }
    return entries;
  }
  function walk(treeWalker) {
    var nodes = [];
    function handleNode(node) {
      if (["#comment", "#text"].includes(node.nodeName)) {
        var text21 = node.textContent;
        if (text21) {
          nodes.push({
            type: node.nodeName.slice(1),
            text: text21
          });
        }
      } else {
        var children3 = walk(treeWalker);
        treeWalker.currentNode = node;
        nodes.push({
          type: "element",
          name: node.localName,
          attributes: getAttributes(node),
          children: children3
        });
      }
    }
    var currentNode = treeWalker.currentNode;
    var firstChild = treeWalker.firstChild();
    if (firstChild) {
      handleNode(firstChild);
    } else {
      return nodes;
    }
    var nextSibling2 = treeWalker.nextSibling();
    while (nextSibling2) {
      handleNode(nextSibling2);
      treeWalker.currentNode = nextSibling2;
      nextSibling2 = treeWalker.nextSibling();
    }
    return nodes;
  }
  function parseFromString(elementCtor) {
    return (attributeCtor) => (textCtor) => (commentCtor) => (input3) => {
      function mapNode(node) {
        if (node.type == "element") {
          return elementCtor({
            name: node.name,
            attributes: node.attributes.map(([k, v]) => attributeCtor(k)(v)),
            children: node.children.map(mapNode)
          });
        } else {
          var ctor = node.type == "text" ? textCtor : commentCtor;
          return ctor(node.text);
        }
      }
      var doc = new DOMParser().parseFromString(input3, "text/html");
      var headNodes = walk(
        doc.createTreeWalker(doc.documentElement.querySelector("head"))
      );
      var bodyNodes = walk(
        doc.createTreeWalker(doc.documentElement.querySelector("body"))
      );
      return [...headNodes, ...bodyNodes].map((node) => {
        if (node.type == "element") {
          return mapNode(node);
        } else {
          var ctor = node.type == "text" ? textCtor : commentCtor;
          return ctor(node.text);
        }
      });
    };
  }

  // output/Html.Parser/index.js
  var HtmlAttribute = /* @__PURE__ */ (function() {
    function HtmlAttribute2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    HtmlAttribute2.create = function(value0) {
      return function(value1) {
        return new HtmlAttribute2(value0, value1);
      };
    };
    return HtmlAttribute2;
  })();
  var HtmlElement = /* @__PURE__ */ (function() {
    function HtmlElement2(value0) {
      this.value0 = value0;
    }
    ;
    HtmlElement2.create = function(value0) {
      return new HtmlElement2(value0);
    };
    return HtmlElement2;
  })();
  var HtmlText = /* @__PURE__ */ (function() {
    function HtmlText2(value0) {
      this.value0 = value0;
    }
    ;
    HtmlText2.create = function(value0) {
      return new HtmlText2(value0);
    };
    return HtmlText2;
  })();
  var HtmlComment = /* @__PURE__ */ (function() {
    function HtmlComment2(value0) {
      this.value0 = value0;
    }
    ;
    HtmlComment2.create = function(value0) {
      return new HtmlComment2(value0);
    };
    return HtmlComment2;
  })();
  var parse6 = function(input3) {
    return parseFromString(HtmlElement.create)(HtmlAttribute.create)(HtmlText.create)(HtmlComment.create)(input3);
  };

  // output/Html.Renderer.Halogen/index.js
  var mapFlipped8 = /* @__PURE__ */ mapFlipped(functorMaybe);
  var alt9 = /* @__PURE__ */ alt(altMaybe);
  var mapFlipped12 = /* @__PURE__ */ mapFlipped(functorArray);
  var fromFoldable15 = /* @__PURE__ */ fromFoldable3(foldableArray);
  var map40 = /* @__PURE__ */ map(functorArray);
  var htmlAttributeToProp = function(v) {
    return attr2(v.value0)(v.value1);
  };
  var nodeToHtml = function(v) {
    return function(v1) {
      if (v1 instanceof HtmlElement) {
        return elementToHtml(v)(v1.value0);
      }
      ;
      if (v1 instanceof HtmlText) {
        return text5(v1.value0);
      }
      ;
      if (v1 instanceof HtmlComment) {
        return text5("");
      }
      ;
      throw new Error("Failed pattern match at Html.Renderer.Halogen (line 38, column 1 - line 38, column 72): " + [v.constructor.name, v1.constructor.name]);
    };
  };
  var elementToHtml = function(mParentNs) {
    return function(ele) {
      var mCurNs = mapFlipped8(find2(function(v) {
        return v.value0 === "xmlns";
      })(ele.attributes))(function(v) {
        return v.value1;
      });
      var mNs = alt9(mCurNs)(mParentNs);
      var ctor = (function() {
        if (mNs instanceof Just) {
          return elementNS(mNs.value0);
        }
        ;
        if (mNs instanceof Nothing) {
          return element2;
        }
        ;
        throw new Error("Failed pattern match at Html.Renderer.Halogen (line 34, column 12 - line 36, column 28): " + [mNs.constructor.name]);
      })();
      var children3 = mapFlipped12(ele.children)(nodeToHtml(mNs));
      return ctor(ele.name)(fromFoldable15(map40(htmlAttributeToProp)(ele.attributes)))(children3);
    };
  };
  var renderToArray = function(raw) {
    return map40(nodeToHtml(Nothing.value))(parse6(raw));
  };
  var render4 = function(props) {
    var $28 = div2(props);
    return function($29) {
      return $28(renderToArray($29));
    };
  };
  var render_ = /* @__PURE__ */ render4([]);

  // output/PSD3.Shared.Utilities/index.js
  var syntaxHighlightedCode = function(codetext) {
    return [pre([class_("language-haskell")])([code_([render_(highlightString_(codetext))])])];
  };

  // output/PSD3.Understanding.TOC/index.js
  var show15 = /* @__PURE__ */ show(showInt);
  var append15 = /* @__PURE__ */ append(semigroupArray);
  var type_20 = /* @__PURE__ */ type_17(isPropButtonType);
  var map41 = /* @__PURE__ */ map(functorArray);
  var AnchorLink = /* @__PURE__ */ (function() {
    function AnchorLink2(value0) {
      this.value0 = value0;
    }
    ;
    AnchorLink2.create = function(value0) {
      return new AnchorLink2(value0);
    };
    return AnchorLink2;
  })();
  var RouteLink = /* @__PURE__ */ (function() {
    function RouteLink2(value0) {
      this.value0 = value0;
    }
    ;
    RouteLink2.create = function(value0) {
      return new RouteLink2(value0);
    };
    return RouteLink2;
  })();
  var tocRoute = function(route) {
    return function(label5) {
      return function(level) {
        return {
          target: new RouteLink(route),
          label: label5,
          level
        };
      };
    };
  };
  var tocAnchor = function(anchor) {
    return function(label5) {
      return function(level) {
        return {
          target: new AnchorLink(anchor),
          label: label5,
          level
        };
      };
    };
  };
  var renderTOCItem = function(item) {
    var routeLinkClass = (function() {
      if (item.target instanceof RouteLink) {
        return ["toc-nav__item--route-link"];
      }
      ;
      return [];
    })();
    var levelClass = (function() {
      if (item.level === 0) {
        return [];
      }
      ;
      return ["toc-nav__item--level-" + show15(item.level + 1 | 0)];
    })();
    var href5 = (function() {
      if (item.target instanceof AnchorLink) {
        return "#" + item.target.value0;
      }
      ;
      if (item.target instanceof RouteLink) {
        return "#" + routeToPath(item.target.value0);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Understanding.TOC (line 75, column 12 - line 77, column 50): " + [item.target.constructor.name]);
    })();
    var classes2 = append15(["toc-nav__item"])(append15(levelClass)(routeLinkClass));
    return a([href4(href5), classes(classes2)])([text5(item.label)]);
  };
  var renderTOC = function(config) {
    return div2([classes(["toc-panel"])])([img([src9(fromMaybe("bookmark.jpeg")(config.image)), alt5(""), classes(["toc-panel__bookmark-pin"])]), div2([classes(["toc-panel__main"])])([div2([classes(["floating-panel__header"])])([h3([classes(["floating-panel__title"])])([text5(config.title)]), button([classes(["floating-panel__toggle"]), type_20(ButtonButton.value)])([text5("\u2212")])]), div2([classes(["floating-panel__content", "toc-panel__content"])])([nav([classes(["toc-nav"])])(map41(renderTOCItem)(config.items))])])]);
  };

  // output/Snippets/index.js
  var bind17 = /* @__PURE__ */ bind(bindAff);
  var spy4 = /* @__PURE__ */ spy();
  var pure21 = /* @__PURE__ */ pure(applicativeAff);
  var readSnippetFiles = function(name16) {
    return bind17(get3(string)("./code-examples/" + name16))(function(response) {
      if (response instanceof Left) {
        return spy4("couldn't read snippet, error: ")(pure21(printError(response.value0)));
      }
      ;
      if (response instanceof Right) {
        return spy4("read snippet: ")(pure21(response.value0.body));
      }
      ;
      throw new Error("Failed pattern match at Snippets (line 60, column 3 - line 62, column 52): " + [response.constructor.name]);
    });
  };

  // output/PSD3.CodeExplorer.CodeExplorationPage/index.js
  var bind18 = /* @__PURE__ */ bind(bindHalogenM);
  var get8 = /* @__PURE__ */ get(monadStateHalogenM);
  var liftAff2 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_5 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var liftEffect7 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var slot_2 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "rhsNav";
    }
  })(ordUnit);
  var Initialize3 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var GoBack = /* @__PURE__ */ (function() {
    function GoBack2() {
    }
    ;
    GoBack2.value = new GoBack2();
    return GoBack2;
  })();
  var handleAction2 = function(v) {
    if (v instanceof Initialize3) {
      return bind18(get8)(function(state3) {
        return bind18(liftAff2(readSnippetFiles(state3.snippetId + ".purs")))(function(code2) {
          return modify_5(function(v1) {
            var $18 = {};
            for (var $19 in v1) {
              if ({}.hasOwnProperty.call(v1, $19)) {
                $18[$19] = v1[$19];
              }
              ;
            }
            ;
            $18.snippetCode = new Just(code2);
            return $18;
          });
        });
      });
    }
    ;
    if (v instanceof GoBack) {
      return liftEffect7(function __do4() {
        var w = windowImpl();
        var h = history(w)();
        return back(h)();
      });
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeExplorer.CodeExplorationPage (line 55, column 16 - line 67, column 13): " + [v.constructor.name]);
  };
  var _rhsNav = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render5 = function(state3) {
    return div2([classes(["howto-page", "exploration-page"])])([renderTOC({
      title: "Breakdown",
      items: [tocAnchor("overview")("Overview")(0), tocAnchor("code")("The Code")(0), tocAnchor("line-by-line")("Line by Line")(0), tocAnchor("concepts")("Key Concepts")(0), tocAnchor("reference")("API Reference")(0), tocAnchor("related")("Related Examples")(0)],
      image: new Just("images/howto-bookmark-volcano.jpeg")
    }), slot_2(_rhsNav)(unit)(component3)(new Explore(state3.snippetId)), section([classes(["tutorial-section", "tutorial-intro", "exploration-intro"]), id2("overview")])([h1([classes(["tutorial-title", "exploration-title"])])([text5("Exploring: " + state3.snippetId)]), p_([text5("Welcome to the code exploration zone. Here we'll disassemble every aspect of this code snippet, explain the concepts behind it, and connect you to the library reference documentation.")]), p_([text5("This is your deep dive into PureScript D3 programming - understanding not just what the code does, but why it's written this way, what each function means, and where to learn more.")]), p_([text5("When you've finished exploring this code, "), a([classes(["exploration-back-link"]), onClick(function(v) {
      return GoBack.value;
    })])([text5("this link")]), text5(" will take you back to the example you came from.")])]), section([classes(["tutorial-section"]), id2("code")])([h2([classes(["tutorial-section-title"])])([text5("The Code")]), p_([text5("Here's the complete code for this example:")]), div2([classes(["tutorial-code-block"])])(syntaxHighlightedCode(fromMaybe("-- Snippet not found: " + (state3.snippetId + ".purs"))(state3.snippetCode)))]), section([classes(["tutorial-section"]), id2("line-by-line")])([h2([classes(["tutorial-section-title"])])([text5("Line by Line Breakdown")]), p_([text5("Coming soon: A detailed walkthrough of each line, with clickable function names linking to their API documentation.")]), div2([classes(["placeholder-content"])])([p_([text5("This section will provide:")]), ul_([li_([text5("Annotated code with inline explanations")]), li_([text5("Clickable function names \u2192 API reference")]), li_([text5("Type signatures for each function used")]), li_([text5("Data flow visualization")]), li_([text5("Common patterns and idioms explained")])]), p_([text5("Example structure:")]), pre([classes(["code-example-annotated"])])([code_([text5('-- Line 1: Attach to a DOM element\nroot <- attach "div.scatterplot-viz"\n        ^^^^^^\n        [attach] :: Selector s -> m s\n        Click to see full documentation \u2192\n\n-- Line 2: Create SVG with attributes\nsvg <- appendTo root Svg [...]\n       ^^^^^^^^\n       [appendTo] :: s -> Element -> Array Attr -> m s\n       Click to see full documentation \u2192')])])])]), section([classes(["tutorial-section"]), id2("concepts")])([h2([classes(["tutorial-section-title"])])([text5("Key Concepts")]), p_([text5("Coming soon: An explanation of the key programming concepts and D3 patterns used in this example.")]), div2([classes(["placeholder-content"])])([p_([text5("This section will explain:")]), ul_([li_([text5("Finally Tagless pattern - why and how")]), li_([text5("D3 selection concepts - the mental model")]), li_([text5("Data binding and joins - enter/update/exit")]), li_([text5("SVG element creation - coordinate systems")]), li_([text5("Monadic composition - chaining operations")])])])]), section([classes(["tutorial-section"]), id2("reference")])([h2([classes(["tutorial-section-title"])])([text5("API Reference")]), p_([text5("Gateway to the library reference documentation. Each function used in this example links to its full documentation.")]), div2([classes(["placeholder-content"])])([p_([text5("Functions used in this example:")]), div2([classes(["api-reference-list"])])([div2([classes(["api-reference-item"])])([h4_([text5("attach")]), pre_([code_([text5("attach :: forall s m. SelectionM s m => Selector s -> m s")])]), p_([text5("Attaches to an existing DOM element using a CSS selector. This is typically the first operation in any D3 visualization.")]), a([href4("#/reference/attach"), classes(["api-reference-link"])])([text5("\u2192 Full documentation")])]), div2([classes(["api-reference-item"])])([h4_([text5("appendTo")]), pre_([code_([text5("appendTo :: forall s m. SelectionM s m => s -> Element -> Array (Attr s) -> m s")])]), p_([text5("Appends a new element to an existing selection with specified attributes. Returns a selection containing the new element.")]), a([href4("#/reference/appendTo"), classes(["api-reference-link"])])([text5("\u2192 Full documentation")])]), p([classes(["api-reference-note"])])([text5("More functions will be documented here as the reference material is built out...")])])])]), section([classes(["tutorial-section"]), id2("related")])([h2([classes(["tutorial-section-title"])])([text5("Related Examples")]), p_([text5("Coming soon: Links to related examples and next steps in your learning journey.")]), div2([classes(["placeholder-content"])])([p_([text5("Explore similar examples:")]), ul_([li_([text5("Simple variations of this pattern")]), li_([text5("More complex examples building on these concepts")]), li_([text5("Alternative approaches to the same visualization")])])])])]);
  };
  var component4 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(snippetId) {
        return {
          snippetId,
          snippetCode: Nothing.value
        };
      },
      render: render5,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction2,
        initialize: new Just(Initialize3.value)
      })
    });
  })();

  // output/D3.Viz.Spago.Model/foreign.js
  var spotlitSelection;
  var spotlitNode;
  var sourcesSelection;
  var targetSelection;
  var spotlitID;
  var spotlit = false;
  spotlightNeighbours_ = (simulation, id5, nodetype) => {
    spotlit = true;
    spotlitID = id5;
    simulation.stop();
    svg = d3.select("div.svg-container svg");
    nodeSelection = svg.selectAll("g.nodes g");
    spotlitSelection = nodeSelection.filter((d9, i2) => d9.id == id5);
    spotlitNode = spotlitSelection.node();
    spotlitNode.__data__.fx = spotlitNode.__data__.fx || spotlitNode.__data__.x;
    spotlitNode.__data__.fy = spotlitNode.__data__.fy || spotlitNode.__data__.y;
    const targets = spotlitNode.__data__.links.targets;
    const sources = spotlitNode.__data__.links.sources;
    sourcesSelection = nodeSelection.filter((d9, i2) => sources.includes(d9.id));
    targetSelection = nodeSelection.filter((d9, i2) => targets.includes(d9.id));
    svg.classed("spotlight", true);
    sourcesSelection.classed("source", true);
    targetSelection.classed("target", true);
    spotlitSelection.classed("spotlight", true);
    spotlitSelection.classed("source target", false);
    simulation.force(
      "collide",
      d3.forceCollide().radius(
        (d9) => sources.includes(d9.id) || targets.includes(d9.id) ? d9.r * 4 : d9.id === d9.containerID ? 10 : d9.r
      )
    );
    simulation.alpha(1).restart();
  };
  unSpotlightNeighbours_ = (simulation) => {
    simulation.stop();
    svg.classed("spotlight", false);
    spotlitNode.__data__.fx = null;
    spotlitNode.__data__.fy = null;
    spotlitSelection.classed("spotlight", false);
    sourcesSelection.classed("source", false);
    targetSelection.classed("target", false);
    simulation.force(
      "collide",
      d3.forceCollide().radius((d9) => d9.id === d9.containerID ? 10 : d9.r)
    );
    simulation.restart();
    spotlit = false;
  };

  // output/D3.Viz.Spago.Files/foreign.js
  function readSpago_Raw_JSON_(modulesBody) {
    return (packagesBody) => (lsdepsBody) => (locBody) => {
      const modules = decodeModulesFile(modulesBody);
      const packages = decodePackagesFile(packagesBody);
      const lsDeps = decodeLsDepsFile(lsdepsBody);
      const loc = decodeLOCFile(locBody);
      const pathToLOC = buildPathLookup(loc);
      const modulesWithLOC = modules.map((module2) => ({
        ...module2,
        loc: lookupLOC(module2.path, pathToLOC, loc)
      }));
      return { modules: modulesWithLOC, packages, lsDeps, loc };
    };
  }
  function buildPathLookup(locArray) {
    const lookup17 = {};
    for (const entry of locArray) {
      lookup17[entry.path] = entry.loc;
      const parts = entry.path.split("/");
      if (parts[0] === ".spago" && parts.length >= 4) {
        const pkg = parts[1];
        const relPath = parts.slice(3).join("/");
        lookup17[`${pkg}::${relPath}`] = entry.loc;
      }
    }
    return lookup17;
  }
  function lookupLOC(modulePath, pathToLOC, locArray) {
    if (pathToLOC[modulePath]) {
      return pathToLOC[modulePath];
    }
    const parts = modulePath.split("/");
    if (parts[0] === ".spago" && parts.length >= 4) {
      let pkg, relPath;
      if (parts[1] === "p" && parts.length >= 5) {
        pkg = parts[2];
        relPath = parts.slice(4).join("/");
      } else {
        pkg = parts[1];
        relPath = parts.slice(3).join("/");
      }
      const fuzzyKey = `${pkg}::${relPath}`;
      if (pathToLOC[fuzzyKey]) {
        return pathToLOC[fuzzyKey];
      }
    }
    return 10;
  }
  var decodeModulesFile = function(filecontents) {
    const json2 = JSON.parse(filecontents);
    const modules = Object.keys(json2).map((key) => {
      return { key, depends: json2[key].depends, path: json2[key].path };
    });
    return modules;
  };
  var decodePackagesFile = function(filecontents) {
    const json2 = JSON.parse(filecontents);
    const packages = Object.keys(json2).map((key) => {
      return { key, depends: json2[key].depends };
    });
    return packages;
  };
  var decodeLOCFile = function(filecontents) {
    const json2 = JSON.parse(filecontents);
    return json2.loc;
  };
  var decodeLsDepsFile = function(filecontents) {
    const jsonlines = splitIntoLines(filecontents);
    jsonlines.length = jsonlines.length - 1;
    var objectArray = jsonlines.map((d9) => JSON.parse(d9));
    return objectArray;
  };
  function splitIntoLines(str2) {
    return str2.split(/\r\n|[\n\v\f\r\u0085\u2028\u2029]/);
  }

  // output/D3.Viz.Spago.Files/index.js
  var append6 = /* @__PURE__ */ append(semigroupArray);
  var map42 = /* @__PURE__ */ map(functorArray);
  var fromFoldableWith2 = /* @__PURE__ */ fromFoldableWith(ordString)(foldableArray);
  var lookup10 = /* @__PURE__ */ lookup(ordString);
  var fromFoldable16 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var mapFlipped9 = /* @__PURE__ */ mapFlipped(functorArray);
  var bind19 = /* @__PURE__ */ bind(bindMaybe);
  var sum3 = /* @__PURE__ */ sum(foldableArray)(semiringNumber);
  var equalSnd2 = /* @__PURE__ */ equalSnd(eqString);
  var compareSnd2 = /* @__PURE__ */ compareSnd(ordString);
  var fromFoldable17 = /* @__PURE__ */ fromFoldable2(ordInt)(foldableArray);
  var PackageInfo = /* @__PURE__ */ (function() {
    function PackageInfo2(value0) {
      this.value0 = value0;
    }
    ;
    PackageInfo2.create = function(value0) {
      return new PackageInfo2(value0);
    };
    return PackageInfo2;
  })();
  var IsModule = /* @__PURE__ */ (function() {
    function IsModule2(value0) {
      this.value0 = value0;
    }
    ;
    IsModule2.create = function(value0) {
      return new IsModule2(value0);
    };
    return IsModule2;
  })();
  var IsPackage = /* @__PURE__ */ (function() {
    function IsPackage2(value0) {
      this.value0 = value0;
    }
    ;
    IsPackage2.create = function(value0) {
      return new IsPackage2(value0);
    };
    return IsPackage2;
  })();
  var M2M_Tree = /* @__PURE__ */ (function() {
    function M2M_Tree2() {
    }
    ;
    M2M_Tree2.value = new M2M_Tree2();
    return M2M_Tree2;
  })();
  var M2M_Graph = /* @__PURE__ */ (function() {
    function M2M_Graph2() {
    }
    ;
    M2M_Graph2.value = new M2M_Graph2();
    return M2M_Graph2;
  })();
  var P2P = /* @__PURE__ */ (function() {
    function P2P2() {
    }
    ;
    P2P2.value = new P2P2();
    return P2P2;
  })();
  var M2P = /* @__PURE__ */ (function() {
    function M2P2() {
    }
    ;
    M2P2.value = new M2P2();
    return M2P2;
  })();
  var eqLinkType = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof M2M_Tree && y28 instanceof M2M_Tree) {
          return true;
        }
        ;
        if (x30 instanceof M2M_Graph && y28 instanceof M2M_Graph) {
          return true;
        }
        ;
        if (x30 instanceof P2P && y28 instanceof P2P) {
          return true;
        }
        ;
        if (x30 instanceof M2P && y28 instanceof M2P) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq23 = /* @__PURE__ */ eq(eqLinkType);
  var unpackLink$prime = unsafeCoerce2;
  var showNodeType = {
    show: function(v) {
      if (v instanceof IsModule) {
        return "module";
      }
      ;
      if (v instanceof IsPackage) {
        return "package";
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Files (line 302, column 1 - line 304, column 47): " + [v.constructor.name]);
    }
  };
  var showLinkType = {
    show: function(v) {
      if (v instanceof M2M_Tree) {
        return "M2M-Tree";
      }
      ;
      if (v instanceof M2M_Graph) {
        return "M2M-Graph";
      }
      ;
      if (v instanceof P2P) {
        return "P2P";
      }
      ;
      if (v instanceof M2P) {
        return "module to package dependency";
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Files (line 305, column 1 - line 309, column 44): " + [v.constructor.name]);
    }
  };
  var isP2P_Link = function(link4) {
    return eq23(unpackLink$prime(link4).linktype)(P2P.value);
  };
  var isM2P_Link = function(link4) {
    return eq23(unpackLink$prime(link4).linktype)(M2P.value);
  };
  var isM2M_Tree_Link = function(link4) {
    return eq23(unpackLink$prime(link4).linktype)(M2M_Tree.value);
  };
  var isM2M_Graph_Link = function(link4) {
    return eq23(unpackLink$prime(link4).linktype)(M2M_Graph.value);
  };
  var getGraphJSONData = function(v) {
    var names = append6(map42(function(v1) {
      return v1.key;
    })(v.modules))(map42(function(v1) {
      return v1.key;
    })(v.packages));
    var makeModuleToPackageLink = function(m) {
      return {
        source: m.id,
        target: m.containerID,
        linktype: M2P.value,
        inSim: true
      };
    };
    var makeLink = function(linktype) {
      return function(v1) {
        return {
          source: v1.value0,
          target: v1.value1,
          linktype,
          inSim: true
        };
      };
    };
    var ids = range2(0)(length4(names) - 1 | 0);
    var name2ID = fromFoldableWith2(function(v1) {
      return function(v2) {
        return v1;
      };
    })(zip(names)(ids));
    var getId = function(s) {
      return fromMaybe(0)(lookup10(s)(name2ID));
    };
    var makeNodeFromModuleJSONPL = function(m) {
      var id5 = getId(m.key);
      return {
        id: id5,
        name: m.key,
        containerID: getId(m["package"]),
        containerName: m["package"],
        loc: m.loc,
        nodetype: new IsModule(m.path),
        inSim: true,
        links: {
          targets: map42(getId)(m.depends),
          sources: [],
          treeChildren: [],
          inPackage: [],
          outPackage: [],
          contains: []
        },
        connected: false,
        showChildren: false,
        containsMany: false,
        treeXY: nullImpl,
        treeDepth: nullImpl,
        gridXY: nullImpl
      };
    };
    var foldDepends = function(b2) {
      return function(a2) {
        var id5 = getId(a2.key);
        var makeTuple = function(s) {
          return new Tuple(id5, getId(s));
        };
        return append6(map42(makeTuple)(a2.depends))(b2);
      };
    };
    var moduleLinks = map42(makeLink(M2M_Graph.value))(foldl2(foldDepends)([])(v.modules));
    var packageLinks = map42(makeLink(P2P.value))(foldl2(foldDepends)([])(v.packages));
    var depsMap = fromFoldable16(mapFlipped9(v.lsDeps)(function(d9) {
      return new Tuple(d9.packageName, {
        version: d9.version,
        repo: d9.repo.contents
      });
    }));
    var makeNodeFromPackageJSONCL = function(p2) {
      var repo = fromMaybe({
        version: "not found",
        repo: "not found"
      })(lookup10(p2.key)(depsMap));
      var id5 = getId(p2.key);
      return {
        id: id5,
        name: p2.key,
        inSim: true,
        nodetype: new IsPackage(new PackageInfo(repo)),
        containerID: id5,
        containerName: p2.key,
        loc: p2.loc,
        links: {
          targets: map42(getId)(p2.depends),
          sources: [],
          treeChildren: [],
          inPackage: [],
          outPackage: [],
          contains: map42(getId)(p2.contains)
        },
        connected: true,
        showChildren: true,
        containsMany: length4(p2.contains) > 1,
        treeXY: nullImpl,
        treeDepth: nullImpl,
        gridXY: nullImpl
      };
    };
    var addPackageInfo = function(v1) {
      var packageName = (function() {
        var pieces = split("/")(v1.path);
        return bind19(index2(pieces)(0))(function(root3) {
          return bind19(index2(pieces)(1))(function(packageString) {
            if (root3 === ".spago") {
              var $50 = packageString === "p";
              if ($50) {
                return index2(pieces)(2);
              }
              ;
              return new Just(packageString);
            }
            ;
            if (root3 === "src") {
              return new Just("my-project");
            }
            ;
            return Nothing.value;
          });
        });
      })();
      var $$package = fromMaybe("")(packageName);
      return {
        key: v1.key,
        depends: v1.depends,
        path: v1.path,
        loc: v1.loc,
        "package": $$package
      };
    };
    var modulesPL = map42(addPackageInfo)(v.modules);
    var mapNamesToModules = fromFoldable16(map42(function(m) {
      return new Tuple(m.key, m);
    })(modulesPL));
    var maybeModules = function(ms) {
      return catMaybes(map42(function(k) {
        return lookup10(k)(mapNamesToModules);
      })(ms));
    };
    var rollUpLOC = function(ms) {
      return sum3(map42(function(v1) {
        return v1.loc;
      })(maybeModules(ms)));
    };
    var moduleNodes = map42(makeNodeFromModuleJSONPL)(modulesPL);
    var modulePackageLinks = map42(makeModuleToPackageLink)(moduleNodes);
    var links = append6(moduleLinks)(append6(packageLinks)(modulePackageLinks));
    var getSourceLinks = function(v1) {
      var sources = foldl2(function(acc) {
        return function(link4) {
          var $56 = v1.id === link4.target;
          if ($56) {
            return cons3(link4.source)(acc);
          }
          ;
          return acc;
        };
      })([])(links);
      return new Tuple(v1.id, sources);
    };
    var modulePackageTuples = map42(function(m) {
      return new Tuple(m.key, m["package"]);
    })(modulesPL);
    var packageContains = map42(chunk)(groupBy(equalSnd2)(sortBy(compareSnd2)(modulePackageTuples)));
    var packageContainsMap = fromFoldable16(packageContains);
    var packageLOC = map42(function(v1) {
      return new Tuple(v1.value0, rollUpLOC(v1.value1));
    })(packageContains);
    var packageLOCMap = fromFoldable16(packageLOC);
    var addRollUpLOC = function(v1) {
      return {
        key: v1.key,
        depends: v1.depends,
        contains: v1.contains,
        loc: fromMaybe(0)(lookup10(v1.key)(packageLOCMap))
      };
    };
    var addContains = function(v1) {
      return {
        key: v1.key,
        depends: v1.depends,
        contains: fromMaybe([])(lookup10(v1.key)(packageContainsMap))
      };
    };
    var packagesCL = map42(function($72) {
      return addRollUpLOC(addContains($72));
    })(v.packages);
    var packageNodes = map42(makeNodeFromPackageJSONCL)(packagesCL);
    var nodes = append6(moduleNodes)(packageNodes);
    var id2Node = fromFoldable17(mapFlipped9(nodes)(function(node) {
      return new Tuple(node.id, node);
    }));
    var sourceLinksMap = fromFoldable17(map42(getSourceLinks)(nodes));
    return {
      links,
      nodes,
      moduleNodes,
      packageNodes,
      moduleLinks,
      packageLinks,
      modulePackageLinks,
      sourceLinksMap,
      name2ID,
      id2Node,
      id2Name: empty2,
      id2Package: empty2,
      id2LOC: empty2
    };
  };

  // output/D3.Viz.Spago.Unsafe/index.js
  var unboxD3SimNode = function(datum2) {
    return datum2;
  };
  var unboxD3SimLink = function(datum2) {
    return datum2;
  };

  // output/Data.Graph/index.js
  var map114 = /* @__PURE__ */ map(functorMaybe);
  var Graph = function(x30) {
    return x30;
  };
  var lookup11 = function(dictOrd) {
    var lookup17 = lookup(dictOrd);
    return function(k) {
      return function(v) {
        return map114(fst)(lookup17(k)(v));
      };
    };
  };
  var fromMap2 = Graph;

  // output/PSD3.Internal.Scales.Scales/foreign.js
  var d3SchemeCategory10 = d3.scaleOrdinal(d3.schemeCategory10);
  function d3SchemeCategory10N_(number4) {
    return d3SchemeCategory10(number4);
  }
  var d3SchemePaired = d3.scaleOrdinal(d3.schemePaired);
  function d3SchemePairedN_(number4) {
    return d3SchemePaired(number4);
  }
  var d3SchemeDiverging10 = d3.scaleDiverging(d3.interpolateBrBG).domain([0, 250, 500]);
  var d3SchemeSequential10 = d3.scaleSequential().interpolator(d3.interpolateYlOrRd).domain([0, 5, 10]);
  function d3SchemeSequential10N_(number4) {
    return d3SchemeSequential10(number4);
  }

  // output/D3.Viz.Spago.Model/index.js
  var lookup13 = /* @__PURE__ */ lookup(ordInt);
  var map43 = /* @__PURE__ */ map(functorArray);
  var append7 = /* @__PURE__ */ append(semigroupArray);
  var fromFoldable19 = /* @__PURE__ */ fromFoldable(foldableArray);
  var insert10 = /* @__PURE__ */ insert(ordInt);
  var mapFlipped10 = /* @__PURE__ */ mapFlipped(functorArray);
  var show16 = /* @__PURE__ */ show(showLinkType);
  var append16 = /* @__PURE__ */ append(semigroupString);
  var fromFoldable110 = /* @__PURE__ */ fromFoldable2(ordInt)(foldableArray);
  var foldlWithIndex2 = /* @__PURE__ */ foldlWithIndex(foldableWithIndexArray);
  var show17 = /* @__PURE__ */ show(showInt);
  var show25 = /* @__PURE__ */ show(showNumber);
  var show34 = /* @__PURE__ */ show(showNodeType);
  var upgradeSpagoNodeData = function(sourcesMap) {
    return function(node) {
      return {
        links: {
          contains: node.links.contains,
          inPackage: node.links.inPackage,
          outPackage: node.links.outPackage,
          targets: node.links.targets,
          treeChildren: node.links.treeChildren,
          sources: fromMaybe([])(lookup13(node.id)(sourcesMap))
        },
        id: node.id,
        cluster: node.containerID,
        connected: node.connected,
        showChildren: (function() {
          if (node.nodetype instanceof IsPackage) {
            return true;
          }
          ;
          if (node.nodetype instanceof IsModule) {
            return false;
          }
          ;
          throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 204, column 20 - line 206, column 45): " + [node.nodetype.constructor.name]);
        })(),
        containerID: node.containerID,
        containerName: node.containerName,
        containsMany: node.containsMany,
        focusX: 0,
        focusY: 0,
        fx: nullImpl,
        fy: nullImpl,
        inSim: true,
        loc: node.loc,
        name: node.name,
        nodetype: node.nodetype,
        r: sqrt(node.loc),
        treeXY: nullImpl,
        treeDepth: nullImpl,
        gridXY: nullImpl,
        vx: 0,
        vy: 0,
        x: 0,
        y: 0
      };
    };
  };
  var unpinAllNodes = function(nodes) {
    var unpin2 = function(v) {
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        fx: nullImpl,
        fy: nullImpl
      };
    };
    return map43(unpin2)(nodes);
  };
  var setTreeXYIncludingLeaves = function(v) {
    return function(v1) {
      return {
        id: v.id,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        fx: v.fx,
        fy: v.fy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        treeXY: notNull({
          x: v1.x,
          y: v1.y
        }),
        treeDepth: notNull(v1.depth),
        connected: true,
        links: {
          contains: v.links.contains,
          inPackage: v.links.inPackage,
          outPackage: v.links.outPackage,
          sources: v.links.sources,
          targets: v.links.targets,
          treeChildren: v1.childIDs
        }
      };
    };
  };
  var scalePoint = function(xFactor) {
    return function(yFactor) {
      return function(xy) {
        return {
          x: xy.x * xFactor,
          y: xy.y * yFactor
        };
      };
    };
  };
  var offsetXY = function(offset) {
    return function(xy) {
      return {
        x: xy.x + offset.x,
        y: xy.y + offset.y
      };
    };
  };
  var numberToGridPoint = function(columns) {
    return function(i2) {
      var d9 = toNumber(i2);
      var c = toNumber(columns);
      var x30 = remainder(d9)(c);
      var y28 = floor(d9 / c);
      return {
        x: x30,
        y: y28
      };
    };
  };
  var makeGraph = function(nodes) {
    var addNode = function(acc) {
      return function(node) {
        var depends = fromFoldable19(node.links.targets);
        return insert10(node.id)(new Tuple(node, depends))(acc);
      };
    };
    var graphMap = foldl2(addNode)(empty2)(nodes);
    return fromMap2(graphMap);
  };
  var makeSpagoGraphModel = function(json2) {
    var v = getGraphJSONData(json2);
    return {
      links: v.links,
      nodes: mapFlipped10(v.nodes)(upgradeSpagoNodeData(v.sourceLinksMap)),
      graph: makeGraph(v.nodes),
      tree: Nothing.value,
      maps: {
        name2ID: v.name2ID,
        id2Name: v.id2Name,
        id2Node: v.id2Node,
        id2Package: v.id2Package,
        id2LOC: v.id2LOC,
        id2TreeData: empty2
      }
    };
  };
  var link_3 = {
    source: function($197) {
      return (function(v) {
        return v.source;
      })(unboxD3SimLink($197));
    },
    target: function($198) {
      return (function(v) {
        return v.target;
      })(unboxD3SimLink($198));
    },
    linkType: function($199) {
      return (function(v) {
        return v.linktype;
      })(unboxD3SimLink($199));
    },
    linkClass: function($200) {
      return show16((function(v) {
        return v.linktype;
      })(unboxD3SimLink($200)));
    },
    linkClass2: /* @__PURE__ */ (function() {
      var $201 = append16("updated ");
      return function($202) {
        return $201(show16((function(v) {
          return v.linktype;
        })(unboxD3SimLink($202))));
      };
    })(),
    color: function($203) {
      return d3SchemeCategory10N_(toNumber((function(v) {
        return v.target.containerID;
      })(unboxD3SimLink($203))));
    }
  };
  var sourcePackageIs = function(name16) {
    return function(link4) {
      return link_3.source(link4).name === name16;
    };
  };
  var isUsedModule = function(v) {
    if (v.nodetype instanceof IsPackage) {
      return false;
    }
    ;
    if (v.nodetype instanceof IsModule) {
      if (v.connected) {
        return true;
      }
      ;
      return false;
    }
    ;
    throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 189, column 3 - line 193, column 31): " + [v.nodetype.constructor.name]);
  };
  var treeNodesToTreeXY_H = function(nodes) {
    var setXYtoTreeXY = function(v) {
      var treeXY = fromMaybe({
        x: v.x,
        y: v.y
      })(toMaybe(v.treeXY));
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        fx: notNull(treeXY.x),
        fy: notNull(treeXY.y)
      };
    };
    var partitioned = partition(isUsedModule)(nodes);
    return append7(partitioned.no)(map43(setXYtoTreeXY)(partitioned.yes));
  };
  var treeNodesToTreeXY_R = function(nodes) {
    var setXYtoTreeXY = function(v) {
      var treeXY = fromMaybe({
        x: v.x,
        y: v.y
      })(toMaybe(v.treeXY));
      var radialTranslate2 = function(p2) {
        var x30 = p2.x * cos(p2.y);
        var y28 = p2.x * sin(p2.y);
        return {
          x: x30,
          y: y28
        };
      };
      var radialXY = radialTranslate2(treeXY);
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        fx: notNull(radialXY.x),
        fy: notNull(radialXY.y)
      };
    };
    var partitioned = partition(isUsedModule)(nodes);
    return append7(partitioned.no)(map43(setXYtoTreeXY)(partitioned.yes));
  };
  var treeNodesToTreeXY_V = function(nodes) {
    var setXYtoTreeXY = function(v) {
      var treeXY = fromMaybe({
        x: v.y,
        y: v.x
      })(toMaybe(v.treeXY));
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        x: v.x,
        y: v.y,
        vx: v.vx,
        vy: v.vy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        fx: notNull(treeXY.y),
        fy: notNull(treeXY.x)
      };
    };
    var partitioned = partition(isUsedModule)(nodes);
    return append7(partitioned.no)(map43(setXYtoTreeXY)(partitioned.yes));
  };
  var isPackageOrVisibleModule = function(id5) {
    return function(v) {
      if (v.nodetype instanceof IsModule) {
        return v.containerID === id5;
      }
      ;
      if (v.nodetype instanceof IsPackage) {
        return true;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 179, column 3 - line 181, column 26): " + [v.nodetype.constructor.name]);
    };
  };
  var isPackage = function(v) {
    if (v.nodetype instanceof IsModule) {
      return false;
    }
    ;
    if (v.nodetype instanceof IsPackage) {
      return true;
    }
    ;
    throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 174, column 3 - line 176, column 26): " + [v.nodetype.constructor.name]);
  };
  var moduleNodesToContainerXY = function(nodes) {
    var partitioned = partition(isPackage)(nodes);
    var packagesIndexMap = fromFoldable110(foldl2(function(b2) {
      return function(v) {
        return cons3(new Tuple(v.id, v.gridXY))(b2);
      };
    })([])(partitioned.yes));
    var setModuleGridXY = function(v) {
      var v1 = lookup13(v.containerID)(packagesIndexMap);
      if (v1 instanceof Nothing) {
        return v;
      }
      ;
      if (v1 instanceof Just) {
        var v2 = toMaybe(v1.value0);
        if (v2 instanceof Nothing) {
          return {
            containerID: v.containerID,
            cluster: v.cluster,
            connected: v.connected,
            containerName: v.containerName,
            containsMany: v.containsMany,
            focusX: v.focusX,
            focusY: v.focusY,
            fx: v.fx,
            fy: v.fy,
            id: v.id,
            inSim: v.inSim,
            links: v.links,
            loc: v.loc,
            name: v.name,
            nodetype: v.nodetype,
            r: v.r,
            showChildren: v.showChildren,
            treeDepth: v.treeDepth,
            treeXY: v.treeXY,
            vx: v.vx,
            vy: v.vy,
            x: 0,
            y: 0,
            gridXY: v1.value0
          };
        }
        ;
        if (v2 instanceof Just) {
          return {
            containerID: v.containerID,
            cluster: v.cluster,
            connected: v.connected,
            containerName: v.containerName,
            containsMany: v.containsMany,
            focusX: v.focusX,
            focusY: v.focusY,
            fx: v.fx,
            fy: v.fy,
            id: v.id,
            inSim: v.inSim,
            links: v.links,
            loc: v.loc,
            name: v.name,
            nodetype: v.nodetype,
            r: v.r,
            showChildren: v.showChildren,
            treeDepth: v.treeDepth,
            treeXY: v.treeXY,
            vx: v.vx,
            vy: v.vy,
            x: v2.value0.x,
            y: v2.value0.y,
            gridXY: v1.value0
          };
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 286, column 11 - line 288, column 76): " + [v2.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 283, column 7 - line 288, column 76): " + [v1.constructor.name]);
    };
    var modulesWithGrid = map43(setModuleGridXY)(partitioned.no);
    return append7(modulesWithGrid)(partitioned.yes);
  };
  var packageNodesToGridXY = function(nodes) {
    var partitioned = partition(isPackage)(nodes);
    var packageCount = length4(partitioned.yes);
    var columns = floor2(ceil(sqrt(toNumber(packageCount))));
    var offset = -(toNumber(columns) / 2);
    var packagesWithGrid = (function() {
      var setGridXY = function(v) {
        return function(i2) {
          var gridXY = scalePoint(200)(200)(offsetXY({
            x: offset,
            y: offset
          })(numberToGridPoint(columns)(i2)));
          return {
            cluster: v.cluster,
            connected: v.connected,
            containerID: v.containerID,
            containerName: v.containerName,
            containsMany: v.containsMany,
            focusX: v.focusX,
            focusY: v.focusY,
            fx: v.fx,
            fy: v.fy,
            id: v.id,
            inSim: v.inSim,
            links: v.links,
            loc: v.loc,
            name: v.name,
            nodetype: v.nodetype,
            r: v.r,
            showChildren: v.showChildren,
            treeDepth: v.treeDepth,
            treeXY: v.treeXY,
            vx: v.vx,
            vy: v.vy,
            x: v.x,
            y: v.y,
            gridXY: notNull(gridXY)
          };
        };
      };
      return foldlWithIndex2(function(i2) {
        return function(b2) {
          return function(a2) {
            return cons3(setGridXY(a2)(i2))(b2);
          };
        };
      })([])(partitioned.yes);
    })();
    return append7(partitioned.no)(packagesWithGrid);
  };
  var initialRadius = 10;
  var initialAngle = /* @__PURE__ */ (function() {
    return pi * (3 - sqrt(5));
  })();
  var setForPhyllotaxis = function(index5) {
    return function(v) {
      var i2 = toNumber(index5);
      var radius17 = initialRadius * sqrt(0.5 + i2);
      var angle = i2 * initialAngle;
      return {
        id: v.id,
        links: v.links,
        connected: v.connected,
        showChildren: v.showChildren,
        containerID: v.containerID,
        containerName: v.containerName,
        containsMany: v.containsMany,
        inSim: v.inSim,
        loc: v.loc,
        name: v.name,
        nodetype: v.nodetype,
        treeXY: v.treeXY,
        treeDepth: v.treeDepth,
        gridXY: v.gridXY,
        vx: v.vx,
        vy: v.vy,
        fx: v.fx,
        fy: v.fy,
        cluster: v.cluster,
        focusX: v.focusX,
        focusY: v.focusY,
        r: v.r,
        x: radius17 * cos(angle),
        y: radius17 * sin(angle)
      };
    };
  };
  var nodesToPhyllotaxis = function(predicate) {
    return function(nodes) {
      var partitioned = partition(predicate)(nodes);
      return append7(partitioned.no)(mapWithIndex3(setForPhyllotaxis)(partitioned.yes));
    };
  };
  var packagesNodesToPhyllotaxis = /* @__PURE__ */ nodesToPhyllotaxis(isPackage);
  var fixNamedNodeTo = function(label5) {
    return function(point) {
      return function(nodes) {
        var fixNamedNode$prime = function(v) {
          var $168 = v.name === label5;
          if ($168) {
            return {
              name: v.name,
              cluster: v.cluster,
              connected: v.connected,
              containerID: v.containerID,
              containerName: v.containerName,
              containsMany: v.containsMany,
              focusX: v.focusX,
              focusY: v.focusY,
              gridXY: v.gridXY,
              id: v.id,
              inSim: v.inSim,
              links: v.links,
              loc: v.loc,
              nodetype: v.nodetype,
              r: v.r,
              showChildren: v.showChildren,
              treeDepth: v.treeDepth,
              treeXY: v.treeXY,
              vx: v.vx,
              vy: v.vy,
              x: v.x,
              y: v.y,
              fx: notNull(point.x),
              fy: notNull(point.y)
            };
          }
          ;
          return v;
        };
        return map43(fixNamedNode$prime)(nodes);
      };
    };
  };
  var datum_3 = {
    radius: function($204) {
      return (function(v) {
        return v.r;
      })(unboxD3SimNode($204));
    },
    id: function($205) {
      return (function(v) {
        return v.id;
      })(unboxD3SimNode($205));
    },
    loc: function($206) {
      return (function(v) {
        return v.loc;
      })(unboxD3SimNode($206));
    },
    containerID: function($207) {
      return (function(v) {
        return v.containerID;
      })(unboxD3SimNode($207));
    },
    containerName: function($208) {
      return (function(v) {
        return v.containerName;
      })(unboxD3SimNode($208));
    },
    name: function($209) {
      return (function(v) {
        return v.name;
      })(unboxD3SimNode($209));
    },
    x: function($210) {
      return (function(v) {
        return v.x;
      })(unboxD3SimNode($210));
    },
    y: function($211) {
      return (function(v) {
        return v.y;
      })(unboxD3SimNode($211));
    },
    fx: function($212) {
      return (function(v) {
        return v.fx;
      })(unboxD3SimNode($212));
    },
    fy: function($213) {
      return (function(v) {
        return v.fy;
      })(unboxD3SimNode($213));
    },
    treeXY: function($214) {
      return (function(v) {
        return v.treeXY;
      })(unboxD3SimNode($214));
    },
    treeDepth: function($215) {
      return (function(v) {
        return v.treeDepth;
      })(unboxD3SimNode($215));
    },
    gridXY: function($216) {
      return (function(v) {
        return v.gridXY;
      })(unboxD3SimNode($216));
    },
    nodetype: function($217) {
      return (function(v) {
        return v.nodetype;
      })(unboxD3SimNode($217));
    },
    cluster: function($218) {
      return (function(v) {
        return v.cluster;
      })(unboxD3SimNode($218));
    },
    links: function($219) {
      return (function(v) {
        return v.links;
      })(unboxD3SimNode($219));
    },
    connected: function($220) {
      return (function(v) {
        return v.connected;
      })(unboxD3SimNode($220));
    },
    nameAndID: function(d9) {
      return unboxD3SimNode(d9).name + (" " + show17(unboxD3SimNode(d9).id));
    },
    indexAndID: function(d9) {
      return unboxD3SimNode(d9).name + (" " + (show17(getIndexFromDatum_(d9)) + (" " + show17(unboxD3SimNode(d9).id))));
    },
    namePos: function(d9) {
      return "(" + (show25(floor(datum_3.x(d9))) + ("," + (show25(floor(datum_3.y(d9))) + ")")));
    },
    gridPoint: function(d9) {
      return fromMaybe({
        x: datum_3.x(d9),
        y: datum_3.y(d9)
      })(toMaybe(datum_3.gridXY(d9)));
    },
    gridPointX: function(d9) {
      return (function(v) {
        return v.x;
      })(datum_3.gridPoint(d9));
    },
    gridPointY: function(d9) {
      return (function(v) {
        return v.y;
      })(datum_3.gridPoint(d9));
    },
    treePoint: function(d9) {
      return fromMaybe({
        x: datum_3.x(d9),
        y: datum_3.y(d9)
      })(toMaybe(datum_3.treeXY(d9)));
    },
    treePointX: function(d9) {
      return (function(v) {
        return v.x;
      })(datum_3.treePoint(d9));
    },
    treePointY: function(d9) {
      return (function(v) {
        return v.y;
      })(datum_3.treePoint(d9));
    },
    indexFunction: function($221) {
      return (function(v) {
        return v.id;
      })(unboxD3SimNode($221));
    },
    positionLabel: function(d9) {
      var v = datum_3.nodetype(d9);
      if (v instanceof IsModule) {
        return -datum_3.radius(d9);
      }
      ;
      if (v instanceof IsPackage) {
        return 0;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 105, column 11 - line 107, column 33): " + [v.constructor.name]);
    },
    collideRadius: function(d9) {
      var $174 = datum_3.id(d9) === datum_3.containerID(d9);
      if ($174) {
        return 10;
      }
      ;
      return datum_3.radius(d9);
    },
    collideRadiusBig: function(d9) {
      return datum_3.radius(d9) + 10;
    },
    nodeClass: function(d9) {
      return show34(datum_3.nodetype(d9)) + (" " + (datum_3.containerName(d9) + (" " + (datum_3.name(d9) + (function() {
        var $175 = datum_3.connected(d9);
        if ($175) {
          return " connected";
        }
        ;
        return "";
      })()))));
    },
    "nodeClass'": function(d9) {
      return "updated" + (show34(datum_3.nodetype(d9)) + (" " + (datum_3.containerName(d9) + (" " + (datum_3.name(d9) + (function() {
        var $176 = datum_3.connected(d9);
        if ($176) {
          return " connected";
        }
        ;
        return "";
      })())))));
    },
    colorByGroup: function(d9) {
      return d3SchemeCategory10N_(toNumber(datum_3.cluster(d9)));
    },
    colorByDepth: function(d9) {
      var v = toMaybe(datum_3.treeDepth(d9));
      if (v instanceof Nothing) {
        return "none";
      }
      ;
      if (v instanceof Just) {
        return d3SchemeSequential10N_(toNumber(v.value0));
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 125, column 13 - line 127, column 68): " + [v.constructor.name]);
    },
    fillByUsage: function(d9) {
      var $179 = datum_3.connected(d9);
      if ($179) {
        return datum_3.colorByGroup(d9);
      }
      ;
      return "none";
    },
    strokeByUsage: function(d9) {
      var $180 = datum_3.connected(d9);
      if ($180) {
        return "none";
      }
      ;
      return datum_3.colorByGroup(d9);
    },
    colorByUsage: function(d9) {
      var $181 = datum_3.connected(d9);
      if ($181) {
        return "red";
      }
      ;
      return "blue";
    },
    opacityByType: function(d9) {
      var $182 = datum_3.isPackage(d9);
      if ($182) {
        return 0.4;
      }
      ;
      return 0.7;
    },
    translateNode: function(d9) {
      return "translate(" + (show25(datum_3.x(d9)) + ("," + (show25(datum_3.y(d9)) + ")")));
    },
    isNamed: function(name16) {
      return function(v) {
        return function(d9) {
          return datum_3.name(d9) === name16;
        };
      };
    },
    isPackage: function(d9) {
      var v = datum_3.nodetype(d9);
      if (v instanceof IsModule) {
        return false;
      }
      ;
      if (v instanceof IsPackage) {
        return true;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 142, column 13 - line 144, column 36): " + [v.constructor.name]);
    },
    isModule: function(d9) {
      var v = datum_3.nodetype(d9);
      if (v instanceof IsModule) {
        return true;
      }
      ;
      if (v instanceof IsPackage) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 146, column 13 - line 148, column 37): " + [v.constructor.name]);
    },
    isUnusedModule: function(d9) {
      var v = datum_3.nodetype(d9);
      if (v instanceof IsPackage) {
        return false;
      }
      ;
      if (v instanceof IsModule) {
        var $191 = datum_3.connected(d9);
        if ($191) {
          return false;
        }
        ;
        return true;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 150, column 13 - line 154, column 41): " + [v.constructor.name]);
    },
    isUsedModule: function(d9) {
      var v = datum_3.nodetype(d9);
      if (v instanceof IsPackage) {
        return false;
      }
      ;
      if (v instanceof IsModule) {
        var $195 = datum_3.connected(d9);
        if ($195) {
          return true;
        }
        ;
        return false;
      }
      ;
      throw new Error("Failed pattern match at D3.Viz.Spago.Model (line 157, column 13 - line 161, column 42): " + [v.constructor.name]);
    },
    treeChildren: function(d9) {
      return datum_3.links(d9).treeChildren;
    },
    isTreeParent: function(d9) {
      return !$$null3(datum_3.treeChildren(d9));
    }
  };
  var convertFilesToGraphModel = function(moduleJSON) {
    return function(packageJSON) {
      return function(lsdepJSON) {
        return function(locJSON) {
          return makeSpagoGraphModel(readSpago_Raw_JSON_(moduleJSON.body)(packageJSON.body)(lsdepJSON.body)(locJSON.body));
        };
      };
    };
  };
  var allNodes2 = /* @__PURE__ */ $$const(true);

  // output/D3.Viz.Spago.Draw.Attributes/index.js
  var classed4 = /* @__PURE__ */ classed(toAttrStringFn);
  var radius5 = /* @__PURE__ */ radius(toAttrNumberFn);
  var fill4 = /* @__PURE__ */ fill(toAttrStringFn);
  var strokeColor4 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var strokeWidth4 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var classed1 = /* @__PURE__ */ classed(toAttrString);
  var x8 = /* @__PURE__ */ x(toAttrNumber);
  var text9 = /* @__PURE__ */ text6(toAttrStringFn);
  var width11 = /* @__PURE__ */ width8(toAttrNumber);
  var height11 = /* @__PURE__ */ height8(toAttrNumber);
  var cursor2 = /* @__PURE__ */ cursor(toAttrString);
  var opacity2 = /* @__PURE__ */ opacity(toAttrNumberFn);
  var y8 = /* @__PURE__ */ y(toAttrNumberFn);
  var textAnchor2 = /* @__PURE__ */ textAnchor(toAttrString);
  var updateAttrs = /* @__PURE__ */ (function() {
    return [classed4(datum_3.nodeClass), transform$prime(datum_3.translateNode)];
  })();
  var treeSceneAttributes = /* @__PURE__ */ (function() {
    return {
      circles: [radius5(datum_3.radius), fill4(datum_3.colorByDepth), strokeColor4(datum_3.colorByGroup), strokeWidth4(3)],
      labels: [classed1("label"), x8(4), y(toAttrNumber)(2), text9(datum_3.name)],
      tagMap: Nothing.value
    };
  })();
  var svgAttrs = function(w) {
    return function(h) {
      return [viewBox(-w / 2.1)(-h / 2.05)(w)(h), classed1("overlay"), width11(w), height11(h), cursor2("grab")];
    };
  };
  var graphSceneAttributes = /* @__PURE__ */ (function() {
    return {
      circles: [radius5(datum_3.radius), fill4(datum_3.colorByGroup), opacity2(datum_3.opacityByType)],
      labels: [classed1("label"), x8(0.2), y8(datum_3.positionLabel), textAnchor2("middle"), text9(datum_3.name)],
      tagMap: Nothing.value
    };
  })();
  var enterAttrs = /* @__PURE__ */ (function() {
    return [classed4(datum_3.nodeClass), transform$prime(datum_3.translateNode)];
  })();
  var clusterSceneAttributes = /* @__PURE__ */ (function() {
    return {
      circles: [radius5(datum_3.radius), fill4(datum_3.fillByUsage), strokeColor4(datum_3.strokeByUsage), strokeWidth4(3), opacity2(datum_3.opacityByType)],
      labels: [classed1("label"), x8(0.2), y8(datum_3.positionLabel), textAnchor2("middle"), text9(datum_3.name)],
      tagMap: Nothing.value
    };
  })();

  // output/PSD3.CodeExplorer.Actions/index.js
  var NodeClick = /* @__PURE__ */ (function() {
    function NodeClick2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    NodeClick2.create = function(value0) {
      return function(value1) {
        return new NodeClick2(value0, value1);
      };
    };
    return NodeClick2;
  })();
  var TopLevelCSS = /* @__PURE__ */ (function() {
    function TopLevelCSS2(value0) {
      this.value0 = value0;
    }
    ;
    TopLevelCSS2.create = function(value0) {
      return new TopLevelCSS2(value0);
    };
    return TopLevelCSS2;
  })();
  var GraphStyle = /* @__PURE__ */ (function() {
    function GraphStyle2(value0) {
      this.value0 = value0;
    }
    ;
    GraphStyle2.create = function(value0) {
      return new GraphStyle2(value0);
    };
    return GraphStyle2;
  })();
  var PackageGrid = /* @__PURE__ */ (function() {
    function PackageGrid2() {
    }
    ;
    PackageGrid2.value = new PackageGrid2();
    return PackageGrid2;
  })();
  var PackageGraph = /* @__PURE__ */ (function() {
    function PackageGraph2() {
    }
    ;
    PackageGraph2.value = new PackageGraph2();
    return PackageGraph2;
  })();
  var ModuleTree = /* @__PURE__ */ (function() {
    function ModuleTree2(value0) {
      this.value0 = value0;
    }
    ;
    ModuleTree2.create = function(value0) {
      return new ModuleTree2(value0);
    };
    return ModuleTree2;
  })();
  var LayerSwarm = /* @__PURE__ */ (function() {
    function LayerSwarm2() {
    }
    ;
    LayerSwarm2.value = new LayerSwarm2();
    return LayerSwarm2;
  })();
  var LinkShowFilter = /* @__PURE__ */ (function() {
    function LinkShowFilter2(value0) {
      this.value0 = value0;
    }
    ;
    LinkShowFilter2.create = function(value0) {
      return new LinkShowFilter2(value0);
    };
    return LinkShowFilter2;
  })();
  var LinkForceFilter = /* @__PURE__ */ (function() {
    function LinkForceFilter2(value0) {
      this.value0 = value0;
    }
    ;
    LinkForceFilter2.create = function(value0) {
      return new LinkForceFilter2(value0);
    };
    return LinkForceFilter2;
  })();
  var NodeFilter = /* @__PURE__ */ (function() {
    function NodeFilter2(value0) {
      this.value0 = value0;
    }
    ;
    NodeFilter2.create = function(value0) {
      return new NodeFilter2(value0);
    };
    return NodeFilter2;
  })();
  var Initialize4 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var Finalize2 = /* @__PURE__ */ (function() {
    function Finalize4() {
    }
    ;
    Finalize4.value = new Finalize4();
    return Finalize4;
  })();
  var Scene = /* @__PURE__ */ (function() {
    function Scene2(value0) {
      this.value0 = value0;
    }
    ;
    Scene2.create = function(value0) {
      return new Scene2(value0);
    };
    return Scene2;
  })();
  var ToggleForce = /* @__PURE__ */ (function() {
    function ToggleForce2(value0) {
      this.value0 = value0;
    }
    ;
    ToggleForce2.create = function(value0) {
      return new ToggleForce2(value0);
    };
    return ToggleForce2;
  })();
  var Filter = /* @__PURE__ */ (function() {
    function Filter2(value0) {
      this.value0 = value0;
    }
    ;
    Filter2.create = function(value0) {
      return new Filter2(value0);
    };
    return Filter2;
  })();
  var ChangeStyling = /* @__PURE__ */ (function() {
    function ChangeStyling2(value0) {
      this.value0 = value0;
    }
    ;
    ChangeStyling2.create = function(value0) {
      return new ChangeStyling2(value0);
    };
    return ChangeStyling2;
  })();
  var ChangeSimConfig = /* @__PURE__ */ (function() {
    function ChangeSimConfig2(value0) {
      this.value0 = value0;
    }
    ;
    ChangeSimConfig2.create = function(value0) {
      return new ChangeSimConfig2(value0);
    };
    return ChangeSimConfig2;
  })();
  var StopSim = /* @__PURE__ */ (function() {
    function StopSim2() {
    }
    ;
    StopSim2.value = new StopSim2();
    return StopSim2;
  })();
  var StartSim = /* @__PURE__ */ (function() {
    function StartSim2() {
    }
    ;
    StartSim2.value = new StartSim2();
    return StartSim2;
  })();
  var EventFromVizualization = /* @__PURE__ */ (function() {
    function EventFromVizualization2(value0) {
      this.value0 = value0;
    }
    ;
    EventFromVizualization2.create = function(value0) {
      return new EventFromVizualization2(value0);
    };
    return EventFromVizualization2;
  })();
  var ToggleChildrenOfNode = /* @__PURE__ */ (function() {
    function ToggleChildrenOfNode2(value0) {
      this.value0 = value0;
    }
    ;
    ToggleChildrenOfNode2.create = function(value0) {
      return new ToggleChildrenOfNode2(value0);
    };
    return ToggleChildrenOfNode2;
  })();
  var SpotlightNode = /* @__PURE__ */ (function() {
    function SpotlightNode2(value0) {
      this.value0 = value0;
    }
    ;
    SpotlightNode2.create = function(value0) {
      return new SpotlightNode2(value0);
    };
    return SpotlightNode2;
  })();
  var UnToggleChildrenOfNode = /* @__PURE__ */ (function() {
    function UnToggleChildrenOfNode2(value0) {
      this.value0 = value0;
    }
    ;
    UnToggleChildrenOfNode2.create = function(value0) {
      return new UnToggleChildrenOfNode2(value0);
    };
    return UnToggleChildrenOfNode2;
  })();
  var TagHalogen = /* @__PURE__ */ (function() {
    function TagHalogen2() {
    }
    ;
    TagHalogen2.value = new TagHalogen2();
    return TagHalogen2;
  })();
  var ClearTags = /* @__PURE__ */ (function() {
    function ClearTags2() {
    }
    ;
    ClearTags2.value = new ClearTags2();
    return ClearTags2;
  })();

  // output/D3.Viz.Spago.Draw/index.js
  var classed5 = /* @__PURE__ */ classed(toAttrString);
  var lookup14 = /* @__PURE__ */ lookup(ordInt);
  var fromFoldable20 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var classed12 = /* @__PURE__ */ classed(toAttrStringFn);
  var show18 = /* @__PURE__ */ show(showElement);
  var discard13 = /* @__PURE__ */ discard(discardUnit);
  var strokeColor5 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var x14 = /* @__PURE__ */ x1(toAttrNumberFn);
  var y14 = /* @__PURE__ */ y1(toAttrNumberFn);
  var x24 = /* @__PURE__ */ x2(toAttrNumberFn);
  var y24 = /* @__PURE__ */ y2(toAttrNumberFn);
  var makeTagClassesAttr = function(v) {
    if (v instanceof Nothing) {
      return classed5("");
    }
    ;
    if (v instanceof Just) {
      var tagClassesFn = function(d9) {
        var nodeId = datum_3.id(d9);
        var tags = fromMaybe(empty7)(lookup14(nodeId)(v.value0));
        return joinWith(" ")(fromFoldable20(tags));
      };
      return classed12(tagClassesFn);
    }
    ;
    throw new Error("Failed pattern match at D3.Viz.Spago.Draw (line 37, column 1 - line 37, column 76): " + [v.constructor.name]);
  };
  var updateSimulation = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard13(dictBind);
    var $$void12 = $$void(dictBind.Apply0().Functor0());
    return function(dictMonadEffect) {
      var pure45 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictSelectionM) {
        var openSelection2 = openSelection(dictSelectionM);
        var updateJoin2 = updateJoin(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        var setAttributes2 = setAttributes(dictSelectionM);
        var selectUnder2 = selectUnder(dictSelectionM);
        var mergeSelections2 = mergeSelections(dictSelectionM);
        var on3 = on2(dictSelectionM);
        return function(dictSimulationM2) {
          var update4 = update3(dictSimulationM2);
          var addTickFunction2 = addTickFunction(dictSimulationM2);
          return function(v) {
            return function(v1) {
              return function(v2) {
                if (v.nodes instanceof Just && v.links instanceof Just) {
                  return bind71(update4({
                    nodes: new Just(v1.nodes),
                    links: new Just(v1.links),
                    nodeFilter: v1.nodeFilter,
                    linkFilter: v1.linkFilter,
                    activeForces: new Just(v1.activeForces),
                    config: Nothing.value,
                    keyFn: keyIsID_
                  }))(function(enhanced) {
                    return bind71(openSelection2(v.nodes.value0)(show18(Group.value)))(function(node) {
                      return bind71(openSelection2(v.links.value0)(show18(Line.value)))(function(link4) {
                        return bind71(updateJoin2(node)(Group.value)(enhanced.nodes)(keyIsID_))(function(node$prime) {
                          var tagClassesAttr = makeTagClassesAttr(v2.tagMap);
                          var updateAttrsWithTags = cons3(tagClassesAttr)(updateAttrs);
                          var enterAttrsWithTags = cons3(tagClassesAttr)(enterAttrs);
                          return bind71(appendTo2(node$prime.enter)(Group.value)(enterAttrsWithTags))(function(nodeEnter) {
                            return bind71(appendTo2(nodeEnter)(Circle.value)(v2.circles))(function() {
                              return discard112($$void12(appendTo2(nodeEnter)(Text2.value)(v2.labels)))(function() {
                                return discard112(setAttributes2(node$prime.exit)([remove]))(function() {
                                  return discard112(setAttributes2(node$prime.update)(updateAttrsWithTags))(function() {
                                    return bind71(selectUnder2(node$prime.update)(show18(Circle.value)))(function(updateCirclesSelection) {
                                      return discard112(setAttributes2(updateCirclesSelection)(v2.circles))(function() {
                                        return bind71(selectUnder2(node$prime.update)(show18(Text2.value)))(function(updateLabelsSelection) {
                                          return discard112(setAttributes2(updateLabelsSelection)(v2.labels))(function() {
                                            return bind71(mergeSelections2(nodeEnter)(node$prime.update))(function(mergedNodeSelection) {
                                              return discard112($$void12(on3(mergedNodeSelection)(new Drag(new CustomDrag("spago", simdrag_)))))(function() {
                                                return bind71(updateJoin2(link4)(Line.value)(enhanced.links)(keyIsID_))(function(link$prime) {
                                                  return bind71(appendTo2(link$prime.enter)(Line.value)([classed12(link_3.linkClass), strokeColor5(link_3.color)]))(function(linkEnter) {
                                                    return discard112(setAttributes2(linkEnter)([classed5("enter")]))(function() {
                                                      return discard112(setAttributes2(link$prime.exit)([remove]))(function() {
                                                        return discard112(setAttributes2(link$prime.update)([classed5("update")]))(function() {
                                                          return bind71(mergeSelections2(linkEnter)(link$prime.update))(function(mergedLinksShown) {
                                                            return discard112(addTickFunction2("nodes")(new Step3(mergedNodeSelection, [transform$prime(datum_3.translateNode)])))(function() {
                                                              return addTickFunction2("links")(new Step3(mergedLinksShown, [x14(function($66) {
                                                                return (function(v3) {
                                                                  return v3.x;
                                                                })(link_3.source($66));
                                                              }), y14(function($67) {
                                                                return (function(v3) {
                                                                  return v3.y;
                                                                })(link_3.source($67));
                                                              }), x24(function($68) {
                                                                return (function(v3) {
                                                                  return v3.x;
                                                                })(link_3.target($68));
                                                              }), y24(function($69) {
                                                                return (function(v3) {
                                                                  return v3.y;
                                                                })(link_3.target($69));
                                                              })]));
                                                            });
                                                          });
                                                        });
                                                      });
                                                    });
                                                  });
                                                });
                                              });
                                            });
                                          });
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                }
                ;
                return pure45(unit);
              };
            };
          };
        };
      };
    };
  };
  var initialize3 = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var pure45 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictSimulationM2) {
        return function(dictSelectionM) {
          var attach2 = attach(dictSelectionM);
          var appendTo2 = appendTo(dictSelectionM);
          var on3 = on2(dictSelectionM);
          return bind71(liftEffect51(getWindowWidthHeight))(function(v) {
            return bind71(attach2("div.svg-container"))(function(root3) {
              return bind71(appendTo2(root3)(Svg.value)(svgAttrs(v.value0)(v.value1)))(function(svg2) {
                return bind71(appendTo2(svg2)(Group.value)([]))(function(inner) {
                  return bind71(on3(inner)(new Drag(DefaultDrag.value)))(function() {
                    return bind71(on3(svg2)(new Zoom({
                      extent: new ZoomExtent({
                        top: 0,
                        left: 0,
                        bottom: v.value1,
                        right: v.value0
                      }),
                      scale: new ScaleExtent(0.1, 4),
                      name: "spago",
                      target: inner
                    })))(function() {
                      return bind71(appendTo2(inner)(Group.value)([classed5("links")]))(function(linksGroup) {
                        return bind71(appendTo2(inner)(Group.value)([classed5("nodes")]))(function(nodesGroup) {
                          return pure45({
                            nodes: new Just(nodesGroup),
                            links: new Just(linksGroup)
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        };
      };
    };
  };
  var getVizEventFromClick = function(e) {
    return function(d9) {
      return function(t) {
        return new NodeClick(datum_3.nodetype(d9), datum_3.id(d9));
      };
    };
  };

  // output/Data.DependencyGraph/index.js
  var bind20 = /* @__PURE__ */ bind(bindMaybe);
  var mapFlipped11 = /* @__PURE__ */ mapFlipped(functorArray);
  var append8 = /* @__PURE__ */ append(semigroupArray);
  var getReachableNodes = function(dictOrd) {
    var lookup17 = lookup11(dictOrd);
    var elem6 = elem2(dictOrd.Eq0());
    return function(id5) {
      return function(graph) {
        var processNextOpenDepPath = function(searchRecord) {
          return bind20(uncons2(searchRecord.openDepPaths))(function(x30) {
            return bind20(head2(x30.head))(function(firstID) {
              return bind20(lookup17(firstID)(graph))(function(firstNode) {
                var newDeps = partition(function(d9) {
                  return !elem6(d9)(searchRecord.nodes);
                })(firstNode.links.targets);
                var newOpenDepPaths = mapFlipped11(newDeps.yes)(function(d9) {
                  return cons3(d9)(x30.head);
                });
                var prunedLinks = mapFlipped11(newDeps.no)(function(d9) {
                  return new Tuple(firstID, d9);
                });
                var $12 = $$null3(newOpenDepPaths);
                if ($12) {
                  return new Just({
                    dependencyTree: searchRecord.dependencyTree,
                    nodes: searchRecord.nodes,
                    openDepPaths: x30.tail,
                    closedDepPaths: cons3(x30.head)(searchRecord.closedDepPaths),
                    redundantLinks: append8(searchRecord.redundantLinks)(prunedLinks)
                  });
                }
                ;
                return new Just({
                  closedDepPaths: searchRecord.closedDepPaths,
                  dependencyTree: searchRecord.dependencyTree,
                  openDepPaths: append8(x30.tail)(newOpenDepPaths),
                  nodes: append8(searchRecord.nodes)(newDeps.yes),
                  redundantLinks: append8(searchRecord.redundantLinks)(prunedLinks)
                });
              });
            });
          });
        };
        var go2 = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v.openDepPaths.length === 0) {
              $tco_done = true;
              return v;
            }
            ;
            var v1 = processNextOpenDepPath(v);
            if (v1 instanceof Nothing) {
              $tco_done = true;
              return v;
            }
            ;
            if (v1 instanceof Just) {
              $copy_v = v1.value0;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.DependencyGraph (line 26, column 7 - line 28, column 49): " + [v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go2({
          nodes: [],
          openDepPaths: [[id5]],
          closedDepPaths: [],
          redundantLinks: [],
          dependencyTree: Nothing.value
        });
      };
    };
  };

  // output/Data.Tree/index.js
  var Node = /* @__PURE__ */ (function() {
    function Node2(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }
    ;
    Node2.create = function(value0) {
      return function(value1) {
        return new Node2(value0, value1);
      };
    };
    return Node2;
  })();

  // output/D3.Viz.Spago.Tree/index.js
  var lookup15 = /* @__PURE__ */ lookup(ordInt);
  var map44 = /* @__PURE__ */ map(functorArray);
  var fromFoldable21 = /* @__PURE__ */ fromFoldable(foldableArray);
  var foldl6 = /* @__PURE__ */ foldl(foldableList);
  var fromFoldable111 = /* @__PURE__ */ fromFoldable3(foldableSet);
  var fromFoldable25 = /* @__PURE__ */ fromFoldable5(foldableList)(/* @__PURE__ */ ordTuple(ordInt)(ordInt));
  var insert11 = /* @__PURE__ */ insert(ordInt);
  var map115 = /* @__PURE__ */ map(functorList);
  var getReachableNodes2 = /* @__PURE__ */ getReachableNodes(ordInt);
  var elem4 = /* @__PURE__ */ elem2(eqInt);
  var elem1 = /* @__PURE__ */ elem2(/* @__PURE__ */ eqTuple(eqInt)(eqInt));
  var append9 = /* @__PURE__ */ append(semigroupArray);
  var tupleToLink = function(linktype) {
    return function(v) {
      return {
        source: v.value0,
        target: v.value1,
        linktype,
        inSim: true
      };
    };
  };
  var setNodeXY_ForHorizontalTree = function(nodes) {
    return function(treeDerivedDataMap) {
      var updateXY = function(v) {
        var v1 = lookup15(v.id)(treeDerivedDataMap);
        if (v1 instanceof Nothing) {
          return v;
        }
        ;
        if (v1 instanceof Just) {
          var $44 = {
            x: v1.value0.y - 1200,
            y: v1.value0.x
          };
          return setTreeXYIncludingLeaves(v)({
            x: $44.x,
            y: $44.y,
            depth: v1.value0.depth,
            isTreeLeaf: v1.value0.isTreeLeaf,
            childIDs: v1.value0.childIDs
          });
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.Spago.Tree (line 106, column 7 - line 113, column 134): " + [v1.constructor.name]);
      };
      return map44(updateXY)(nodes);
    };
  };
  var pathsAsLists = function(paths) {
    return fromFoldable21(map44(function($67) {
      return fromFoldable21(reverse2($67));
    })(paths));
  };
  var path2Tuples = function($copy_v) {
    return function($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v, v1) {
        if (v1 instanceof Nil) {
          $tco_done = true;
          return v;
        }
        ;
        if (v1 instanceof Cons && v1.value1 instanceof Nil) {
          $tco_done = true;
          return v;
        }
        ;
        if (v1 instanceof Cons && v1.value1 instanceof Cons) {
          $tco_var_v = new Cons(new Tuple(v1.value0, v1.value1.value0), v);
          $copy_v1 = new Cons(v1.value1.value0, v1.value1.value1);
          return;
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.Spago.Tree (line 145, column 1 - line 145, column 93): " + [v.constructor.name, v1.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }
      ;
      return $tco_result;
    };
  };
  var makeTreeLinkTuples = function(closedPaths) {
    var linkTuples = foldl6(path2Tuples)(Nil.value)(closedPaths);
    return fromFoldable111(fromFoldable25(linkTuples));
  };
  var getTreeDerivedData = function(root3) {
    return foldl2(function(acc) {
      return function(v) {
        return insert11(v.data.id)({
          x: v.x,
          y: v.y,
          depth: v.depth,
          isTreeLeaf: hasChildren_(v),
          childIDs: map44(function(v1) {
            return v1.id;
          })(getHierarchyChildren_(v))
        })(acc);
      };
    })(empty2)(descendants_(root3));
  };
  var changeLinkType = function(newLinktype) {
    return function(link4) {
      return {
        inSim: link4.inSim,
        source: link4.source,
        target: link4.target,
        linktype: newLinktype
      };
    };
  };
  var buildTree = function(rootID) {
    return function(treelinks) {
      var linksWhoseSourceIs = function(id5) {
        return fromFoldable21(map44(function(v) {
          return v.target;
        })(filter2(function(l) {
          return l.source === id5;
        })(map44(unsafeCoerce2)(treelinks))));
      };
      var go2 = function(childID) {
        return new Node(childID, map115(go2)(linksWhoseSourceIs(childID)));
      };
      return new Node(rootID, map115(go2)(linksWhoseSourceIs(rootID)));
    };
  };
  var treeReduction = function(rootID) {
    return function(model) {
      var reachable = getReachableNodes2(rootID)(model.graph);
      var treenodes = partition(function(v) {
        return elem4(v.id)(reachable.nodes) || v.id === rootID;
      })(model.nodes);
      var prunedTreeLinks = map44(tupleToLink(M2M_Graph.value))(reachable.redundantLinks);
      var onlyTreelinks = makeTreeLinkTuples(pathsAsLists(reachable.closedDepPaths));
      var partitionedLinks = partition(function(link4) {
        return elem1(new Tuple(link4.source, link4.target))(onlyTreelinks);
      })(model.links);
      var treelinks = map44(changeLinkType(M2M_Tree.value))(partitionedLinks.yes);
      var onlyPackageLinks = filter2(isP2P_Link)(model.links);
      var links = append9(treelinks)(append9(prunedTreeLinks)(onlyPackageLinks));
      var idTree = buildTree(rootID)(treelinks);
      var jsontree = makeD3TreeJSONFromTreeID(idTree)(model.maps.id2Node);
      var rootTree = hierarchyFromJSON_(jsontree);
      var numberOfLevels = hNodeHeight_(rootTree) + 1;
      var layout = treeSetNodeSize_(getLayout(TidyTree.value))([8, 4e3 / numberOfLevels]);
      var sortedTree = treeSortForTree_Spago_(rootTree);
      var laidOutRoot_ = runLayoutFn_(layout)(sortedTree);
      var tree2 = new Tuple(rootID, laidOutRoot_);
      var treeDerivedDataMap = getTreeDerivedData(laidOutRoot_);
      var positionedNodes = setNodeXY_ForHorizontalTree(treenodes.yes)(treeDerivedDataMap);
      return {
        graph: model.graph,
        links,
        nodes: append9(positionedNodes)(treenodes.no),
        tree: new Just(tree2),
        maps: {
          name2ID: model.maps.name2ID,
          id2Name: model.maps.id2Name,
          id2Node: model.maps.id2Node,
          id2Package: model.maps.id2Package,
          id2LOC: model.maps.id2LOC,
          id2TreeData: treeDerivedDataMap
        }
      };
    };
  };

  // output/PSD3.CodeExplorer.Data/index.js
  var bind21 = /* @__PURE__ */ bind(bindMaybe);
  var lookup16 = /* @__PURE__ */ lookup(ordString);
  var pure23 = /* @__PURE__ */ pure(applicativeMaybe);
  var bind110 = /* @__PURE__ */ bind(bindAff);
  var apply3 = /* @__PURE__ */ apply(applyEither);
  var map45 = /* @__PURE__ */ map(functorEither);
  var pure111 = /* @__PURE__ */ pure(applicativeAff);
  var addTreeToModel = function(rootName) {
    return function(maybeModel) {
      return bind21(maybeModel)(function(model) {
        return bind21(lookup16(rootName)(model.maps.name2ID))(function(rootID) {
          return pure23(treeReduction(rootID)(model));
        });
      });
    };
  };
  var readModelData = /* @__PURE__ */ (function() {
    return bind110(get3(string)("./data/spago-data/modules.json"))(function(moduleJSON) {
      return bind110(get3(string)("./data/spago-data/packages.json"))(function(packageJSON) {
        return bind110(get3(string)("./data/spago-data/lsdeps.jsonlines"))(function(lsdepJSON) {
          return bind110(get3(string)("./data/spago-data/LOC.json"))(function(locJSON) {
            var model = hush(apply3(apply3(apply3(map45(convertFilesToGraphModel)(moduleJSON))(packageJSON))(lsdepJSON))(locJSON));
            return pure111(addTreeToModel("PSD3.Main")(model));
          });
        });
      });
    });
  })();

  // output/PSD3.CodeExplorer.Forces/index.js
  var strength4 = /* @__PURE__ */ strength(toAttrNumber);
  var x9 = /* @__PURE__ */ x3(toAttrNumber);
  var y9 = /* @__PURE__ */ y3(toAttrNumber);
  var radius6 = /* @__PURE__ */ radius2(toAttrNumberFn);
  var theta4 = /* @__PURE__ */ theta(toAttrNumber);
  var distanceMin4 = /* @__PURE__ */ distanceMin(toAttrNumber);
  var distanceMax2 = /* @__PURE__ */ distanceMax(toAttrNumber);
  var x15 = /* @__PURE__ */ x3(toAttrNumberFn);
  var y15 = /* @__PURE__ */ y3(toAttrNumberFn);
  var radius13 = /* @__PURE__ */ radius2(toAttrNumber);
  var forceLibrary = /* @__PURE__ */ (function() {
    var usedModulesOnly = new Just(new ForceFilter("used modules only", datum_3.isUsedModule));
    var useGridXY = function(d9) {
      return function(v) {
        return datum_3.gridPoint(d9);
      };
    };
    var unusedModulesOnly = new Just(new ForceFilter("unused modules only", datum_3.isUnusedModule));
    var treeXY = function(d9) {
      return function(v) {
        return datum_3.treePoint(d9);
      };
    };
    var treeExceptLeaves = new Just(new ForceFilter("tree parent nodes only", datum_3.isTreeParent));
    var packagesOnly = new Just(new ForceFilter("all packages", datum_3.isPackage));
    var modulesOnly = new Just(new ForceFilter("all modules", datum_3.isModule));
    var centerXY = function(v) {
      return function(v1) {
        return {
          x: 0,
          y: 0
        };
      };
    };
    return initialize(foldableArray)(functorArray)([createForce("center")(new RegularForce(ForceCenter.value))(allNodes)([strength4(0.5), x9(0), y9(0)]), createForce("x")(new RegularForce(ForceX.value))(allNodes)([strength4(0.05), x9(0)]), createForce("y")(new RegularForce(ForceY.value))(allNodes)([strength4(0.07), y9(0)]), createForce("collide1")(new RegularForce(ForceCollide.value))(allNodes)([strength4(1), radius6(datum_3.collideRadius)]), createForce("collide2")(new RegularForce(ForceCollide.value))(allNodes)([strength4(0.7), radius6(datum_3.collideRadiusBig)]), createForce("charge1")(new RegularForce(ForceManyBody.value))(allNodes)([strength4(-50), theta4(0.9), distanceMin4(1), distanceMax2(infinity)]), createForce("charge2")(new RegularForce(ForceManyBody.value))(allNodes)([strength4(-100), theta4(0.9), distanceMin4(1), distanceMax2(400)]), createForce("chargetree")(new RegularForce(ForceManyBody.value))(treeExceptLeaves)([strength4(-100), theta4(0.9), distanceMin4(1), distanceMax2(400)]), createForce("clusterx_M")(new RegularForce(ForceX.value))(modulesOnly)([strength4(0.2), x15(datum_3.gridPointX)]), createForce("clustery_M")(new RegularForce(ForceY.value))(modulesOnly)([strength4(0.2), y15(datum_3.gridPointY)]), createForce("clusterx_P")(new RegularForce(ForceX.value))(packagesOnly)([strength4(0.8), x15(datum_3.gridPointX)]), createForce("clustery_P")(new RegularForce(ForceY.value))(packagesOnly)([strength4(0.8), y15(datum_3.gridPointY)]), createForce("htreeNodesX")(new RegularForce(ForceX.value))(new Just(new ForceFilter("tree only", function(d9) {
      return datum_3.connected(d9);
    })))([strength4(0.4), x15(datum_3.treePointX)]), createForce("htreeNodesY")(new RegularForce(ForceY.value))(new Just(new ForceFilter("tree only", function(d9) {
      return datum_3.connected(d9);
    })))([strength4(0.4), y15(datum_3.treePointY)]), createForce("vtreeNodesX")(new RegularForce(ForceX.value))(new Just(new ForceFilter("tree only", function(d9) {
      return datum_3.connected(d9);
    })))([strength4(0.4), x15(datum_3.treePointY)]), createForce("vtreeNodesY")(new RegularForce(ForceY.value))(new Just(new ForceFilter("tree only", function(d9) {
      return datum_3.connected(d9);
    })))([strength4(0.4), y15(datum_3.treePointX)]), createForce("packageOrbit")(new RegularForce(ForceRadial.value))(packagesOnly)([strength4(0.7), x9(0), y9(0), radius13(500)]), createForce("unusedOrbit")(new RegularForce(ForceRadial.value))(unusedModulesOnly)([strength4(0.8), x9(0), y9(0), radius13(900)]), createForce("moduleOrbit")(new RegularForce(ForceRadial.value))(usedModulesOnly)([strength4(0.8), x9(0), y9(0), radius13(600)]), createLinkForce(Nothing.value)([strength4(0.5), distance(toAttrNumber)(0), numKey(function($19) {
      return toNumber(datum_3.id($19));
    })])]);
  })();

  // output/PSD3.Properties/index.js
  var lmap2 = /* @__PURE__ */ lmap(bifunctorTuple);
  var append17 = /* @__PURE__ */ append(semigroupArray);
  var rmap3 = /* @__PURE__ */ rmap(bifunctorTuple);
  var elem5 = /* @__PURE__ */ elem2(eqString);
  var not4 = /* @__PURE__ */ not(/* @__PURE__ */ heytingAlgebraFunction(heytingAlgebraBoolean));
  var pure24 = /* @__PURE__ */ pure(applicativeArray);
  var map46 = /* @__PURE__ */ map(functorArray);
  var startsWith = function(str0) {
    return function(str1) {
      return str0 === take3(length5(str0))(str1);
    };
  };
  var extract3 = /* @__PURE__ */ (function() {
    var f = function(v) {
      return function(v1) {
        if (v1 instanceof Property && v1.value0 === "className") {
          return lmap2(function(v2) {
            return append17(v2)(split(" ")(v1.value1));
          })(v);
        }
        ;
        return rmap3(function(v2) {
          return append17(v2)([v1]);
        })(v);
      };
    };
    return foldl2(f)(new Tuple([], []));
  })();
  var classifySide = function(str2) {
    if (startsWith("t-")(str2)) {
      return "top";
    }
    ;
    if (startsWith("r-")(str2)) {
      return "right";
    }
    ;
    if (startsWith("b-")(str2)) {
      return "bottom";
    }
    ;
    if (startsWith("l-")(str2)) {
      return "left";
    }
    ;
    if (startsWith("x-")(str2)) {
      return "horizontal";
    }
    ;
    if (startsWith("y-")(str2)) {
      return "vertical";
    }
    ;
    if (startsWith("-")(str2)) {
      return "all";
    }
    ;
    if (otherwise) {
      return "";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Properties (line 103, column 1 - line 105, column 12): " + [str2.constructor.name]);
  };
  var append$prime = function(v) {
    return function(v1) {
      if (v1 === "") {
        return v;
      }
      ;
      return v + ("-" + v1);
    };
  };
  var classifyOverflow = function(str2) {
    if (startsWith("x-")(str2)) {
      return append$prime("horizontal")(classifyOverflow(drop2(2)(str2)));
    }
    ;
    if (startsWith("y-")(str2)) {
      return append$prime("vertical")(classifyOverflow(drop2(2)(str2)));
    }
    ;
    if (elem5(str2)(["auto", "hidden", "visible", "scroll"])) {
      return "";
    }
    ;
    if (otherwise) {
      return str2;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Properties (line 116, column 1 - line 118, column 12): " + [str2.constructor.name]);
  };
  var classify = function(str2) {
    if (startsWith("p")(str2) && not4($$null2)(classifySide(drop2(1)(str2)))) {
      return append$prime("padding")(classifySide(drop2(1)(str2)));
    }
    ;
    if (startsWith("m")(str2) && not4($$null2)(classifySide(drop2(1)(str2)))) {
      return append$prime("margin")(classifySide(drop2(1)(str2)));
    }
    ;
    if (startsWith("-m")(str2) && not4($$null2)(classifySide(drop2(2)(str2)))) {
      return append$prime("margin")(classifySide(drop2(2)(str2)));
    }
    ;
    if (startsWith("min-")(str2)) {
      return append$prime("min")(classify(drop2(4)(str2)));
    }
    ;
    if (startsWith("max-")(str2)) {
      return append$prime("max")(classify(drop2(4)(str2)));
    }
    ;
    if (startsWith("w-")(str2)) {
      return "width";
    }
    ;
    if (startsWith("h-")(str2)) {
      return "height";
    }
    ;
    if (startsWith("overflow-")(str2) && classifyOverflow(drop2(9)(str2)) !== drop2(9)(str2)) {
      return append$prime("overflow")(classifyOverflow(drop2(9)(str2)));
    }
    ;
    if (otherwise) {
      return str2;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Properties (line 85, column 1 - line 87, column 12): " + [str2.constructor.name]);
  };
  var appendIProps = function(ip) {
    return function(ip$prime) {
      var v = extract3(ip);
      var v1 = extract3(ip$prime);
      var classNames = pure24(classes(map46(ClassName)(nubByEq(function(c) {
        return function(c$prime) {
          return classify(c) === classify(c$prime);
        };
      })(append17(v1.value0)(v.value0)))));
      return append17(v.value1)(append17(v1.value1)(classNames));
    };
  };

  // output/PSD3.Button/index.js
  var map47 = /* @__PURE__ */ map(functorArray);
  var append10 = /* @__PURE__ */ append(semigroupArray);
  var rightClasses = /* @__PURE__ */ map47(ClassName)(["rounded-r"]);
  var leftClasses = /* @__PURE__ */ map47(ClassName)(["mr-px", "rounded-l"]);
  var centerClasses = /* @__PURE__ */ map47(ClassName)(["mr-px"]);
  var buttonSharedClasses = /* @__PURE__ */ map47(ClassName)(["no-outline", "px-4", "py-2", "!active:border-b", "active:border-t", "disabled:opacity-50", "disabled:cursor-default", "!disabled:cursor-pointer"]);
  var buttonPrimaryClasses = /* @__PURE__ */ map47(ClassName)(["bg-blue-88", "border-blue-88", "hover:!disabled:bg-blue-82", "focus:bg-blue-82", "text-white"]);
  var buttonMainClasses = /* @__PURE__ */ append10(buttonSharedClasses)(/* @__PURE__ */ map47(ClassName)(["rounded"]));
  var buttonGroupClasses = /* @__PURE__ */ map47(ClassName)(["flex", "items-center"]);
  var buttonGroupBuilder = function(classes2) {
    return function(iprops) {
      return button(appendIProps([classes(append10(buttonSharedClasses)(classes2))])(iprops));
    };
  };
  var buttonPrimaryCenter = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonPrimaryClasses)(centerClasses));
  var buttonPrimaryLeft = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonPrimaryClasses)(leftClasses));
  var buttonPrimaryRight = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonPrimaryClasses)(rightClasses));
  var buttonGroup = function(iprops) {
    return div2(appendIProps([classes(buttonGroupClasses)])(iprops));
  };
  var buttonGroup_ = /* @__PURE__ */ buttonGroup([]);
  var buttonClasses = /* @__PURE__ */ map47(ClassName)(["bg-grey-50-a20", "border-grey-50-a20", "hover:!disabled:bg-grey-50-a30", "focus:bg-grey-50-a30", "text-black-20"]);
  var buttonLeft = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(leftClasses));
  var buttonRight = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(rightClasses));
  var buttonCenter = /* @__PURE__ */ buttonGroupBuilder(/* @__PURE__ */ append10(buttonClasses)(centerClasses));
  var buttonBuilder = function(classes2) {
    return function(iprops) {
      return button(appendIProps([classes(append10(buttonMainClasses)(classes2))])(iprops));
    };
  };
  var button2 = /* @__PURE__ */ buttonBuilder(buttonClasses);

  // output/PSD3.CodeExplorer.State/index.js
  var $$delete7 = /* @__PURE__ */ $$delete5(ordString);
  var member1 = /* @__PURE__ */ member2(ordString);
  var insert15 = /* @__PURE__ */ insert6(ordString);
  var alter3 = /* @__PURE__ */ alter(ordInt);
  var fromFoldable112 = /* @__PURE__ */ fromFoldable5(foldableSet)(ordString);
  var _handle6 = /* @__PURE__ */ _handle(strongForget);
  var updateScene = function(f) {
    return function(state3) {
      return {
        simulation: state3.simulation,
        model: state3.model,
        staging: state3.staging,
        eventListener: state3.eventListener,
        tags: state3.tags,
        scene: f(state3.scene)
      };
    };
  };
  var toggleForce = function(label5) {
    return updateScene(function(s) {
      return {
        chooseNodes: s.chooseNodes,
        linksShown: s.linksShown,
        linksActive: s.linksActive,
        cssClass: s.cssClass,
        attributes: s.attributes,
        nodeInitializerFunctions: s.nodeInitializerFunctions,
        activeForces: (function() {
          var $158 = member1(label5)(s.activeForces);
          if ($158) {
            return $$delete7(label5)(s.activeForces);
          }
          ;
          return insert15(label5)(s.activeForces);
        })()
      };
    });
  };
  var tagNodes = function(label5) {
    return function(predicate) {
      return function(nodes) {
        return function(state3) {
          var addTag = function(v) {
            return function(v1) {
              if (v1 instanceof Nothing) {
                return new Just(singleton10(v));
              }
              ;
              if (v1 instanceof Just) {
                return new Just(insert15(v)(v1.value0));
              }
              ;
              throw new Error("Failed pattern match at PSD3.CodeExplorer.State (line 306, column 5 - line 306, column 65): " + [v.constructor.name, v1.constructor.name]);
            };
          };
          var newTags = foldl2(function(acc) {
            return function(v) {
              var $163 = predicate(v);
              if ($163) {
                return alter3(addTag(label5))(v.id)(acc);
              }
              ;
              return acc;
            };
          })(state3.tags)(nodes);
          return {
            simulation: state3.simulation,
            model: state3.model,
            staging: state3.staging,
            scene: state3.scene,
            eventListener: state3.eventListener,
            tags: newTags
          };
        };
      };
    };
  };
  var setSceneAttributes = function(attrs) {
    return updateScene(function(s) {
      return {
        chooseNodes: s.chooseNodes,
        linksShown: s.linksShown,
        linksActive: s.linksActive,
        activeForces: s.activeForces,
        cssClass: s.cssClass,
        nodeInitializerFunctions: s.nodeInitializerFunctions,
        attributes: attrs
      };
    });
  };
  var setLinksShown = function(fn) {
    return updateScene(function(s) {
      return {
        chooseNodes: s.chooseNodes,
        linksActive: s.linksActive,
        activeForces: s.activeForces,
        cssClass: s.cssClass,
        attributes: s.attributes,
        nodeInitializerFunctions: s.nodeInitializerFunctions,
        linksShown: fn
      };
    });
  };
  var setLinksActive = function(fn) {
    return updateScene(function(s) {
      return {
        chooseNodes: s.chooseNodes,
        linksShown: s.linksShown,
        activeForces: s.activeForces,
        cssClass: s.cssClass,
        attributes: s.attributes,
        nodeInitializerFunctions: s.nodeInitializerFunctions,
        linksActive: fn
      };
    });
  };
  var setCssClass = function(css) {
    return updateScene(function(s) {
      return {
        chooseNodes: s.chooseNodes,
        linksShown: s.linksShown,
        linksActive: s.linksActive,
        activeForces: s.activeForces,
        attributes: s.attributes,
        nodeInitializerFunctions: s.nodeInitializerFunctions,
        cssClass: css
      };
    });
  };
  var setChooseNodes = function(fn) {
    return updateScene(function(s) {
      return {
        linksShown: s.linksShown,
        linksActive: s.linksActive,
        activeForces: s.activeForces,
        cssClass: s.cssClass,
        attributes: s.attributes,
        nodeInitializerFunctions: s.nodeInitializerFunctions,
        chooseNodes: fn
      };
    });
  };
  var initialScene = function(forceLibrary3) {
    return {
      chooseNodes: isPackage,
      linksShown: $$const(false),
      linksActive: $$const(false),
      activeForces: fromFoldable112(keys3(forceLibrary3)),
      cssClass: "",
      attributes: clusterSceneAttributes,
      nodeInitializerFunctions: []
    };
  };
  var getStagingNodes = function(state3) {
    return state3.staging.rawdata.nodes;
  };
  var getStagingLinks = function(state3) {
    return state3.staging.rawdata.links;
  };
  var getSimulationVariables = function(state3) {
    var handle = view(_handle6)(state3);
    return readSimulationVariables_(handle);
  };
  var getModelNodes = function(state3) {
    if (state3.model instanceof Just) {
      return state3.model.value0.nodes;
    }
    ;
    if (state3.model instanceof Nothing) {
      return [];
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeExplorer.State (line 211, column 23 - line 213, column 16): " + [state3.model.constructor.name]);
  };
  var getModelLinks = function(state3) {
    if (state3.model instanceof Just) {
      return state3.model.value0.links;
    }
    ;
    if (state3.model instanceof Nothing) {
      return [];
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeExplorer.State (line 216, column 23 - line 218, column 16): " + [state3.model.constructor.name]);
  };
  var clearAllTags = function(state3) {
    return {
      simulation: state3.simulation,
      model: state3.model,
      staging: state3.staging,
      scene: state3.scene,
      eventListener: state3.eventListener,
      tags: empty2
    };
  };
  var applySceneConfig = function(config) {
    return function(state3) {
      return {
        simulation: state3.simulation,
        model: state3.model,
        staging: state3.staging,
        eventListener: state3.eventListener,
        tags: state3.tags,
        scene: config
      };
    };
  };

  // output/PSD3.Format/index.js
  var map48 = /* @__PURE__ */ map(functorArray);
  var subHeadingClasses = /* @__PURE__ */ map48(ClassName)(["text-xl", "font-medium", "leading-loose", "flex", "items-center", "mb-6"]);
  var subHeading = function(iprops) {
    return function(html2) {
      return h2(appendIProps([classes(subHeadingClasses)])(iprops))(html2);
    };
  };
  var subHeading_ = /* @__PURE__ */ subHeading([]);
  var contentHeadingClasses = /* @__PURE__ */ map48(ClassName)(["mb-6", "text-lg", "font-normal", "leading-loose", "flex", "items-center"]);
  var contentHeading = function(iprops) {
    return h3(appendIProps([classes(contentHeadingClasses)])(iprops));
  };
  var contentHeading_ = /* @__PURE__ */ contentHeading([]);
  var captionClasses = /* @__PURE__ */ map48(ClassName)(["block", "font-light", "mb-6", "text-grey-70", "text-sm", "tracking-wide", "uppercase"]);
  var caption2 = function(iprops) {
    return h4(appendIProps([classes(captionClasses)])(iprops));
  };
  var caption_2 = /* @__PURE__ */ caption2([]);

  // output/PSD3.CodeExplorer.HTML/index.js
  var type_21 = /* @__PURE__ */ type_17(isPropInputType);
  var value16 = /* @__PURE__ */ value12(isPropString);
  var show19 = /* @__PURE__ */ show(showNumber);
  var eq6 = /* @__PURE__ */ eq(eqForceStatus);
  var map49 = /* @__PURE__ */ map(functorArray);
  var toUnfoldable10 = /* @__PURE__ */ toUnfoldable2(unfoldableArray);
  var _forceLibrary3 = /* @__PURE__ */ _forceLibrary(strongForget);
  var show110 = /* @__PURE__ */ show(showInt);
  var slider = function(config) {
    var toScale = function(s) {
      return toNumber(fromMaybe(0)(fromString2(s))) / 100;
    };
    return [onValueInput(function($21) {
      return ChangeSimConfig.create(config["var"](toScale($21)));
    }), type_21(InputRange.value), id2(config.id), class_("range-slider scaling-slider"), min5(config.min), max6(config.max), step4(new Step(config.step)), value16(show19(config.value))];
  };
  var renderTableForces = function(state3) {
    var renderForceItem = function(v) {
      return div2([classes(["force-item", (function() {
        var $16 = eq6(v.status)(ForceActive.value);
        if ($16) {
          return "force-active";
        }
        ;
        return "force-inactive";
      })()]), onClick($$const(new ToggleForce(v.name)))])([div2([classes(["force-name"])])([text5(v.name)]), div2([classes(["force-type"])])([text5(showType(v.type))]), div2([classes(["force-filter"])])([text5(showForceFilter(v.filter))])]);
    };
    var forceData = map49(snd)(toUnfoldable10(view(_forceLibrary3)(state3)));
    return div_([h3_([text5("Forces")]), div2([classes(["force-grid"])])(map49(renderForceItem)(forceData))]);
  };
  var renderSimState = function(state3) {
    return div2([classes(["spago-sim-state"])])([caption_2([text5("Simulation state")]), p_([text5("CSS Class: " + state3.scene.cssClass)]), p_([text5("Links: " + show110(length4(getStagingLinks(state3))))]), p_([text5("Nodes: " + show110(length4(getStagingNodes(state3))))])]);
  };
  var isProjectModule = function(v) {
    if (v.nodetype instanceof IsModule) {
      return take3(4)(v.nodetype.value0) === "src/";
    }
    ;
    if (v.nodetype instanceof IsPackage) {
      return true;
    }
    ;
    throw new Error("Failed pattern match at PSD3.CodeExplorer.HTML (line 35, column 36 - line 37, column 22): " + [v.nodetype.constructor.name]);
  };
  var renderSimControls = function(state3) {
    var params = getSimulationVariables(state3);
    return div2([classes(["spago-sim-controls"])])([subHeading_([text5("Scene Selection")]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(new Scene(PackageGrid.value)))])([text5("Package Grid")]), buttonPrimaryRight([onClick($$const(new Scene(PackageGraph.value)))])([text5("Package Graph")])])]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(new Scene(new ModuleTree(Horizontal.value))))])([text5("Horiz. Tree")]), buttonPrimaryCenter([onClick($$const(new Scene(new ModuleTree(Vertical.value))))])([text5("Vert. Tree")]), buttonPrimaryRight([onClick($$const(new Scene(new ModuleTree(Radial.value))))])([text5("Radial Tree")])])]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(new Scene(LayerSwarm.value)))])([text5("Layer Swarm")])])]), subHeading_([text5("Tagging (Demo)")]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(TagHalogen.value))])([text5("Tag Halogen")]), buttonPrimaryRight([onClick($$const(ClearTags.value))])([text5("Clear Tags")])])]), subHeading_([text5("Simulation Control")]), div2([classes(["control-group"])])([input2(slider({
      "var": Alpha.create,
      id: "alpha-slider",
      min: 0,
      max: 100,
      step: 10,
      value: params.alpha * 100
    })), caption_2([text5("Alpha: " + show19(params.alpha))]), input2(slider({
      "var": AlphaTarget.create,
      id: "alphatarget-slider",
      min: 0,
      max: 100,
      step: 10,
      value: params.alphaTarget * 100
    })), caption_2([text5("AlphaTarget: " + show19(params.alphaTarget))])]), div2([classes(["control-group"])])([buttonGroup_([buttonPrimaryLeft([onClick($$const(StopSim.value))])([text5("Stop")]), buttonPrimaryCenter([onClick($$const(new ChangeSimConfig(new AlphaTarget(0.3))))])([text5("Heat")]), buttonPrimaryCenter([onClick($$const(new ChangeSimConfig(new AlphaTarget(0))))])([text5("Cool")]), buttonPrimaryRight([onClick($$const(StartSim.value))])([text5("Start")])])]), subHeading_([text5("Filters")]), div2([classes(["control-group"])])([contentHeading_([text5("Node visibility")]), buttonGroup_([buttonLeft([onClick($$const(new Filter(new NodeFilter(isPackage))))])([text5("Packages")]), buttonCenter([onClick($$const(new Filter(new NodeFilter($$const(true)))))])([text5("All")]), buttonRight([onClick($$const(new Filter(new NodeFilter(isUsedModule))))])([text5("Modules")])])]), div2([classes(["control-group"])])([button2([onClick($$const(new Filter(new NodeFilter(isProjectModule))))])([text5("Only project files")])]), div2([classes(["control-group"])])([contentHeading_([text5("Link Visibility")]), buttonGroup_([buttonLeft([onClick($$const(new Filter(new LinkShowFilter(isM2M_Tree_Link))))])([text5("Tree")]), buttonCenter([onClick($$const(new Filter(new LinkShowFilter(isM2M_Graph_Link))))])([text5("Graph")]), buttonCenter([onClick($$const(new Filter(new LinkShowFilter(isM2P_Link))))])([text5("M2P")]), buttonCenter([onClick($$const(new Filter(new LinkShowFilter(isP2P_Link))))])([text5("P2P")]), buttonRight([onClick($$const(new Filter(new LinkShowFilter($$const(false)))))])([text5("None")])])]), subHeading_([text5("Styling")]), div2([classes(["control-group"])])([buttonGroup_([buttonLeft([onClick($$const(new ChangeStyling(new GraphStyle(clusterSceneAttributes))))])([text5("Cluster")]), buttonCenter([onClick($$const(new ChangeStyling(new GraphStyle(graphSceneAttributes))))])([text5("Graph")]), buttonRight([onClick($$const(new ChangeStyling(new GraphStyle(treeSceneAttributes))))])([text5("Tree")])])])]);
  };
  var render6 = function(state3) {
    return div2([classes(["fullscreen-container", "spago-fullscreen"])])([div2([classes(["floating-panel", "floating-panel--top-left", "floating-panel--small", "spago-controls-panel", "editorial"])])([h2([classes(["floating-panel__title", "spago-controls__title"])])([text5("Controls")]), div2([classes(["control-group", "control-group--home"])])([a([href4("#/"), classes(["button", "button--primary"])])([text5("\u2190 Home")])]), renderSimControls(state3), renderSimState(state3)]), div2([classes(["floating-panel", "floating-panel--top-right", "floating-panel--large", "spago-forces-panel", "editorial"])])([renderTableForces(state3)]), div2([classes(["svg-container", "fullscreen-viz", "spago-viz-container", state3.scene.cssClass])])([])]);
  };

  // output/PSD3.CodeExplorer.Scenes/index.js
  var fromFoldable26 = /* @__PURE__ */ fromFoldable5(foldableArray)(ordString);
  var verticalTreeScene = {
    chooseNodes: isUsedModule,
    linksShown: isM2M_Tree_Link,
    linksActive: /* @__PURE__ */ $$const(false),
    cssClass: "tree vertical",
    attributes: treeSceneAttributes,
    activeForces: /* @__PURE__ */ fromFoldable26(["vtreeNodesX", "vtreeNodesY", "charge1", "collide2", linksForceName_]),
    nodeInitializerFunctions: [unpinAllNodes, treeNodesToTreeXY_V, /* @__PURE__ */ fixNamedNodeTo("PSD3.Main")({
      x: 0,
      y: 0
    })]
  };
  var radialTreeScene = {
    chooseNodes: isUsedModule,
    linksShown: isM2M_Tree_Link,
    linksActive: /* @__PURE__ */ $$const(true),
    cssClass: "tree radial",
    attributes: treeSceneAttributes,
    activeForces: /* @__PURE__ */ fromFoldable26(["center", "collide2", "chargetree", "charge2", linksForceName_]),
    nodeInitializerFunctions: [unpinAllNodes, treeNodesToTreeXY_R, /* @__PURE__ */ fixNamedNodeTo("PSD3.Main")({
      x: 0,
      y: 0
    })]
  };
  var packageGridScene = {
    chooseNodes: allNodes2,
    linksShown: isM2P_Link,
    linksActive: /* @__PURE__ */ $$const(true),
    cssClass: "cluster",
    attributes: clusterSceneAttributes,
    activeForces: /* @__PURE__ */ fromFoldable26(["clusterx_P", "clustery_P", "clusterx_M", "clustery_M", "collide2", linksForceName_]),
    nodeInitializerFunctions: [unpinAllNodes, packageNodesToGridXY, moduleNodesToContainerXY]
  };
  var packageGraphScene = {
    chooseNodes: isPackage,
    linksShown: isP2P_Link,
    linksActive: /* @__PURE__ */ sourcePackageIs("my-project"),
    cssClass: "graph",
    attributes: graphSceneAttributes,
    activeForces: /* @__PURE__ */ fromFoldable26(["center", "collide2", "charge2", "packageOrbit", linksForceName_]),
    nodeInitializerFunctions: [unpinAllNodes, packagesNodesToPhyllotaxis, /* @__PURE__ */ fixNamedNodeTo("my-project")({
      x: 0,
      y: 0
    })]
  };
  var layerSwarmScene = {
    chooseNodes: isUsedModule,
    linksShown: isM2M_Tree_Link,
    linksActive: /* @__PURE__ */ $$const(true),
    cssClass: "tree",
    attributes: treeSceneAttributes,
    activeForces: /* @__PURE__ */ fromFoldable26(["htreeNodesX", "collide1", "y", linksForceName_]),
    nodeInitializerFunctions: [unpinAllNodes]
  };
  var horizontalTreeScene = {
    chooseNodes: isUsedModule,
    linksShown: isM2M_Tree_Link,
    linksActive: /* @__PURE__ */ $$const(false),
    cssClass: "tree horizontal",
    attributes: treeSceneAttributes,
    activeForces: /* @__PURE__ */ fromFoldable26(["htreeNodesX", "htreeNodesY", "charge1", "collide2", linksForceName_]),
    nodeInitializerFunctions: [unpinAllNodes, treeNodesToTreeXY_H, /* @__PURE__ */ fixNamedNodeTo("PSD3.Main")({
      x: 0,
      y: 0
    })]
  };

  // output/PSD3.Spago/index.js
  var liftEffect8 = /* @__PURE__ */ liftEffect(monadEffectEffect);
  var x10 = /* @__PURE__ */ x(toAttrNumber);
  var discard14 = /* @__PURE__ */ discard(discardUnit);
  var discard15 = /* @__PURE__ */ discard14(bindD3SimM);
  var updateSimulation2 = /* @__PURE__ */ updateSimulation(bindD3SimM)(monadEffD3SimM)(selectionMD3Selection_D3S)(simulationM2D3Selection_D);
  var start4 = /* @__PURE__ */ start2(simulationMD3Selection_D3);
  var bind23 = /* @__PURE__ */ bind(bindHalogenM);
  var discard23 = /* @__PURE__ */ discard14(bindHalogenM);
  var modify_6 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var evalEffectSimulation2 = /* @__PURE__ */ evalEffectSimulation(bindHalogenM)(monadStateHalogenM);
  var initialize4 = /* @__PURE__ */ initialize3(bindD3SimM)(monadEffD3SimM)(simulationM2D3Selection_D)(selectionMD3Selection_D3S);
  var $$void10 = /* @__PURE__ */ $$void(functorHalogenM);
  var pure25 = /* @__PURE__ */ pure(applicativeHalogenM);
  var runWithD3_Simulation3 = /* @__PURE__ */ runWithD3_Simulation(bindHalogenM)(monadStateHalogenM);
  var stop2 = /* @__PURE__ */ stop(simulationMD3Selection_D3);
  var get9 = /* @__PURE__ */ get(monadStateHalogenM);
  var simulationEvent = function(l) {
    return onMouseEventEffectful(MouseClick.value)(function(e) {
      return function(d9) {
        return function(t) {
          return liftEffect8(notify(l)(new EventFromVizualization(getVizEventFromClick(e)(d9)(t))));
        };
      };
    });
  };
  var runSimulation = function(dictMonadEffect) {
    var Bind1 = dictMonadEffect.Monad0().Bind1();
    var bind116 = bind(Bind1);
    var runWithD3_Simulation1 = runWithD3_Simulation(Bind1);
    return function(dictMonadState) {
      var runWithD3_Simulation22 = runWithD3_Simulation1(dictMonadState)(dictMonadEffect);
      return bind116(get(dictMonadState))(function(state3) {
        var allModelNodes = getModelNodes(state3);
        var allModelLinks = getModelLinks(state3);
        var filteredNodes = filter2(state3.scene.chooseNodes)(allModelNodes);
        var initializedNodes = foldl2(function(nodes) {
          return function(fn) {
            return fn(nodes);
          };
        })(filteredNodes)(state3.scene.nodeInitializerFunctions);
        var callback = (function() {
          if (state3.eventListener instanceof Just) {
            return simulationEvent(state3.eventListener.value0);
          }
          ;
          if (state3.eventListener instanceof Nothing) {
            return x10(0);
          }
          ;
          throw new Error("Failed pattern match at PSD3.Spago (line 311, column 18 - line 313, column 25): " + [state3.eventListener.constructor.name]);
        })();
        var attributesWithCallback = {
          labels: state3.scene.attributes.labels,
          circles: cons3(callback)(state3.scene.attributes.circles),
          tagMap: new Just(state3.tags)
        };
        return runWithD3_Simulation22(discard15(updateSimulation2(state3.staging.selections)({
          nodes: initializedNodes,
          links: allModelLinks,
          nodeFilter: Nothing.value,
          linkFilter: new Just(state3.scene.linksShown),
          activeForces: state3.scene.activeForces,
          linksWithForce: state3.scene.linksActive
        })(attributesWithCallback))(function() {
          return start4;
        }));
      });
    };
  };
  var handleAction3 = function(dictMonadAff) {
    var liftAff36 = liftAff(monadAffHalogenM(dictMonadAff));
    var monadEffectHalogenM3 = monadEffectHalogenM(dictMonadAff.MonadEffect0());
    var evalEffectSimulation1 = evalEffectSimulation2(monadEffectHalogenM3);
    var liftEffect110 = liftEffect(monadEffectHalogenM3);
    var runSimulation1 = runSimulation(monadEffectHalogenM3)(monadStateHalogenM);
    var runWithD3_Simulation1 = runWithD3_Simulation3(monadEffectHalogenM3);
    return function(v) {
      if (v instanceof Initialize4) {
        return bind23(liftAff36(readModelData))(function(v1) {
          return discard23(modify_6(function(v2) {
            var $59 = {};
            for (var $60 in v2) {
              if ({}.hasOwnProperty.call(v2, $60)) {
                $59[$60] = v2[$60];
              }
              ;
            }
            ;
            $59.model = v1;
            return $59;
          }))(function() {
            return bind23(evalEffectSimulation1(initialize4))(function(openSelections) {
              return discard23(modify_6(function(s) {
                var $65 = {};
                for (var $66 in s) {
                  if ({}.hasOwnProperty.call(s, $66)) {
                    $65[$66] = s[$66];
                  }
                  ;
                }
                ;
                $65.staging = (function() {
                  var $62 = {};
                  for (var $63 in s.staging) {
                    if ({}.hasOwnProperty.call(s.staging, $63)) {
                      $62[$63] = s["staging"][$63];
                    }
                    ;
                  }
                  ;
                  $62.selections = {
                    nodes: openSelections.nodes,
                    links: openSelections.links
                  };
                  return $62;
                })();
                return $65;
              }))(function() {
                return bind23(liftEffect110(create3))(function(v2) {
                  return discard23($$void10(subscribe2(v2.emitter)))(function() {
                    return discard23(modify_6(function(v3) {
                      var $69 = {};
                      for (var $70 in v3) {
                        if ({}.hasOwnProperty.call(v3, $70)) {
                          $69[$70] = v3[$70];
                        }
                        ;
                      }
                      ;
                      $69.eventListener = new Just(v2.listener);
                      return $69;
                    }))(function() {
                      return pure25(unit);
                    });
                  });
                });
              });
            });
          });
        });
      }
      ;
      if (v instanceof Finalize2) {
        return pure25(unit);
      }
      ;
      if (v instanceof EventFromVizualization) {
        if (v.value0.value0 instanceof IsPackage) {
          return handleAction3(dictMonadAff)(new ToggleChildrenOfNode(v.value0.value1));
        }
        ;
        if (v.value0.value0 instanceof IsModule) {
          return handleAction3(dictMonadAff)(new SpotlightNode(v.value0.value1));
        }
        ;
        throw new Error("Failed pattern match at PSD3.Spago (line 121, column 5 - line 123, column 68): " + [v.value0.constructor.name]);
      }
      ;
      if (v instanceof ToggleChildrenOfNode) {
        return discard23(modify_6(setChooseNodes(isPackageOrVisibleModule(v.value0))))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof UnToggleChildrenOfNode) {
        return discard23(modify_6(setChooseNodes(isPackage)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof SpotlightNode) {
        return runWithD3_Simulation1(stop2);
      }
      ;
      if (v instanceof Scene && v.value0 instanceof PackageGrid) {
        return discard23(modify_6(applySceneConfig(packageGridScene)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Scene && v.value0 instanceof PackageGraph) {
        return discard23(modify_6(applySceneConfig(packageGraphScene)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Scene && v.value0 instanceof LayerSwarm) {
        return discard23(modify_6(applySceneConfig(layerSwarmScene)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Scene && (v.value0 instanceof ModuleTree && v.value0.value0 instanceof Radial)) {
        return discard23(modify_6(applySceneConfig(radialTreeScene)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Scene && (v.value0 instanceof ModuleTree && v.value0.value0 instanceof Horizontal)) {
        return discard23(modify_6(applySceneConfig(horizontalTreeScene)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Scene && (v.value0 instanceof ModuleTree && v.value0.value0 instanceof Vertical)) {
        return discard23(modify_6(applySceneConfig(verticalTreeScene)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof ToggleForce) {
        return discard23(modify_6(toggleForce(v.value0)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Filter && v.value0 instanceof LinkShowFilter) {
        return discard23(modify_6(setLinksShown(v.value0.value0)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Filter && v.value0 instanceof LinkForceFilter) {
        return discard23(modify_6(setLinksActive(v.value0.value0)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof Filter && v.value0 instanceof NodeFilter) {
        return discard23(modify_6(setChooseNodes(v.value0.value0)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof ChangeStyling && v.value0 instanceof TopLevelCSS) {
        return modify_6(setCssClass(v.value0.value0));
      }
      ;
      if (v instanceof ChangeStyling && v.value0 instanceof GraphStyle) {
        return discard23(modify_6(setSceneAttributes(v.value0.value0)))(function() {
          return runSimulation1;
        });
      }
      ;
      if (v instanceof ChangeSimConfig) {
        return pure25(unit);
      }
      ;
      if (v instanceof StartSim) {
        return runWithD3_Simulation1(start4);
      }
      ;
      if (v instanceof StopSim) {
        return runWithD3_Simulation1(stop2);
      }
      ;
      if (v instanceof TagHalogen) {
        return bind23(get9)(function(state3) {
          var isHalogenPackage = function(v1) {
            if (v1.nodetype instanceof IsPackage) {
              return contains("halogen")(toLower(v1.name));
            }
            ;
            return false;
          };
          var allNodes3 = getModelNodes(state3);
          return discard23(modify_6(tagNodes("halogen")(isHalogenPackage)(allNodes3)))(function() {
            return runSimulation1;
          });
        });
      }
      ;
      if (v instanceof ClearTags) {
        return discard23(modify_6(clearAllTags))(function() {
          return runSimulation1;
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Spago (line 92, column 16 - line 217, column 18): " + [v.constructor.name]);
    };
  };
  var component5 = function(dictMonadAff) {
    var initialState4 = {
      model: Nothing.value,
      staging: {
        selections: {
          nodes: Nothing.value,
          links: Nothing.value
        },
        linksWithForce: $$const(true),
        rawdata: {
          nodes: [],
          links: []
        }
      },
      simulation: initialSimulationState(forceLibrary),
      scene: initialScene(forceLibrary),
      eventListener: Nothing.value,
      tags: empty2
    };
    return mkComponent({
      initialState: $$const(initialState4),
      render: render6,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        handleAction: handleAction3(dictMonadAff),
        initialize: new Just(Initialize4.value),
        finalize: new Just(Finalize2.value)
      })
    });
  };

  // output/PSD3.CodeExplorer.CodeExplorerWrapper/index.js
  var slot_3 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "spagoComponent";
    }
  })(ordUnit);
  var identity17 = /* @__PURE__ */ identity(categoryFn);
  var _spagoComponent = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render7 = function(dictMonadAff) {
    var component110 = component5(dictMonadAff);
    return function(v) {
      return div2([classes(["fullscreen-page-wrapper", "spago-page-wrapper"])])([slot_3(_spagoComponent)(unit)(component110)(unit)]);
    };
  };
  var component6 = function(dictMonadAff) {
    return mkComponent({
      initialState: identity17,
      render: render7(dictMonadAff),
      "eval": mkEval(defaultEval)
    });
  };

  // output/PSD3.Home/index.js
  var pure26 = /* @__PURE__ */ pure(applicativeHalogenM);
  var Initialize5 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var renderExampleCard = function(title5) {
    return function(description) {
      return function(path3) {
        return a([href4("#" + path3), classes(["home-example-card"])])([h3([classes(["home-example-card__title"])])([text5(title5)]), p([classes(["home-example-card__description"])])([text5(description)])]);
      };
    };
  };
  var renderDocBox = function(title5) {
    return function(description) {
      return function(path3) {
        return function(linkText) {
          return function(maybeImage) {
            return a([href4("#" + path3), classes(["home-doc-box"])])([(function() {
              if (maybeImage instanceof Just) {
                return div2([classes(["home-doc-box__image-container"])])([img([src9(maybeImage.value0), alt5(""), classes(["home-doc-box__image"])])]);
              }
              ;
              if (maybeImage instanceof Nothing) {
                return div2([classes(["home-doc-box__image-container"])])([]);
              }
              ;
              throw new Error("Failed pattern match at PSD3.Home (line 165, column 7 - line 178, column 15): " + [maybeImage.constructor.name]);
            })(), div2([classes(["home-doc-box__content"])])([h3([classes(["home-doc-box__title"])])([text5(title5)]), p([classes(["home-doc-box__description"])])([text5(description)]), span3([classes(["home-doc-box__link"])])([text5(linkText)])])]);
          };
        };
      };
    };
  };
  var renderGettingStartedBox = /* @__PURE__ */ (function() {
    return renderDocBox("Getting Started")("Installation, setup, and your first visualization")(routeToPath(GettingStarted.value))("Get Started \u2192")(new Just("images/tutorial-bookmark-balloons.jpeg"));
  })();
  var render8 = function(v) {
    return div2([classes(["home-page"])])([section([classes(["home-hero"])])([h1([classes(["home-hero__title"])])([text5("PS<$>D3")]), p([classes(["home-hero__subtitle"])])([text5("Type-safe, composable data visualization with PureScript and D3")]), p([classes(["home-hero__description"])])([text5("Finally Tagless design, functional programming principles, and the power of D3.js combined into an elegant, type-safe visualization library.")])]), section([classes(["home-cta"])])([a([href4("#" + routeToPath(Wizard.value)), classes(["home-cta__button home-cta__button--primary"])])([span3([classes(["home-cta__icon"])])([text5("\u{1F680}")]), span_([text5("Start the Wizard")])]), a([href4("#examples"), classes(["home-cta__button home-cta__button--secondary"])])([span3([classes(["home-cta__icon"])])([text5("\u2728")]), span_([text5("View Examples")])])]), section([classes(["home-docs"])])([div2([classes(["home-docs__grid"])])([renderGettingStartedBox, renderDocBox("How-to Guides")("Step-by-step instructions for building specific visualizations")(routeToPath(HowtoIndex.value))("Browse Guides \u2192")(new Just("images/howto-bookmark-volcano.jpeg")), renderDocBox("API Reference")("Complete technical documentation with type signatures")(routeToPath(Reference.value))("View API \u2192")(new Just("images/reference-bookmark-deepseavent.jpeg")), renderDocBox("Understanding")("Concepts, patterns, and design philosophy")(routeToPath(UnderstandingConcepts.value))("Learn More \u2192")(new Just("images/understanding-bookmark-trees.jpeg"))])]), section([id2("examples"), classes(["home-examples"])])([h2([classes(["home-examples__title"])])([text5("Example Visualizations")]), div2([classes(["home-examples__grid"])])([renderExampleCard("Simple Charts")("Bar charts, line charts, and scatter plots")(routeToPath(SimpleCharts1.value)), renderExampleCard("Data Flow Visualizations")("Chord and Sankey diagrams for relationships and flows")(routeToPath(DataFlowViz.value)), renderExampleCard("Hierarchies")("Trees, dendrograms, circle packing, and treemaps")(routeToPath(Hierarchies.value)), renderExampleCard("Movement")("Movement, animation and transitions")(routeToPath(Movement.value)), renderExampleCard("Interpreters")("Alternative interpreters: String and MetaTree")(routeToPath(Interpreters.value)), renderExampleCard("Code Explorer")("Interactive dependency graph of PureScript code")(routeToPath(CodeExplorer.value)), renderExampleCard("Wealth & Health")("Hans Rosling's animated exploration (1800-2020)")(routeToPath(WealthHealth.value))])])]);
  };
  var handleAction4 = function(v) {
    return pure26(unit);
  };
  var component7 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render8,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction4,
        initialize: new Just(Initialize5.value)
      })
    });
  })();

  // output/PSD3.Shared.SectionNav/index.js
  var eq7 = /* @__PURE__ */ eq(eqSection);
  var eq14 = /* @__PURE__ */ eq(eqRoute);
  var map50 = /* @__PURE__ */ map(functorArray);
  var sectionTitle = function(v) {
    if (v instanceof UnderstandingSection) {
      return "Understanding";
    }
    ;
    if (v instanceof TutorialSection) {
      return "Getting Started";
    }
    ;
    if (v instanceof HowToSection) {
      return "How-To Guides";
    }
    ;
    if (v instanceof APISection) {
      return "API Reference";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Shared.SectionNav (line 115, column 16 - line 119, column 32): " + [v.constructor.name]);
  };
  var sectionDefaultRoute = function(v) {
    if (v instanceof UnderstandingSection) {
      return UnderstandingConcepts.value;
    }
    ;
    if (v instanceof TutorialSection) {
      return GettingStarted.value;
    }
    ;
    if (v instanceof HowToSection) {
      return HowtoIndex.value;
    }
    ;
    if (v instanceof APISection) {
      return Reference.value;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Shared.SectionNav (line 107, column 23 - line 111, column 26): " + [v.constructor.name]);
  };
  var renderQuadrant = function(targetSection) {
    return function(currentSection) {
      return a([href4("#" + routeToPath(sectionDefaultRoute(targetSection))), classes(["section-nav__quadrant-box", (function() {
        var $11 = eq7(targetSection)(currentSection);
        if ($11) {
          return "section-nav__quadrant-box--active";
        }
        ;
        return "section-nav__quadrant-box--inactive";
      })()]), title3(sectionTitle(targetSection))])([]);
    };
  };
  var renderPageLink = function(currentRoute) {
    return function(v) {
      var $14 = eq14(v.route)(currentRoute);
      if ($14) {
        return span3([classes(["section-nav__page-link", "section-nav__page-link--active"])])([text5(v.label)]);
      }
      ;
      return a([href4("#" + routeToPath(v.route)), classes(["section-nav__page-link"])])([text5(v.label), text5(" \u2192")]);
    };
  };
  var renderModuleLink = function(currentRoute) {
    return function(moduleInfo) {
      var moduleRoute = new ReferenceModule(moduleInfo.name);
      var isActive = eq14(currentRoute)(moduleRoute);
      return li([classes(["section-nav__module-item"])])([(function() {
        if (isActive) {
          return span3([classes(["section-nav__module-link", "section-nav__module-link--active"]), title3(moduleInfo.description)])([text5(moduleInfo.name)]);
        }
        ;
        return a([href4("#" + routeToPath(moduleRoute)), classes(["section-nav__module-link"]), title3(moduleInfo.description)])([text5(moduleInfo.name)]);
      })()]);
    };
  };
  var renderModuleCategory = function(currentRoute) {
    return function(category) {
      return div2([classes(["section-nav__module-category"])])([h4([classes(["section-nav__category-title"])])([text5(category.title)]), ul([classes(["section-nav__module-list"])])(map50(renderModuleLink(currentRoute))(category.modules))]);
    };
  };
  var render9 = function(v) {
    return div2([classes(["section-nav"])])([div2([classes(["section-nav__quadrant"])])([renderQuadrant(TutorialSection.value)(v.currentSection), renderQuadrant(HowToSection.value)(v.currentSection), renderQuadrant(APISection.value)(v.currentSection), renderQuadrant(UnderstandingSection.value)(v.currentSection)]), h3([classes(["section-nav__title"])])([text5(sectionTitle(v.currentSection))]), (function() {
      if (v.moduleCategories instanceof Just) {
        return nav([classes(["section-nav__modules"])])(map50(renderModuleCategory(v.currentRoute))(v.moduleCategories.value0));
      }
      ;
      if (v.moduleCategories instanceof Nothing) {
        return nav([classes(["section-nav__pages"])])(map50(renderPageLink(v.currentRoute))(v.sectionPages));
      }
      ;
      throw new Error("Failed pattern match at PSD3.Shared.SectionNav (line 54, column 7 - line 64, column 61): " + [v.moduleCategories.constructor.name]);
    })()]);
  };
  var component8 = /* @__PURE__ */ mkComponent({
    initialState: /* @__PURE__ */ identity(categoryFn),
    render: render9,
    "eval": /* @__PURE__ */ mkEval(defaultEval)
  });

  // output/PSD3.HowTo.HowtoIndex/index.js
  var pure27 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_4 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "sectionNav";
    }
  })(ordUnit);
  var Initialize6 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var renderHowtoItem = function(snippetId) {
    return function(title5) {
      return function(description) {
        return function(difficulty) {
          return div2([classes(["howto-item"])])([div2([classes(["howto-item__header"])])([h3([classes(["howto-item__title"])])([a([href4("#" + routeToPath(new Explore(snippetId))), classes(["howto-item__link"])])([text5(title5)])]), span3([classes(["howto-item__difficulty", "howto-item__difficulty--" + toLower(difficulty)])])([text5(difficulty)])]), p([classes(["howto-item__description"])])([text5(description)])]);
        };
      };
    };
  };
  var handleAction5 = function(v) {
    return pure27(unit);
  };
  var _sectionNav = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render10 = function(v) {
    return div2([classes(["howto-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("basic")("Basic Visualizations")(0), tocAnchor("data")("Data & Scales")(0), tocAnchor("interaction")("Interactivity")(0), tocAnchor("advanced")("Advanced Techniques")(0)],
      image: new Just("images/howto-bookmark-volcano.jpeg")
    }), slot_4(_sectionNav)(unit)(component8)({
      currentSection: HowToSection.value,
      currentRoute: HowtoIndex.value,
      sectionPages: [{
        route: HowtoIndex.value,
        label: "How-to Guides"
      }],
      moduleCategories: Nothing.value
    }), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("How-to Guides")]), p_([text5("Step-by-step guides for building specific visualizations and accomplishing common tasks. Each guide includes complete code examples with detailed explanations.")]), p_([text5("These guides assume you're already familiar with the basics. If you're new to PS<$>D3, start with the ")]), a([href4("#" + routeToPath(GettingStarted.value))])([text5("Getting Started")]), text5(" guide.")]), section([classes(["tutorial-section"]), id2("basic")])([h2([classes(["tutorial-section-title"])])([text5("Basic Visualizations")]), p_([text5("Learn to build fundamental chart types from scratch.")]), div2([classes(["howto-list"])])([renderHowtoItem("TLCSimple")("Three Little Circles")("The simplest possible D3 example - create three circles. Perfect first example.")("Beginner"), renderHowtoItem("GUP")("General Update Pattern")("Master the enter/update/exit pattern for animated data updates.")("Intermediate"), renderHowtoItem("TLCParabola")("Data-Driven Positioning")("Position elements based on data values with type-safe accessors.")("Beginner"), renderHowtoItem("BarChartDraw")("Build a Bar Chart")("Create a bar chart with scales and axes from monthly sales data.")("Beginner"), renderHowtoItem("LineChartDraw")("Build a Line Chart")("Draw smooth lines through data points with path generators.")("Beginner"), renderHowtoItem("ScatterPlotQuartet")("Anscombe's Quartet")("Create small multiples showing why visualization matters.")("Intermediate")])]), section([classes(["tutorial-section"]), id2("data")])([h2([classes(["tutorial-section-title"])])([text5("Data & Scales")]), p_([text5("Coming soon: guides for data loading, transformation, and scale configuration.")])]), section([classes(["tutorial-section"]), id2("interaction")])([h2([classes(["tutorial-section-title"])])([text5("Interactivity")]), p_([text5("Coming soon: guides for tooltips, zooming, panning, and user interactions.")])]), section([classes(["tutorial-section"]), id2("advanced")])([h2([classes(["tutorial-section-title"])])([text5("Advanced Techniques")]), p_([text5("Coming soon: guides for custom interpreters, complex layouts, and performance optimization.")])])]);
  };
  var component9 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render10,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction5,
        initialize: new Just(Initialize6.value)
      })
    });
  })();

  // output/PSD3.Reference.ModuleRegistry/index.js
  var moduleCategories = [{
    title: "Core API",
    modules: [{
      name: "PSD3.Types",
      path: "PSD3/Types.purs",
      description: "Common type definitions used throughout PSD3"
    }, {
      name: "PSD3.Attributes",
      path: "PSD3/Attributes.purs",
      description: "SVG and HTML attribute combinators"
    }]
  }, {
    title: "Capabilities",
    modules: [{
      name: "PSD3.Capabilities.Selection",
      path: "PSD3/Capabilities/Selection.purs",
      description: "Core selection and element manipulation operations"
    }, {
      name: "PSD3.Capabilities.Simulation",
      path: "PSD3/Capabilities/Simulation.purs",
      description: "Force simulation capabilities"
    }, {
      name: "PSD3.Capabilities.Sankey",
      path: "PSD3/Capabilities/Sankey.purs",
      description: "Sankey diagram layout capabilities"
    }]
  }, {
    title: "Interpreters",
    modules: [{
      name: "PSD3.Interpreter.D3",
      path: "PSD3/Interpreter/D3.purs",
      description: "D3.js interpreter - runs visualizations in the browser"
    }, {
      name: "PSD3.Interpreter.String",
      path: "PSD3/Interpreter/String.purs",
      description: "String interpreter - generates code as text"
    }, {
      name: "PSD3.Interpreter.MetaTree",
      path: "PSD3/Interpreter/MetaTree.purs",
      description: "MetaTree interpreter - produces AST representation"
    }]
  }, {
    title: "Data Structures",
    modules: [{
      name: "PSD3.Data.Tree",
      path: "PSD3/Data/Tree.purs",
      description: "Tree data structure for hierarchical layouts"
    }, {
      name: "PSD3.Data.Node",
      path: "PSD3/Data/Node.purs",
      description: "Node types for tree structures"
    }, {
      name: "PSD3.Data.Utility",
      path: "PSD3/Data/Utility.purs",
      description: "Utility functions for data manipulation"
    }]
  }, {
    title: "Internal - Selection",
    modules: [{
      name: "PSD3.Internal.Selection.Types",
      path: "PSD3/Internal/Selection/Types.purs",
      description: "Selection type definitions"
    }, {
      name: "PSD3.Internal.Selection.Functions",
      path: "PSD3/Internal/Selection/Functions.purs",
      description: "Selection implementation functions"
    }]
  }, {
    title: "Internal - Simulation",
    modules: [{
      name: "PSD3.Internal.Simulation.Types",
      path: "PSD3/Internal/Simulation/Types.purs",
      description: "Simulation type definitions"
    }, {
      name: "PSD3.Internal.Simulation.Functions",
      path: "PSD3/Internal/Simulation/Functions.purs",
      description: "Simulation implementation functions"
    }, {
      name: "PSD3.Internal.Simulation.Forces",
      path: "PSD3/Internal/Simulation/Forces.purs",
      description: "Force definitions for simulations"
    }, {
      name: "PSD3.Internal.Simulation.Config",
      path: "PSD3/Internal/Simulation/Config.purs",
      description: "Simulation configuration"
    }]
  }, {
    title: "Internal - Other",
    modules: [{
      name: "PSD3.Internal.Types",
      path: "PSD3/Internal/Types.purs",
      description: "Internal type definitions"
    }, {
      name: "PSD3.Internal.FFI",
      path: "PSD3/Internal/FFI.purs",
      description: "Foreign function interface to D3.js"
    }, {
      name: "PSD3.Internal.Attributes.Instances",
      path: "PSD3/Internal/Attributes/Instances.purs",
      description: "Type class instances for attributes"
    }, {
      name: "PSD3.Internal.Attributes.Sugar",
      path: "PSD3/Internal/Attributes/Sugar.purs",
      description: "Syntactic sugar for attributes"
    }, {
      name: "PSD3.Internal.Axes",
      path: "PSD3/Internal/Axes.purs",
      description: "Axis generation"
    }, {
      name: "PSD3.Internal.Hierarchical",
      path: "PSD3/Internal/Hierarchical.purs",
      description: "Hierarchical layout algorithms"
    }, {
      name: "PSD3.Internal.Generators.Line",
      path: "PSD3/Internal/Generators/Line.purs",
      description: "Line and area generators"
    }, {
      name: "PSD3.Internal.Scales.Scales",
      path: "PSD3/Internal/Scales/Scales.purs",
      description: "Scale functions"
    }, {
      name: "PSD3.Internal.Scales.Linear",
      path: "PSD3/Internal/Scales/Linear.purs",
      description: "Linear scale implementation"
    }, {
      name: "PSD3.Internal.Sankey.Types",
      path: "PSD3/Internal/Sankey/Types.purs",
      description: "Sankey diagram types"
    }, {
      name: "PSD3.Internal.Sankey.Functions",
      path: "PSD3/Internal/Sankey/Functions.purs",
      description: "Sankey diagram functions"
    }, {
      name: "PSD3.Internal.Utility",
      path: "PSD3/Internal/Utility.purs",
      description: "Internal utility functions"
    }, {
      name: "PSD3.Internal.Zoom",
      path: "PSD3/Internal/Zoom.purs",
      description: "Zoom and pan behavior"
    }]
  }];

  // output/PSD3.PrismJS/foreign.js
  function highlightAll() {
    if (window.Prism) {
      window.Prism.highlightAll();
    }
  }

  // output/PSD3.Reference.SourceLoader/index.js
  var bind24 = /* @__PURE__ */ bind(bindAff);
  var pure28 = /* @__PURE__ */ pure(applicativeAff);
  var loadSourceFile = function(relativePath) {
    var url = "sources/" + relativePath;
    return bind24(get3(string)(url))(function(result) {
      return pure28((function() {
        if (result instanceof Left) {
          return new Left("Failed to load " + (relativePath + (": " + printError(result.value0))));
        }
        ;
        if (result instanceof Right) {
          return new Right(result.value0.body);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.SourceLoader (line 16, column 8 - line 20, column 26): " + [result.constructor.name]);
      })());
    });
  };

  // output/PSD3.Reference.Modules.Attributes/index.js
  var bind25 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff3 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_7 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard16 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect9 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize7 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render11 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Attributes")]), p([classes(["module-page__description"])])([text5("SVG and HTML attribute combinators")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Attributes (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Attributes (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction6 = function(v) {
    if (v instanceof Initialize7) {
      return bind25(liftAff3(loadSourceFile("PSD3/Attributes.purs")))(function(result) {
        return handleAction6(new SourceLoaded(result));
      });
    }
    ;
    if (v instanceof SourceLoaded) {
      if (v.value0 instanceof Left) {
        return modify_7(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard16(modify_7(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect9(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Attributes (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Attributes (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component10 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render11,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction6,
        initialize: new Just(Initialize7.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Capabilities.Sankey/index.js
  var bind26 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff4 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_8 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard17 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect10 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize8 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded2 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render12 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Capabilities.Sankey")]), p([classes(["module-page__description"])])([text5("Sankey diagram layout capabilities")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Sankey (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Sankey (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction7 = function(v) {
    if (v instanceof Initialize8) {
      return bind26(liftAff4(loadSourceFile("PSD3/Capabilities/Sankey.purs")))(function(result) {
        return handleAction7(new SourceLoaded2(result));
      });
    }
    ;
    if (v instanceof SourceLoaded2) {
      if (v.value0 instanceof Left) {
        return modify_8(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard17(modify_8(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect10(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Sankey (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Sankey (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component11 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render12,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction7,
        initialize: new Just(Initialize8.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Capabilities.Selection/index.js
  var bind27 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff5 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_9 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard18 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect11 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize9 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded3 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render13 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Capabilities.Selection")]), p([classes(["module-page__description"])])([text5("Core selection and element manipulation operations")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Selection (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Selection (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction8 = function(v) {
    if (v instanceof Initialize9) {
      return bind27(liftAff5(loadSourceFile("PSD3/Capabilities/Selection.purs")))(function(result) {
        return handleAction8(new SourceLoaded3(result));
      });
    }
    ;
    if (v instanceof SourceLoaded3) {
      if (v.value0 instanceof Left) {
        return modify_9(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard18(modify_9(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect11(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Selection (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Selection (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component12 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render13,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction8,
        initialize: new Just(Initialize9.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Capabilities.Simulation/index.js
  var bind28 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff6 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_10 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard19 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect12 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize10 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded4 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render14 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Capabilities.Simulation")]), p([classes(["module-page__description"])])([text5("Force simulation capabilities")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Simulation (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Simulation (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction9 = function(v) {
    if (v instanceof Initialize10) {
      return bind28(liftAff6(loadSourceFile("PSD3/Capabilities/Simulation.purs")))(function(result) {
        return handleAction9(new SourceLoaded4(result));
      });
    }
    ;
    if (v instanceof SourceLoaded4) {
      if (v.value0 instanceof Left) {
        return modify_10(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard19(modify_10(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect12(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Simulation (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Capabilities.Simulation (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component13 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render14,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction9,
        initialize: new Just(Initialize10.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Data.Node/index.js
  var bind29 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff7 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_11 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard20 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect13 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize11 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded5 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render15 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Data.Node")]), p([classes(["module-page__description"])])([text5("Node types for tree structures")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Node (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Node (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction10 = function(v) {
    if (v instanceof Initialize11) {
      return bind29(liftAff7(loadSourceFile("PSD3/Data/Node.purs")))(function(result) {
        return handleAction10(new SourceLoaded5(result));
      });
    }
    ;
    if (v instanceof SourceLoaded5) {
      if (v.value0 instanceof Left) {
        return modify_11(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard20(modify_11(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect13(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Node (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Node (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component14 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render15,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction10,
        initialize: new Just(Initialize11.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Data.Tree/index.js
  var bind30 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff8 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_12 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard21 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect14 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize12 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded6 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render16 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Data.Tree")]), p([classes(["module-page__description"])])([text5("Tree data structure for hierarchical layouts")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Tree (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Tree (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction11 = function(v) {
    if (v instanceof Initialize12) {
      return bind30(liftAff8(loadSourceFile("PSD3/Data/Tree.purs")))(function(result) {
        return handleAction11(new SourceLoaded6(result));
      });
    }
    ;
    if (v instanceof SourceLoaded6) {
      if (v.value0 instanceof Left) {
        return modify_12(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard21(modify_12(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect14(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Tree (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Tree (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component15 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render16,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction11,
        initialize: new Just(Initialize12.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Data.Utility/index.js
  var bind31 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff9 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_13 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard24 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect15 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize13 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded7 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render17 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Data.Utility")]), p([classes(["module-page__description"])])([text5("Utility functions for data manipulation")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Utility (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Utility (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction12 = function(v) {
    if (v instanceof Initialize13) {
      return bind31(liftAff9(loadSourceFile("PSD3/Data/Utility.purs")))(function(result) {
        return handleAction12(new SourceLoaded7(result));
      });
    }
    ;
    if (v instanceof SourceLoaded7) {
      if (v.value0 instanceof Left) {
        return modify_13(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard24(modify_13(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect15(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Utility (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Data.Utility (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component16 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render17,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction12,
        initialize: new Just(Initialize13.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Attributes.Instances/index.js
  var bind32 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff10 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_14 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard25 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect16 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize14 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded8 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render18 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Attributes.Instances")]), p([classes(["module-page__description"])])([text5("Type class instances for attributes")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Instances (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Instances (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction13 = function(v) {
    if (v instanceof Initialize14) {
      return bind32(liftAff10(loadSourceFile("PSD3/Internal/Attributes/Instances.purs")))(function(result) {
        return handleAction13(new SourceLoaded8(result));
      });
    }
    ;
    if (v instanceof SourceLoaded8) {
      if (v.value0 instanceof Left) {
        return modify_14(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard25(modify_14(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect16(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Instances (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Instances (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component17 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render18,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction13,
        initialize: new Just(Initialize14.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Attributes.Sugar/index.js
  var bind33 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff11 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_15 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard26 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect17 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize15 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded9 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render19 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Attributes.Sugar")]), p([classes(["module-page__description"])])([text5("Syntactic sugar for attributes")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Sugar (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Sugar (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction14 = function(v) {
    if (v instanceof Initialize15) {
      return bind33(liftAff11(loadSourceFile("PSD3/Internal/Attributes/Sugar.purs")))(function(result) {
        return handleAction14(new SourceLoaded9(result));
      });
    }
    ;
    if (v instanceof SourceLoaded9) {
      if (v.value0 instanceof Left) {
        return modify_15(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard26(modify_15(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect17(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Sugar (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Attributes.Sugar (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component18 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render19,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction14,
        initialize: new Just(Initialize15.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Axes/index.js
  var bind34 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff12 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_16 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard27 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect18 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize16 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded10 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render20 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Axes")]), p([classes(["module-page__description"])])([text5("Axis generation")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Axes (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Axes (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction15 = function(v) {
    if (v instanceof Initialize16) {
      return bind34(liftAff12(loadSourceFile("PSD3/Internal/Axes.purs")))(function(result) {
        return handleAction15(new SourceLoaded10(result));
      });
    }
    ;
    if (v instanceof SourceLoaded10) {
      if (v.value0 instanceof Left) {
        return modify_16(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard27(modify_16(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect18(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Axes (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Axes (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component19 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render20,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction15,
        initialize: new Just(Initialize16.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.FFI/index.js
  var bind35 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff13 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_17 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard28 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect19 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize17 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded11 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render21 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.FFI")]), p([classes(["module-page__description"])])([text5("Foreign function interface to D3.js")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.FFI (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.FFI (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction16 = function(v) {
    if (v instanceof Initialize17) {
      return bind35(liftAff13(loadSourceFile("PSD3/Internal/FFI.purs")))(function(result) {
        return handleAction16(new SourceLoaded11(result));
      });
    }
    ;
    if (v instanceof SourceLoaded11) {
      if (v.value0 instanceof Left) {
        return modify_17(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard28(modify_17(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect19(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.FFI (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.FFI (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component20 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render21,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction16,
        initialize: new Just(Initialize17.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Generators.Line/index.js
  var bind36 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff14 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_18 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard29 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect20 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize18 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded12 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render22 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Generators.Line")]), p([classes(["module-page__description"])])([text5("Line and area generators")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Generators.Line (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Generators.Line (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction17 = function(v) {
    if (v instanceof Initialize18) {
      return bind36(liftAff14(loadSourceFile("PSD3/Internal/Generators/Line.purs")))(function(result) {
        return handleAction17(new SourceLoaded12(result));
      });
    }
    ;
    if (v instanceof SourceLoaded12) {
      if (v.value0 instanceof Left) {
        return modify_18(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard29(modify_18(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect20(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Generators.Line (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Generators.Line (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component21 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render22,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction17,
        initialize: new Just(Initialize18.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Hierarchical/index.js
  var bind37 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff15 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_19 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard30 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect21 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize19 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded13 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render23 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Hierarchical")]), p([classes(["module-page__description"])])([text5("Hierarchical layout algorithms")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Hierarchical (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Hierarchical (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction18 = function(v) {
    if (v instanceof Initialize19) {
      return bind37(liftAff15(loadSourceFile("PSD3/Internal/Hierarchical.purs")))(function(result) {
        return handleAction18(new SourceLoaded13(result));
      });
    }
    ;
    if (v instanceof SourceLoaded13) {
      if (v.value0 instanceof Left) {
        return modify_19(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard30(modify_19(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect21(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Hierarchical (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Hierarchical (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component22 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render23,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction18,
        initialize: new Just(Initialize19.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Sankey.Functions/index.js
  var bind38 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff16 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_20 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard31 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect22 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize20 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded14 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render24 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Sankey.Functions")]), p([classes(["module-page__description"])])([text5("Sankey diagram functions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Functions (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Functions (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction19 = function(v) {
    if (v instanceof Initialize20) {
      return bind38(liftAff16(loadSourceFile("PSD3/Internal/Sankey/Functions.purs")))(function(result) {
        return handleAction19(new SourceLoaded14(result));
      });
    }
    ;
    if (v instanceof SourceLoaded14) {
      if (v.value0 instanceof Left) {
        return modify_20(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard31(modify_20(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect22(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Functions (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Functions (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component23 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render24,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction19,
        initialize: new Just(Initialize20.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Sankey.Types/index.js
  var bind39 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff17 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_21 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard32 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect23 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize21 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded15 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render25 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Sankey.Types")]), p([classes(["module-page__description"])])([text5("Sankey diagram types")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Types (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Types (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction20 = function(v) {
    if (v instanceof Initialize21) {
      return bind39(liftAff17(loadSourceFile("PSD3/Internal/Sankey/Types.purs")))(function(result) {
        return handleAction20(new SourceLoaded15(result));
      });
    }
    ;
    if (v instanceof SourceLoaded15) {
      if (v.value0 instanceof Left) {
        return modify_21(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard32(modify_21(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect23(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Types (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Sankey.Types (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component24 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render25,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction20,
        initialize: new Just(Initialize21.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Scales.Linear/index.js
  var bind40 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff18 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_22 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard33 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect24 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize22 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded16 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render26 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Scales.Linear")]), p([classes(["module-page__description"])])([text5("Linear scale implementation")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Linear (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Linear (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction21 = function(v) {
    if (v instanceof Initialize22) {
      return bind40(liftAff18(loadSourceFile("PSD3/Internal/Scales/Linear.purs")))(function(result) {
        return handleAction21(new SourceLoaded16(result));
      });
    }
    ;
    if (v instanceof SourceLoaded16) {
      if (v.value0 instanceof Left) {
        return modify_22(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard33(modify_22(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect24(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Linear (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Linear (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component25 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render26,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction21,
        initialize: new Just(Initialize22.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Scales.Scales/index.js
  var bind41 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff19 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_23 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard34 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect25 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize23 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded17 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render27 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Scales.Scales")]), p([classes(["module-page__description"])])([text5("Scale functions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Scales (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Scales (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction22 = function(v) {
    if (v instanceof Initialize23) {
      return bind41(liftAff19(loadSourceFile("PSD3/Internal/Scales/Scales.purs")))(function(result) {
        return handleAction22(new SourceLoaded17(result));
      });
    }
    ;
    if (v instanceof SourceLoaded17) {
      if (v.value0 instanceof Left) {
        return modify_23(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard34(modify_23(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect25(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Scales (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Scales.Scales (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component26 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render27,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction22,
        initialize: new Just(Initialize23.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Selection.Functions/index.js
  var bind42 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff20 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_24 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard35 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect26 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize24 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded18 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render28 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Selection.Functions")]), p([classes(["module-page__description"])])([text5("Selection implementation functions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Functions (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Functions (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction23 = function(v) {
    if (v instanceof Initialize24) {
      return bind42(liftAff20(loadSourceFile("PSD3/Internal/Selection/Functions.purs")))(function(result) {
        return handleAction23(new SourceLoaded18(result));
      });
    }
    ;
    if (v instanceof SourceLoaded18) {
      if (v.value0 instanceof Left) {
        return modify_24(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard35(modify_24(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect26(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Functions (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Functions (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component27 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render28,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction23,
        initialize: new Just(Initialize24.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Selection.Types/index.js
  var bind43 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff21 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_25 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard36 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect27 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize25 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded19 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render29 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Selection.Types")]), p([classes(["module-page__description"])])([text5("Selection type definitions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Types (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Types (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction24 = function(v) {
    if (v instanceof Initialize25) {
      return bind43(liftAff21(loadSourceFile("PSD3/Internal/Selection/Types.purs")))(function(result) {
        return handleAction24(new SourceLoaded19(result));
      });
    }
    ;
    if (v instanceof SourceLoaded19) {
      if (v.value0 instanceof Left) {
        return modify_25(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard36(modify_25(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect27(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Types (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Selection.Types (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component28 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render29,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction24,
        initialize: new Just(Initialize25.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Simulation.Config/index.js
  var bind44 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff22 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_26 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard37 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect28 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize26 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded20 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render30 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Simulation.Config")]), p([classes(["module-page__description"])])([text5("Simulation configuration")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Config (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Config (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction25 = function(v) {
    if (v instanceof Initialize26) {
      return bind44(liftAff22(loadSourceFile("PSD3/Internal/Simulation/Config.purs")))(function(result) {
        return handleAction25(new SourceLoaded20(result));
      });
    }
    ;
    if (v instanceof SourceLoaded20) {
      if (v.value0 instanceof Left) {
        return modify_26(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard37(modify_26(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect28(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Config (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Config (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component29 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render30,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction25,
        initialize: new Just(Initialize26.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Simulation.Forces/index.js
  var bind45 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff23 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_27 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard38 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect29 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize27 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded21 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render31 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Simulation.Forces")]), p([classes(["module-page__description"])])([text5("Force definitions for simulations")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Forces (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Forces (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction26 = function(v) {
    if (v instanceof Initialize27) {
      return bind45(liftAff23(loadSourceFile("PSD3/Internal/Simulation/Forces.purs")))(function(result) {
        return handleAction26(new SourceLoaded21(result));
      });
    }
    ;
    if (v instanceof SourceLoaded21) {
      if (v.value0 instanceof Left) {
        return modify_27(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard38(modify_27(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect29(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Forces (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Forces (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component30 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render31,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction26,
        initialize: new Just(Initialize27.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Simulation.Functions/index.js
  var bind46 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff24 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_28 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard39 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect30 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize28 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded22 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render32 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Simulation.Functions")]), p([classes(["module-page__description"])])([text5("Simulation implementation functions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Functions (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Functions (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction27 = function(v) {
    if (v instanceof Initialize28) {
      return bind46(liftAff24(loadSourceFile("PSD3/Internal/Simulation/Functions.purs")))(function(result) {
        return handleAction27(new SourceLoaded22(result));
      });
    }
    ;
    if (v instanceof SourceLoaded22) {
      if (v.value0 instanceof Left) {
        return modify_28(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard39(modify_28(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect30(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Functions (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Functions (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component31 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render32,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction27,
        initialize: new Just(Initialize28.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Simulation.Types/index.js
  var bind47 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff25 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_29 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard40 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect31 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize29 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded23 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render33 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Simulation.Types")]), p([classes(["module-page__description"])])([text5("Simulation type definitions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Types (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Types (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction28 = function(v) {
    if (v instanceof Initialize29) {
      return bind47(liftAff25(loadSourceFile("PSD3/Internal/Simulation/Types.purs")))(function(result) {
        return handleAction28(new SourceLoaded23(result));
      });
    }
    ;
    if (v instanceof SourceLoaded23) {
      if (v.value0 instanceof Left) {
        return modify_29(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard40(modify_29(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect31(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Types (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Simulation.Types (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component32 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render33,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction28,
        initialize: new Just(Initialize29.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Types/index.js
  var bind48 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff26 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_30 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard41 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect32 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize30 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded24 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render34 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Types")]), p([classes(["module-page__description"])])([text5("Internal type definitions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Types (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Types (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction29 = function(v) {
    if (v instanceof Initialize30) {
      return bind48(liftAff26(loadSourceFile("PSD3/Internal/Types.purs")))(function(result) {
        return handleAction29(new SourceLoaded24(result));
      });
    }
    ;
    if (v instanceof SourceLoaded24) {
      if (v.value0 instanceof Left) {
        return modify_30(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard41(modify_30(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect32(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Types (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Types (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component33 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render34,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction29,
        initialize: new Just(Initialize30.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Utility/index.js
  var bind49 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff27 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_31 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard42 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect33 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize31 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded25 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render35 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Utility")]), p([classes(["module-page__description"])])([text5("Internal utility functions")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Utility (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Utility (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction30 = function(v) {
    if (v instanceof Initialize31) {
      return bind49(liftAff27(loadSourceFile("PSD3/Internal/Utility.purs")))(function(result) {
        return handleAction30(new SourceLoaded25(result));
      });
    }
    ;
    if (v instanceof SourceLoaded25) {
      if (v.value0 instanceof Left) {
        return modify_31(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard42(modify_31(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect33(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Utility (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Utility (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component34 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render35,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction30,
        initialize: new Just(Initialize31.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Internal.Zoom/index.js
  var bind50 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff28 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_32 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard43 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect34 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize32 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded26 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render36 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Internal.Zoom")]), p([classes(["module-page__description"])])([text5("Zoom and pan behavior")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Zoom (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Zoom (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction31 = function(v) {
    if (v instanceof Initialize32) {
      return bind50(liftAff28(loadSourceFile("PSD3/Internal/Zoom.purs")))(function(result) {
        return handleAction31(new SourceLoaded26(result));
      });
    }
    ;
    if (v instanceof SourceLoaded26) {
      if (v.value0 instanceof Left) {
        return modify_32(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard43(modify_32(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect34(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Zoom (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Internal.Zoom (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component35 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render36,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction31,
        initialize: new Just(Initialize32.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Interpreter.D3/index.js
  var bind51 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff29 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_33 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard44 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect35 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize33 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded27 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render37 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Interpreter.D3")]), p([classes(["module-page__description"])])([text5("D3.js interpreter - runs visualizations in the browser")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.D3 (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.D3 (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction32 = function(v) {
    if (v instanceof Initialize33) {
      return bind51(liftAff29(loadSourceFile("PSD3/Interpreter/D3.purs")))(function(result) {
        return handleAction32(new SourceLoaded27(result));
      });
    }
    ;
    if (v instanceof SourceLoaded27) {
      if (v.value0 instanceof Left) {
        return modify_33(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard44(modify_33(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect35(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.D3 (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.D3 (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component36 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render37,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction32,
        initialize: new Just(Initialize33.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Interpreter.MetaTree/index.js
  var bind52 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff30 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_34 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard45 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect36 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize34 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded28 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render38 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Interpreter.MetaTree")]), p([classes(["module-page__description"])])([text5("MetaTree interpreter - produces AST representation")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.MetaTree (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.MetaTree (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction33 = function(v) {
    if (v instanceof Initialize34) {
      return bind52(liftAff30(loadSourceFile("PSD3/Interpreter/MetaTree.purs")))(function(result) {
        return handleAction33(new SourceLoaded28(result));
      });
    }
    ;
    if (v instanceof SourceLoaded28) {
      if (v.value0 instanceof Left) {
        return modify_34(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard45(modify_34(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect36(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.MetaTree (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.MetaTree (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component37 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render38,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction33,
        initialize: new Just(Initialize34.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Interpreter.String/index.js
  var bind53 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff31 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_35 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard46 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect37 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize35 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded29 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render39 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Interpreter.String")]), p([classes(["module-page__description"])])([text5("String interpreter - generates code as text")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.String (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.String (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction34 = function(v) {
    if (v instanceof Initialize35) {
      return bind53(liftAff31(loadSourceFile("PSD3/Interpreter/String.purs")))(function(result) {
        return handleAction34(new SourceLoaded29(result));
      });
    }
    ;
    if (v instanceof SourceLoaded29) {
      if (v.value0 instanceof Left) {
        return modify_35(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard46(modify_35(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect37(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.String (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Interpreter.String (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component38 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render39,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction34,
        initialize: new Just(Initialize35.value)
      })
    });
  })();

  // output/PSD3.Reference.Modules.Types/index.js
  var bind54 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff32 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_36 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var discard47 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var liftEffect38 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var Initialize36 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SourceLoaded30 = /* @__PURE__ */ (function() {
    function SourceLoaded31(value0) {
      this.value0 = value0;
    }
    ;
    SourceLoaded31.create = function(value0) {
      return new SourceLoaded31(value0);
    };
    return SourceLoaded31;
  })();
  var render40 = function(state3) {
    return div2([classes(["module-page"])])([section([classes(["module-page__header"])])([h1([classes(["module-page__title"])])([text5("PSD3.Types")]), p([classes(["module-page__description"])])([text5("Common type definitions used throughout PSD3")])]), section([classes(["module-page__content"])])([]), section([classes(["module-page__source"])])([h2([classes(["module-page__source-title"])])([text5("Source Code")]), (function() {
      if (state3.sourceCode instanceof Nothing) {
        if (state3.loading) {
          return div2([classes(["module-page__loading"])])([text5("Loading source code...")]);
        }
        ;
        if (state3.error instanceof Just) {
          return div2([classes(["module-page__error"])])([text5(state3.error.value0)]);
        }
        ;
        if (state3.error instanceof Nothing) {
          return div2([classes(["module-page__error"])])([text5("Failed to load source code")]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Reference.Modules.Types (line 77, column 22 - line 85, column 63): " + [state3.error.constructor.name]);
      }
      ;
      if (state3.sourceCode instanceof Just) {
        return div2([classes(["module-page__code"])])([pre([classes(["line-numbers"])])([code([classes(["language-haskell"])])([text5(state3.sourceCode.value0)])])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Types (line 71, column 11 - line 95, column 18): " + [state3.sourceCode.constructor.name]);
    })()])]);
  };
  var handleAction35 = function(v) {
    if (v instanceof Initialize36) {
      return bind54(liftAff32(loadSourceFile("PSD3/Types.purs")))(function(result) {
        return handleAction35(new SourceLoaded30(result));
      });
    }
    ;
    if (v instanceof SourceLoaded30) {
      if (v.value0 instanceof Left) {
        return modify_36(function(v1) {
          var $20 = {};
          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }
            ;
          }
          ;
          $20.loading = false;
          $20.error = new Just(v.value0.value0);
          return $20;
        });
      }
      ;
      if (v.value0 instanceof Right) {
        return discard47(modify_36(function(v1) {
          var $24 = {};
          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }
            ;
          }
          ;
          $24.sourceCode = new Just(v.value0.value0);
          $24.loading = false;
          $24.error = Nothing.value;
          return $24;
        }))(function() {
          return liftEffect38(highlightAll);
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Reference.Modules.Types (line 107, column 5 - line 112, column 32): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Modules.Types (line 100, column 16 - line 112, column 32): " + [v.constructor.name]);
  };
  var component39 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sourceCode: Nothing.value,
          loading: true,
          error: Nothing.value
        };
      },
      render: render40,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction35,
        initialize: new Just(Initialize36.value)
      })
    });
  })();

  // output/PSD3.Reference.Reference/index.js
  var map51 = /* @__PURE__ */ map(functorArray);
  var pure29 = /* @__PURE__ */ pure(applicativeHalogenM);
  var modify_37 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var slot2 = /* @__PURE__ */ slot()({
    reflectSymbol: function() {
      return "moduleComponent";
    }
  })(ordString);
  var slot_5 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "sectionNav";
    }
  })(ordUnit);
  var Initialize37 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var Receive2 = /* @__PURE__ */ (function() {
    function Receive3(value0) {
      this.value0 = value0;
    }
    ;
    Receive3.create = function(value0) {
      return new Receive3(value0);
    };
    return Receive3;
  })();
  var toSectionNavCategory = function(category) {
    return {
      title: category.title,
      modules: map51(function(m) {
        return {
          name: m.name,
          description: m.description
        };
      })(category.modules)
    };
  };
  var handleAction36 = function(v) {
    if (v instanceof Initialize37) {
      return pure29(unit);
    }
    ;
    if (v instanceof Receive2) {
      return modify_37(function(v1) {
        var $17 = {};
        for (var $18 in v1) {
          if ({}.hasOwnProperty.call(v1, $18)) {
            $17[$18] = v1[$18];
          }
          ;
        }
        ;
        $17.currentRoute = v.value0;
        return $17;
      });
    }
    ;
    throw new Error("Failed pattern match at PSD3.Reference.Reference (line 213, column 16 - line 217, column 41): " + [v.constructor.name]);
  };
  var _sectionNav2 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _moduleComponent = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var renderModuleComponent = function(moduleName) {
    if (moduleName === "PSD3.Types") {
      return slot2(_moduleComponent)(moduleName)(component39)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Attributes") {
      return slot2(_moduleComponent)(moduleName)(component10)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Capabilities.Selection") {
      return slot2(_moduleComponent)(moduleName)(component12)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Capabilities.Simulation") {
      return slot2(_moduleComponent)(moduleName)(component13)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Capabilities.Sankey") {
      return slot2(_moduleComponent)(moduleName)(component11)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Interpreter.D3") {
      return slot2(_moduleComponent)(moduleName)(component36)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Interpreter.String") {
      return slot2(_moduleComponent)(moduleName)(component38)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Interpreter.MetaTree") {
      return slot2(_moduleComponent)(moduleName)(component37)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Data.Tree") {
      return slot2(_moduleComponent)(moduleName)(component15)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Data.Node") {
      return slot2(_moduleComponent)(moduleName)(component14)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Data.Utility") {
      return slot2(_moduleComponent)(moduleName)(component16)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Selection.Types") {
      return slot2(_moduleComponent)(moduleName)(component28)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Selection.Functions") {
      return slot2(_moduleComponent)(moduleName)(component27)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Simulation.Types") {
      return slot2(_moduleComponent)(moduleName)(component32)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Simulation.Functions") {
      return slot2(_moduleComponent)(moduleName)(component31)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Simulation.Forces") {
      return slot2(_moduleComponent)(moduleName)(component30)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Simulation.Config") {
      return slot2(_moduleComponent)(moduleName)(component29)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Types") {
      return slot2(_moduleComponent)(moduleName)(component33)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.FFI") {
      return slot2(_moduleComponent)(moduleName)(component20)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Attributes.Instances") {
      return slot2(_moduleComponent)(moduleName)(component17)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Attributes.Sugar") {
      return slot2(_moduleComponent)(moduleName)(component18)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Axes") {
      return slot2(_moduleComponent)(moduleName)(component19)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Hierarchical") {
      return slot2(_moduleComponent)(moduleName)(component22)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Generators.Line") {
      return slot2(_moduleComponent)(moduleName)(component21)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Scales.Scales") {
      return slot2(_moduleComponent)(moduleName)(component26)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Scales.Linear") {
      return slot2(_moduleComponent)(moduleName)(component25)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Sankey.Types") {
      return slot2(_moduleComponent)(moduleName)(component24)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Sankey.Functions") {
      return slot2(_moduleComponent)(moduleName)(component23)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Utility") {
      return slot2(_moduleComponent)(moduleName)(component34)(unit)(absurd);
    }
    ;
    if (moduleName === "PSD3.Internal.Zoom") {
      return slot2(_moduleComponent)(moduleName)(component35)(unit)(absurd);
    }
    ;
    return div2([classes(["reference-not-found"])])([h2_([text5("Module Not Found")]), p_([text5('The module "' + (moduleName + '" was not found.'))])]);
  };
  var render41 = function(state3) {
    return div2([classes(["reference-page"])])([renderTOC({
      title: "Page Contents",
      items: [],
      image: new Just("images/reference-bookmark-deepseavent.jpeg")
    }), slot_5(_sectionNav2)(unit)(component8)({
      currentSection: APISection.value,
      currentRoute: state3.currentRoute,
      sectionPages: [],
      moduleCategories: new Just(map51(toSectionNavCategory)(moduleCategories))
    }), main([classes(["reference-main"])])([(function() {
      if (state3.currentRoute instanceof Reference) {
        return renderModuleComponent("PSD3.Capabilities.Selection");
      }
      ;
      if (state3.currentRoute instanceof ReferenceModule) {
        return renderModuleComponent(state3.currentRoute.value0);
      }
      ;
      return renderModuleComponent("PSD3.Capabilities.Selection");
    })()])]);
  };
  var component40 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(route) {
        return {
          currentRoute: route
        };
      },
      render: render41,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        finalize: defaultEval.finalize,
        handleAction: handleAction36,
        initialize: new Just(Initialize37.value),
        receive: function($24) {
          return Just.create(Receive2.create($24));
        }
      })
    });
  })();

  // output/PSD3.Tutorial.GettingStarted/index.js
  var pure30 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_6 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "sectionNav";
    }
  })(ordUnit);
  var Initialize38 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var handleAction37 = function(v) {
    return pure30(unit);
  };
  var _sectionNav3 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render42 = function(v) {
    return div2([classes(["tutorial-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("installation")("Installation")(0), tocAnchor("prerequisites")("Prerequisites")(1), tocAnchor("setup")("Project Setup")(0), tocAnchor("wizard")("Using the Wizard")(0), tocAnchor("understanding")("Understanding the Code")(0), tocAnchor("datum-pattern")("The Datum_ Pattern")(1), tocAnchor("next-steps")("Next Steps")(0)],
      image: new Just("images/tutorial-bookmark-balloons.jpeg")
    }), slot_6(_sectionNav3)(unit)(component8)({
      currentSection: TutorialSection.value,
      currentRoute: GettingStarted.value,
      sectionPages: [{
        route: GettingStarted.value,
        label: "Getting Started"
      }],
      moduleCategories: Nothing.value
    }), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Getting Started with PS<$>D3")]), p_([text5("Welcome! This guide will help you install PSD3, set up your first project, and create your first data visualization using our scaffold wizard. By the end, you'll have a working visualization that you can view in your browser.")]), div2([classes(["tutorial-callout"])])([h3_([text5("\u{1F680} Try the Interactive Wizard")]), p_([text5("Want to skip the command line? Use our interactive web wizard to generate a complete visualization project right in your browser:")]), p_([a([href4("#/wizard"), classes(["tutorial-button tutorial-button--primary"])])([text5("Launch Interactive Wizard \u2192")])])])]), section([classes(["tutorial-section"]), id2("installation")])([h2([classes(["tutorial-section-title"])])([text5("Installation")]), p_([text5("Before we begin, ensure you have the following installed on your system:")]), h3([id2("prerequisites")])([text5("Prerequisites")]), ul_([li_([text5("Node.js (version 18 or higher)")]), li_([text5("npm or yarn package manager")]), li_([text5("PureScript compiler (purs)")]), li_([text5("Spago (PureScript package manager and build tool)")])]), p_([text5("If you don't have PureScript and Spago installed, you can install them globally:")]), pre_([code_([text5("npm install -g purescript spago")])])]), section([classes(["tutorial-section"]), id2("setup")])([h2([classes(["tutorial-section-title"])])([text5("Project Setup")]), p_([text5("Clone the PSD3 repository which includes the visualization wizard:")]), pre_([code_([text5("# Clone the PSD3 repository\ngit clone https://github.com/afcondon/PureScript-Tagless-D3.git\ncd PureScript-Tagless-D3\n\n# Install dependencies\nnpm install\nspago build")])]), p_([text5("The wizard is located in ")]), code_([text5("scripts/init-psd3-viz.js")]), text5(" and will generate all the files you need to get started.")]), section([classes(["tutorial-section"]), id2("wizard")])([h2([classes(["tutorial-section-title"])])([text5("Using the Wizard")]), p_([text5("PSD3 provides two ways to generate a visualization scaffold:")]), h3_([text5("Option 1: Interactive Web Wizard (Recommended)")]), p_([text5("The easiest way to get started is with our "), a([href4("#/wizard")])([text5("interactive web wizard")]), text5(". It provides:")]), ul_([li_([text5("Choose from pre-configured example datasets (Anscombe's Quartet, scatter plots, sine waves, etc.)")]), li_([text5("Educational tips and explanations at each step")]), li_([text5("Preview generated files before downloading")]), li_([text5("Download as a .zip file or copy to clipboard")])]), p_([a([href4("#/wizard"), classes(["tutorial-button tutorial-button--primary"])])([text5("Launch Interactive Wizard \u2192")])]), h3_([text5("Option 2: Command-Line Wizard")]), p_([text5("If you prefer working from the command line, use the CLI wizard. Run it from the project root:")]), pre_([code_([text5("node scripts/init-psd3-viz.js")])]), p_([text5("You'll be prompted for:")]), ul_([li_([strong_([text5("Visualization module name")]), text5(" - e.g., "), code_([text5("MyFirstChart")])]), li_([strong_([text5("Data record fields")]), text5(" - e.g., "), code_([text5("x:Number,y:Number,label:String")])]), li_([strong_([text5("Output directory")]), text5(" - default: "), code_([text5("src/viz/YourModuleName")])]), li_([strong_([text5("Generate Main.purs?")]), text5(" - Entry point for standalone viewing (y/n, default: y)")]), li_([strong_([text5("Generate index.html?")]), text5(" - (y/n, default: y)")])]), h3_([text5("Example Session")]), pre_([code_([text5("Visualization module name: ParabolaChart\nData record fields: x:Number,y:Number\nOutput directory: src/viz/ParabolaChart\nGenerate Main.purs? (y/n): y\nGenerate index.html? (y/n): y\n\n\u2713 Created src/viz/ParabolaChart/Unsafe.purs\n\u2713 Created src/viz/ParabolaChart/Model.purs\n\u2713 Created src/viz/ParabolaChart/Draw.purs\n\u2713 Created src/viz/ParabolaChart/Main.purs\n\u2713 Created src/viz/ParabolaChart/index.html\n\u2713 Created src/viz/ParabolaChart/README.md")])]), h3_([text5("Build and View")]), p_([text5("Now build and bundle your visualization:")]), pre_([code_([text5("# Compile the PureScript\nspago build\n\n# Bundle for the browser\nspago bundle --module Main --outfile src/viz/ParabolaChart/bundle.js\n\n# Open in browser\nopen src/viz/ParabolaChart/index.html")])])]), section([classes(["tutorial-section"]), id2("understanding")])([h2([classes(["tutorial-section-title"])])([text5("Understanding the Generated Code")]), p_([text5("The wizard generates several files following PSD3 best practices:")]), ul_([li_([strong_([text5("Unsafe.purs")]), text5(" - Contains type coercion functions that bridge PureScript's type system with D3's untyped JavaScript data")]), li_([strong_([text5("Model.purs")]), text5(" - Defines your data type and provides a placeholder for example data")]), li_([strong_([text5("Draw.purs")]), text5(" - Contains the visualization code with the "), code_([text5("datum_")]), text5(" accessor pattern")]), li_([strong_([text5("index.html")]), text5(" - Pre-configured HTML with D3.js loaded from CDN and the correct "), code_([text5("#chart")]), text5(" div")]), li_([strong_([text5("README.md")]), text5(" - Quick reference specific to your visualization")])]), h3([id2("datum-pattern")])([text5("The Datum_ Pattern")]), p_([text5("D3.js works with untyped JavaScript data, but PureScript is strongly typed. The "), code_([text5("datum_")]), text5(" accessor pattern solves this by isolating type coercion in the "), code_([text5("Unsafe.purs")]), text5(" module while providing typed accessors everywhere else.")]), p_([text5("In your "), code_([text5("Draw.purs")]), text5(", you'll use type-annotated lambdas to work with your data:")]), pre_([code_([text5('-- Use data in attributes\nA.cx (\\\\(d :: Datum_) _ -> datum_.x d)\n\n-- Use both data and index\nA.fill (\\\\(d :: Datum_) (i :: Index_) ->\n  if datum_.index i > 5 then "red" else "blue")\n\n-- Scale by data value\nA.radius (\\\\(d :: Datum_) _ -> datum_.y d * 2.0)')])]), p_([text5("The type annotations "), code_([text5("(d :: Datum_)")]), text5(" and "), code_([text5("(i :: Index_)")]), text5(" are required to help PureScript's type checker find the correct "), code_([text5("ToAttr")]), text5(" instance.")])]), section([classes(["tutorial-section"]), id2("next-steps")])([h2([classes(["tutorial-section-title"])])([text5("Next Steps")]), p_([text5("Now that you have PS<$>D3 installed and working, explore these resources:")]), ul_([li_([text5("Check out the "), a([href4("#/howto")])([text5("How-to Guides")]), text5(" for step-by-step instructions on building specific visualizations")]), li_([text5("Read the "), a([href4("#/about")])([text5("Explanation pages")]), text5(" to understand the concepts behind PS<$>D3")]), li_([text5("Browse the "), a([href4("#/reference")])([text5("API Reference")]), text5(" for detailed documentation of all functions and types")])])])]);
  };
  var component41 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render42,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction37,
        initialize: new Just(Initialize38.value)
      })
    });
  })();

  // output/D3.Viz.Charts.Model/index.js
  var sineWaveData = [{
    x: 0,
    y: 100
  }, {
    x: 5,
    y: 125
  }, {
    x: 10,
    y: 145
  }, {
    x: 15,
    y: 150
  }, {
    x: 20,
    y: 145
  }, {
    x: 25,
    y: 125
  }, {
    x: 30,
    y: 100
  }, {
    x: 35,
    y: 75
  }, {
    x: 40,
    y: 55
  }, {
    x: 45,
    y: 50
  }, {
    x: 50,
    y: 55
  }, {
    x: 55,
    y: 75
  }, {
    x: 60,
    y: 100
  }];
  var multiLineData = [{
    series: "San Francisco",
    date: "2000-01",
    value: 3.5
  }, {
    series: "San Francisco",
    date: "2002-01",
    value: 5.2
  }, {
    series: "San Francisco",
    date: "2004-01",
    value: 4.8
  }, {
    series: "San Francisco",
    date: "2006-01",
    value: 3.9
  }, {
    series: "San Francisco",
    date: "2008-01",
    value: 4.2
  }, {
    series: "San Francisco",
    date: "2010-01",
    value: 9.8
  }, {
    series: "San Francisco",
    date: "2012-01",
    value: 7.5
  }, {
    series: "San Francisco",
    date: "2013-01",
    value: 6.2
  }, {
    series: "New York",
    date: "2000-01",
    value: 5.3
  }, {
    series: "New York",
    date: "2002-01",
    value: 7.1
  }, {
    series: "New York",
    date: "2004-01",
    value: 6.2
  }, {
    series: "New York",
    date: "2006-01",
    value: 4.9
  }, {
    series: "New York",
    date: "2008-01",
    value: 5.4
  }, {
    series: "New York",
    date: "2010-01",
    value: 9.4
  }, {
    series: "New York",
    date: "2012-01",
    value: 8.8
  }, {
    series: "New York",
    date: "2013-01",
    value: 8.2
  }, {
    series: "Detroit",
    date: "2000-01",
    value: 4.2
  }, {
    series: "Detroit",
    date: "2002-01",
    value: 6.8
  }, {
    series: "Detroit",
    date: "2004-01",
    value: 7.5
  }, {
    series: "Detroit",
    date: "2006-01",
    value: 7.2
  }, {
    series: "Detroit",
    date: "2008-01",
    value: 7.9
  }, {
    series: "Detroit",
    date: "2010-01",
    value: 14.3
  }, {
    series: "Detroit",
    date: "2012-01",
    value: 11.1
  }, {
    series: "Detroit",
    date: "2013-01",
    value: 9.9
  }, {
    series: "Miami",
    date: "2000-01",
    value: 5.7
  }, {
    series: "Miami",
    date: "2002-01",
    value: 7.3
  }, {
    series: "Miami",
    date: "2004-01",
    value: 5.9
  }, {
    series: "Miami",
    date: "2006-01",
    value: 4.1
  }, {
    series: "Miami",
    date: "2008-01",
    value: 6.2
  }, {
    series: "Miami",
    date: "2010-01",
    value: 11.8
  }, {
    series: "Miami",
    date: "2012-01",
    value: 9.6
  }, {
    series: "Miami",
    date: "2013-01",
    value: 8.1
  }];
  var monthlySales = [{
    x: 0,
    y: 30
  }, {
    x: 1,
    y: 45
  }, {
    x: 2,
    y: 60
  }, {
    x: 3,
    y: 55
  }, {
    x: 4,
    y: 70
  }, {
    x: 5,
    y: 65
  }, {
    x: 6,
    y: 80
  }, {
    x: 7,
    y: 75
  }, {
    x: 8,
    y: 90
  }, {
    x: 9,
    y: 85
  }, {
    x: 10,
    y: 95
  }, {
    x: 11,
    y: 100
  }];
  var groupedBarData = [{
    state: "CA",
    age: "<10",
    population: 5038433
  }, {
    state: "CA",
    age: "10-19",
    population: 5055706
  }, {
    state: "CA",
    age: "20-29",
    population: 5656118
  }, {
    state: "CA",
    age: "30-39",
    population: 5485729
  }, {
    state: "CA",
    age: "40-49",
    population: 4897920
  }, {
    state: "CA",
    age: "50-59",
    population: 4826838
  }, {
    state: "CA",
    age: "60-69",
    population: 3561336
  }, {
    state: "CA",
    age: "70-79",
    population: 2087132
  }, {
    state: "CA",
    age: "\u226580",
    population: 1322344
  }, {
    state: "TX",
    age: "<10",
    population: 4131018
  }, {
    state: "TX",
    age: "10-19",
    population: 3870247
  }, {
    state: "TX",
    age: "20-29",
    population: 4057645
  }, {
    state: "TX",
    age: "30-39",
    population: 4038722
  }, {
    state: "TX",
    age: "40-49",
    population: 3605075
  }, {
    state: "TX",
    age: "50-59",
    population: 3439143
  }, {
    state: "TX",
    age: "60-69",
    population: 2454512
  }, {
    state: "TX",
    age: "70-79",
    population: 1390737
  }, {
    state: "TX",
    age: "\u226580",
    population: 883990
  }, {
    state: "FL",
    age: "<10",
    population: 2223676
  }, {
    state: "FL",
    age: "10-19",
    population: 2264020
  }, {
    state: "FL",
    age: "20-29",
    population: 2655856
  }, {
    state: "FL",
    age: "30-39",
    population: 2673043
  }, {
    state: "FL",
    age: "40-49",
    population: 2677768
  }, {
    state: "FL",
    age: "50-59",
    population: 2891117
  }, {
    state: "FL",
    age: "60-69",
    population: 2721540
  }, {
    state: "FL",
    age: "70-79",
    population: 1787456
  }, {
    state: "FL",
    age: "\u226580",
    population: 1215746
  }, {
    state: "NY",
    age: "<10",
    population: 2302097
  }, {
    state: "NY",
    age: "10-19",
    population: 2427916
  }, {
    state: "NY",
    age: "20-29",
    population: 2886270
  }, {
    state: "NY",
    age: "30-39",
    population: 2820345
  }, {
    state: "NY",
    age: "40-49",
    population: 2502932
  }, {
    state: "NY",
    age: "50-59",
    population: 2671684
  }, {
    state: "NY",
    age: "60-69",
    population: 2015910
  }, {
    state: "NY",
    age: "70-79",
    population: 1163431
  }, {
    state: "NY",
    age: "\u226580",
    population: 805237
  }, {
    state: "PA",
    age: "<10",
    population: 1431845
  }, {
    state: "PA",
    age: "10-19",
    population: 1538087
  }, {
    state: "PA",
    age: "20-29",
    population: 1729085
  }, {
    state: "PA",
    age: "30-39",
    population: 1582018
  }, {
    state: "PA",
    age: "40-49",
    population: 1609509
  }, {
    state: "PA",
    age: "50-59",
    population: 1808373
  }, {
    state: "PA",
    age: "60-69",
    population: 1565529
  }, {
    state: "PA",
    age: "70-79",
    population: 993225
  }, {
    state: "PA",
    age: "\u226580",
    population: 702076
  }, {
    state: "IL",
    age: "<10",
    population: 1575308
  }, {
    state: "IL",
    age: "10-19",
    population: 1724580
  }, {
    state: "IL",
    age: "20-29",
    population: 1880143
  }, {
    state: "IL",
    age: "30-39",
    population: 1750121
  }, {
    state: "IL",
    age: "40-49",
    population: 1587652
  }, {
    state: "IL",
    age: "50-59",
    population: 1724730
  }, {
    state: "IL",
    age: "60-69",
    population: 1308208
  }, {
    state: "IL",
    age: "70-79",
    population: 760186
  }, {
    state: "IL",
    age: "\u226580",
    population: 505635
  }];
  var anscombesQuartet = {
    dataset1: [{
      x: 10,
      y: 8.04
    }, {
      x: 8,
      y: 6.95
    }, {
      x: 13,
      y: 7.58
    }, {
      x: 9,
      y: 8.81
    }, {
      x: 11,
      y: 8.33
    }, {
      x: 14,
      y: 9.96
    }, {
      x: 6,
      y: 7.24
    }, {
      x: 4,
      y: 4.26
    }, {
      x: 12,
      y: 10.84
    }, {
      x: 7,
      y: 4.82
    }, {
      x: 5,
      y: 5.68
    }],
    dataset2: [{
      x: 10,
      y: 9.14
    }, {
      x: 8,
      y: 8.14
    }, {
      x: 13,
      y: 8.74
    }, {
      x: 9,
      y: 8.77
    }, {
      x: 11,
      y: 9.26
    }, {
      x: 14,
      y: 8.1
    }, {
      x: 6,
      y: 6.13
    }, {
      x: 4,
      y: 3.1
    }, {
      x: 12,
      y: 9.13
    }, {
      x: 7,
      y: 7.26
    }, {
      x: 5,
      y: 4.74
    }],
    dataset3: [{
      x: 10,
      y: 7.46
    }, {
      x: 8,
      y: 6.77
    }, {
      x: 13,
      y: 12.74
    }, {
      x: 9,
      y: 7.11
    }, {
      x: 11,
      y: 7.81
    }, {
      x: 14,
      y: 8.84
    }, {
      x: 6,
      y: 6.08
    }, {
      x: 4,
      y: 5.39
    }, {
      x: 12,
      y: 8.15
    }, {
      x: 7,
      y: 6.42
    }, {
      x: 5,
      y: 5.73
    }],
    dataset4: [{
      x: 8,
      y: 6.58
    }, {
      x: 8,
      y: 5.76
    }, {
      x: 8,
      y: 7.71
    }, {
      x: 8,
      y: 8.84
    }, {
      x: 8,
      y: 8.47
    }, {
      x: 8,
      y: 7.04
    }, {
      x: 8,
      y: 5.25
    }, {
      x: 19,
      y: 12.5
    }, {
      x: 8,
      y: 5.56
    }, {
      x: 8,
      y: 7.91
    }, {
      x: 8,
      y: 6.89
    }]
  };

  // output/PSD3.Internal.Axes/foreign.js
  function axisBottom_(scale) {
    return axisBottom(scale);
  }
  function axisLeft_(scale) {
    return axisLeft(scale);
  }
  function callAxis_(selection2) {
    return (axis2) => () => {
      selection2.call(axis2);
    };
  }

  // output/PSD3.Internal.Scales.Linear/foreign.js
  function createLinearScale_(config) {
    return () => {
      return linear2().domain(config.domain).range(config.range);
    };
  }
  function applyScale_(scale) {
    return (value19) => scale(value19);
  }

  // output/D3.Viz.ScatterPlot/index.js
  var classed6 = /* @__PURE__ */ classed(toAttrString);
  var width12 = /* @__PURE__ */ width8(toAttrNumber);
  var height12 = /* @__PURE__ */ height8(toAttrNumber);
  var show20 = /* @__PURE__ */ show(showNumber);
  var x11 = /* @__PURE__ */ x(toAttrNumber);
  var y10 = /* @__PURE__ */ y(toAttrNumber);
  var text10 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor3 = /* @__PURE__ */ textAnchor(toAttrString);
  var fontSize2 = /* @__PURE__ */ fontSize(toAttrNumber);
  var cx2 = /* @__PURE__ */ cx(toAttrNumber);
  var cy2 = /* @__PURE__ */ cy(toAttrNumber);
  var radius7 = /* @__PURE__ */ radius(toAttrNumber);
  var fill5 = /* @__PURE__ */ fill(toAttrString);
  var strokeColor6 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth5 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var drawQuartet = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(quartet) {
          return function(selector) {
            var plotWidth = (900 - 60 * 3) / 2;
            var plotHeight = (700 - 60 * 3) / 2;
            var margin = {
              top: 30,
              right: 20,
              bottom: 40,
              left: 50
            };
            var iWidth = plotWidth - margin.left - margin.right;
            var iHeight = plotHeight - margin.top - margin.bottom;
            var xDomain = [0, 20];
            var yDomain = [0, 14];
            return bind71(attach2(selector))(function(v) {
              return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(900)(700), classed6("scatter-quartet"), width12(900), height12(700)]))(function(svg2) {
                var drawSubplot = function(title5) {
                  return function(dataPoints) {
                    return function(xOffset) {
                      return function(yOffset) {
                        return bind71(appendTo2(svg2)(Group.value)([classed6("subplot"), transform([function(v1) {
                          return "translate(" + (show20(xOffset + margin.left) + ("," + (show20(yOffset + margin.top) + ")")));
                        }])]))(function(subplotGroup) {
                          return bind71(appendTo2(svg2)(Text2.value)([x11(xOffset + plotWidth / 2), y10(yOffset + 15), text10(title5), textAnchor3("middle"), fontSize2(16), classed6("subplot-title")]))(function() {
                            return bind71(liftEffect51(createLinearScale_({
                              domain: xDomain,
                              range: [0, iWidth]
                            })))(function(xScale) {
                              return bind71(liftEffect51(createLinearScale_({
                                domain: yDomain,
                                range: [iHeight, 0]
                              })))(function(yScale) {
                                return bind71(appendTo2(subplotGroup)(Group.value)([classed6("x-axis"), transform([function(v1) {
                                  return "translate(0," + (show20(iHeight) + ")");
                                }])]))(function(xAxisGroup) {
                                  return bind71(appendTo2(subplotGroup)(Group.value)([classed6("y-axis")]))(function(yAxisGroup) {
                                    return bind71(liftEffect51(callAxis_(xAxisGroup)(axisBottom_(xScale))))(function() {
                                      return bind71(liftEffect51(callAxis_(yAxisGroup)(axisLeft_(yScale))))(function() {
                                        var addPoint = function(point) {
                                          var xPos = applyScale_(xScale)(point.x);
                                          var yPos = applyScale_(yScale)(point.y);
                                          return bind71(appendTo2(subplotGroup)(Circle.value)([cx2(xPos), cy2(yPos), radius7(4), fill5("#e74c3c"), strokeColor6("#c0392b"), strokeWidth5(1.5), classed6("scatter-point")]))(function() {
                                            return pure45(unit);
                                          });
                                        };
                                        return bind71(traverse_7(addPoint)(dataPoints))(function() {
                                          return pure45(unit);
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      };
                    };
                  };
                };
                return bind71(drawSubplot("Dataset I")(quartet.dataset1)(60)(60))(function() {
                  return bind71(drawSubplot("Dataset II")(quartet.dataset2)(60 + plotWidth + 60)(60))(function() {
                    return bind71(drawSubplot("Dataset III")(quartet.dataset3)(60)(60 + plotHeight + 60))(function() {
                      return bind71(drawSubplot("Dataset IV")(quartet.dataset4)(60 + plotWidth + 60)(60 + plotHeight + 60))(function() {
                        return pure45(unit);
                      });
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/PSD3.Understanding.UnderstandingTabs/index.js
  var eq8 = /* @__PURE__ */ eq(eqRoute);
  var append11 = /* @__PURE__ */ append(semigroupArray);
  var renderTab2 = function(route) {
    return function(label5) {
      return function(currentRoute) {
        var isActive = eq8(route)(currentRoute);
        var classes2 = append11(["understanding-tab"])((function() {
          if (isActive) {
            return ["understanding-tab--active"];
          }
          ;
          return [];
        })());
        if (isActive) {
          return span3([classes(classes2)])([text5(label5)]);
        }
        ;
        return a([href4("#" + routeToPath(route)), classes(classes2)])([text5(label5)]);
      };
    };
  };
  var render43 = function(currentRoute) {
    return nav([classes(["understanding-tabs"])])([renderTab2(UnderstandingConcepts.value)("Concepts")(currentRoute), renderTab2(UnderstandingPatterns.value)("Patterns")(currentRoute), renderTab2(UnderstandingPhilosophy.value)("Philosophy")(currentRoute)]);
  };
  var component42 = /* @__PURE__ */ mkComponent({
    initialState: /* @__PURE__ */ identity(categoryFn),
    render: render43,
    "eval": /* @__PURE__ */ mkEval(defaultEval)
  });

  // output/PSD3.Understanding.About/index.js
  var bind55 = /* @__PURE__ */ bind(bindHalogenM);
  var liftEffect39 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var drawQuartet2 = /* @__PURE__ */ drawQuartet(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var pure31 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_7 = /* @__PURE__ */ slot_();
  var slot_1 = /* @__PURE__ */ slot_7({
    reflectSymbol: function() {
      return "sectionNav";
    }
  })(ordUnit);
  var slot_22 = /* @__PURE__ */ slot_7({
    reflectSymbol: function() {
      return "tabs";
    }
  })(ordUnit);
  var Initialize39 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var handleAction38 = function(v) {
    return bind55(liftEffect39(eval_D3M(drawQuartet2(anscombesQuartet)("div.quartet-viz"))))(function() {
      return pure31(unit);
    });
  };
  var _tabs = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _sectionNav4 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render44 = function(v) {
    return div2([classes(["explanation-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("heading-0")("PS<$>D3")(0), tocAnchor("heading-2")("What is This Project?")(1), tocAnchor("heading-3")("Motivation")(1), tocAnchor("heading-4")("The Data Visualization Process")(1), tocAnchor("anscombe")("Why Visualize? Anscombe's Quartet")(2), tocAnchor("heading-5")("Design philosophy of D3*")(2), tocAnchor("heading-6")("Design philosophy of PS<$>D3")(2), tocAnchor("heading-7")("Project Goals (and non-Goals)")(1), tocAnchor("heading-9")("Goals: details")(2), tocAnchor("heading-13")("Non-goals: details")(2), tocAnchor("heading-17")("What's a DSL? and what's an eDSL?")(1), tocAnchor("heading-20")("The grammar of D3...")(1)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    }), slot_1(_sectionNav4)(unit)(component8)({
      currentSection: UnderstandingSection.value,
      currentRoute: UnderstandingPhilosophy.value,
      sectionPages: [{
        route: UnderstandingConcepts.value,
        label: "Concepts"
      }, {
        route: UnderstandingPatterns.value,
        label: "Patterns"
      }, {
        route: UnderstandingPhilosophy.value,
        label: "Philosophy"
      }],
      moduleCategories: Nothing.value
    }), div2([classes(["explanation-content"])])([slot_22(_tabs)(unit)(component42)(UnderstandingPhilosophy.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"]), id2("heading-0")])([text5("PS<$>D3")]), h2([id2("heading-1")])([text5("Interactive Data Visualization in PureScript")]), p_([text5("A PureScript embedded "), em_([text5("DSL")]), text5(" for building "), em_([text5("interactive data visualizations")]), text5(", using "), em_([text5("D3.js")]), text5(" both as inspiration and as an implementation layer under the Foreign Function Interface (FFI).")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"]), id2("heading-2")])([text5("What is This Project?")]), p_([text5('This project demonstrates an embedded DSL for building interactive data visualizations with PureScript. The DSL uses a Finally Tagless approach that allows multiple interpreters for the same "language" which allows us to generate working code using an FFI to D3 or documentation and other more complex uses which will be discussed below.')])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"]), id2("heading-3")])([text5("Motivation")]), p_([text5('I have built moderately complex, custom interactive data visualisations in the past both in JavaScript and PureScript, using D3.js. I found that JavaScript generally, and D3 in particular, seemed to work best for visualisations that were less "app-like" and more "chart-like". What i mean by this is that when the complexity started to rise to the level of a small application and when multiple programmers were involved, or if one had to return to some code after time had elapsed, the whole thing was very brittle and refactoring of it prohibitively difficult.')]), p_([text5('This could certainly be a "feature, not a bug" for some domains of application such as building a big beautiful rich visualisation for a one-off publication such as a New York Times feature. However, when the visualisation is used to '), em_([text5("control")]), text5(" application behaviour or the visualisation begins to approach the complexity and multi-layered-ness of an app...this all in one single script language is a real problem, at least in my experience.")]), p_([text5("In PureScript it is common, and easy, to use JavaScript libraries via the FFI initially as it is a very quick way to get access to the enormous world of functionality that exists in open source JavaScript libraries. Sometimes this can be sufficient, you wrap a component or a function and its abstractions never leak and all is well. Other times, you wrap something but there's a kind of impedance mismatch with the way the JavaScript abstraction work and the way you'd like to handle, and particularly to compose, things in the purely functional world. D3.js was definitely the latter, for me.")]), p_([text5("D3.js is a big library with thousands of API end-points but, crucially, not all of those end-points are problematic for composing larger scale applications or weaving visualisations into PureScript web applications. Instead, its is primarily two core areas of the API, Selection and Simulation (more details on these later) which tend to actually "), em_([text5("structure")]), text5(" programs in a characteristic D3 / JavaScript vernacular. It is these APIs that are first wrapped (by FFI) and then made available in purely functional idiomatic way by this library.")]), p_([text5("A secondary, but also very important, consideration is the ability to design and work with Algebraic Data Types (ADTs) and the rich container libraries that are available in PureScript while building and implementing visualisations and especially the code that surrounds the visualization. While D3 ultimately is a kind of array programming DSL "), em_([text5("within")]), text5(' JavaScript and our PureScript eDSL is going to bottom out to some sort of "arrays mapped over the DOM" too, we want to be able to create data models that are more sophisticated and have better invariants as these are keys to both composability and maintainable, long-lived programs.')])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"]), id2("heading-4")])([text5("The Data Visualization Process")]), h3([id2("anscombe")])([text5("Why Visualize? Anscombe's Quartet")]), p_([text5("The famous Anscombe's Quartet demonstrates why visualization is essential. These four datasets have nearly identical statistical properties - same mean, variance, correlation, and linear regression line - yet reveal completely different patterns when visualized:")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["quartet-viz"])])([])]), p_([text5("Summary statistics alone would suggest these datasets are interchangeable, but the visualizations tell a very different story: linear relationship, curved relationship, linear with outlier, and vertical with outlier. This perfectly illustrates why we need visualization - numbers hide patterns that become immediately obvious when seen.")]), p_([text5('Data visualization transforms "boring" - but more importantly '), em_([text5("less informative")]), text5(" tables of data into perceivable patterns. We can think of this as a pipeline in which steps 2 and 3 are the purpose of this library.")]), ol_([li_([strong_([text5("Data")]), text5(" - Raw data structures (tables, JSON, etc.)")]), li_([strong_([text5("Data structure")]), text5(" - Relationships between data elements")]), li_([strong_([text5("Data presentation")]), text5(" - Visual encoding (HTML/SVG/Canvas)")]), li_([strong_([text5("Perception")]), text5(" - Human insight and understanding")])]), p_([text5("The goal is to make relationships in data visible through appropriate visual encoding, enabling the human visual system to process patterns that would be difficult or impossible to perceive in tabular form.")]), h3([id2("heading-5")])([text5("Design philosophy of D3*")]), ul_([li_([text5("(as I understand it)")])]), p_([text5("D3's great innovation was to enable an enormous range of visualizations using some simple fundamental concepts and a small core API. It supports dataviz from simple bar charts to complex hierarchical layouts, force-directed graphs, geographic projections, and interactive dashboards. Despite their visual diversity, these visualizations share common structural patterns: data is bound to DOM elements, attributes are computed from data, and layouts determine spatial positioning.")]), p_([text5("Something that people with limited prior knowledge / experience of data visualisation often seem to find surprising is the degree to which D3 is "), em_([text5("fundamentally different")]), text5(' from "a charting library". While the library has some affordances that make it very easy to do common visualisations it is not in any way about "canned visualisations". Rather, it is a language for describing a relationship between arrays of data and arbitrary constructions of DOM (HTML or SVG) element or marks on Canvas, and it could in principle be used to do auditory "visualisation" or, who knows, maybe olfactory "visualisation" or drone displays or whatever.')]), p_([text5("Another revolutionary aspect of D3 was that it was "), em_([text5("screen/web native")]), text5(" - right from the beginning it supported responsive design, transitions, animations, force-layouts all of which are completely distinct from data visualisation on paper.")]), p_([text5("You can get a greater sense of the potential of D3 and the range of things that have thus far been produced using it at "), a([href4("https://observablehq.com/")])([text5("ObservableHQ")]), text5(".")]), h3([id2("heading-6")])([text5("Design philosophy of PS<$>D3")]), p_([text5("This library presents a slighly more formal grammar embedded in a language that is a lot better suited to larger and more long-lived projects. Whereas D3 has patterns of use that you learn, in PS<$>D3 the pattern is formalised into a grammar with an interpreter. Moreover, the same grammar can be interpreted by different interpreters directly "), em_([text5("in")]), text5(" PureScript, which, as we will see creates some powerful new uses.")]), p_([text5(`Where D3 enabled data visualisers to create movement and responsiveness, PS<$>D3 seeks to enable something that's theoretically possible in D3 but not much seen in practice and that is using the data visualisation as the user interface. This is not the same thing as "interactive visualisation" in the sense of "explorable" visualisation, ie one in which you can interact with the elements `), em_([text5("but only to manipulate the visualisation itself")]), text5(". That is a different, and more limited, sense of interaction. What we are talking about when building UI with data visualisation is leveraging the information density of data visualisation to provide direct manipulation of complex or large systems.")]), p_([text5('This is actually not a revolutionary idea - think how much of an improvement over the initial "folders of icons" on the Mac the NeXT column browser was. But it is a direction of travel that has been effectively lost during the web UI revolution of the past 20 years.')]), p_([text5("This repo and website contains one example of how this might work, the Code Explorer.")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"]), id2("heading-7")])([text5("Project Goals (and non-Goals)")]), h3([id2("heading-8")])([text5("Priorities and Trade-offs")]), p_([text5("We have two principal priorities in writing this library and since you can't have two number one priorities, some trade-offs are inevitable which we will discuss here.")]), table([classes(["tutorial-table"])])([thead_([tr_([th_([text5("Primary")]), th_([text5("Non-goals")]), th_([text5("Sub-goals")])])]), tbody_([tr_([td_([strong_([text5("Expressivity:")]), text5(" fully equivalent to D3.js")]), td_([strong_([text5("Completeness:")]), text5(" not all D3.js API surface is needed")]), td_([text5("Prefer idiomatic PureScript to exposing D3 APIs directly")])]), tr_([td_([strong_([text5("Readability:")]), text5(" as readable as D3.js equivalent")]), td_([strong_([text5("Modelling")]), text5(" of D3 state complexity thru type-system")]), td_([text5("Design for progressive enhancement")])]), tr_([td_([strong_([text5("Composable:")]), text5(' suitable for "programming in the large"')]), td_([strong_([text5("Performance")]), text5(" equality to D3")]), td_([text5("Showcase PureScript ecosystem and libraries")])])])]), h3([id2("heading-9")])([text5("Goals: details")]), h4([id2("heading-10")])([text5("Expressivity")]), p_([text5("As alluded to above, expressivity is a key to D3's success - it's not limited to some library of canned visualisations and it's far, far more than even the most parameterized control of colours and symbols. It's important not to lose that in making D3 available directly in PureScript.")]), h4([id2("heading-11")])([text5("Readability")]), p_([text5("If we look at D3.js as a kind of embedded DSL in JavaScript it is certainly clear and readable in its core feature: declaratively associating some array(s) of data with some elements in the DOM and attributes of those elements. While it is definitely not a goal to reproduce the structures of D3js own language in PureScript per se, the goal is to have the same readability, leverage the good work that Mike Bostock did in developing it. At the same time the library should be as idiomatically PureScript / Haskell style as possible.")]), h4([id2("heading-12")])([text5("Composability")]), p_([text5("A related concern to readability is composability, the separation of concerns that makes componentisation possible and which makes possible programming in the large.")]), p_([text5("YMMV but for me this is where the D3 / JavaScript approach breaks down.")]), p_([text5("If you are a PureScript or Haskell programmer you probably know what i mean by this and if you are, say, a JavaScript D3 programmer perhaps that will seem odd or even contentious.")]), p_([text5("The benefits we seek from composability include:")]), ul_([li_([text5("better composability of sub-programs")]), li_([text5("better expressiveness in describing the problem domain")]), li_([text5("better correctness in implementations (ie fewer bugs)")]), li_([text5("better ability to evolve programs due to shifting requirements (re-factoring)")])]), p_([text5("Ideally, i would like the person coding the data layer and data model to be somewhat insulated from the concerns of the person using that data model to create a visualisation. And likewise, i would like the person developing the data visualisation to be somewhat insulated from the concerns of a web app developer. Now, these might very well all be the "), em_([text5("same person")]), text5(" but separating the concerns like this makes it easier to evolve the code and, crucially, makes it all a little less brittle.")]), h3([id2("heading-13")])([text5("Non-goals: details")]), h4([id2("heading-14")])([text5("Complete API coverage")]), p_([text5("As alluded to above, there's lots of API in D3 that needs nothing more than an FFI wrapper to be accessible from a PureScript eDSL. D3 is both modular and somewhat functional in style (in the JavaScript sense of functional programming, to be clear). So it was from the start a non-goal to completely expose all of D3 as "), em_([text5("idiomatic")]), text5(" PureScript where a simple wrapper was sufficient.")]), p_([text5("Furthermore, i have only written those wrappers "), em_([text5("as I needed them")]), text5(" to there are still "), em_([text5("many")]), text5(" parts of D3 that are not covered by this eDSL.")]), p_([text5("Addendum 2025 - the advent of LLMs and coding assistance agents means that perhaps complete API coverage might arrive sooner than expected.")]), h4([id2("heading-15")])([text5("Modelling of D3 State")]), p_([text5("This might seem like a surprising choice - D3 is inherently "), em_([text5("very")]), text5(` stateful, there's state in D3, there's state in the DOM, there's statefulness in your (pure) data after you give it to D3. State everywhere. In many cases in functional programming you might try to ameliorate the dangers of this by explicitly modelling the state, using a State Monad or marking everything that changes or depends upon state as "Effect"-full.`)]), p_([text5("Indeed i have tried this approach in the past. In this library i have instead striven to isolate the statefulness to only the code that uses eDSL represented by the "), code_([text5("Selection")]), text5(" and "), code_([text5("Simulation")]), text5(" monads. This "), em_([text5("significantly")]), text5(" removes but cannot fully eliminate the issues associated with state.")]), h4([id2("heading-16")])([text5("Performance equality with D3")]), p_([text5("While this was a non-goal in practice it doesn't seem to have been a problem. Essentially, this is because PS<$>D3 simply leverages D3.js for all the performance critical aspects and because the FFI has been kept simple by the decision described in the previous section.")]), p_([text5("The performance bottlenecks in a web data visualisation are, by their nature, going to be the assignment of potentially millions of attributes to potentially millions of DOM elements. D3.js does this extremely well and the PureScript layer doesn't compromise it much, if at all.")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"]), id2("heading-17")])([text5("What's a DSL? and what's an eDSL?")]), h3([id2("heading-18")])([text5("Domain Specific Language")]), p_([text5("Programming language tailored to a particular domain.")]), p_([text5("Might be limited compared to general purpose programming language.")]), p_([text5("But, may also be easier for novices, domain experts, non-programmers to use.")]), h3([id2("heading-19")])([text5("Embedded Domain Specific Language")]), p_([text5("Embedded Domain Specific Language makes domain specific tasks easier "), em_([text5("without")]), text5(" limiting the programmer in any way - they still have access to all parts of the host language.")]), p_([text5("This has Pros & Cons")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"]), id2("heading-20")])([text5("The grammar of D3...")]), p_([text5("Analyse the "), em_([text5("implicit")]), text5(" grammar of D3...")]), p_([text5("...in order to define a "), em_([text5("minimal")]), text5(" grammar for our PureScript eDSL")]), p_([text5("(consistent with priority goals of readability and expressiveness)")]), h3([id2("heading-21")])([text5("A Visual D3 Grammar")]), p_([strong_([text5("This is much simpler than D3's actual AST would be (if it had one) but it is sufficient to express a LOT of D3 scripts.")])]), table([classes(["tutorial-table"])])([thead_([tr_([th_([text5("Name")]), th_([text5("Function")]), th_([text5("Notes")])])]), tbody_([tr_([td_([em_([text5("attach")])]), td_([text5("Select an entry point (or points) in the DOM")]), td_([text5("Simply uses a CSS type selector to identify the target. Resulting selection can then be used for append / join in order to build up a visualisation from HTML, SVG or Canvas elements.")])]), tr_([td_([em_([text5("appendTo")])]), td_([text5("Add some DOM element "), strong_([text5("e")]), text5(" to a selection")]), td_([text5("Each element can have attributes. If data has been bound higher up in the AST then that data is available in this element's attributes")])]), tr_([td_([em_([text5("join")])]), td_([text5("For every "), em_([text5("datum")]), text5(" "), strong_([text5("d")]), text5(" in some array, insert an element "), strong_([text5("e")])]), td_([text5("We'll run the visualisation with some data model which can be arbitrary in structure, but at every point where we want to append "), em_([text5("multiple")]), text5(" elements we need to have a function that yields a simple array."), br_, br_, text5("Each element can have attributes that are derived from the datum with which it is associated."), br_, br_, text5("The datum at each element is inherited by its children, so any subsequent join starts with the structure of this datum.")])])])]), h3([id2("heading-22")])([text5("Grammar diagrams")]), h4([id2("heading-23")])([text5("3 Little Circles: the canonical simplest example")]), p_([text5("Insert Mermaid diagram here")]), pre_([code_([text5('    a        "div#hook"\n    \u2193\n    +        <svg>\n    \u2193\n    +        <g>\n    \u2193\n   <+>       [1,2,3] \u2192 <circle>')])]), p_([a([href4("https://bost.ocks.org/mike/circles/")])([text5("https://bost.ocks.org/mike/circles/")])]), h4([id2("heading-24")])([text5("Radial Tree: A more complex example")]), p_([text5("The Radial Tree and Cluster Dendrogram visualizations share the exact same structure:")]), pre_([code_([text5('    a          "div#hook"\n    \u2193\n    +          <svg>\n    \u2193\n    +          <g.links>    +          <g.nodes>    +          <g.labels>\n    \u2193                       \u2193                       \u2193\n   <+>         <path>      <+>         <circle>    <+>         <text>\n               \u2191                       \u2191                       \u2191\n            m->m.links              m->m.nodes              m->m.nodes')])]), p_([text5("All the differences are in details of how the node attributes are calculated from the data.")]), h4([id2("heading-25")])([text5("Even complex examples structurally simple")]), p_([text5("Even highly complex visualizations like "), a([href4("https://top2000.visualcinnamon.com")])([text5("Nadieh Bremer's Top 2000 visualization")]), text5(" can be expressed with this simple grammar - the complexity lies in the data transformations and attribute calculations, not in the fundamental structure.")])])])]);
  };
  var component43 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render44,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction38,
        initialize: new Just(Initialize39.value)
      })
    });
  })();

  // output/PSD3.Understanding.Concepts/index.js
  var pure32 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_8 = /* @__PURE__ */ slot_();
  var slot_12 = /* @__PURE__ */ slot_8({
    reflectSymbol: function() {
      return "sectionNav";
    }
  })(ordUnit);
  var slot_23 = /* @__PURE__ */ slot_8({
    reflectSymbol: function() {
      return "tabs";
    }
  })(ordUnit);
  var Initialize40 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var handleAction39 = function(v) {
    return pure32(unit);
  };
  var _tabs2 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _sectionNav5 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render45 = function(v) {
    return div2([classes(["explanation-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("heading-finally-tagless")("Finally Tagless")(0), tocAnchor("heading-selectionm")("The SelectionM Monad")(0), tocAnchor("heading-capabilities")("Capabilities & Interpreters")(0), tocAnchor("heading-type-safe")("Type-Safe Attribute System")(0)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    }), slot_12(_sectionNav5)(unit)(component8)({
      currentSection: UnderstandingSection.value,
      currentRoute: UnderstandingConcepts.value,
      sectionPages: [{
        route: UnderstandingConcepts.value,
        label: "Concepts"
      }, {
        route: UnderstandingPatterns.value,
        label: "Patterns"
      }, {
        route: UnderstandingPhilosophy.value,
        label: "Philosophy"
      }],
      moduleCategories: Nothing.value
    }), div2([classes(["explanation-content"])])([slot_23(_tabs2)(unit)(component42)(UnderstandingConcepts.value), h1([classes(["explanation-title"])])([text5("Core Concepts")]), section([classes(["concept-section"])])([h2([id2("heading-finally-tagless")])([text5("Finally Tagless")]), p_([text5("We want the library to be extensible and, in fact, D3 while it's the inspiration and a core target, is not the only possible implementation of the SelectionM monad. For this reason we choose the design pattern called Finally Tagless encoding and implement "), em_([text5("interpreters")]), text5(" for the SelectionM.")]), p_([text5("Furthermore, using this pattern, we can now "), em_([text5("extend")]), text5(" the SelectionM monad as can be seen in the library where we provide a SimulationM2 monad which extends the our static DOM element visualizations by allowing them to move under the control of a Force Layout algorithm.")])]), section([classes(["concept-section"])])([h2([id2("heading-selectionm")])([text5("The SelectionM Monad")]), h3_([text5("Grammar")]), p_([text5("D3.js is, naturally, a JavaScript idiomatic library, making use of function chaining as a readable and easily-learnt API.")]), p_([text5("PS<$>D3 formalizes this slightly while retaining the general shape of the pattern and core concepts such as Selection, Attribute.")]), p_([text5("The basic grammar of PS<$>D3 is just this:")]), ul_([li_([text5("we can "), em_([text5("attach")]), text5(' our visualisation into the DOM, typically hooking into something like <div id="viz">')]), li_([text5("we can build up whatever additional structure we want inside that, using "), em_([text5("appendTo")]), text5(` to for example put an <svg> with some <g>'s inside the <div id="viz">`)]), li_([text5("we can apply "), em_([text5("attributes")]), text5(" to the elements we've created: styles, ids, css classes and such")]), li_([text5("we can apply "), em_([text5("behaviors")]), text5(" to the elements we've created: things like zoom, drag and click event-handlers")]), li_([text5("we can "), em_([text5("join")]), text5(" some array of data at this point, such that when we next "), em_([text5("add")]), text5(" something, say a <circle>, we will put "), em_([text5("n")]), text5(" <circle>s in, not just one.")])]), p_([text5("In D3 the thing that is being acted on in this chain of functions is The Selection...")]), h3_([text5("The SelectionM Monad")]), p_([text5("Where functions would be chained in JavaScript, the natural counterpart in PureScript is a Monad, specifically the SelectionM Monad which embodies the core functions above and a few others.")]), p_([text5("It looks like this:")]), pre_([code_([text5("class (Monad m) <= SelectionM selection m where\n  attach          :: Selector selection -> m selection\n  appendTo        :: selection -> Element -> Array (SelectionAttribute) -> m selection\n  setAttributes   :: selection -> Array (SelectionAttribute) -> m Unit\n  on              :: selection -> Behavior selection -> m Unit\n  simpleJoin      :: \u2200 datum.  selection -> Element -> (Array datum) -> (Datum_ -> Index_) -> m selection\n  updateJoin      :: \u2200 datum.  selection -> Element -> (Array datum) -> (Datum_ -> Index_) -> m { enter :: selection, exit :: selection, update :: selection }\n\n  selectUnder     :: selection -> Selector selection -> m selection\n  filterSelection :: selection -> Selector selection -> m selection\n  mergeSelections :: selection -> selection -> m selection\n  openSelection   :: selection -> Selector selection -> m selection")])])]), section([classes(["concept-section"])])([h2([id2("heading-capabilities")])([text5("Capabilities & Interpreters")]), p_([text5("The SimulationM2 monad looks like:")]), pre_([code_([text5("class (Monad m, SelectionM selection m) <= SimulationM2 selection m | m -> selection where\n  start :: m Unit\n  stop  :: m Unit\n  setConfigVariable    :: SimVariable -> m Unit\n  actualizeForces:: Set Label -> m Unit\n  setNodes :: forall d.   Array (D3_SimulationNode d) -> m (Array (D3_SimulationNode d))\n  setLinks :: forall d r id. (Eq id) => Array (D3Link id r) -> Array (D3_SimulationNode d) -> (Datum_ -> Index_ ) -> m (Array (D3LinkSwizzled (D3_SimulationNode d) r))\n  setNodesFromSelection :: selection -> m Unit\n  setLinksFromSelection :: selection -> (Datum_ -> Boolean) -> m Unit\n  mergeNewDataWithSim :: forall d r id. (Eq id) =>\n    selection -> -- nodes selection\n    (Datum_ -> Index_) -> -- nodes keyFn\n    selection -> -- links selection\n    (Datum_ -> Index_) -> -- links KeyFn\n    RawData d r id -> -- links and nodes raw data\n    m { links :: (Array (D3LinkSwizzled (D3_SimulationNode d) r)), nodes :: (Array (D3_SimulationNode d))}\n  simulationHandle :: m D3Simulation_\n  addTickFunction    :: Label -> Step selection -> m Unit\n  removeTickFunction :: Label                   -> m Unit")])])]), section([classes(["concept-section"])])([h2([id2("heading-type-safe")])([text5("Type-Safe Attribute System")]), p_([text5("A key innovation of D3 is the easy, natural way one can go from static to data-driven attributes, for example going from putting "), em_([text5("n")]), text5(" identical circles into the DOM vs putting "), em_([text5("n")]), text5(" circles of differing colours and sizes into the DOM. This is the essence (with join/simulation) of Data Drive Documents, ie D3.")]), p_([text5("In PureScript we need a little bit of typeclass trickery to get the same clean syntax, and we use it to enable interchangeable, type-safe attribute setters. For example, we can use an attribute "), em_([text5("cx")]), text5(" (the center x position of a circle) which can take:")]), ul_([li_([text5("a numeric value OR,")]), li_([text5("a lambda function which takes the datum we are using to a numeric value OR,")]), li_([text5("a lambda function which takes the datum AND the index of that datum in the selection")])])])])]);
  };
  var component44 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render45,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction39,
        initialize: new Just(Initialize40.value)
      })
    });
  })();

  // output/D3.Viz.ChordDiagram/index.js
  var classed7 = /* @__PURE__ */ classed(toAttrString);
  var width13 = /* @__PURE__ */ width8(toAttrNumber);
  var height13 = /* @__PURE__ */ height8(toAttrNumber);
  var show21 = /* @__PURE__ */ show(showNumber);
  var d4 = /* @__PURE__ */ d2(toAttrString);
  var fill6 = /* @__PURE__ */ fill(toAttrString);
  var fillOpacity2 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var strokeColor7 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth6 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var getSourceIndex = function(d1) {
    return d1.source.index;
  };
  var exampleMatrix = [[0, 5, 3, 2, 1], [5, 0, 4, 1, 2], [3, 4, 0, 3, 4], [2, 1, 3, 0, 5], [1, 2, 4, 5, 0]];
  var exampleLabels = ["Data Structures", "Algorithms", "Patterns", "Testing", "Architecture"];
  var colors = ["#e74c3c", "#3498db", "#2ecc71", "#f39c12", "#9b59b6"];
  var draw = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        var simpleJoin2 = simpleJoin(dictSelectionM);
        return function(matrix) {
          return function(v) {
            return function(selector) {
              var dims = {
                width: 800,
                height: 800
              };
              var centerX = dims.width / 2;
              var centerY = dims.height / 2;
              return bind71(attach2(selector))(function(v1) {
                return bind71(appendTo2(v1)(Svg.value)([viewBox(0)(0)(dims.width)(dims.height), classed7("chord-diagram"), width13(dims.width), height13(dims.height)]))(function(svg2) {
                  return bind71(appendTo2(svg2)(Group.value)([transform([function(v2) {
                    return "translate(" + (show21(centerX) + ("," + (show21(centerY) + ")")));
                  }]), classed7("chord-group")]))(function(centerGroup) {
                    var chordData = chordLayout_(matrix);
                    var groups = chordGroups_(chordData);
                    var chords = chordArray_(chordData);
                    var ribbonGen0 = ribbonGenerator_(unit);
                    var ribbonGen = setRibbonRadius_(ribbonGen0)(290);
                    var arcGen0 = arcGenerator_(unit);
                    var arcGen1 = setArcInnerRadius_(arcGen0)(290);
                    var arcGen = setArcOuterRadius_(arcGen1)(300);
                    return bind71(appendTo2(centerGroup)(Group.value)([classed7("ribbons")]))(function(ribbonsGroup) {
                      var drawRibbon = function(chord) {
                        var sourceIdx = getSourceIndex(chord);
                        var color2 = (function() {
                          var v2 = index2(colors)(sourceIdx);
                          if (v2 instanceof Just) {
                            return v2.value0;
                          }
                          ;
                          if (v2 instanceof Nothing) {
                            return "#999999";
                          }
                          ;
                          throw new Error("Failed pattern match at D3.Viz.ChordDiagram (line 102, column 21 - line 104, column 43): " + [v2.constructor.name]);
                        })();
                        var pathData = ribbonPath_(ribbonGen)(chord);
                        return bind71(appendTo2(ribbonsGroup)(Path.value)([d4(pathData), fill6(color2), fillOpacity2(0.67), strokeColor7("#000000"), strokeWidth6(0.5), classed7("ribbon")]))(function() {
                          return pure45(unit);
                        });
                      };
                      return bind71(traverse_7(drawRibbon)(chords))(function() {
                        return bind71(appendTo2(centerGroup)(Group.value)([classed7("arcs")]))(function(arcsGroup) {
                          return bind71(simpleJoin2(arcsGroup)(Group.value)(groups)(keyIsID_))(function(groupsJoin) {
                            var drawArc = function(idx) {
                              return function(group3) {
                                var color2 = (function() {
                                  var v2 = index2(colors)(idx);
                                  if (v2 instanceof Just) {
                                    return v2.value0;
                                  }
                                  ;
                                  if (v2 instanceof Nothing) {
                                    return "#999999";
                                  }
                                  ;
                                  throw new Error("Failed pattern match at D3.Viz.ChordDiagram (line 125, column 21 - line 127, column 43): " + [v2.constructor.name]);
                                })();
                                var pathData = arcPath_(arcGen)(group3);
                                return bind71(appendTo2(groupsJoin)(Path.value)([d4(pathData), fill6(color2), strokeColor7("#ffffff"), strokeWidth6(2), classed7("arc")]))(function() {
                                  return pure45(unit);
                                });
                              };
                            };
                            return bind71(traverse_7(function(idx) {
                              var v2 = index2(groups)(idx);
                              if (v2 instanceof Just) {
                                return drawArc(idx)(v2.value0);
                              }
                              ;
                              if (v2 instanceof Nothing) {
                                return pure45(unit);
                              }
                              ;
                              throw new Error("Failed pattern match at D3.Viz.ChordDiagram (line 138, column 27 - line 140, column 48): " + [v2.constructor.name]);
                            })(range2(0)(length4(groups) - 1 | 0)))(function() {
                              return pure45(unit);
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
  };

  // output/D3.Viz.Sankey.Model/index.js
  var energyData = {
    nodes: [{
      name: "Agricultural 'waste'"
    }, {
      name: "Bio-conversion"
    }, {
      name: "Liquid"
    }, {
      name: "Losses"
    }, {
      name: "Solid"
    }, {
      name: "Gas"
    }, {
      name: "Biofuel imports"
    }, {
      name: "Biomass imports"
    }, {
      name: "Coal imports"
    }, {
      name: "Coal"
    }, {
      name: "Coal reserves"
    }, {
      name: "District heating"
    }, {
      name: "Industry"
    }, {
      name: "Heating and cooling - commercial"
    }, {
      name: "Heating and cooling - homes"
    }, {
      name: "Electricity grid"
    }, {
      name: "Over generation / exports"
    }, {
      name: "H2 conversion"
    }, {
      name: "Road transport"
    }, {
      name: "Agriculture"
    }, {
      name: "Rail transport"
    }, {
      name: "Lighting & appliances - commercial"
    }, {
      name: "Lighting & appliances - homes"
    }, {
      name: "Gas imports"
    }, {
      name: "Ngas"
    }, {
      name: "Gas reserves"
    }, {
      name: "Thermal generation"
    }, {
      name: "Geothermal"
    }, {
      name: "H2"
    }, {
      name: "Hydro"
    }, {
      name: "International shipping"
    }, {
      name: "Domestic aviation"
    }, {
      name: "International aviation"
    }, {
      name: "National navigation"
    }, {
      name: "Marine algae"
    }, {
      name: "Nuclear"
    }, {
      name: "Oil imports"
    }, {
      name: "Oil"
    }, {
      name: "Oil reserves"
    }, {
      name: "Other waste"
    }, {
      name: "Pumped heat"
    }, {
      name: "Solar PV"
    }, {
      name: "Solar Thermal"
    }, {
      name: "Solar"
    }, {
      name: "Tidal"
    }, {
      name: "UK land based bioenergy"
    }, {
      name: "Wave"
    }, {
      name: "Wind"
    }],
    links: [{
      source: 0,
      target: 1,
      value: 124.729
    }, {
      source: 1,
      target: 2,
      value: 0.597
    }, {
      source: 1,
      target: 3,
      value: 26.862
    }, {
      source: 1,
      target: 4,
      value: 280.322
    }, {
      source: 1,
      target: 5,
      value: 81.144
    }, {
      source: 6,
      target: 2,
      value: 35
    }, {
      source: 7,
      target: 4,
      value: 35
    }, {
      source: 8,
      target: 9,
      value: 11.606
    }, {
      source: 10,
      target: 9,
      value: 63.965
    }, {
      source: 9,
      target: 4,
      value: 75.571
    }, {
      source: 11,
      target: 12,
      value: 10.639
    }, {
      source: 11,
      target: 13,
      value: 22.505
    }, {
      source: 11,
      target: 14,
      value: 46.184
    }, {
      source: 15,
      target: 16,
      value: 104.453
    }, {
      source: 15,
      target: 14,
      value: 113.726
    }, {
      source: 15,
      target: 17,
      value: 27.14
    }, {
      source: 15,
      target: 12,
      value: 342.165
    }, {
      source: 15,
      target: 18,
      value: 37.797
    }, {
      source: 15,
      target: 19,
      value: 4.412
    }, {
      source: 15,
      target: 13,
      value: 40.858
    }, {
      source: 15,
      target: 3,
      value: 56.691
    }, {
      source: 15,
      target: 20,
      value: 7.863
    }, {
      source: 15,
      target: 21,
      value: 90.008
    }, {
      source: 15,
      target: 22,
      value: 93.494
    }, {
      source: 23,
      target: 24,
      value: 40.719
    }, {
      source: 25,
      target: 24,
      value: 82.233
    }, {
      source: 5,
      target: 13,
      value: 0.129
    }, {
      source: 5,
      target: 3,
      value: 1.401
    }, {
      source: 5,
      target: 26,
      value: 151.891
    }, {
      source: 5,
      target: 19,
      value: 2.096
    }, {
      source: 5,
      target: 12,
      value: 48.58
    }, {
      source: 27,
      target: 15,
      value: 7.013
    }, {
      source: 17,
      target: 28,
      value: 20.897
    }, {
      source: 17,
      target: 3,
      value: 6.242
    }, {
      source: 28,
      target: 18,
      value: 20.897
    }, {
      source: 29,
      target: 15,
      value: 6.995
    }, {
      source: 2,
      target: 12,
      value: 121.066
    }, {
      source: 2,
      target: 30,
      value: 128.69
    }, {
      source: 2,
      target: 18,
      value: 135.835
    }, {
      source: 2,
      target: 31,
      value: 14.458
    }, {
      source: 2,
      target: 32,
      value: 206.267
    }, {
      source: 2,
      target: 19,
      value: 3.64
    }, {
      source: 2,
      target: 33,
      value: 33.218
    }, {
      source: 2,
      target: 20,
      value: 4.413
    }, {
      source: 34,
      target: 1,
      value: 4.375
    }, {
      source: 24,
      target: 5,
      value: 122.952
    }, {
      source: 35,
      target: 26,
      value: 839.978
    }, {
      source: 36,
      target: 37,
      value: 504.287
    }, {
      source: 38,
      target: 37,
      value: 107.703
    }, {
      source: 37,
      target: 2,
      value: 611.99
    }, {
      source: 39,
      target: 4,
      value: 56.587
    }, {
      source: 39,
      target: 1,
      value: 77.81
    }, {
      source: 40,
      target: 14,
      value: 193.026
    }, {
      source: 40,
      target: 13,
      value: 70.672
    }, {
      source: 41,
      target: 15,
      value: 59.901
    }, {
      source: 42,
      target: 14,
      value: 19.263
    }, {
      source: 43,
      target: 42,
      value: 19.263
    }, {
      source: 43,
      target: 41,
      value: 59.901
    }, {
      source: 4,
      target: 19,
      value: 0.882
    }, {
      source: 4,
      target: 26,
      value: 400.12
    }, {
      source: 4,
      target: 12,
      value: 46.477
    }, {
      source: 26,
      target: 15,
      value: 525.531
    }, {
      source: 26,
      target: 3,
      value: 787.129
    }, {
      source: 26,
      target: 11,
      value: 79.329
    }, {
      source: 44,
      target: 15,
      value: 9.452
    }, {
      source: 45,
      target: 1,
      value: 182.01
    }, {
      source: 46,
      target: 15,
      value: 19.013
    }, {
      source: 47,
      target: 15,
      value: 289.366
    }]
  };

  // output/D3.Viz.Sankey.Unsafe/index.js
  var unboxSankeyNode = unsafeCoerce2;
  var unboxSankeyLink = unsafeCoerce2;

  // output/PSD3.Capabilities.Sankey/index.js
  var setSankeyData = function(dict) {
    return dict.setSankeyData;
  };

  // output/D3.Viz.SankeyDiagram/index.js
  var classed8 = /* @__PURE__ */ classed(toAttrString);
  var discard48 = /* @__PURE__ */ discard(discardUnit);
  var fill7 = /* @__PURE__ */ fill(toAttrString);
  var strokeWidth7 = /* @__PURE__ */ strokeWidth(toAttrNumberFn);
  var strokeOpacity4 = /* @__PURE__ */ strokeOpacity(toAttrNumber);
  var d5 = /* @__PURE__ */ d2(toAttrStringFn);
  var strokeColor8 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var x16 = /* @__PURE__ */ x(toAttrNumberFn);
  var y11 = /* @__PURE__ */ y(toAttrNumberFn);
  var width14 = /* @__PURE__ */ width8(toAttrNumberFn);
  var height14 = /* @__PURE__ */ height8(toAttrNumberFn);
  var fill13 = /* @__PURE__ */ fill(toAttrStringFn);
  var fillOpacity3 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var dy2 = /* @__PURE__ */ dy(toAttrNumber);
  var textAnchor4 = /* @__PURE__ */ textAnchor(toAttrStringFn);
  var text11 = /* @__PURE__ */ text6(toAttrStringFn);
  var node_ = {
    name: function($83) {
      return (function(v) {
        return v.name;
      })(unboxSankeyNode($83));
    },
    x0: function($84) {
      return (function(v) {
        return v.x0;
      })(unboxSankeyNode($84));
    },
    y0: function($85) {
      return (function(v) {
        return v.y0;
      })(unboxSankeyNode($85));
    },
    x1: function($86) {
      return (function(v) {
        return v.x1;
      })(unboxSankeyNode($86));
    },
    y1: function($87) {
      return (function(v) {
        return v.y1;
      })(unboxSankeyNode($87));
    },
    value: function($88) {
      return (function(v) {
        return v.value;
      })(unboxSankeyNode($88));
    },
    color: function($89) {
      return (function(v) {
        return v.color;
      })(unboxSankeyNode($89));
    }
  };
  var link_4 = {
    source: function($90) {
      return (function(v) {
        return v.source;
      })(unboxSankeyLink($90));
    },
    target: function($91) {
      return (function(v) {
        return v.target;
      })(unboxSankeyLink($91));
    },
    value: function($92) {
      return (function(v) {
        return v.value;
      })(unboxSankeyLink($92));
    },
    width: function($93) {
      return (function(v) {
        return v.width;
      })(unboxSankeyLink($93));
    },
    color: function($94) {
      return (function(v) {
        return v.color;
      })(unboxSankeyLink($94));
    },
    path: function($95) {
      return (function(v) {
        return v.path;
      })(unboxSankeyLink($95));
    }
  };
  var keyForNode = function(d1) {
    return node_.name(d1);
  };
  var keyForLink = function(d1) {
    return node_.name(link_4.source(d1)) + ("-" + node_.name(link_4.target(d1)));
  };
  var draw2 = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard48(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var pure45 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictMonadState) {
        return function(dictSankeyM) {
          var SelectionM1 = dictSankeyM.SelectionM1();
          var attach2 = attach(SelectionM1);
          var appendTo2 = appendTo(SelectionM1);
          var setSankeyData2 = setSankeyData(dictSankeyM);
          var simpleJoin2 = simpleJoin(SelectionM1);
          var setAttributes2 = setAttributes(SelectionM1);
          return function(sankeyData) {
            return function(selector) {
              return bind71(liftEffect51(getWindowWidthHeight))(function(v) {
                return bind71(attach2(selector))(function(v1) {
                  return bind71(appendTo2(v1)(Svg.value)([viewBox(0)(0)(v.value0)(v.value1), classed8("sankey")]))(function(svg2) {
                    return bind71(appendTo2(svg2)(Group.value)([classed8("links")]))(function(linksGroup) {
                      return bind71(appendTo2(svg2)(Group.value)([classed8("nodes")]))(function(nodesGroup) {
                        return bind71(appendTo2(svg2)(Group.value)([classed8("labels")]))(function(labelsGroup) {
                          return bind71(setSankeyData2(sankeyData)(v.value0)(v.value1))(function(layoutResult) {
                            return bind71(simpleJoin2(linksGroup)(Path.value)(layoutResult.links)(keyForLink))(function(linksSelection) {
                              return discard112(setAttributes2(linksSelection)([classed8("sankey-link"), fill7("none"), strokeWidth7(link_4.width), strokeOpacity4(0.5), d5(sankeyLinkPath_), strokeColor8(link_4.color)]))(function() {
                                return bind71(simpleJoin2(nodesGroup)(Rect.value)(layoutResult.nodes)(keyForNode))(function(nodesSelection) {
                                  return discard112(setAttributes2(nodesSelection)([classed8("sankey-node"), x16(node_.x0), y11(node_.y0), width14(function(n) {
                                    return node_.x1(n) - node_.x0(n);
                                  }), height14(function(n) {
                                    return node_.y1(n) - node_.y0(n);
                                  }), fill13(node_.color), fillOpacity3(0.8)]))(function() {
                                    return bind71(simpleJoin2(labelsGroup)(Text2.value)(layoutResult.nodes)(keyForNode))(function(labelsSelection) {
                                      return discard112(setAttributes2(labelsSelection)([classed8("sankey-label"), x16(function(n) {
                                        var $79 = node_.x0(n) < v.value0 / 2;
                                        if ($79) {
                                          return node_.x1(n) + 6;
                                        }
                                        ;
                                        return node_.x0(n) - 6;
                                      }), y11(function(n) {
                                        return (node_.y0(n) + node_.y1(n)) / 2;
                                      }), dy2(4), textAnchor4(function(n) {
                                        var $80 = node_.x0(n) < v.value0 / 2;
                                        if ($80) {
                                          return "start";
                                        }
                                        ;
                                        return "end";
                                      }), text11(node_.name)]))(function() {
                                        return pure45(unit);
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
  };

  // output/PSD3.Internal.Sankey.Types/foreign.js
  var initialSankeyLayoutState_ = Sankey().nodeWidth(15).nodePadding(10);

  // output/PSD3.Shared.ExamplesNav/index.js
  var eq9 = /* @__PURE__ */ eq(eqRoute);
  var sectionTitle2 = function(title5) {
    return p([classes(["explanation-page__nav-section-title"])])([text5(title5)]);
  };
  var navLink2 = function(route) {
    return function(label5) {
      return function(currentRoute) {
        var $3 = eq9(route)(currentRoute);
        if ($3) {
          return span3([classes(["explanation-page__nav-link", "explanation-page__nav-link--active"])])([text5(label5)]);
        }
        ;
        return a([href4("#" + routeToPath(route)), classes(["explanation-page__nav-link"])])([text5(label5 + " \u2192")]);
      };
    };
  };
  var render46 = function(currentRoute) {
    return div2([classes(["explanation-page__nav-panel"])])([h3([classes(["explanation-page__nav-title"])])([text5("Examples")]), nav([classes(["explanation-page__nav-links"])])([a([href4("#" + routeToPath(Home.value)), classes(["explanation-page__nav-link"])])([text5("\u2190 Home")]), hr([classes(["explanation-page__nav-divider"])]), sectionTitle2("Simple Charts"), navLink2(SimpleCharts1.value)("Simplest Examples")(currentRoute), navLink2(SimpleCharts2.value)("Simple Charts")(currentRoute), sectionTitle2("Data Flow"), navLink2(DataFlowViz.value)("Chord & Sankey")(currentRoute), sectionTitle2("Movement"), navLink2(Movement.value)("Movement & Transition")(currentRoute), sectionTitle2("Hierarchies"), navLink2(Hierarchies.value)("Hierarchies")(currentRoute), sectionTitle2("Applications"), navLink2(CodeExplorer.value)("Code Explorer")(currentRoute), navLink2(WealthHealth.value)("Wealth & Health")(currentRoute), sectionTitle2("Alternative Interpreters"), navLink2(Interpreters.value)("Interpreters")(currentRoute), hr([classes(["explanation-page__nav-divider"])]), a([href4("https://github.com/afcondon/purescript-d3-tagless"), target5("_blank"), rel4("noopener noreferrer"), classes(["explanation-page__nav-link", "explanation-page__nav-link--external"])])([text5("GitHub \u2197")])])]);
  };
  var component45 = /* @__PURE__ */ mkComponent({
    initialState: /* @__PURE__ */ identity(categoryFn),
    render: render46,
    "eval": /* @__PURE__ */ mkEval(defaultEval)
  });

  // output/PSD3.Understanding.DataFlowViz/index.js
  var bind56 = /* @__PURE__ */ bind(bindHalogenM);
  var monadEffectHalogenM2 = /* @__PURE__ */ monadEffectHalogenM(monadEffectAff);
  var liftEffect40 = /* @__PURE__ */ liftEffect(monadEffectHalogenM2);
  var draw3 = /* @__PURE__ */ draw(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var runWithD3_Sankey2 = /* @__PURE__ */ runWithD3_Sankey(bindHalogenM)(monadStateHalogenM)(monadEffectHalogenM2);
  var draw1 = /* @__PURE__ */ draw2(bindD3SankeyM)(monadEffD3SankeyM)(monadStateD3SankeyM)(sankeyMD3Selection_D3Sank);
  var slot_9 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "examplesNav";
    }
  })(ordUnit);
  var Initialize41 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var handleAction40 = function(v) {
    return bind56(liftEffect40(eval_D3M(draw3(exampleMatrix)(exampleLabels)("div.chord-viz"))))(function() {
      return runWithD3_Sankey2(draw1(energyData)("div.sankey-viz"));
    });
  };
  var _examplesNav = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render47 = function(v) {
    return div2([classes(["explanation-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("chord")("1. Chord Diagram")(0), tocRoute(new Explore("ChordDiagramDraw"))("\u2192 How-to guide")(1), tocAnchor("sankey")("2. Sankey Diagram")(0), tocRoute(new Explore("SankeyDraw"))("\u2192 How-to guide")(1)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    }), slot_9(_examplesNav)(unit)(component45)(DataFlowViz.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Data Flow Visualizations")]), p_([text5("Chord and Sankey diagrams are specialized visualizations for showing relationships and flows between entities. Both use visual metaphors - ribbons and flows - to make complex interconnections immediately comprehensible.")]), p_([text5("These visualization types excel at revealing patterns in network data, resource flows, and dependencies that would be difficult to understand in tabular form.")])]), section([id2("chord"), classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("1. Chord Diagram: Circular Relationships")]), p_([text5("Chord diagrams show relationships and flows between entities in a circular layout. They're particularly effective for displaying interconnected systems, dependencies, or flows between groups.")]), p_([text5("This example visualizes dependencies between fundamental programming concepts. Each arc represents a concept, and the ribbons show how strongly they depend on each other.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["chord-viz"])])([])]), p_([text5("The circular layout makes it easy to see both direct dependencies (following a single chord) and the overall pattern of interconnections in the system. The thickness of each chord represents the strength of the relationship.")])]), section([id2("sankey"), classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("2. Sankey Diagram: Flow Visualization")]), p_([text5("Sankey diagrams visualize the flow of resources, energy, costs, or other quantities through a system. The width of each connection is proportional to the flow quantity, making it easy to identify dominant flows and inefficiencies.")]), p_([text5("This diagram shows energy flows in the UK energy system, from primary energy sources through transformation and distribution to final consumption. The Sankey layout algorithm automatically positions nodes and creates smooth flow paths.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["sankey-viz"])])([])]), p_([text5("The width of each flow represents the quantity of energy. Notice how the diagram reveals energy losses in transformation processes and highlights which sources contribute most to final consumption.")])])]);
  };
  var component46 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          sankeyLayout: initialSankeyLayoutState_
        };
      },
      render: render47,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction40,
        initialize: new Just(Initialize41.value)
      })
    });
  })();

  // output/D3.Viz.BubbleChart/index.js
  var classed9 = /* @__PURE__ */ classed(toAttrString);
  var width15 = /* @__PURE__ */ width8(toAttrNumber);
  var height15 = /* @__PURE__ */ height8(toAttrNumber);
  var cx3 = /* @__PURE__ */ cx(toAttrNumber);
  var cy3 = /* @__PURE__ */ cy(toAttrNumber);
  var radius8 = /* @__PURE__ */ radius(toAttrNumber);
  var fill8 = /* @__PURE__ */ fill(toAttrString);
  var fillOpacity4 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var strokeColor9 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth8 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var discard49 = /* @__PURE__ */ discard(discardUnit);
  var x17 = /* @__PURE__ */ x(toAttrNumber);
  var y16 = /* @__PURE__ */ y(toAttrNumber);
  var text13 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor5 = /* @__PURE__ */ textAnchor(toAttrString);
  var fontSize3 = /* @__PURE__ */ fontSize(toAttrNumber);
  var min8 = /* @__PURE__ */ min(ordNumber);
  var getName = function(node) {
    return node.data.name;
  };
  var depthColor = function(depth) {
    if (depth === 0) {
      return "#e74c3c";
    }
    ;
    if (depth === 1) {
      return "#3498db";
    }
    ;
    if (depth === 2) {
      return "#2ecc71";
    }
    ;
    if (depth === 3) {
      return "#f39c12";
    }
    ;
    if (depth === 4) {
      return "#9b59b6";
    }
    ;
    return "#95a5a6";
  };
  var draw4 = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard49(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var when8 = when(Applicative0);
      var pure115 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(jsonData) {
          return function(selector) {
            var dims = {
              width: 900,
              height: 900
            };
            return bind71(attach2(selector))(function(v) {
              return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(dims.width)(dims.height), classed9("bubble-chart"), width15(dims.width), height15(dims.height)]))(function(svg2) {
                return bind71(appendTo2(svg2)(Group.value)([classed9("bubbles")]))(function(chartGroup) {
                  var hierarchy = hierarchyFromJSON_(jsonData);
                  var sortedHierarchy = treeSortForCirclePack_(hierarchy);
                  var packLayout0 = packLayout_(unit);
                  var packLayout1 = packSetSize_(packLayout0)(dims.width)(dims.height);
                  var packLayout = packSetPadding_(packLayout1)(2);
                  var packedRoot = runPackLayout_(packLayout)(sortedHierarchy);
                  var nodes = descendants_(packedRoot);
                  var drawBubble = function(node) {
                    var xPos = hNodeX_(node);
                    var yPos = hNodeY_(node);
                    var r = hNodeR_(node);
                    var depth = hNodeDepth_(node);
                    var name16 = getName(node);
                    return when8(r > 0)(bind71(appendTo2(chartGroup)(Circle.value)([cx3(xPos), cy3(yPos), radius8(r), fill8(depthColor(round2(depth))), fillOpacity4(0.7), strokeColor9("#ffffff"), strokeWidth8(1), classed9("bubble")]))(function() {
                      return discard112(when8(r > 20)(bind71(appendTo2(chartGroup)(Text2.value)([x17(xPos), y16(yPos), text13(name16), textAnchor5("middle"), fontSize3(min8(12)(r / 3)), fill8("#ffffff"), classed9("bubble-label")]))(function() {
                        return pure115(unit);
                      })))(function() {
                        return pure115(unit);
                      });
                    }));
                  };
                  return bind71(traverse_7(drawBubble)(nodes))(function() {
                    return pure115(unit);
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/D3.Viz.Icicle/index.js
  var classed10 = /* @__PURE__ */ classed(toAttrString);
  var width16 = /* @__PURE__ */ width8(toAttrNumber);
  var height16 = /* @__PURE__ */ height8(toAttrNumber);
  var x18 = /* @__PURE__ */ x(toAttrNumber);
  var y17 = /* @__PURE__ */ y(toAttrNumber);
  var fill9 = /* @__PURE__ */ fill(toAttrString);
  var fillOpacity5 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var strokeColor10 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth9 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var discard50 = /* @__PURE__ */ discard(discardUnit);
  var text14 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor6 = /* @__PURE__ */ textAnchor(toAttrString);
  var fontSize4 = /* @__PURE__ */ fontSize(toAttrNumber);
  var getName2 = function(node) {
    return node.data.name;
  };
  var depthColor2 = function(depth) {
    if (depth === 0) {
      return "#e74c3c";
    }
    ;
    if (depth === 1) {
      return "#3498db";
    }
    ;
    if (depth === 2) {
      return "#2ecc71";
    }
    ;
    if (depth === 3) {
      return "#f39c12";
    }
    ;
    if (depth === 4) {
      return "#9b59b6";
    }
    ;
    return "#95a5a6";
  };
  var draw5 = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard50(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var when8 = when(Applicative0);
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(treeJson) {
          return function(selector) {
            var dims = {
              width: 900,
              height: 600
            };
            return bind71(attach2(selector))(function(v) {
              return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(dims.width)(dims.height), classed10("icicle"), width16(dims.width), height16(dims.height)]))(function(svg2) {
                return bind71(appendTo2(svg2)(Group.value)([classed10("partitions")]))(function(chartGroup) {
                  var hierarchy = hierarchyFromJSON_(treeJson);
                  var sortedHierarchy = treeSortForPartition_(hierarchy);
                  var partitionLayout0 = partitionLayout_(unit);
                  var partitionLayout1 = partitionSetSize_(partitionLayout0)(dims.width)(dims.height);
                  var partitionLayout = partitionSetPadding_(partitionLayout1)(1);
                  var partitionRoot = runPartitionLayout_(partitionLayout)(sortedHierarchy);
                  var nodes = descendants_(partitionRoot);
                  var drawPartition = function(node) {
                    var x0 = hNodeX0_(node);
                    var y0 = hNodeY0_(node);
                    var x111 = hNodeX1_(node);
                    var y111 = hNodeY1_(node);
                    var partWidth = x111 - x0;
                    var partHeight = y111 - y0;
                    var depth = hNodeDepth_(node);
                    var name16 = getName2(node);
                    return when8(partWidth > 0 && partHeight > 0)(bind71(appendTo2(chartGroup)(Rect.value)([x18(x0), y17(y0), width16(partWidth), height16(partHeight), fill9(depthColor2(round2(depth))), fillOpacity5(0.7), strokeColor10("#ffffff"), strokeWidth9(1), classed10("partition")]))(function() {
                      return discard112(when8(partWidth > 60 && partHeight > 15)(bind71(appendTo2(chartGroup)(Text2.value)([x18(x0 + 4), y17(y0 + partHeight / 2 + 4), text14(name16), textAnchor6("start"), fontSize4(10), fill9("#ffffff"), classed10("partition-label")]))(function() {
                        return pure45(unit);
                      })))(function() {
                        return pure45(unit);
                      });
                    }));
                  };
                  return bind71(traverse_7(drawPartition)(nodes))(function() {
                    return pure45(unit);
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/D3.Viz.Treemap/index.js
  var classed11 = /* @__PURE__ */ classed(toAttrString);
  var width17 = /* @__PURE__ */ width8(toAttrNumber);
  var height17 = /* @__PURE__ */ height8(toAttrNumber);
  var x19 = /* @__PURE__ */ x(toAttrNumber);
  var y18 = /* @__PURE__ */ y(toAttrNumber);
  var fill10 = /* @__PURE__ */ fill(toAttrString);
  var fillOpacity6 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var strokeColor11 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth10 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var discard51 = /* @__PURE__ */ discard(discardUnit);
  var text15 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor7 = /* @__PURE__ */ textAnchor(toAttrString);
  var fontSize5 = /* @__PURE__ */ fontSize(toAttrNumber);
  var getName3 = function(node) {
    return node.data.name;
  };
  var depthColor3 = function(depth) {
    if (depth === 0) {
      return "#e74c3c";
    }
    ;
    if (depth === 1) {
      return "#3498db";
    }
    ;
    if (depth === 2) {
      return "#2ecc71";
    }
    ;
    if (depth === 3) {
      return "#f39c12";
    }
    ;
    if (depth === 4) {
      return "#9b59b6";
    }
    ;
    return "#95a5a6";
  };
  var draw6 = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard51(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var when8 = when(Applicative0);
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(treeJson) {
          return function(selector) {
            var dims = {
              width: 900,
              height: 600
            };
            return bind71(attach2(selector))(function(v) {
              return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(dims.width)(dims.height), classed11("treemap"), width17(dims.width), height17(dims.height)]))(function(svg2) {
                return bind71(appendTo2(svg2)(Group.value)([classed11("tiles")]))(function(chartGroup) {
                  var hierarchy = hierarchyFromJSON_(treeJson);
                  var sortedHierarchy = treeSortForTreeMap_(hierarchy);
                  var treemapLayout0 = treemapLayout_(unit);
                  var treemapLayout1 = treemapSetSize_(treemapLayout0)(dims.width)(dims.height);
                  var treemapLayout = treemapSetPadding_(treemapLayout1)(1);
                  var treemapRoot = runTreemapLayout_(treemapLayout)(sortedHierarchy);
                  var nodes = descendants_(treemapRoot);
                  var drawTile = function(node) {
                    var x0 = hNodeX0_(node);
                    var y0 = hNodeY0_(node);
                    var x111 = hNodeX1_(node);
                    var y111 = hNodeY1_(node);
                    var tileWidth = x111 - x0;
                    var tileHeight = y111 - y0;
                    var depth = hNodeDepth_(node);
                    var name16 = getName3(node);
                    return when8(tileWidth > 0 && tileHeight > 0)(bind71(appendTo2(chartGroup)(Rect.value)([x19(x0), y18(y0), width17(tileWidth), height17(tileHeight), fill10(depthColor3(round2(depth))), fillOpacity6(0.6), strokeColor11("#ffffff"), strokeWidth10(1), classed11("tile")]))(function() {
                      return discard112(when8(tileWidth > 30 && tileHeight > 20)(bind71(appendTo2(chartGroup)(Text2.value)([x19(x0 + 2), y18(y0 + 12), text15(name16), textAnchor7("start"), fontSize5(10), fill10("#ffffff"), classed11("tile-label")]))(function() {
                        return pure45(unit);
                      })))(function() {
                        return pure45(unit);
                      });
                    }));
                  };
                  return bind71(traverse_7(drawTile)(nodes))(function() {
                    return pure45(unit);
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/D3.Viz.Hierarchies/index.js
  var liftEffect41 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var draw7 = /* @__PURE__ */ draw6(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var draw12 = /* @__PURE__ */ draw5(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var draw22 = /* @__PURE__ */ draw4(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var drawTreemap = function(treeJson) {
    return function(selector) {
      return liftEffect41(function __do4() {
        var v = runD3M(draw7(treeJson)(selector))();
        return unit;
      });
    };
  };
  var drawIcicle = function(treeJson) {
    return function(selector) {
      return liftEffect41(function __do4() {
        var v = runD3M(draw12(treeJson)(selector))();
        return unit;
      });
    };
  };
  var drawCirclePacking = function(treeJson) {
    return function(selector) {
      return liftEffect41(function __do4() {
        var v = runD3M(draw22(treeJson)(selector))();
        return unit;
      });
    };
  };

  // output/D3.Viz.MetaTree.Unsafe/index.js
  var unboxD3TreeNode = function(v) {
    return v;
  };
  var coerceToTreeNode = unsafeCoerce2;

  // output/D3.Viz.Tree.Draw/index.js
  var eq15 = /* @__PURE__ */ eq(eqTreeLayout);
  var append18 = /* @__PURE__ */ append(semigroupArray);
  var classed13 = /* @__PURE__ */ classed(toAttrString);
  var width18 = /* @__PURE__ */ width8(toAttrNumber);
  var height18 = /* @__PURE__ */ height8(toAttrNumber);
  var fontFamily2 = /* @__PURE__ */ fontFamily(toAttrString);
  var fontSize6 = /* @__PURE__ */ fontSize(toAttrNumber);
  var discard52 = /* @__PURE__ */ discard(discardUnit);
  var strokeWidth11 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var strokeColor12 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeOpacity5 = /* @__PURE__ */ strokeOpacity(toAttrNumber);
  var fill11 = /* @__PURE__ */ fill(toAttrString);
  var fill14 = /* @__PURE__ */ fill(toAttrStringFn);
  var radius9 = /* @__PURE__ */ radius(toAttrNumber);
  var dy3 = /* @__PURE__ */ dy(toAttrNumber);
  var x20 = /* @__PURE__ */ x(toAttrNumberFn);
  var textAnchor8 = /* @__PURE__ */ textAnchor(toAttrStringFn);
  var text16 = /* @__PURE__ */ text6(toAttrStringFn);
  var treeDatum_ = {
    depth: function($50) {
      return (function(v) {
        return v.depth;
      })(unboxD3TreeNode(coerceToTreeNode($50)));
    },
    height: function($51) {
      return (function(v) {
        return v.height;
      })(unboxD3TreeNode(coerceToTreeNode($51)));
    },
    x: function($52) {
      return (function(v) {
        return v.x;
      })(unboxD3TreeNode(coerceToTreeNode($52)));
    },
    y: function($53) {
      return (function(v) {
        return v.y;
      })(unboxD3TreeNode(coerceToTreeNode($53)));
    },
    name: function($54) {
      return (function(v) {
        return v.data.name;
      })(unboxD3TreeNode(coerceToTreeNode($54)));
    },
    value: function($55) {
      return getHierarchyValue_(coerceToTreeNode($55));
    },
    hasChildren: function($56) {
      return hasChildren_(coerceToTreeNode($56));
    },
    textAnchor: function(l) {
      return function(d9) {
        if (l instanceof Radial) {
          var $42 = treeDatum_.hasChildren(d9) === treeDatum_.x(d9) < pi;
          if ($42) {
            return "start";
          }
          ;
          return "end";
        }
        ;
        var $43 = treeDatum_.hasChildren(d9);
        if ($43) {
          return "start";
        }
        ;
        return "end";
      };
    },
    textX: function(l) {
      return function(d9) {
        if (l instanceof Radial) {
          var $45 = treeDatum_.hasChildren(d9) === treeDatum_.x(d9) < pi;
          if ($45) {
            return 6;
          }
          ;
          return -6;
        }
        ;
        var $46 = treeDatum_.hasChildren(d9);
        if ($46) {
          return 6;
        }
        ;
        return -6;
      };
    },
    onRHS: function(l) {
      return function(d9) {
        var $47 = eq15(l)(Radial.value) && treeDatum_.x(d9) >= pi;
        if ($47) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var draw8 = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard52(dictBind);
    return function(dictSelectionM) {
      var attach2 = attach(dictSelectionM);
      var appendTo2 = appendTo(dictSelectionM);
      var simpleJoin2 = simpleJoin(dictSelectionM);
      var setAttributes2 = setAttributes(dictSelectionM);
      var pure45 = pure(dictSelectionM.Monad0().Applicative0());
      return function(config) {
        return function(tree2) {
          return bind71(attach2(config.selector))(function(root3) {
            return bind71(appendTo2(root3)(Svg.value)(append18(config.viewbox)([classed13("tree"), width18(config.svg.width), height18(config.svg.height)])))(function(svg2) {
              return bind71(appendTo2(svg2)(Group.value)([fontFamily2("sans-serif"), fontSize6(10)]))(function(container) {
                return bind71(appendTo2(container)(Group.value)([classed13("links")]))(function(links) {
                  return bind71(appendTo2(container)(Group.value)([classed13("nodes")]))(function(nodes) {
                    return bind71(simpleJoin2(links)(Path.value)(links_(tree2))(keyIsID_))(function(theLinks_) {
                      return discard112(setAttributes2(theLinks_)([strokeWidth11(1.5), strokeColor12(config.color), strokeOpacity5(0.4), fill11("none"), config.linkPath]))(function() {
                        return bind71(simpleJoin2(nodes)(Group.value)(descendants_(tree2))(keyIsID_))(function(nodeJoin_) {
                          return discard112(setAttributes2(nodeJoin_)(config.nodeTransform))(function() {
                            return bind71(appendTo2(nodeJoin_)(Circle.value)([fill14(function(v) {
                              var $49 = treeDatum_.hasChildren(v);
                              if ($49) {
                                return "#999";
                              }
                              ;
                              return "#555";
                            }), radius9(2.5), strokeColor12("white")]))(function(theNodes) {
                              return bind71(appendTo2(nodeJoin_)(Text2.value)([dy3(0.31), x20(treeDatum_.textX(config.layout)), textAnchor8(treeDatum_.textAnchor(config.layout)), text16(treeDatum_.name), fill11(config.color)]))(function(theLabels) {
                                return pure45(svg2);
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        };
      };
    };
  };

  // output/PSD3.Internal.Hierarchical/foreign.js
  function readJSON_(filecontents) {
    return JSON.parse(filecontents);
  }

  // output/PSD3.Internal.Hierarchical/index.js
  var toAttr3 = /* @__PURE__ */ toAttr(toAttrStringFn);
  var pure33 = /* @__PURE__ */ pure(applicativeAff);
  var bind57 = /* @__PURE__ */ bind(bindAff);
  var rmap4 = /* @__PURE__ */ rmap(bifunctorEither);
  var verticalLink = /* @__PURE__ */ (function() {
    return new AttrT(new AttributeSetter("d", toAttr3(linkVertical_)));
  })();
  var verticalClusterLink = function(xOffset) {
    return new AttrT(new AttributeSetter("d", toAttr3(linkClusterVertical_(xOffset))));
  };
  var radialSeparation = function(a2, b2) {
    var $8 = sharesParent_(a2)(b2);
    if ($8) {
      return 1;
    }
    ;
    return 2 / hNodeDepth_(a2);
  };
  var radialLink = function(angleFn) {
    return function(radius_Fn) {
      var radialFn = linkRadial_(angleFn)(radius_Fn);
      return new AttrT(new AttributeSetter("d", toAttr3(radialFn)));
    };
  };
  var makeModel = function(dictBind) {
    return function(dictMonadEffect) {
      return function(treeType) {
        return function(treeLayout) {
          return function(json2) {
            var treeLayoutFn = getLayout(treeType);
            var svgConfig = {
              width: 650,
              height: 650
            };
            return pure33({
              json: json2,
              treeType,
              treeLayout,
              treeLayoutFn,
              svgConfig
            });
          };
        };
      };
    };
  };
  var horizontalLink = /* @__PURE__ */ (function() {
    return new AttrT(new AttributeSetter("d", toAttr3(linkHorizontal_)));
  })();
  var horizontalClusterLink = function(yOffset) {
    return new AttrT(new AttributeSetter("d", toAttr3(linkClusterHorizontal_(yOffset))));
  };
  var getTreeViaAJAX = function(url) {
    return bind57(get3(string)(url))(function(result) {
      return pure33(rmap4(function(v) {
        return readJSON_(v.body);
      })(result));
    });
  };

  // output/PSD3.Interpreter.MetaTree/foreign.js
  prune = function(node) {
    if (node.children.length == 0) {
      delete node.children;
    } else {
      node.children.forEach(
        (child) => prune(child)
      );
    }
    ;
  };

  // output/PSD3.Interpreter.String/foreign.js
  function formatElement(element3) {
    const el = element3.toString().replace(/"/g, "");
    return `"${el.toLowerCase()}"`;
  }
  function formatSelector(selector) {
    const s = selector.toString();
    return s.startsWith('"') || s.startsWith("'") ? s : `"${s}"`;
  }
  function formatValue(value19) {
    if (typeof value19 === "function" || value19.toString().includes("=>") || value19.toString().includes("function")) {
      return value19.toString();
    }
    if (!isNaN(value19) && value19 !== "") {
      return value19;
    }
    const str2 = value19.toString();
    if (str2.startsWith('"') || str2.startsWith("'")) {
      return str2;
    }
    return `"${str2}"`;
  }
  function showSelectAllInDOM_(selector) {
    return `d3.select(${formatSelector(selector)})`;
  }
  function showSelectAll_(selector) {
    return (selection2) => {
      return `${selection2}.selectAll(${formatSelector(selector)})`;
    };
  }
  function showAddTransition_(selection2) {
    return (transition2) => {
      let result = `${selection2}.transition()`;
      if (transition2.duration && transition2.duration != 0) {
        result += `
  .duration(${transition2.duration})`;
      }
      if (transition2.delay && transition2.delay != 0) {
        result += `
  .delay(${transition2.delay})`;
      }
      if (transition2.name && transition2.name !== "") {
        result = `${selection2}.transition("${transition2.name}")`;
      }
      return result;
    };
  }
  function showRemoveSelection_(selection2) {
    return `${selection2}.remove()`;
  }
  function showAppend_(element3) {
    return (selection2) => {
      return `${selection2}.append(${formatElement(element3)})`;
    };
  }
  function showData_(data) {
    return (selection2) => {
      const dataStr = Array.isArray(data) ? `[/* ${data.length} items */]` : data.toString();
      return `${selection2}.data(${dataStr})`;
    };
  }
  function showSetAttr_(name16) {
    return (value19) => (selection2) => {
      return `${selection2}.attr("${name16}", ${formatValue(value19)})`;
    };
  }
  function showSetText_(value19) {
    return (selection2) => {
      return `${selection2}.text(${formatValue(value19)})`;
    };
  }
  function showSetHTML_(value19) {
    return (selection2) => {
      return `${selection2}.html(${formatValue(value19)})`;
    };
  }
  function showSetProperty_(value19) {
    return (selection2) => {
      return `${selection2}.property(${formatValue(value19)})`;
    };
  }
  function showSetOrdering_(ordering) {
    return (selection2) => {
      return `${selection2}.${ordering}()`;
    };
  }

  // output/PSD3.Interpreter.String/index.js
  var show26 = /* @__PURE__ */ show(showOrderingAttribute);
  var show111 = /* @__PURE__ */ show(showMouseEvent);
  var show27 = /* @__PURE__ */ show(showString);
  var show35 = /* @__PURE__ */ show(showElement);
  var trimSelectionPrefix = function(str2) {
    var v = indexOf2(".")(str2);
    if (v instanceof Just) {
      return drop4(v.value0 + 1 | 0)(str2);
    }
    ;
    if (v instanceof Nothing) {
      return str2;
    }
    ;
    throw new Error("Failed pattern match at PSD3.Interpreter.String (line 118, column 3 - line 120, column 19): " + [v.constructor.name]);
  };
  var runPrinter = function(v) {
    return function(initialString) {
      return runStateT(v)(initialString);
    };
  };
  var monadStateD3PrinterM = /* @__PURE__ */ monadStateStateT(monadEffect);
  var modify_38 = /* @__PURE__ */ modify_(monadStateD3PrinterM);
  var monadD3PrinterM = /* @__PURE__ */ monadStateT(monadEffect);
  var bindD3PrinterM = /* @__PURE__ */ bindStateT(monadEffect);
  var discard53 = /* @__PURE__ */ discard(discardUnit)(bindD3PrinterM);
  var applySelectionAttributeString = function(selection2) {
    return function(v) {
      if (v instanceof AttrT) {
        return trimSelectionPrefix(showSetAttr_(v.value0.value0)(unboxAttr(v.value0.value1))(selection2));
      }
      ;
      if (v instanceof TextT) {
        return trimSelectionPrefix(showSetText_(unboxAttr(v.value0.value1))(selection2));
      }
      ;
      if (v instanceof PropertyT) {
        return trimSelectionPrefix(showSetProperty_(unboxAttr(v.value0.value1))(selection2));
      }
      ;
      if (v instanceof HTMLT) {
        return trimSelectionPrefix(showSetHTML_(unboxAttr(v.value0.value1))(selection2));
      }
      ;
      if (v instanceof RemoveT) {
        return trimSelectionPrefix(showRemoveSelection_(selection2));
      }
      ;
      if (v instanceof OrderingT) {
        return trimSelectionPrefix(showSetOrdering_(show26(v.value0))(selection2));
      }
      ;
      if (v instanceof TransitionT) {
        var tString = showAddTransition_(selection2)(v.value1);
        var trimmed = trimSelectionPrefix(tString);
        return foldl2(function(acc) {
          return function(attr3) {
            return acc + ("\n  ." + trimSelectionPrefix(applySelectionAttributeString(tString)(attr3)));
          };
        })(trimmed)(v.value0);
      }
      ;
      if (v instanceof OnT) {
        return "on(" + (show111(v.value0) + ", function(d) { /* event handler */ })");
      }
      ;
      if (v instanceof OnT$prime) {
        return "on(" + (show111(v.value0) + ", function(d) { /* event handler */ })");
      }
      ;
      throw new Error("Failed pattern match at PSD3.Interpreter.String (line 94, column 3 - line 113, column 70): " + [v.constructor.name]);
    };
  };
  var applicativeD3PrinterM = /* @__PURE__ */ applicativeStateT(monadEffect);
  var pure34 = /* @__PURE__ */ pure(applicativeD3PrinterM);
  var d3Tagless = {
    attach: function(selector) {
      var code2 = showSelectAllInDOM_(selector);
      return discard53(modify_38(function(s) {
        return s + code2;
      }))(function() {
        return pure34(code2);
      });
    },
    selectUnder: function(selection2) {
      return function(selector) {
        var code2 = showSelectAll_(selector)(selection2);
        return discard53(modify_38(function(s) {
          return s + ("\n  ." + code2);
        }))(function() {
          return pure34(code2);
        });
      };
    },
    appendTo: function(selection2) {
      return function(element3) {
        return function(attributes) {
          var appendCode = showAppend_(element3)(selection2);
          var attributeString = foldl2(applySelectionAttributeString)(appendCode)(attributes);
          return discard53(modify_38(function(s) {
            return s + ("\n\nconst /* TODO: varName */ = " + (appendCode + (attributeString + ";")));
          }))(function() {
            return pure34(appendCode);
          });
        };
      };
    },
    filterSelection: function(selection2) {
      return function(selector) {
        var code2 = selection2 + (".filter(" + (show27(selector) + ")"));
        return discard53(modify_38(function(s) {
          return s + ("\n  ." + code2);
        }))(function() {
          return pure34(code2);
        });
      };
    },
    mergeSelections: function(a2) {
      return function(b2) {
        var code2 = a2 + (".merge(" + (b2 + ")"));
        return discard53(modify_38(function(s) {
          return s + ("\n  ." + code2);
        }))(function() {
          return pure34(code2);
        });
      };
    },
    setAttributes: function(selection2) {
      return function(attributes) {
        var attributeString = foldl2(function(acc) {
          return function(attr3) {
            return acc + ("\n  ." + applySelectionAttributeString(selection2)(attr3));
          };
        })("")(attributes);
        return discard53(modify_38(function(s) {
          return s + attributeString;
        }))(function() {
          return pure34(unit);
        });
      };
    },
    on: function(v) {
      return function(v1) {
        if (v1 instanceof Drag) {
          return discard53(modify_38(function(s) {
            return s + "\n  .call(d3.drag())";
          }))(function() {
            return pure34(unit);
          });
        }
        ;
        if (v1 instanceof Zoom) {
          return discard53(modify_38(function(s) {
            return s + "\n  .call(d3.zoom())";
          }))(function() {
            return pure34(unit);
          });
        }
        ;
        throw new Error("Failed pattern match at PSD3.Interpreter.String (line 33, column 1 - line 88, column 64): " + [v.constructor.name, v1.constructor.name]);
      };
    },
    openSelection: function(selection2) {
      return function(selector) {
        var code2 = showSelectAll_(selector)(selection2);
        return discard53(modify_38(function(s) {
          return s + ("\n\nconst /* TODO: varName */ = " + (code2 + ";"));
        }))(function() {
          return pure34(code2);
        });
      };
    },
    simpleJoin: function(selection2) {
      return function(e) {
        return function(ds) {
          return function(k) {
            var dataCode = showData_(ds)(selection2);
            var joinCode = dataCode + ("\n  .join(" + (show35(e) + ")"));
            return discard53(modify_38(function(s) {
              return s + ("\n\nconst /* TODO: varName */ = " + (joinCode + ";"));
            }))(function() {
              return pure34(joinCode);
            });
          };
        };
      };
    },
    updateJoin: function(selection2) {
      return function(e) {
        return function(ds) {
          return function(k) {
            var dataCode = showData_(ds)(selection2);
            var enterCode = dataCode + ("\n  .enter().append(" + (show35(e) + ")"));
            var exitCode = dataCode + "\n  .exit().remove()";
            return discard53(modify_38(function(s) {
              return s + ("\n\n// Update pattern\nconst update = " + (dataCode + (";\nconst enter = " + (enterCode + (";\nconst exit = " + (exitCode + ";"))))));
            }))(function() {
              return pure34({
                enter: enterCode,
                exit: exitCode,
                update: dataCode
              });
            });
          };
        };
      };
    },
    Monad0: function() {
      return monadD3PrinterM;
    }
  };

  // output/D3.Viz.Tree.Configure/index.js
  var show28 = /* @__PURE__ */ show(showNumber);
  var eq10 = /* @__PURE__ */ eq(eqTreeLayout);
  var liftEffect42 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var rotateRadialLabels = function(d9) {
    return "rotate(" + ((function() {
      var $27 = treeDatum_.onRHS(Radial.value)(d9);
      if ($27) {
        return "180";
      }
      ;
      return "0";
    })() + ")");
  };
  var radialTranslate = function(d9) {
    return "translate(" + (show28(treeDatum_.y(d9)) + ",0)");
  };
  var radialRotate = function(x30) {
    return show28(x30 * 180 / pi - 90);
  };
  var radialRotateCommon = function(d9) {
    return "rotate(" + (radialRotate(treeDatum_.x(d9)) + ")");
  };
  var positionXYreflected = function(d9) {
    return "translate(" + (show28(treeDatum_.y(d9)) + ("," + (show28(treeDatum_.x(d9)) + ")")));
  };
  var positionXY = function(d9) {
    return "translate(" + (show28(treeDatum_.x(d9)) + ("," + (show28(treeDatum_.y(d9)) + ")")));
  };
  var configureAndRunScript = function(dictBind) {
    var draw21 = draw8(dictBind);
    return function(dictSelectionM) {
      var draw110 = draw21(dictSelectionM);
      return function(v) {
        return function(model) {
          return function(selector) {
            var svg2 = {
              width: v.value0,
              height: v.value1
            };
            var root3 = hierarchyFromJSON_(model.json);
            var numberOfLevels = hNodeHeight_(root3) + 1;
            var spacing = (function() {
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Horizontal) {
                return {
                  interChild: 10,
                  interLevel: svg2.width / numberOfLevels
                };
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Vertical) {
                return {
                  interChild: 10,
                  interLevel: svg2.height / numberOfLevels
                };
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Radial) {
                return {
                  interChild: 0,
                  interLevel: 0
                };
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Horizontal) {
                return {
                  interChild: 10,
                  interLevel: svg2.width / numberOfLevels
                };
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Vertical) {
                return {
                  interChild: 10,
                  interLevel: svg2.height / numberOfLevels
                };
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Radial) {
                return {
                  interChild: 0,
                  interLevel: 0
                };
              }
              ;
              throw new Error("Failed pattern match at D3.Viz.Tree.Configure (line 67, column 7 - line 74, column 71): " + [model.treeType.constructor.name, model.treeLayout.constructor.name]);
            })();
            var layout = (function() {
              var $33 = eq10(model.treeLayout)(Radial.value);
              if ($33) {
                return treeSetSeparation_(treeSetSize_(getLayout(model.treeType))([2 * pi, svg2.width / 2 - 100]))(radialSeparation);
              }
              ;
              return treeSetNodeSize_(getLayout(model.treeType))([spacing.interChild, spacing.interLevel]);
            })();
            var laidOutRoot_ = runLayoutFn_(layout)(root3);
            var v1 = treeMinMax_(laidOutRoot_);
            var yExtent = abs(v1.yMax - v1.yMin);
            var xExtent = abs(v1.xMax - v1.xMin);
            var vtreeYOffset = abs(v.value1 - yExtent) / 2;
            var radialExtent = 2 * v1.yMax;
            var pad = function(n) {
              return n * 1.2;
            };
            var nodeTransform = (function() {
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Horizontal) {
                return [transform([positionXYreflected])];
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Vertical) {
                return [transform([positionXY])];
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Radial) {
                return [transform([radialRotateCommon, radialTranslate, rotateRadialLabels])];
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Horizontal) {
                return [transform([positionXYreflected])];
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Vertical) {
                return [transform([positionXY])];
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Radial) {
                return [transform([radialRotateCommon, radialTranslate, rotateRadialLabels])];
              }
              ;
              throw new Error("Failed pattern match at D3.Viz.Tree.Configure (line 117, column 7 - line 124, column 108): " + [model.treeType.constructor.name, model.treeLayout.constructor.name]);
            })();
            var linkPath = (function() {
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Horizontal) {
                return horizontalClusterLink(spacing.interLevel);
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Vertical) {
                return verticalClusterLink(spacing.interLevel);
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Radial) {
                return radialLink(treeDatum_.x)(treeDatum_.y);
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Horizontal) {
                return horizontalLink;
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Vertical) {
                return verticalLink;
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Radial) {
                return radialLink(treeDatum_.x)(treeDatum_.y);
              }
              ;
              throw new Error("Failed pattern match at D3.Viz.Tree.Configure (line 107, column 7 - line 114, column 71): " + [model.treeType.constructor.name, model.treeLayout.constructor.name]);
            })();
            var viewbox = (function() {
              if (model.treeLayout instanceof Vertical) {
                return [viewBox(v1.xMin)(-vtreeYOffset)(pad(xExtent))(pad(yExtent)), preserveAspectRatio(new AspectRatio(XMid.value, YMid.value, Meet.value))];
              }
              ;
              if (model.treeLayout instanceof Horizontal) {
                return [viewBox(-xExtent * 0.1)(pad(v1.xMin))(pad(yExtent))(pad(xExtent)), preserveAspectRatio(new AspectRatio(XMin.value, YMid.value, Meet.value))];
              }
              ;
              if (model.treeLayout instanceof Radial) {
                return [viewBox(-v1.yMax * 1.2)(-v1.yMax * 1.2)(radialExtent * 1.2)(radialExtent * 1.2), preserveAspectRatio(new AspectRatio(XMin.value, YMin.value, Meet.value))];
              }
              ;
              throw new Error("Failed pattern match at D3.Viz.Tree.Configure (line 98, column 7 - line 104, column 78): " + [model.treeType.constructor.name, model.treeLayout.constructor.name]);
            })();
            var color2 = d3SchemeCategory10N_((function() {
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Horizontal) {
                return 1;
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Vertical) {
                return 2;
              }
              ;
              if (model.treeType instanceof Dendrogram && model.treeLayout instanceof Radial) {
                return 3;
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Horizontal) {
                return 4;
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Vertical) {
                return 5;
              }
              ;
              if (model.treeType instanceof TidyTree && model.treeLayout instanceof Radial) {
                return 6;
              }
              ;
              throw new Error("Failed pattern match at D3.Viz.Tree.Configure (line 127, column 7 - line 134, column 38): " + [model.treeType.constructor.name, model.treeLayout.constructor.name]);
            })());
            return draw110({
              spacing,
              viewbox,
              selector,
              linkPath,
              nodeTransform,
              color: color2,
              layout: model.treeLayout,
              svg: svg2
            })(laidOutRoot_);
          };
        };
      };
    };
  };
  var configureAndRunScript1 = /* @__PURE__ */ configureAndRunScript(bindD3M)(d3TaglessD3M);
  var drawTree = function(treeModel) {
    return function(selector) {
      return liftEffect42(function __do4() {
        var widthHeight = getWindowWidthHeight();
        var v = runD3M(configureAndRunScript1(widthHeight)(treeModel)(selector))();
        return unit;
      });
    };
  };

  // output/PSD3.Internal.Utility/index.js
  var spy5 = /* @__PURE__ */ spy();
  var removeExistingSVG = function(dictSelectionM) {
    var pure45 = pure(dictSelectionM.Monad0().Applicative0());
    return function(rootSelector) {
      var root3 = d3SelectFirstInDOM_(rootSelector);
      var previous = d3SelectionSelect_(rootSelector + " svg")(root3);
      return pure45((function() {
        var v = d3SelectionIsEmpty_(previous);
        if (v) {
          return spy5("no previous SVG to remove")(previous);
        }
        ;
        if (!v) {
          return spy5("removed previous SVG")(d3RemoveSelection_(previous));
        }
        ;
        throw new Error("Failed pattern match at PSD3.Internal.Utility (line 18, column 5 - line 20, column 72): " + [v.constructor.name]);
      })());
    };
  };

  // output/PSD3.Understanding.Hierarchies/index.js
  var append19 = /* @__PURE__ */ append(semigroupArray);
  var type_22 = /* @__PURE__ */ type_17(isPropButtonType);
  var bind58 = /* @__PURE__ */ bind(bindHalogenM);
  var liftEffect43 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var removeExistingSVG2 = /* @__PURE__ */ removeExistingSVG(d3TaglessD3M);
  var liftAff33 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var pure35 = /* @__PURE__ */ pure(applicativeHalogenM);
  var makeModel2 = /* @__PURE__ */ makeModel(bindAff)(monadEffectAff);
  var discard54 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_39 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var get10 = /* @__PURE__ */ get(monadStateHalogenM);
  var slot_10 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "examplesNav";
    }
  })(ordUnit);
  var HorizontalTidy = /* @__PURE__ */ (function() {
    function HorizontalTidy2() {
    }
    ;
    HorizontalTidy2.value = new HorizontalTidy2();
    return HorizontalTidy2;
  })();
  var HorizontalDendrogram = /* @__PURE__ */ (function() {
    function HorizontalDendrogram2() {
    }
    ;
    HorizontalDendrogram2.value = new HorizontalDendrogram2();
    return HorizontalDendrogram2;
  })();
  var VerticalTidy = /* @__PURE__ */ (function() {
    function VerticalTidy2() {
    }
    ;
    VerticalTidy2.value = new VerticalTidy2();
    return VerticalTidy2;
  })();
  var VerticalDendrogram = /* @__PURE__ */ (function() {
    function VerticalDendrogram2() {
    }
    ;
    VerticalDendrogram2.value = new VerticalDendrogram2();
    return VerticalDendrogram2;
  })();
  var RadialTidy = /* @__PURE__ */ (function() {
    function RadialTidy2() {
    }
    ;
    RadialTidy2.value = new RadialTidy2();
    return RadialTidy2;
  })();
  var RadialDendrogram = /* @__PURE__ */ (function() {
    function RadialDendrogram2() {
    }
    ;
    RadialDendrogram2.value = new RadialDendrogram2();
    return RadialDendrogram2;
  })();
  var Icicle = /* @__PURE__ */ (function() {
    function Icicle2() {
    }
    ;
    Icicle2.value = new Icicle2();
    return Icicle2;
  })();
  var CirclePacking = /* @__PURE__ */ (function() {
    function CirclePacking2() {
    }
    ;
    CirclePacking2.value = new CirclePacking2();
    return CirclePacking2;
  })();
  var Treemap = /* @__PURE__ */ (function() {
    function Treemap2() {
    }
    ;
    Treemap2.value = new Treemap2();
    return Treemap2;
  })();
  var Initialize42 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SelectLayout = /* @__PURE__ */ (function() {
    function SelectLayout2(value0) {
      this.value0 = value0;
    }
    ;
    SelectLayout2.create = function(value0) {
      return new SelectLayout2(value0);
    };
    return SelectLayout2;
  })();
  var showHierarchyLayout = {
    show: function(v) {
      if (v instanceof HorizontalTidy) {
        return "Horizontal Tidy Tree";
      }
      ;
      if (v instanceof HorizontalDendrogram) {
        return "Horizontal Dendrogram";
      }
      ;
      if (v instanceof VerticalTidy) {
        return "Vertical Tidy Tree";
      }
      ;
      if (v instanceof VerticalDendrogram) {
        return "Vertical Dendrogram";
      }
      ;
      if (v instanceof RadialTidy) {
        return "Radial Tidy Tree";
      }
      ;
      if (v instanceof RadialDendrogram) {
        return "Radial Dendrogram";
      }
      ;
      if (v instanceof Icicle) {
        return "Icicle";
      }
      ;
      if (v instanceof CirclePacking) {
        return "Circle Packing";
      }
      ;
      if (v instanceof Treemap) {
        return "Treemap";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Understanding.Hierarchies (line 45, column 1 - line 54, column 27): " + [v.constructor.name]);
    }
  };
  var show29 = /* @__PURE__ */ show(showHierarchyLayout);
  var renderLayoutPlaceholder = function(v) {
    return div_([]);
  };
  var layoutDescription = function(v) {
    if (v instanceof HorizontalTidy) {
      return "Node-link diagram: Compact tidy tree with left-to-right orientation. Root on the left, efficiently uses space.";
    }
    ;
    if (v instanceof HorizontalDendrogram) {
      return "Node-link diagram: Horizontal dendrogram with all leaves aligned at the same level on the right.";
    }
    ;
    if (v instanceof VerticalTidy) {
      return "Node-link diagram: Compact tidy tree with top-down orientation. Common in organizational charts.";
    }
    ;
    if (v instanceof VerticalDendrogram) {
      return "Node-link diagram: Vertical dendrogram with all leaves aligned at the same level at the bottom.";
    }
    ;
    if (v instanceof RadialTidy) {
      return "Node-link diagram: Compact tidy tree in polar coordinates, emanating from center. Space-efficient for large hierarchies.";
    }
    ;
    if (v instanceof RadialDendrogram) {
      return "Node-link diagram: Radial dendrogram with all leaves at equal distance from center.";
    }
    ;
    if (v instanceof Icicle) {
      return "Adjacency diagram: Rectangular subdivisions showing hierarchy through relative placement. Area encodes quantitative values.";
    }
    ;
    if (v instanceof CirclePacking) {
      return "Enclosure diagram: Tightly nested circles showing hierarchy through containment. Area encodes values, readily shows topology.";
    }
    ;
    if (v instanceof Treemap) {
      return "Enclosure diagram: Space-efficient rectangular subdivisions. Area is proportional to value, shows hierarchy through nesting.";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Understanding.Hierarchies (line 57, column 21 - line 66, column 140): " + [v.constructor.name]);
  };
  var eqHierarchyLayout = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof HorizontalTidy && y28 instanceof HorizontalTidy) {
          return true;
        }
        ;
        if (x30 instanceof HorizontalDendrogram && y28 instanceof HorizontalDendrogram) {
          return true;
        }
        ;
        if (x30 instanceof VerticalTidy && y28 instanceof VerticalTidy) {
          return true;
        }
        ;
        if (x30 instanceof VerticalDendrogram && y28 instanceof VerticalDendrogram) {
          return true;
        }
        ;
        if (x30 instanceof RadialTidy && y28 instanceof RadialTidy) {
          return true;
        }
        ;
        if (x30 instanceof RadialDendrogram && y28 instanceof RadialDendrogram) {
          return true;
        }
        ;
        if (x30 instanceof Icicle && y28 instanceof Icicle) {
          return true;
        }
        ;
        if (x30 instanceof CirclePacking && y28 instanceof CirclePacking) {
          return true;
        }
        ;
        if (x30 instanceof Treemap && y28 instanceof Treemap) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq11 = /* @__PURE__ */ eq(eqHierarchyLayout);
  var renderLayoutOption = function(layout) {
    return function(label5) {
      return function(currentLayout) {
        return button([classes(append19(["control-panel__option"])((function() {
          var $41 = eq11(layout)(currentLayout);
          if ($41) {
            return ["control-panel__option--active"];
          }
          ;
          return [];
        })())), onClick($$const(new SelectLayout(layout))), type_22(ButtonButton.value)])([text5(label5)]);
      };
    };
  };
  var drawLayoutViz = function(layout) {
    return function(model) {
      if (layout instanceof HorizontalTidy) {
        var updated = {
          json: model.json,
          svgConfig: model.svgConfig,
          treeLayoutFn: model.treeLayoutFn,
          treeLayout: Horizontal.value,
          treeType: TidyTree.value
        };
        return drawTree(updated)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof HorizontalDendrogram) {
        var updated = {
          json: model.json,
          svgConfig: model.svgConfig,
          treeLayoutFn: model.treeLayoutFn,
          treeLayout: Horizontal.value,
          treeType: Dendrogram.value
        };
        return drawTree(updated)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof VerticalTidy) {
        var updated = {
          json: model.json,
          svgConfig: model.svgConfig,
          treeLayoutFn: model.treeLayoutFn,
          treeLayout: Vertical.value,
          treeType: TidyTree.value
        };
        return drawTree(updated)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof VerticalDendrogram) {
        var updated = {
          json: model.json,
          svgConfig: model.svgConfig,
          treeLayoutFn: model.treeLayoutFn,
          treeLayout: Vertical.value,
          treeType: Dendrogram.value
        };
        return drawTree(updated)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof RadialTidy) {
        var updated = {
          json: model.json,
          svgConfig: model.svgConfig,
          treeLayoutFn: model.treeLayoutFn,
          treeLayout: Radial.value,
          treeType: TidyTree.value
        };
        return drawTree(updated)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof RadialDendrogram) {
        var updated = {
          json: model.json,
          svgConfig: model.svgConfig,
          treeLayoutFn: model.treeLayoutFn,
          treeLayout: Radial.value,
          treeType: Dendrogram.value
        };
        return drawTree(updated)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof Icicle) {
        return drawIcicle(model.json)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof CirclePacking) {
        return drawCirclePacking(model.json)("div.hierarchies-viz");
      }
      ;
      if (layout instanceof Treemap) {
        return drawTreemap(model.json)("div.hierarchies-viz");
      }
      ;
      throw new Error("Failed pattern match at PSD3.Understanding.Hierarchies (line 274, column 6 - line 298, column 47): " + [layout.constructor.name]);
    };
  };
  var handleAction41 = function(v) {
    if (v instanceof Initialize42) {
      return bind58(liftEffect43(eval_D3M(removeExistingSVG2("div.hierarchies-viz"))))(function() {
        return bind58(liftAff33(getTreeViaAJAX("./data/flare-2.json")))(function(treeJSON) {
          if (treeJSON instanceof Left) {
            return pure35(unit);
          }
          ;
          if (treeJSON instanceof Right) {
            return bind58(liftAff33(makeModel2(TidyTree.value)(Horizontal.value)(treeJSON.value0)))(function(model) {
              return bind58(liftAff33(drawLayoutViz(HorizontalTidy.value)(model)))(function() {
                return discard54(modify_39(function(st) {
                  var $46 = {};
                  for (var $47 in st) {
                    if ({}.hasOwnProperty.call(st, $47)) {
                      $46[$47] = st[$47];
                    }
                    ;
                  }
                  ;
                  $46.tree = new Just(model);
                  return $46;
                }))(function() {
                  return pure35(unit);
                });
              });
            });
          }
          ;
          throw new Error("Failed pattern match at PSD3.Understanding.Hierarchies (line 246, column 5 - line 252, column 18): " + [treeJSON.constructor.name]);
        });
      });
    }
    ;
    if (v instanceof SelectLayout) {
      return bind58(liftEffect43(eval_D3M(removeExistingSVG2("div.hierarchies-viz"))))(function() {
        return discard54(modify_39(function(v1) {
          var $50 = {};
          for (var $51 in v1) {
            if ({}.hasOwnProperty.call(v1, $51)) {
              $50[$51] = v1[$51];
            }
            ;
          }
          ;
          $50.currentLayout = v.value0;
          return $50;
        }))(function() {
          return bind58(get10)(function(state3) {
            if (state3.tree instanceof Nothing) {
              return pure35(unit);
            }
            ;
            if (state3.tree instanceof Just) {
              return bind58(liftAff33(drawLayoutViz(v.value0)(state3.tree.value0)))(function() {
                return pure35(unit);
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.Understanding.Hierarchies (line 263, column 5 - line 268, column 18): " + [state3.tree.constructor.name]);
          });
        });
      });
    }
    ;
    throw new Error("Failed pattern match at PSD3.Understanding.Hierarchies (line 237, column 16 - line 268, column 18): " + [v.constructor.name]);
  };
  var _examplesNav2 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render48 = function(state3) {
    return div2([classes(["explanation-page"])])([div2([classes(["toc-panel", "control-panel"])])([div2([classes(["toc-panel__main", "control-panel__main"])])([img([src9("controller.jpeg"), alt5(""), classes(["control-panel__icon"])]), div2([classes(["floating-panel__header"])])([h3([classes(["floating-panel__title"])])([text5("Layout Controls")]), button([classes(["floating-panel__toggle"]), type_22(ButtonButton.value)])([text5("\u2212")])]), div2([classes(["floating-panel__content", "control-panel__content"])])([div2([classes(["control-panel__section"])])([h4([classes(["control-panel__section-title"])])([text5("Node-Link Diagrams")]), div2([classes(["control-panel__options"])])([renderLayoutOption(HorizontalTidy.value)("H-Tidy")(state3.currentLayout), renderLayoutOption(HorizontalDendrogram.value)("H-Dendro")(state3.currentLayout), renderLayoutOption(VerticalTidy.value)("V-Tidy")(state3.currentLayout), renderLayoutOption(VerticalDendrogram.value)("V-Dendro")(state3.currentLayout), renderLayoutOption(RadialTidy.value)("R-Tidy")(state3.currentLayout), renderLayoutOption(RadialDendrogram.value)("R-Dendro")(state3.currentLayout)])]), div2([classes(["control-panel__section"])])([h4([classes(["control-panel__section-title"])])([text5("Adjacency Diagrams")]), div2([classes(["control-panel__options"])])([renderLayoutOption(Icicle.value)("Icicle")(state3.currentLayout)])]), div2([classes(["control-panel__section"])])([h4([classes(["control-panel__section-title"])])([text5("Enclosure Diagrams")]), div2([classes(["control-panel__options"])])([renderLayoutOption(CirclePacking.value)("Circle Pack")(state3.currentLayout), renderLayoutOption(Treemap.value)("Treemap")(state3.currentLayout)])]), div2([classes(["control-panel__current"])])([strong_([text5("Current:")]), text5(" "), text5(show29(state3.currentLayout))])])])]), slot_10(_examplesNav2)(unit)(component45)(Hierarchies.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Hierarchical Layouts")]), p_([text5("Hierarchical data structures are everywhere in computing: file systems, organizational charts, taxonomies, JSON documents, and abstract syntax trees. Different visualization layouts reveal different aspects of the same hierarchical data.")]), p_([text5("This page demonstrates five different ways to visualize the same hierarchical dataset. Use the controls on the left to switch between layouts and explore how each representation emphasizes different relationships in the data.")])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5(show29(state3.currentLayout))]), p_([text5(layoutDescription(state3.currentLayout))]), div2([classes(["tutorial-viz-container"])])([div2([classes(["hierarchies-viz"])])([renderLayoutPlaceholder(state3.currentLayout)])])]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("Implementation")]), p_([text5("The visualization code for "), strong_([text5(show29(state3.currentLayout))]), text5(" demonstrates how D3's hierarchical layout algorithms transform tree data into visual coordinates.")]), div2([classes(["tutorial-code-block"])])([pre_([code_([text5("-- Code for "), text5(show29(state3.currentLayout)), text5(" layout will go here\n"), text5("-- Demonstrates D3 hierarchy layout with PureScript DSL")])])])])]);
  };
  var component47 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          currentLayout: HorizontalTidy.value,
          tree: Nothing.value
        };
      },
      render: render48,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction41,
        initialize: new Just(Initialize42.value)
      })
    });
  })();

  // output/PSD3.Shared.CodeExample/index.js
  var renderCodeExample = function(config) {
    return div2([classes(["code-example"])])([(function() {
      var $2 = config.title === "";
      if ($2) {
        return text5("");
      }
      ;
      return div2([classes(["code-example__title"])])([text5(config.title)]);
    })(), div2([classes(["code-example__code"])])(syntaxHighlightedCode(config.code)), div2([classes(["code-example__actions"])])([a([href4("#" + routeToPath(new Explore(config.snippetId))), classes(["code-example__explore-btn"])])([text5("Explore this code \u2192")])])]);
  };
  var renderCodeExampleSimple = function(code2) {
    return function(snippetId) {
      return renderCodeExample({
        code: code2,
        snippetId,
        title: ""
      });
    };
  };

  // output/PSD3.Understanding.InterpretersDemo/index.js
  var classed14 = /* @__PURE__ */ classed(toAttrString);
  var width19 = /* @__PURE__ */ width8(toAttrNumber);
  var height19 = /* @__PURE__ */ height8(toAttrNumber);
  var cx4 = /* @__PURE__ */ cx(toAttrNumber);
  var cy4 = /* @__PURE__ */ cy(toAttrNumber);
  var radius10 = /* @__PURE__ */ radius(toAttrNumber);
  var fill15 = /* @__PURE__ */ fill(toAttrString);
  var fillOpacity7 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var bind111 = /* @__PURE__ */ bind(bindD3PrinterM);
  var appendTo1 = /* @__PURE__ */ appendTo(d3Tagless);
  var traverse_14 = /* @__PURE__ */ traverse_(applicativeD3PrinterM)(foldableArray);
  var pure112 = /* @__PURE__ */ pure(applicativeD3PrinterM);
  var sampleData = [{
    x: 50,
    y: 100
  }, {
    x: 120,
    y: 80
  }, {
    x: 200,
    y: 150
  }, {
    x: 280,
    y: 120
  }, {
    x: 350,
    y: 180
  }, {
    x: 50,
    y: 200
  }, {
    x: 150,
    y: 160
  }, {
    x: 250,
    y: 220
  }, {
    x: 320,
    y: 190
  }, {
    x: 380,
    y: 250
  }, {
    x: 90,
    y: 140
  }, {
    x: 170,
    y: 110
  }, {
    x: 230,
    y: 170
  }, {
    x: 310,
    y: 210
  }, {
    x: 360,
    y: 240
  }, {
    x: 110,
    y: 90
  }, {
    x: 190,
    y: 130
  }, {
    x: 270,
    y: 200
  }, {
    x: 330,
    y: 180
  }, {
    x: 370,
    y: 220
  }];
  var scatterPlotString = /* @__PURE__ */ bind111(/* @__PURE__ */ attach(d3Tagless)("div.scatterplot-viz"))(function(v) {
    return bind111(appendTo1(v)(Svg.value)([classed14("simple-scatterplot"), width19(400), height19(300), viewBox(0)(0)(400)(300)]))(function(svg2) {
      return bind111(appendTo1(svg2)(Group.value)([classed14("dots")]))(function(dotsGroup) {
        return bind111(traverse_14(function(pt) {
          return bind111(appendTo1(dotsGroup)(Circle.value)([cx4(pt.x), cy4(pt.y), radius10(4), fill15("steelblue"), fillOpacity7(0.7)]))(function() {
            return pure112(unit);
          });
        })(sampleData))(function() {
          return pure112(dotsGroup);
        });
      });
    });
  });
  var generateD3Code = function __do3() {
    var v = runPrinter(scatterPlotString)("")();
    return v.value1;
  };

  // output/PSD3.Understanding.Interpreters/index.js
  var bind59 = /* @__PURE__ */ bind(bindHalogenM);
  var liftEffect44 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var liftAff34 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var modify_40 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var type_23 = /* @__PURE__ */ type_17(isPropButtonType);
  var slot_11 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "examplesNav";
    }
  })(ordUnit);
  var EnglishDescription = /* @__PURE__ */ (function() {
    function EnglishDescription2() {
    }
    ;
    EnglishDescription2.value = new EnglishDescription2();
    return EnglishDescription2;
  })();
  var D3Code = /* @__PURE__ */ (function() {
    function D3Code2() {
    }
    ;
    D3Code2.value = new D3Code2();
    return D3Code2;
  })();
  var VegaLite = /* @__PURE__ */ (function() {
    function VegaLite2() {
    }
    ;
    VegaLite2.value = new VegaLite2();
    return VegaLite2;
  })();
  var MermaidJS = /* @__PURE__ */ (function() {
    function MermaidJS2() {
    }
    ;
    MermaidJS2.value = new MermaidJS2();
    return MermaidJS2;
  })();
  var MetaTreeAST = /* @__PURE__ */ (function() {
    function MetaTreeAST2() {
    }
    ;
    MetaTreeAST2.value = new MetaTreeAST2();
    return MetaTreeAST2;
  })();
  var Initialize43 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var SelectInterpreter = /* @__PURE__ */ (function() {
    function SelectInterpreter2(value0) {
      this.value0 = value0;
    }
    ;
    SelectInterpreter2.create = function(value0) {
      return new SelectInterpreter2(value0);
    };
    return SelectInterpreter2;
  })();
  var renderInterpreterLink = function(interpreter) {
    return function(label5) {
      return a([onClick(function(v) {
        return new SelectInterpreter(interpreter);
      }), classes(["toc-nav__item"])])([text5(label5)]);
    };
  };
  var renderInterpreterContent = function(state3) {
    return function(v) {
      if (v instanceof EnglishDescription) {
        return div2([classes(["interpreter-output"])])([div2([classes(["prose"])])([p_([text5("Create a scatter plot visualization:")]), ul_([li_([text5('Attach to a div with class "scatterplot-viz"')]), li_([text5('Create an SVG element with class "simple-scatterplot", width 400px, and height 300px')]), li_([text5("Add a view box from (0, 0) to (400, 300)")]), li_([text5('Create a group element with class "dots"')]), li_([text5("For each of 20 data points:")]), ul_([li_([text5("Create a circle element")]), li_([text5("Position it at coordinates derived from the data")]), li_([text5("Set radius to 4 pixels")]), li_([text5("Fill with steelblue color")]), li_([text5("Set opacity to 0.7")])])])])]);
      }
      ;
      if (v instanceof D3Code) {
        return div2([classes(["interpreter-output"])])([pre([classes(["code-block"])])([code_([text5(fromMaybe("// Generating code...")(state3.generatedD3Code))])])]);
      }
      ;
      if (v instanceof VegaLite) {
        return div2([classes(["interpreter-output"])])([pre([classes(["code-block"])])([code_([text5(fromMaybe("// Snippet not defined: VegaLiteExample.purs")(state3.vegaLiteSnippet))])])]);
      }
      ;
      if (v instanceof MermaidJS) {
        return div2([classes(["interpreter-output"])])([pre([classes(["code-block"])])([code_([text5(fromMaybe("// Snippet not defined: MermaidExample.purs")(state3.mermaidSnippet))])])]);
      }
      ;
      if (v instanceof MetaTreeAST) {
        return div2([classes(["interpreter-output"])])([div2([classes(["metatree-viz"])])([text5("[AST Tree visualization will be rendered here]")])]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Understanding.Interpreters (line 210, column 34 - line 270, column 8): " + [v.constructor.name]);
    };
  };
  var interpreterTitle = function(v) {
    if (v instanceof EnglishDescription) {
      return "1. English Description";
    }
    ;
    if (v instanceof D3Code) {
      return "2. D3 JavaScript Code";
    }
    ;
    if (v instanceof VegaLite) {
      return "3. Vega-Lite JSON Specification";
    }
    ;
    if (v instanceof MermaidJS) {
      return "4. Mermaid Diagram Code";
    }
    ;
    if (v instanceof MetaTreeAST) {
      return "5. Meta Tree - Abstract Syntax Tree";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Understanding.Interpreters (line 187, column 20 - line 192, column 55): " + [v.constructor.name]);
  };
  var interpreterDescription = function(v) {
    if (v instanceof EnglishDescription) {
      return "This interpreter translates the DSL code into plain English, describing what the visualization does in natural language. Perfect for documentation and understanding code intent.";
    }
    ;
    if (v instanceof D3Code) {
      return "This interpreter generates equivalent D3.js JavaScript code. It shows how the high-level DSL operations map to lower-level D3 API calls, helping bridge PureScript and JavaScript developers.";
    }
    ;
    if (v instanceof VegaLite) {
      return "This interpreter produces a Vega-Lite JSON specification. Vega-Lite is a declarative visualization grammar, showing how our imperative DSL can be transformed into declarative JSON.";
    }
    ;
    if (v instanceof MermaidJS) {
      return "This interpreter generates Mermaid diagram syntax. It represents the visualization structure as a flowchart or diagram, useful for documentation and architectural overviews.";
    }
    ;
    if (v instanceof MetaTreeAST) {
      return "This interpreter visualizes the abstract syntax tree of the visualization code itself. It creates a tree diagram showing the structure of DSL operations, demonstrating meta-programming capabilities.";
    }
    ;
    throw new Error("Failed pattern match at PSD3.Understanding.Interpreters (line 196, column 26 - line 206, column 205): " + [v.constructor.name]);
  };
  var renderInterpreterOutput = function(state3) {
    return function(interpreter) {
      return section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5(interpreterTitle(interpreter))]), p_([text5(interpreterDescription(interpreter))]), div2([classes(["tutorial-viz-container"])])([renderInterpreterContent(state3)(interpreter)])]);
    };
  };
  var handleAction42 = function(v) {
    if (v instanceof Initialize43) {
      return bind59(liftEffect44(generateD3Code))(function(d3Code) {
        return bind59(liftAff34(readSnippetFiles("TLCSimple.purs")))(function(exampleCode) {
          return bind59(liftAff34(readSnippetFiles("VegaLiteExample.purs")))(function(vegaCode) {
            return bind59(liftAff34(readSnippetFiles("MermaidExample.purs")))(function(mermaidCode) {
              return modify_40(function(v1) {
                var $25 = {};
                for (var $26 in v1) {
                  if ({}.hasOwnProperty.call(v1, $26)) {
                    $25[$26] = v1[$26];
                  }
                  ;
                }
                ;
                $25.generatedD3Code = new Just(d3Code);
                $25.exampleSnippet = new Just(exampleCode);
                $25.vegaLiteSnippet = new Just(vegaCode);
                $25.mermaidSnippet = new Just(mermaidCode);
                return $25;
              });
            });
          });
        });
      });
    }
    ;
    if (v instanceof SelectInterpreter) {
      return modify_40(function(v1) {
        var $28 = {};
        for (var $29 in v1) {
          if ({}.hasOwnProperty.call(v1, $29)) {
            $28[$29] = v1[$29];
          }
          ;
        }
        ;
        $28.selectedInterpreter = v.value0;
        return $28;
      });
    }
    ;
    throw new Error("Failed pattern match at PSD3.Understanding.Interpreters (line 68, column 16 - line 84, column 54): " + [v.constructor.name]);
  };
  var _examplesNav3 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render49 = function(state3) {
    return div2([classes(["explanation-page"])])([div2([classes(["toc-panel"])])([img([src9("bookmark.jpeg"), alt5(""), classes(["toc-panel__bookmark-pin"])]), div2([classes(["toc-panel__main"])])([div2([classes(["floating-panel__header"])])([h3([classes(["floating-panel__title"])])([text5("Interpreters")]), button([classes(["floating-panel__toggle"]), type_23(ButtonButton.value)])([text5("\u2212")])]), div2([classes(["floating-panel__content", "toc-panel__content"])])([nav([classes(["toc-nav"])])([renderInterpreterLink(EnglishDescription.value)("1. English Description"), renderInterpreterLink(D3Code.value)("2. D3 JavaScript"), renderInterpreterLink(VegaLite.value)("3. Vega-Lite JSON"), renderInterpreterLink(MermaidJS.value)("4. Mermaid Diagram"), renderInterpreterLink(MetaTreeAST.value)("5. Meta Tree (AST)")])])])]), slot_11(_examplesNav3)(unit)(component45)(Interpreters.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Alternative Interpreters")]), p_([text5("The Finally Tagless pattern allows us to write visualization code once and interpret it in multiple ways. The same DSL code can produce an actual visualization, generate equivalent code in other languages, create documentation, or even visualize its own structure.")]), p_([text5("This flexibility comes from separating the ")]), em_([text5("structure")]), text5(" of our visualization (what operations we want to perform) from the "), em_([text5("interpretation")]), text5(" (how those operations are executed). Each interpreter below provides a different view of the same underlying code.")]), section([classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("The Source Code")]), p_([text5("Here's a simple example using our PureScript D3 DSL - the most basic example imaginable, three circles:")]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: TLCSimple.purs")(state3.exampleSnippet))("TLCSimple")]), renderInterpreterOutput(state3)(state3.selectedInterpreter)]);
  };
  var component48 = /* @__PURE__ */ (function() {
    var initialState4 = {
      selectedInterpreter: EnglishDescription.value,
      generatedD3Code: Nothing.value,
      exampleSnippet: Nothing.value,
      vegaLiteSnippet: Nothing.value,
      mermaidSnippet: Nothing.value
    };
    return mkComponent({
      initialState: $$const(initialState4),
      render: render49,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction42,
        initialize: new Just(Initialize43.value)
      })
    });
  })();

  // output/D3.Viz.GUP.Unsafe/index.js
  var coerceIndexToNumber = unsafeCoerce2;
  var coerceDatumToKey = unsafeCoerce2;
  var coerceDatumToChar = unsafeCoerce2;

  // output/D3.Viz.GUP/index.js
  var andThen2 = /* @__PURE__ */ andThen(semigroupArray);
  var classed15 = /* @__PURE__ */ classed(toAttrString);
  var fill16 = /* @__PURE__ */ fill(toAttrString);
  var y19 = /* @__PURE__ */ y(toAttrNumber);
  var x21 = /* @__PURE__ */ x(toAttrNumberFnI);
  var text17 = /* @__PURE__ */ text6(toAttrStringFn);
  var fontSize7 = /* @__PURE__ */ fontSize(toAttrNumber);
  var discard55 = /* @__PURE__ */ discard(discardUnit);
  var datum_4 = {
    "char": coerceDatumToChar,
    indexNum: coerceIndexToNumber
  };
  var exGeneralUpdatePattern = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind71 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var pure45 = pure(Monad0.Applicative0());
    var openSelection2 = openSelection(dictSelectionM);
    var updateJoin2 = updateJoin(dictSelectionM);
    var discard112 = discard55(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    return function(selector) {
      var xFromIndex = function(v) {
        return function(i2) {
          return 50 + datum_4.indexNum(i2) * 48;
        };
      };
      var transition2 = transitionWithDuration(2e3);
      var update4 = andThen2([classed15("update"), fill16("gray"), y19(200)])(to(transition2)([x21(xFromIndex)]));
      var exit = andThen2([classed15("exit"), fill16("brown")])(to(transition2)([y19(400), remove]));
      var enter = andThen2([classed15("enter"), fill16("green"), x21(xFromIndex), y19(0), text17(function($24) {
        return singleton7(datum_4["char"]($24));
      }), fontSize7(60)])(to(transition2)([y19(200)]));
      return bind71(attach2(selector))(function(root3) {
        return bind71(appendTo2(root3)(Svg.value)([viewBox(0)(100)(800)(350), classed15("d3svg gup")]))(function(svg2) {
          return bind71(appendTo2(svg2)(Group.value)([]))(function(letterGroup) {
            return pure45(function(letters) {
              return bind71(openSelection2(letterGroup)("text"))(function(enterSelection) {
                return bind71(updateJoin2(enterSelection)(Text2.value)(letters)(coerceDatumToKey))(function(updateSelections) {
                  return discard112(setAttributes2(updateSelections.exit)(exit))(function() {
                    return discard112(setAttributes2(updateSelections.update)(update4))(function() {
                      return bind71(appendTo2(updateSelections.enter)(Text2.value)([]))(function(newlyEntered) {
                        return discard112(setAttributes2(newlyEntered)(enter))(function() {
                          return pure45(newlyEntered);
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    };
  };

  // output/D3.Viz.LesMis.Unsafe/index.js
  var unboxD3SimNode2 = function(datum2) {
    return datum2;
  };
  var unboxD3SimLink2 = function(datum2) {
    return datum2;
  };

  // output/D3.Viz.LesMiserables/index.js
  var classed16 = /* @__PURE__ */ classed(toAttrString);
  var strokeColor13 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeOpacity6 = /* @__PURE__ */ strokeOpacity(toAttrNumber);
  var fromFoldable27 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var discard56 = /* @__PURE__ */ discard(discardUnit);
  var radius11 = /* @__PURE__ */ radius(toAttrNumber);
  var fill17 = /* @__PURE__ */ fill(toAttrStringFn);
  var strokeWidth12 = /* @__PURE__ */ strokeWidth(toAttrNumberFn);
  var strokeColor1 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var cx5 = /* @__PURE__ */ cx(toAttrNumberFn);
  var cy5 = /* @__PURE__ */ cy(toAttrNumberFn);
  var x110 = /* @__PURE__ */ x1(toAttrNumberFn);
  var y110 = /* @__PURE__ */ y1(toAttrNumberFn);
  var x25 = /* @__PURE__ */ x2(toAttrNumberFn);
  var y25 = /* @__PURE__ */ y2(toAttrNumberFn);
  var link_5 = {
    source: function($62) {
      return (function(v) {
        return v.source;
      })(unboxD3SimLink2($62));
    },
    target: function($63) {
      return (function(v) {
        return v.target;
      })(unboxD3SimLink2($63));
    },
    value: function($64) {
      return (function(v) {
        return v.value;
      })(unboxD3SimLink2($64));
    },
    color: function($65) {
      return d3SchemeCategory10N_(toNumber((function(v) {
        return v.target.group;
      })(unboxD3SimLink2($65))));
    }
  };
  var datum_5 = {
    id: function($66) {
      return (function(v) {
        return v.id;
      })(unboxD3SimNode2($66));
    },
    x: function($67) {
      return (function(v) {
        return v.x;
      })(unboxD3SimNode2($67));
    },
    y: function($68) {
      return (function(v) {
        return v.y;
      })(unboxD3SimNode2($68));
    },
    group: function($69) {
      return (function(v) {
        return v.group;
      })(unboxD3SimNode2($69));
    },
    colorByGroup: function($70) {
      return d3SchemeCategory10N_(toNumber((function(v) {
        return v.group;
      })(unboxD3SimNode2($70))));
    }
  };
  var drawSimplified = function(dictBind) {
    var bind71 = bind(dictBind);
    var discard112 = discard56(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var pure45 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictMonadState) {
        return function(dictSimulationM2) {
          var SimulationM1 = dictSimulationM2.SimulationM1();
          var SelectionM1 = SimulationM1.SelectionM1();
          var attach2 = attach(SelectionM1);
          var appendTo2 = appendTo(SelectionM1);
          var init5 = init3(SimulationM1);
          var simpleJoin2 = simpleJoin(SelectionM1);
          var setAttributes2 = setAttributes(SelectionM1);
          var addTickFunction2 = addTickFunction(dictSimulationM2);
          var on3 = on2(SelectionM1);
          var start5 = start2(SimulationM1);
          return function(forceLibrary3) {
            return function(activeForces) {
              return function(model) {
                return function(selector) {
                  return bind71(liftEffect51(getWindowWidthHeight))(function(v) {
                    return bind71(attach2(selector))(function(v1) {
                      return bind71(appendTo2(v1)(Svg.value)([viewBox(-v.value0 / 2)(-v.value1 / 2)(v.value0)(v.value1), classed16("lesmis")]))(function(svg2) {
                        return bind71(appendTo2(svg2)(Group.value)([classed16("link"), strokeColor13("#999"), strokeOpacity6(0.6)]))(function(linksGroup) {
                          return bind71(appendTo2(svg2)(Group.value)([classed16("node"), strokeColor13("#fff"), strokeOpacity6(1.5)]))(function(nodesGroup) {
                            return bind71(init5({
                              nodes: model.nodes,
                              links: model.links,
                              forces: forceLibrary3,
                              activeForces,
                              config: {
                                alpha: 1,
                                alphaTarget: 0,
                                alphaMin: 1e-3,
                                alphaDecay: 0.0228,
                                velocityDecay: 0.4
                              },
                              keyFn: keyIsID_,
                              ticks: fromFoldable27([])
                            }))(function(v2) {
                              return bind71(simpleJoin2(nodesGroup)(Circle.value)(v2.nodes)(keyIsID_))(function(nodesSelection) {
                                return discard112(setAttributes2(nodesSelection)([radius11(5), fill17(datum_5.colorByGroup)]))(function() {
                                  return bind71(simpleJoin2(linksGroup)(Line.value)(v2.links)(keyIsID_))(function(linksSelection) {
                                    return discard112(setAttributes2(linksSelection)([strokeWidth12(function($71) {
                                      return sqrt(link_5.value($71));
                                    }), strokeColor1(link_5.color)]))(function() {
                                      return discard112(addTickFunction2("nodes")(new Step3(nodesSelection, [cx5(datum_5.x), cy5(datum_5.y)])))(function() {
                                        return discard112(addTickFunction2("links")(new Step3(linksSelection, [x110(function($72) {
                                          return (function(v3) {
                                            return v3.x;
                                          })(link_5.source($72));
                                        }), y110(function($73) {
                                          return (function(v3) {
                                            return v3.y;
                                          })(link_5.source($73));
                                        }), x25(function($74) {
                                          return (function(v3) {
                                            return v3.x;
                                          })(link_5.target($74));
                                        }), y25(function($75) {
                                          return (function(v3) {
                                            return v3.y;
                                          })(link_5.target($75));
                                        })])))(function() {
                                          return bind71(on3(nodesSelection)(new Drag(new CustomDrag("lesmis", simdrag_))))(function() {
                                            return bind71(on3(svg2)(new Zoom({
                                              extent: new ZoomExtent({
                                                top: 0,
                                                left: 0,
                                                bottom: v.value1,
                                                right: v.value0
                                              }),
                                              scale: new ScaleExtent(1, 4),
                                              name: "LesMis",
                                              target: svg2
                                            })))(function() {
                                              return discard112(start5)(function() {
                                                return pure45(unit);
                                              });
                                            });
                                          });
                                        });
                                      });
                                    });
                                  });
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  // output/D3.Viz.LesMiserables.File/foreign.js
  function readJSONJS_(filecontents) {
    return decodeFile(filecontents);
  }
  var decodeFile = function(filecontents) {
    const json2 = JSON.parse(filecontents);
    const links = json2.links.map((d9) => Object.create(d9));
    return { links, nodes: json2.nodes };
  };

  // output/D3.Viz.LesMiserables.File/index.js
  var readGraphFromFileContents = function(v) {
    if (v instanceof Right) {
      return readJSONJS_(v.value0.body);
    }
    ;
    if (v instanceof Left) {
      return {
        links: [],
        nodes: []
      };
    }
    ;
    throw new Error("Failed pattern match at D3.Viz.LesMiserables.File (line 10, column 1 - line 10, column 92): " + [v.constructor.name]);
  };

  // output/Effect.Class.Console/index.js
  var log3 = function(dictMonadEffect) {
    var $51 = liftEffect(dictMonadEffect);
    return function($52) {
      return $51(log2($52));
    };
  };

  // output/Effect.Random/foreign.js
  var random = Math.random;

  // output/PSD3.Understanding.Movement/index.js
  var pure36 = /* @__PURE__ */ pure(applicativeEffect);
  var sequence3 = /* @__PURE__ */ sequence(traversableArray)(applicativeEffect);
  var map52 = /* @__PURE__ */ map(functorArray);
  var bind112 = /* @__PURE__ */ bind(bindAff);
  var liftEffect45 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard57 = /* @__PURE__ */ discard(discardUnit);
  var discard110 = /* @__PURE__ */ discard57(bindAff);
  var exGeneralUpdatePattern2 = /* @__PURE__ */ exGeneralUpdatePattern(d3TaglessD3M);
  var applySecond3 = /* @__PURE__ */ applySecond(applyEffect);
  var strength5 = /* @__PURE__ */ strength(toAttrNumber);
  var forever2 = /* @__PURE__ */ forever(monadRecAff);
  var fromFoldable28 = /* @__PURE__ */ fromFoldable5(foldableArray)(ordString);
  var drawSimplified2 = /* @__PURE__ */ drawSimplified(bindD3SimM)(monadEffD3SimM)(monadStateD3SimM)(simulationM2D3Selection_D);
  var slot_13 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "examplesNav";
    }
  })(ordUnit);
  var Initialize44 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var Finalize3 = /* @__PURE__ */ (function() {
    function Finalize4() {
    }
    ;
    Finalize4.value = new Finalize4();
    return Finalize4;
  })();
  var runUpdate = function(update4) {
    var getLetters = (function() {
      var letters = toCharArray("abcdefghijklmnopqrstuvwxyz");
      var coinToss = function(c) {
        return function __do4() {
          var n = random();
          var $64 = n > 0.6;
          if ($64) {
            return new Just(c);
          }
          ;
          return Nothing.value;
        };
      };
      return function __do4() {
        var choices = sequence3(map52(coinToss)(letters))();
        return catMaybes(choices);
      };
    })();
    return bind112(liftEffect45(getLetters))(function(letters) {
      return discard110(update4(letters))(function() {
        return delay(2300);
      });
    });
  };
  var runGeneralUpdatePattern = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind210 = bind(Bind1);
    var liftEffect110 = liftEffect(dictMonadEffect);
    var pure115 = pure(Monad0.Applicative0());
    return discard57(Bind1)(log3(dictMonadEffect)("General Update Pattern example"))(function() {
      return bind210(liftEffect110(eval_D3M(exGeneralUpdatePattern2("div.gup-viz"))))(function(update4) {
        return pure115(function(letters) {
          return liftEffect45(applySecond3(runD3M(update4(letters)))(pure36(unit)));
        });
      });
    });
  };
  var forces = /* @__PURE__ */ (function() {
    return {
      manyBodyNeg: createForce("many body negative")(new RegularForce(ForceManyBody.value))(allNodes)([strength5(-40)]),
      collision: createForce("collision")(new RegularForce(ForceCollide.value))(allNodes)([radius2(toAttrNumber)(4)]),
      center: createForce("center")(new RegularForce(ForceCenter.value))(allNodes)([x3(toAttrNumber)(0), y3(toAttrNumber)(0), strength5(1)]),
      links: createLinkForce(Nothing.value)([])
    };
  })();
  var handleAction43 = function(dictMonadState) {
    var modify_45 = modify_(dictMonadState);
    var gets2 = gets(dictMonadState);
    return function(dictMonadAff) {
      var MonadEffect0 = dictMonadAff.MonadEffect0();
      var Monad0 = MonadEffect0.Monad0();
      var Bind1 = Monad0.Bind1();
      var bind210 = bind(Bind1);
      var liftAff36 = liftAff(dictMonadAff);
      var discard211 = discard57(Bind1);
      var runGeneralUpdatePattern1 = runGeneralUpdatePattern(MonadEffect0);
      var runWithD3_Simulation4 = runWithD3_Simulation(Bind1)(dictMonadState)(MonadEffect0);
      var pure115 = pure(Monad0.Applicative0());
      return function(v) {
        if (v instanceof Initialize44) {
          return bind210(liftAff36(readSnippetFiles("GUP.purs")))(function(gup) {
            return discard211(modify_45(function(v1) {
              var $66 = {};
              for (var $67 in v1) {
                if ({}.hasOwnProperty.call(v1, $67)) {
                  $66[$67] = v1[$67];
                }
                ;
              }
              ;
              $66.gupSnippet = new Just(gup);
              return $66;
            }))(function() {
              return bind210(runGeneralUpdatePattern1)(function(updateFn) {
                return bind210(liftAff36(forkAff(forever2(runUpdate(updateFn)))))(function(fiber) {
                  return discard211(modify_45(function(state3) {
                    var $69 = {};
                    for (var $70 in state3) {
                      if ({}.hasOwnProperty.call(state3, $70)) {
                        $69[$70] = state3[$70];
                      }
                      ;
                    }
                    ;
                    $69.gupFiber = new Just(fiber);
                    return $69;
                  }))(function() {
                    return bind210(liftAff36(get3(string)("./data/miserables.json")))(function(response) {
                      var graph = readGraphFromFileContents(response);
                      var forcesArray = [forces.manyBodyNeg, forces.collision, forces.center, forces.links];
                      var activeForces = fromFoldable28(["many body negative", "collision", "center", linksForceName_]);
                      return runWithD3_Simulation4(drawSimplified2(forcesArray)(activeForces)(graph)("div.lesmis-container"));
                    });
                  });
                });
              });
            });
          });
        }
        ;
        if (v instanceof Finalize3) {
          return bind210(gets2(function(v1) {
            return v1.gupFiber;
          }))(function(maybeFiber) {
            if (maybeFiber instanceof Nothing) {
              return pure115(unit);
            }
            ;
            if (maybeFiber instanceof Just) {
              return liftAff36(killFiber(error("Cancelling GUP animation"))(maybeFiber.value0));
            }
            ;
            throw new Error("Failed pattern match at PSD3.Understanding.Movement (line 250, column 5 - line 252, column 83): " + [maybeFiber.constructor.name]);
          });
        }
        ;
        throw new Error("Failed pattern match at PSD3.Understanding.Movement (line 224, column 16 - line 252, column 83): " + [v.constructor.name]);
      };
    };
  };
  var forceLibrary2 = /* @__PURE__ */ (function() {
    return initialize(foldableArray)(functorArray)([forces.manyBodyNeg, forces.collision, forces.center, forces.links]);
  })();
  var _examplesNav4 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render50 = function(state3) {
    return div2([classes(["explanation-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("section-1")("1. General Update Pattern")(0), tocRoute(new Explore("GUP"))("\u2192 How-to guide")(1), tocAnchor("section-2")("2. Force-Directed Graph")(0), tocAnchor("example")("2a. Interactive Layout")(1), tocAnchor("code")("2b. Implementation")(1)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    }), slot_13(_examplesNav4)(unit)(component45)(Movement.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Movement & Transition")]), p_([text5("This page explores two key aspects of data visualization: the General Update Pattern for managing enter/update/exit transitions, and force-directed layouts that use physics simulation to position nodes and links.")])]), section([classes(["tutorial-section"]), id2("section-1")])([h2([classes(["tutorial-section-title"])])([text5("1. The General Update Pattern")]), p_([text5("This deceptively simple example shows off an aspect of screen-based data visualization that has no analogue in paper visualizations: the ability to specify how updates to the data should be represented.")]), p_([text5("In this example, some letters of the alphabet are presented and then constantly updated. When a letter enters at first, it falls in from the top and it is green. If it's still present in the next set of letters it stays on the screen, but it turns gray and moves to an alphabetically correct new position. And if it's not present in the new data, it turns red and falls out before disappearing.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["gup-viz"])])([])]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: GUP.purs")(state3.gupSnippet))("GUP")]), section([classes(["tutorial-section"]), id2("section-2")])([h2([classes(["tutorial-section-title"])])([text5("2. Force-Directed Graph: Les Mis\xE9rables")]), p_([text5("Force-directed graphs use physics simulation to position nodes and links. Nodes repel each other like charged particles, while links act as springs pulling connected nodes together. The simulation finds an equilibrium that naturally reveals the structure of the network.")]), p_([text5("This example uses the simplified SimulationM API - a single "), code_([text5("init")]), text5(" call with a configuration record, followed by "), code_([text5("start")]), text5(". The graph shows character co-occurrence in Victor Hugo's Les Mis\xE9rables, where node size represents importance and link thickness shows the strength of connections.")])]), section([id2("example"), classes(["tutorial-section"])])([h2([classes(["section-title"])])([text5("2a. Interactive Force Layout")]), p_([text5("Drag nodes to see the force simulation respond. The simulation applies multiple forces: center (pulls toward middle), charge (nodes repel), collision (prevents overlap), and link (pulls connected nodes together).")]), div2([classes(["viz-container"])])([div2([classes(["lesmis-container"])])([])])]), section([id2("code"), classes(["tutorial-section"])])([h2([classes(["section-title"])])([text5("2b. Implementation with Simplified SimulationM")]), p_([text5("The new SimulationM API simplifies force layout creation. Instead of manually calling multiple setup functions, pass everything to "), code_([text5("init")]), text5(" as a configuration record:")]), pre([classes(["code-block"])])([code_([text5('drawSimplified forceLibrary activeForces model selector = do\n  (Tuple w h) <- liftEffect getWindowWidthHeight\n  svg <- attach selector >>= appendTo _ Svg [viewBox ...]\n\n  -- Initialize simulation with config record\n  { nodes: nodesInSim, links: linksInSim } <- init\n    { nodes: model.nodes\n    , links: model.links\n    , forces: forceLibrary        -- All available forces\n    , activeForces: activeForces  -- Which ones to enable\n    , config: { alpha: 1.0, alphaTarget: 0.0, ... }\n    , keyFn: keyIsID_\n    , ticks: Map.fromFoldable []  -- Empty for now\n    }\n\n  -- Join simulation-enhanced data to DOM\n  nodesSelection <- simpleJoin svg Circle nodesInSim keyIsID_\n  linksSelection <- simpleJoin svg Line linksInSim keyIsID_\n\n  -- Add tick functions to update positions\n  addTickFunction "nodes" $ Step nodesSelection [cx datum_.x, cy datum_.y]\n  addTickFunction "links" $ Step linksSelection [x1 link_.source.x, ...]\n\n  -- Start the animation\n  start')])]), p_([text5("Key insight: "), code_([text5("init")]), text5(" returns simulation-enhanced data (nodes with x, y, vx, vy properties). Join this enhanced data to DOM, not the raw input data. This ensures tick functions can access the simulation state.")])])]);
  };
  var component49 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          simulation: initialSimulationState(forceLibrary2),
          gupFiber: Nothing.value,
          gupSnippet: Nothing.value
        };
      },
      render: render50,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        handleAction: handleAction43(monadStateHalogenM)(monadAffHalogenM(monadAffAff)),
        initialize: new Just(Initialize44.value),
        finalize: new Just(Finalize3.value)
      })
    });
  })();

  // output/PSD3.Understanding.Patterns/index.js
  var pure37 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_14 = /* @__PURE__ */ slot_();
  var slot_15 = /* @__PURE__ */ slot_14({
    reflectSymbol: function() {
      return "sectionNav";
    }
  })(ordUnit);
  var slot_24 = /* @__PURE__ */ slot_14({
    reflectSymbol: function() {
      return "tabs";
    }
  })(ordUnit);
  var Initialize45 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var handleAction44 = function(v) {
    return pure37(unit);
  };
  var _tabs3 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _sectionNav6 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render51 = function(v) {
    return div2([classes(["explanation-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("heading-datum-pattern")("The datum_ / Datum_ Pattern")(0), tocAnchor("heading-grammar")("The Grammar of D3 in SelectionM")(0), tocAnchor("heading-dom-to-viz")("From DOM to Visualization Elements")(0)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    }), slot_15(_sectionNav6)(unit)(component8)({
      currentSection: UnderstandingSection.value,
      currentRoute: UnderstandingPatterns.value,
      sectionPages: [{
        route: UnderstandingConcepts.value,
        label: "Concepts"
      }, {
        route: UnderstandingPatterns.value,
        label: "Patterns"
      }, {
        route: UnderstandingPhilosophy.value,
        label: "Philosophy"
      }],
      moduleCategories: Nothing.value
    }), div2([classes(["explanation-content"])])([slot_24(_tabs3)(unit)(component42)(UnderstandingPatterns.value), h1([classes(["explanation-title"])])([text5("Practical Patterns")]), section([classes(["concept-section"])])([h2([id2("heading-datum-pattern")])([text5("The datum_ / Datum_ Pattern")]), p_([text5("Placeholder: Explanation of the datum_ accessor pattern for type-safe data access")])]), section([classes(["concept-section"])])([h2([id2("heading-grammar")])([text5("The Grammar of D3 in SelectionM")]), p_([text5("Placeholder: How SelectionM expresses D3's grammar of graphics")])]), section([classes(["concept-section"])])([h2([id2("heading-dom-to-viz")])([text5("From DOM to Visualization Elements")]), p_([text5("Placeholder: The flow from attachment \u2192 nodes \u2192 data joins \u2192 bulk enter")])])])]);
  };
  var component50 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render51,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction44,
        initialize: new Just(Initialize45.value)
      })
    });
  })();

  // output/D3.Viz.BarChart/index.js
  var map53 = /* @__PURE__ */ map(functorArray);
  var minimum2 = /* @__PURE__ */ minimum(ordNumber)(foldableArray);
  var maximum4 = /* @__PURE__ */ maximum(ordNumber)(foldableArray);
  var classed17 = /* @__PURE__ */ classed(toAttrString);
  var width20 = /* @__PURE__ */ width8(toAttrNumber);
  var height20 = /* @__PURE__ */ height8(toAttrNumber);
  var show30 = /* @__PURE__ */ show(showNumber);
  var x26 = /* @__PURE__ */ x(toAttrNumber);
  var y20 = /* @__PURE__ */ y(toAttrNumber);
  var fill18 = /* @__PURE__ */ fill(toAttrString);
  var strokeColor14 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth13 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var innerWidth2 = function(dims) {
    return dims.width - dims.margin.left - dims.margin.right;
  };
  var innerHeight2 = function(dims) {
    return dims.height - dims.margin.top - dims.margin.bottom;
  };
  var defaultDimensions = {
    width: 800,
    height: 400,
    margin: {
      top: 20,
      right: 30,
      bottom: 30,
      left: 40
    }
  };
  var draw9 = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(dataPoints) {
          return function(selector) {
            var iWidth = innerWidth2(defaultDimensions);
            var iHeight = innerHeight2(defaultDimensions);
            var xValues = map53(function(v) {
              return v.x;
            })(dataPoints);
            var yValues = map53(function(v) {
              return v.y;
            })(dataPoints);
            var minX = fromMaybe(0)(minimum2(xValues));
            var maxX = fromMaybe(100)(maximum4(xValues));
            var maxY = fromMaybe(100)(maximum4(yValues));
            return bind71(attach2(selector))(function(v) {
              return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(defaultDimensions.width)(defaultDimensions.height), classed17("bar-chart"), width20(defaultDimensions.width), height20(defaultDimensions.height)]))(function(svg2) {
                var numBars = length4(dataPoints);
                var barWidth = (function() {
                  var $39 = numBars > 0;
                  if ($39) {
                    return iWidth / toNumber(numBars) * 0.8;
                  }
                  ;
                  return 0;
                })();
                return bind71(appendTo2(svg2)(Group.value)([transform([function(v1) {
                  return "translate(" + (show30(defaultDimensions.margin.left) + ("," + (show30(defaultDimensions.margin.top) + ")")));
                }])]))(function(chartGroup) {
                  return bind71(liftEffect51(createLinearScale_({
                    domain: [minX, maxX],
                    range: [0, iWidth]
                  })))(function(xScale) {
                    return bind71(liftEffect51(createLinearScale_({
                      domain: [0, maxY],
                      range: [iHeight, 0]
                    })))(function(yScale) {
                      return bind71(appendTo2(chartGroup)(Group.value)([classed17("x-axis"), transform([function(v1) {
                        return "translate(0," + (show30(iHeight) + ")");
                      }])]))(function(xAxisGroup) {
                        return bind71(appendTo2(chartGroup)(Group.value)([classed17("y-axis"), transform([function(v1) {
                          return "translate(" + (show30(barWidth / 2 * -1 - 5) + ",0)");
                        }])]))(function(yAxisGroup) {
                          return bind71(liftEffect51(callAxis_(xAxisGroup)(axisBottom_(xScale))))(function() {
                            return bind71(liftEffect51(callAxis_(yAxisGroup)(axisLeft_(yScale))))(function() {
                              var addBar = function(point) {
                                var xPos = applyScale_(xScale)(point.x) - barWidth / 2;
                                var yPos = applyScale_(yScale)(point.y);
                                var barHeight = iHeight - yPos;
                                return bind71(appendTo2(chartGroup)(Rect.value)([x26(xPos), y20(yPos), width20(barWidth), height20(barHeight), fill18("#4a90e2"), strokeColor14("#357abd"), strokeWidth13(1), classed17("bar")]))(function() {
                                  return pure45(unit);
                                });
                              };
                              return bind71(traverse_7(addBar)(dataPoints))(function() {
                                return pure45(unit);
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/PSD3.Internal.Generators.Line/foreign.js
  function createLineGenerator_(config) {
    return () => {
      return line_default().x((d9) => config.xScale(d9.x)).y((d9) => config.yScale(d9.y));
    };
  }
  function generateLinePath_(generator) {
    return (data) => generator(data);
  }

  // output/D3.Viz.LineChart/index.js
  var map54 = /* @__PURE__ */ map(functorArray);
  var minimum3 = /* @__PURE__ */ minimum(ordNumber)(foldableArray);
  var maximum5 = /* @__PURE__ */ maximum(ordNumber)(foldableArray);
  var classed18 = /* @__PURE__ */ classed(toAttrString);
  var width21 = /* @__PURE__ */ width8(toAttrNumber);
  var height21 = /* @__PURE__ */ height8(toAttrNumber);
  var show31 = /* @__PURE__ */ show(showNumber);
  var d6 = /* @__PURE__ */ d2(toAttrString);
  var fill19 = /* @__PURE__ */ fill(toAttrString);
  var strokeColor15 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth14 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var innerWidth3 = function(dims) {
    return dims.width - dims.margin.left - dims.margin.right;
  };
  var innerHeight3 = function(dims) {
    return dims.height - dims.margin.top - dims.margin.bottom;
  };
  var defaultDimensions2 = {
    width: 800,
    height: 400,
    margin: {
      top: 20,
      right: 30,
      bottom: 30,
      left: 40
    }
  };
  var draw10 = function(dictBind) {
    var bind71 = bind(dictBind);
    return function(dictMonadEffect) {
      var liftEffect51 = liftEffect(dictMonadEffect);
      var pure45 = pure(dictMonadEffect.Monad0().Applicative0());
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(dataPoints) {
          return function(selector) {
            var iWidth = innerWidth3(defaultDimensions2);
            var iHeight = innerHeight3(defaultDimensions2);
            var xValues = map54(function(v) {
              return v.x;
            })(dataPoints);
            var yValues = map54(function(v) {
              return v.y;
            })(dataPoints);
            var minX = fromMaybe(0)(minimum3(xValues));
            var maxX = fromMaybe(100)(maximum5(xValues));
            var minY = fromMaybe(0)(minimum3(yValues));
            var maxY = fromMaybe(100)(maximum5(yValues));
            return bind71(attach2(selector))(function(v) {
              return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(defaultDimensions2.width)(defaultDimensions2.height), classed18("line-chart"), width21(defaultDimensions2.width), height21(defaultDimensions2.height)]))(function(svg2) {
                return bind71(appendTo2(svg2)(Group.value)([transform([function(v1) {
                  return "translate(" + (show31(defaultDimensions2.margin.left) + ("," + (show31(defaultDimensions2.margin.top) + ")")));
                }])]))(function(chartGroup) {
                  return bind71(liftEffect51(createLinearScale_({
                    domain: [minX, maxX],
                    range: [0, iWidth]
                  })))(function(xScale) {
                    return bind71(liftEffect51(createLinearScale_({
                      domain: [minY, maxY],
                      range: [iHeight, 0]
                    })))(function(yScale) {
                      return bind71(appendTo2(chartGroup)(Group.value)([classed18("x-axis"), transform([function(v1) {
                        return "translate(0," + (show31(iHeight) + ")");
                      }])]))(function(xAxisGroup) {
                        return bind71(appendTo2(chartGroup)(Group.value)([classed18("y-axis")]))(function(yAxisGroup) {
                          return bind71(liftEffect51(callAxis_(xAxisGroup)(axisBottom_(xScale))))(function() {
                            return bind71(liftEffect51(callAxis_(yAxisGroup)(axisLeft_(yScale))))(function() {
                              return bind71(liftEffect51(createLineGenerator_({
                                xScale,
                                yScale
                              })))(function(lineGen) {
                                var pathData = generateLinePath_(lineGen)(dataPoints);
                                return bind71(appendTo2(chartGroup)(Path.value)([d6(pathData), fill19("none"), strokeColor15("#4a90e2"), strokeWidth14(2), classed18("line")]))(function() {
                                  return pure45(unit);
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/D3.Viz.Parabola.Unsafe/index.js
  var coerceIndex = unsafeCoerce2;
  var coerceDatumToInt = unsafeCoerce2;

  // output/D3.Viz.Parabola/index.js
  var classed19 = /* @__PURE__ */ classed(toAttrString);
  var discard58 = /* @__PURE__ */ discard(discardUnit);
  var strokeColor16 = /* @__PURE__ */ strokeColor(toAttrStringFn);
  var strokeWidth15 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var fill20 = /* @__PURE__ */ fill(toAttrString);
  var cx6 = /* @__PURE__ */ cx(toAttrNumberFnI);
  var cy6 = /* @__PURE__ */ cy(toAttrNumberFn);
  var radius14 = /* @__PURE__ */ radius(toAttrNumber);
  var datum_6 = {
    x: function(v) {
      return function(i2) {
        return toNumber(coerceIndex(i2)) * 20;
      };
    },
    y: function(d9) {
      return 100 - toNumber(coerceDatumToInt(d9)) / 5;
    },
    color: function(d9) {
      return d3SchemePairedN_(toNumber(coerceDatumToInt(d9)) / 100);
    },
    index: coerceIndex
  };
  var drawWithData = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind71 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var simpleJoin2 = simpleJoin(dictSelectionM);
    var discard112 = discard58(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    var pure45 = pure(Monad0.Applicative0());
    return function(circleData) {
      return function(selector) {
        return bind71(attach2(selector))(function(root3) {
          return bind71(appendTo2(root3)(Svg.value)([viewBox(-10)(-100)(320)(160), classed19("d3svg gup")]))(function(svg2) {
            return bind71(appendTo2(svg2)(Group.value)([]))(function(circleGroup) {
              return bind71(simpleJoin2(circleGroup)(Circle.value)(circleData)(keyIsID_))(function(circles) {
                return discard112(setAttributes2(circles)([strokeColor16(datum_6.color), strokeWidth15(3), fill20("none"), cx6(datum_6.x), cy6(datum_6.y), radius14(10)]))(function() {
                  return pure45(circles);
                });
              });
            });
          });
        });
      };
    };
  };

  // output/D3.Viz.ThreeLittleCircles.Unsafe/index.js
  var coerceIndex2 = unsafeCoerce2;

  // output/D3.Viz.ThreeLittleCircles/index.js
  var classed20 = /* @__PURE__ */ classed(toAttrString);
  var discard59 = /* @__PURE__ */ discard(discardUnit);
  var fill21 = /* @__PURE__ */ fill(toAttrString);
  var cx7 = /* @__PURE__ */ cx(toAttrNumberFnI);
  var cy7 = /* @__PURE__ */ cy(toAttrNumber);
  var radius15 = /* @__PURE__ */ radius(toAttrNumber);
  var drawThreeCircles = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind71 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var simpleJoin2 = simpleJoin(dictSelectionM);
    var discard112 = discard59(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    var pure45 = pure(Monad0.Applicative0());
    return function(selector) {
      return bind71(attach2(selector))(function(root3) {
        return bind71(appendTo2(root3)(Svg.value)([viewBox(-10)(20)(120)(60), classed20("d3svg gup")]))(function(svg2) {
          return bind71(appendTo2(svg2)(Group.value)([]))(function(circleGroup) {
            return bind71(simpleJoin2(circleGroup)(Circle.value)([32, 57, 293])(keyIsID_))(function(circles) {
              return discard112(setAttributes2(circles)([fill21("green"), cx7(function(v) {
                return function(i2) {
                  return toNumber(coerceIndex2(i2)) * 30 + 10;
                };
              }), cy7(50), radius15(10)]))(function() {
                return pure45(circles);
              });
            });
          });
        });
      });
    };
  };

  // output/PSD3.Understanding.SimpleCharts1/index.js
  var bind60 = /* @__PURE__ */ bind(bindHalogenM);
  var liftAff35 = /* @__PURE__ */ liftAff(/* @__PURE__ */ monadAffHalogenM(monadAffAff));
  var discard60 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var modify_41 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var liftEffect46 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var drawThreeCircles2 = /* @__PURE__ */ drawThreeCircles(d3TaglessD3M);
  var drawWithData2 = /* @__PURE__ */ drawWithData(d3TaglessD3M);
  var draw11 = /* @__PURE__ */ draw9(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var draw13 = /* @__PURE__ */ draw10(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var drawQuartet3 = /* @__PURE__ */ drawQuartet(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var pure38 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_16 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "examplesNav";
    }
  })(ordUnit);
  var Initialize46 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var lhsNav = /* @__PURE__ */ (function() {
    return renderTOC({
      title: "Page Contents",
      items: [tocAnchor("section-1")("1. Three Little Circles")(0), tocRoute(new Explore("TLCSimple"))("\u2192 How-to guide")(1), tocAnchor("section-2")("2. Data-Driven Positioning")(0), tocRoute(new Explore("TLCParabola"))("\u2192 How-to guide")(1), tocAnchor("section-3")("3. Bar Charts with Scales")(0), tocRoute(new Explore("BarChartDraw"))("\u2192 How-to guide")(1), tocAnchor("section-4")("4. Line Charts and Paths")(0), tocRoute(new Explore("LineChartDraw"))("\u2192 How-to guide")(1), tocAnchor("section-5")("5. Anscombe's Quartet")(0), tocRoute(new Explore("ScatterPlotQuartet"))("\u2192 How-to guide")(1), tocAnchor("section-6")("6. Next Steps")(0)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    });
  })();
  var handleAction45 = function(v) {
    return bind60(liftAff35(readSnippetFiles("TLCSimple.purs")))(function(threeCircles) {
      return bind60(liftAff35(readSnippetFiles("TLCParabola.purs")))(function(parabola) {
        return bind60(liftAff35(readSnippetFiles("BarChartDraw.purs")))(function(barChart) {
          return bind60(liftAff35(readSnippetFiles("LineChartDraw.purs")))(function(lineChart) {
            return bind60(liftAff35(readSnippetFiles("ScatterPlotQuartet.purs")))(function(quartet) {
              return discard60(modify_41(function(v1) {
                var $30 = {};
                for (var $31 in v1) {
                  if ({}.hasOwnProperty.call(v1, $31)) {
                    $30[$31] = v1[$31];
                  }
                  ;
                }
                ;
                $30.threeCirclesSnippet = new Just(threeCircles);
                $30.parabolaSnippet = new Just(parabola);
                $30.barChartSnippet = new Just(barChart);
                $30.lineChartSnippet = new Just(lineChart);
                $30.quartetSnippet = new Just(quartet);
                return $30;
              }))(function() {
                return bind60(liftEffect46(eval_D3M(drawThreeCircles2("div.three-circles-viz"))))(function() {
                  return bind60(liftEffect46(eval_D3M(drawWithData2([310, 474, 613, 726, 814, 877, 914, 926, 914, 877, 814, 726, 613, 474, 310])("div.parabola-viz"))))(function() {
                    return bind60(liftEffect46(eval_D3M(draw11(monthlySales)("div.barchart-viz"))))(function() {
                      return bind60(liftEffect46(eval_D3M(draw13(sineWaveData)("div.linechart-viz"))))(function() {
                        return bind60(liftEffect46(eval_D3M(drawQuartet3(anscombesQuartet)("div.quartet-viz"))))(function() {
                          return pure38(unit);
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    });
  };
  var _examplesNav5 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render52 = function(state3) {
    return div2([classes(["explanation-page"])])([lhsNav, slot_16(_examplesNav5)(unit)(component45)(SimpleCharts1.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Tutorial: Building Visualizations with PureScript D3")]), p_([text5("We'll show just the very simplest examples of putting elements in the DOM, in this case into an SVG, using the PS<$>D3 grammar.")]), p_([text5("In the How-to manual we'll explain in detail what each of these lines means, but if you're already familiar with D3.js the shape of the code should look very familiar.")])]), section([classes(["tutorial-section"]), id2("section-1")])([h2([classes(["tutorial-section-title"])])([text5("1. Three Little Circles")]), p_([text5("Simplest possible example, just to show syntax.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["three-circles-viz"])])([])]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: TLCSimple.purs")(state3.threeCirclesSnippet))("TLCSimple")]), section([classes(["tutorial-section"]), id2("section-2")])([h2([classes(["tutorial-section-title"])])([text5("2. Data-Driven Positioning")]), p_([text5("This extends the super-simple model in the direction one would go for a more real-world example. In this example, the data is passed in and must match the type specified in the Model. Because the data loses its type information when joined to the DOM elements, we use the datum_ record to provide typed accessors for extracting values.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["parabola-viz"])])([])]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: TLCParabola.purs")(state3.parabolaSnippet))("TLCParabola")]), section([classes(["tutorial-section"]), id2("section-3")])([h2([classes(["tutorial-section-title"])])([text5("3. Bar Charts with Scales")]), p_([text5("Bar charts are ideal for comparing discrete categories or showing changes across time periods. They use rectangular bars with heights or lengths proportional to the values they represent.")]), p_([text5("This example shows monthly sales data using a vertical bar chart. Each bar represents a month, and the height indicates the sales value. The implementation uses D3 scales to map data values to pixel coordinates.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["barchart-viz"])])([])]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: BarChartDraw.purs")(state3.barChartSnippet))("BarChartDraw")]), section([classes(["tutorial-section"]), id2("section-4")])([h2([classes(["tutorial-section-title"])])([text5("4. Line Charts and Paths")]), p_([text5("Line charts are one of the most fundamental visualizations for showing trends over time or continuous data. They excel at displaying patterns, trends, and changes in data series.")]), p_([text5("This example demonstrates a simple line chart showing a sine wave pattern. The implementation uses D3's scale functions to map data values to pixel coordinates, and a line generator to create the SVG path.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["linechart-viz"])])([])]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: LineChartDraw.purs")(state3.lineChartSnippet))("LineChartDraw")]), section([classes(["tutorial-section"]), id2("section-5")])([h2([classes(["tutorial-section-title"])])([text5("5. Anscombe's Quartet")]), p_([text5("This example demonstrates Anscombe's Quartet, a famous dataset created by statistician Francis Anscombe in 1973. All four datasets have nearly identical statistical properties (same mean, variance, correlation, and linear regression line), yet when visualized they reveal completely different patterns.")]), p_([text5("The quartet powerfully illustrates why data visualization is essential. Summary statistics alone can be misleading - you need to look at the data to understand its true structure. This implementation uses a 'small multiples' layout, displaying the four related charts side-by-side for easy comparison.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["quartet-viz"])])([])]), renderCodeExampleSimple(fromMaybe("-- Snippet not defined: ScatterPlotQuartet.purs")(state3.quartetSnippet))("ScatterPlotQuartet")]), section([classes(["tutorial-section", "tutorial-conclusion"]), id2("section-6")])([h2([classes(["tutorial-section-title"])])([text5("6. Next Steps")]), p_([text5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Fusce vulputate eleifend sapien.")]), aside([classes(["tutorial-margin-note"])])([p([classes(["tutorial-margin-note__label"])])([text5("Learn More")]), a([href4("#" + routeToPath(Hierarchies.value)), classes(["tutorial-margin-note__link"])])([text5("Hierarchies \u2192")])]), ul_([li_([text5("Explore hierarchical data visualizations")]), li_([text5("Learn about the Finally Tagless pattern with interpreters")]), li_([text5("Dive into the Code Explorer for complex applications")])]), aside([classes(["tutorial-margin-note"])])([a([href4("#" + routeToPath(Interpreters.value)), classes(["tutorial-margin-note__link"])])([text5("Interpreters \u2192")]), a([href4("#" + routeToPath(CodeExplorer.value)), classes(["tutorial-margin-note__link"])])([text5("Code Explorer \u2192")])])])]);
  };
  var component51 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          threeCirclesSnippet: Nothing.value,
          parabolaSnippet: Nothing.value,
          barChartSnippet: Nothing.value,
          lineChartSnippet: Nothing.value,
          quartetSnippet: Nothing.value
        };
      },
      render: render52,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction45,
        initialize: new Just(Initialize46.value)
      })
    });
  })();

  // output/Data.Number.Format/foreign.js
  function wrap3(method2) {
    return function(d9) {
      return function(num) {
        return method2.apply(num, [d9]);
      };
    };
  }
  var toPrecisionNative = wrap3(Number.prototype.toPrecision);
  var toFixedNative = wrap3(Number.prototype.toFixed);
  var toExponentialNative = wrap3(Number.prototype.toExponential);
  function toString2(num) {
    return num.toString();
  }

  // output/D3.Viz.GroupedBarChart/index.js
  var nub3 = /* @__PURE__ */ nub2(ordString);
  var map55 = /* @__PURE__ */ map(functorArray);
  var maximum6 = /* @__PURE__ */ maximum(ordNumber)(foldableArray);
  var map116 = /* @__PURE__ */ map(functorMaybe);
  var bind61 = /* @__PURE__ */ bind(bindMaybe);
  var classed21 = /* @__PURE__ */ classed(toAttrString);
  var width22 = /* @__PURE__ */ width8(toAttrNumber);
  var height22 = /* @__PURE__ */ height8(toAttrNumber);
  var show36 = /* @__PURE__ */ show(showNumber);
  var x27 = /* @__PURE__ */ x(toAttrNumber);
  var y21 = /* @__PURE__ */ y(toAttrNumber);
  var fill22 = /* @__PURE__ */ fill(toAttrString);
  var strokeColor17 = /* @__PURE__ */ strokeColor(toAttrString);
  var text18 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor9 = /* @__PURE__ */ textAnchor(toAttrString);
  var getStates = /* @__PURE__ */ (function() {
    var $45 = map55(function(v) {
      return v.state;
    });
    return function($46) {
      return nub3($45($46));
    };
  })();
  var getAges = /* @__PURE__ */ (function() {
    var $47 = map55(function(v) {
      return v.age;
    });
    return function($48) {
      return nub3($47($48));
    };
  })();
  var formatSI = function(n) {
    var $43 = n >= 1e6;
    if ($43) {
      return toString2(n / 1e6) + "M";
    }
    ;
    return toString2(n);
  };
  var draw14 = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(data$prime) {
          return function(selector) {
            var dims = {
              width: 900,
              height: 500,
              marginTop: 30,
              marginRight: 10,
              marginBottom: 30,
              marginLeft: 40
            };
            var chartWidth = dims.width - dims.marginLeft - dims.marginRight;
            var chartHeight = dims.height - dims.marginTop - dims.marginBottom;
            var states = getStates(data$prime);
            var ages = getAges(data$prime);
            var maxPop = fromMaybe(0)(maximum6(map55(function(v) {
              return v.population;
            })(data$prime)));
            var stateCount = toNumber(length4(states));
            var ageCount = toNumber(length4(ages));
            var stateWidth = chartWidth / stateCount;
            var barWidth = stateWidth * 0.9 / ageCount;
            var barPadding = stateWidth * 0.1;
            var getStateX = function(state$prime) {
              return fromMaybe(0)(map116(function(i2) {
                return toNumber(i2) * stateWidth;
              })(findIndex(function(s) {
                return s === state$prime;
              })(states)));
            };
            var getAgeOffset = function(age$prime) {
              return fromMaybe(0)(map116(function(i2) {
                return toNumber(i2) * barWidth + barPadding / 2;
              })(findIndex(function(a2) {
                return a2 === age$prime;
              })(ages)));
            };
            var ageColors = ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"];
            var getAgeColor = function(age$prime) {
              return fromMaybe("#999999")(bind61(findIndex(function(a2) {
                return a2 === age$prime;
              })(ages))(function(i2) {
                return index2(ageColors)(i2);
              }));
            };
            return bind116(attach2(selector))(function(v) {
              return bind116(appendTo2(v)(Svg.value)([classed21("grouped-bar-chart"), width22(dims.width), height22(dims.height)]))(function(svg2) {
                return bind116(appendTo2(svg2)(Group.value)([transform([function(v1) {
                  return "translate(" + (show36(dims.marginLeft) + ("," + (show36(dims.marginTop) + ")")));
                }]), classed21("chart")]))(function(chartGroup) {
                  var drawBar = function(d9) {
                    var barHeight = d9.population / maxPop * chartHeight;
                    var barX = getStateX(d9.state) + getAgeOffset(d9.age);
                    var barY = chartHeight - barHeight;
                    return bind116(appendTo2(chartGroup)(Rect.value)([x27(barX), y21(barY), width22(barWidth), height22(barHeight), fill22(getAgeColor(d9.age)), strokeColor17("white"), classed21("bar")]))(function() {
                      return pure45(unit);
                    });
                  };
                  return bind116(traverse_7(drawBar)(data$prime))(function() {
                    return bind116(appendTo2(chartGroup)(Group.value)([transform([function(v1) {
                      return "translate(0," + (show36(chartHeight) + ")");
                    }]), classed21("x-axis")]))(function(xAxis) {
                      var drawStateLabel = function(state$prime) {
                        var labelX = getStateX(state$prime) + stateWidth / 2;
                        return bind116(appendTo2(xAxis)(Text2.value)([x27(labelX), y21(20), text18(state$prime), textAnchor9("middle"), classed21("axis-label")]))(function() {
                          return pure45(unit);
                        });
                      };
                      return bind116(traverse_7(drawStateLabel)(states))(function() {
                        return bind116(appendTo2(chartGroup)(Group.value)([classed21("y-axis")]))(function(yAxis) {
                          var yTicks = [0, maxPop / 4, maxPop / 2, 3 * maxPop / 4, maxPop];
                          var drawYTick = function(value19) {
                            var tickY = chartHeight - value19 / maxPop * chartHeight;
                            return bind116(appendTo2(yAxis)(Text2.value)([x27(-10), y21(tickY + 4), text18(formatSI(value19)), textAnchor9("end"), classed21("axis-label")]))(function() {
                              return pure45(unit);
                            });
                          };
                          return bind116(traverse_7(drawYTick)(yTicks))(function() {
                            return pure45(unit);
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/D3.Viz.MultiLineChart/index.js
  var foldlWithIndex3 = /* @__PURE__ */ foldlWithIndex(foldableWithIndexArray);
  var nub4 = /* @__PURE__ */ nub2(ordString);
  var map56 = /* @__PURE__ */ map(functorArray);
  var maximum7 = /* @__PURE__ */ maximum(ordNumber)(foldableArray);
  var minimum4 = /* @__PURE__ */ minimum(ordNumber)(foldableArray);
  var bind62 = /* @__PURE__ */ bind(bindMaybe);
  var classed22 = /* @__PURE__ */ classed(toAttrString);
  var width23 = /* @__PURE__ */ width8(toAttrNumber);
  var height23 = /* @__PURE__ */ height8(toAttrNumber);
  var show37 = /* @__PURE__ */ show(showNumber);
  var d7 = /* @__PURE__ */ d2(toAttrString);
  var strokeColor18 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth16 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var fill23 = /* @__PURE__ */ fill(toAttrString);
  var x28 = /* @__PURE__ */ x(toAttrNumber);
  var y26 = /* @__PURE__ */ y(toAttrNumber);
  var text19 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor10 = /* @__PURE__ */ textAnchor(toAttrString);
  var linePath = function(chartWidth) {
    return function(chartHeight) {
      return function(maxValue) {
        return function(minValue) {
          return function(points) {
            var yScale = function(v) {
              return chartHeight - (v - minValue) / (maxValue - minValue) * chartHeight;
            };
            var dateCount = toNumber(length4(points));
            var xScale = function(i2) {
              return toNumber(i2) * (chartWidth / (dateCount - 1));
            };
            var pointToString = function(i2) {
              return function(pt) {
                var yPos = yScale(pt.value);
                var xPos = xScale(i2);
                var $48 = i2 === 0;
                if ($48) {
                  return "M " + (toString2(xPos) + (" " + toString2(yPos)));
                }
                ;
                return " L " + (toString2(xPos) + (" " + toString2(yPos)));
              };
            };
            if (points.length === 0) {
              return "";
            }
            ;
            return foldlWithIndex3(function(i2) {
              return function(acc) {
                return function(pt) {
                  return acc + pointToString(i2)(pt);
                };
              };
            })("")(points);
          };
        };
      };
    };
  };
  var groupBySeries = function(data$prime) {
    var series = nub4(map56(function(v) {
      return v.series;
    })(data$prime));
    var getSeriesData = function(s) {
      return filter2(function(d1) {
        return d1.series === s;
      })(data$prime);
    };
    return map56(getSeriesData)(series);
  };
  var getSeries = /* @__PURE__ */ (function() {
    var $53 = map56(function(v) {
      return v.series;
    });
    return function($54) {
      return nub4($53($54));
    };
  })();
  var draw15 = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(data$prime) {
          return function(selector) {
            var dims = {
              width: 900,
              height: 500,
              marginTop: 30,
              marginRight: 150,
              marginBottom: 30,
              marginLeft: 40
            };
            var chartWidth = dims.width - dims.marginLeft - dims.marginRight;
            var chartHeight = dims.height - dims.marginTop - dims.marginBottom;
            var allValues = map56(function(v) {
              return v.value;
            })(data$prime);
            var maxValue = fromMaybe(0)(maximum7(allValues));
            var minValue = fromMaybe(0)(minimum4(allValues));
            var seriesList = getSeries(data$prime);
            var seriesColors = ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf"];
            var getSeriesColor = function(s) {
              return fromMaybe("#999999")(bind62(findIndex(function(x111) {
                return x111 === s;
              })(seriesList))(function(i2) {
                return index2(seriesColors)(i2);
              }));
            };
            return bind116(attach2(selector))(function(v) {
              return bind116(appendTo2(v)(Svg.value)([classed22("multi-line-chart"), width23(dims.width), height23(dims.height)]))(function(svg2) {
                return bind116(appendTo2(svg2)(Group.value)([transform([function(v1) {
                  return "translate(" + (show37(dims.marginLeft) + ("," + (show37(dims.marginTop) + ")")));
                }]), classed22("chart")]))(function(chartGroup) {
                  var drawLine = function(points) {
                    var v1 = head2(points);
                    if (v1 instanceof Nothing) {
                      return pure45(unit);
                    }
                    ;
                    if (v1 instanceof Just) {
                      var pathData = linePath(chartWidth)(chartHeight)(maxValue)(minValue)(points);
                      var color2 = getSeriesColor(v1.value0.series);
                      return bind116(appendTo2(chartGroup)(Path.value)([d7(pathData), strokeColor18(color2), strokeWidth16(2), fill23("none"), classed22("line")]))(function() {
                        return pure45(unit);
                      });
                    }
                    ;
                    throw new Error("Failed pattern match at D3.Viz.MultiLineChart (line 93, column 25 - line 105, column 20): " + [v1.constructor.name]);
                  };
                  var groupedData = groupBySeries(data$prime);
                  return bind116(traverse_7(drawLine)(groupedData))(function() {
                    return bind116(appendTo2(chartGroup)(Group.value)([classed22("y-axis")]))(function(yAxis) {
                      var yTicks = [0, 5, 10, 15];
                      var yScale = function(v1) {
                        return chartHeight - (v1 - minValue) / (maxValue - minValue) * chartHeight;
                      };
                      var drawYTick = function(value19) {
                        var tickY = yScale(value19);
                        return bind116(appendTo2(yAxis)(Text2.value)([x28(-10), y26(tickY + 4), text19(toString2(value19) + "%"), textAnchor10("end"), classed22("axis-label")]))(function() {
                          return pure45(unit);
                        });
                      };
                      return bind116(traverse_7(drawYTick)(yTicks))(function() {
                        return bind116(appendTo2(chartGroup)(Group.value)([transform([function(v1) {
                          return "translate(" + (show37(chartWidth + 20) + ", 0)");
                        }]), classed22("legend")]))(function(legend2) {
                          var drawLegendItem = function(idx) {
                            return function(series$prime) {
                              var yPos = toNumber(idx) * 25;
                              var color2 = getSeriesColor(series$prime);
                              return bind116(appendTo2(legend2)(Rect.value)([x28(0), y26(yPos), width23(15), height23(15), fill23(color2)]))(function() {
                                return bind116(appendTo2(legend2)(Text2.value)([x28(20), y26(yPos + 12), text19(series$prime), textAnchor10("start"), classed22("legend-label")]))(function() {
                                  return pure45(unit);
                                });
                              });
                            };
                          };
                          return bind116(traverse_7(function(t) {
                            return drawLegendItem(fst(t))(snd(t));
                          })(mapWithIndex3(function(i2) {
                            return function(s) {
                              return new Tuple(i2, s);
                            };
                          })(seriesList)))(function() {
                            return pure45(unit);
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/D3.Viz.RadialStackedBar/index.js
  var append20 = /* @__PURE__ */ append(semigroupArray);
  var foldl7 = /* @__PURE__ */ foldl(foldableArray);
  var nub5 = /* @__PURE__ */ nub2(ordString);
  var map57 = /* @__PURE__ */ map(functorArray);
  var compare3 = /* @__PURE__ */ compare(ordString);
  var maximum8 = /* @__PURE__ */ maximum(ordNumber)(foldableArray);
  var bind63 = /* @__PURE__ */ bind(bindMaybe);
  var classed23 = /* @__PURE__ */ classed(toAttrString);
  var width24 = /* @__PURE__ */ width8(toAttrNumber);
  var height24 = /* @__PURE__ */ height8(toAttrNumber);
  var show38 = /* @__PURE__ */ show(showNumber);
  var d8 = /* @__PURE__ */ d2(toAttrString);
  var fill24 = /* @__PURE__ */ fill(toAttrString);
  var fillOpacity8 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var strokeColor19 = /* @__PURE__ */ strokeColor(toAttrString);
  var x29 = /* @__PURE__ */ x(toAttrNumber);
  var y27 = /* @__PURE__ */ y(toAttrNumber);
  var text20 = /* @__PURE__ */ text6(toAttrString);
  var textAnchor11 = /* @__PURE__ */ textAnchor(toAttrString);
  var stackData = function(values2) {
    var folder = function(acc) {
      return function(v) {
        if (acc.last instanceof Nothing) {
          return {
            stack: [{
              start: 0,
              end: v,
              value: v
            }],
            last: new Just(v)
          };
        }
        ;
        if (acc.last instanceof Just) {
          var next2 = acc.last.value0 + v;
          return {
            stack: append20(acc.stack)([{
              start: acc.last.value0,
              end: next2,
              value: v
            }]),
            last: new Just(next2)
          };
        }
        ;
        throw new Error("Failed pattern match at D3.Viz.RadialStackedBar (line 35, column 9 - line 39, column 95): " + [acc.last.constructor.name]);
      };
    };
    var result = foldl7(folder)({
      stack: [],
      last: Nothing.value
    })(values2);
    return result.stack;
  };
  var getStates2 = /* @__PURE__ */ (function() {
    var $53 = map57(function(v) {
      return v.state;
    });
    return function($54) {
      return nub5($53($54));
    };
  })();
  var getStateData = function(state$prime) {
    return function(data$prime) {
      return sortBy(function(a2) {
        return function(b2) {
          return compare3(a2.age)(b2.age);
        };
      })(filter2(function(d1) {
        return d1.state === state$prime;
      })(data$prime));
    };
  };
  var getAges2 = /* @__PURE__ */ (function() {
    var $55 = map57(function(v) {
      return v.age;
    });
    return function($56) {
      return nub5($55($56));
    };
  })();
  var arcPath = function(innerRadius) {
    return function(outerRadius) {
      return function(startAngle) {
        return function(endAngle) {
          var y34 = innerRadius * sin(endAngle);
          var y28 = outerRadius * sin(endAngle);
          var y111 = outerRadius * sin(startAngle);
          var y0 = innerRadius * sin(startAngle);
          var x34 = innerRadius * cos(endAngle);
          var x210 = outerRadius * cos(endAngle);
          var x111 = outerRadius * cos(startAngle);
          var x0 = innerRadius * cos(startAngle);
          var largeArc = (function() {
            var $49 = endAngle - startAngle > pi;
            if ($49) {
              return "1";
            }
            ;
            return "0";
          })();
          return "M " + (toString2(x0) + (" " + (toString2(y0) + (" L " + (toString2(x111) + (" " + (toString2(y111) + (" A " + (toString2(outerRadius) + (" " + (toString2(outerRadius) + (" 0 " + (largeArc + (" 1 " + (toString2(x210) + (" " + (toString2(y28) + (" L " + (toString2(x34) + (" " + (toString2(y34) + (" A " + (toString2(innerRadius) + (" " + (toString2(innerRadius) + (" 0 " + (largeArc + (" 0 " + (toString2(x0) + (" " + (toString2(y0) + " Z")))))))))))))))))))))))))))))));
        };
      };
    };
  };
  var draw16 = function(dictBind) {
    var bind116 = bind(dictBind);
    return function(dictMonadEffect) {
      var Applicative0 = dictMonadEffect.Monad0().Applicative0();
      var pure45 = pure(Applicative0);
      var traverse_7 = traverse_(Applicative0)(foldableArray);
      return function(dictSelectionM) {
        var attach2 = attach(dictSelectionM);
        var appendTo2 = appendTo(dictSelectionM);
        return function(data$prime) {
          return function(selector) {
            var dims = {
              width: 900,
              height: 900,
              innerRadius: 100,
              outerRadius: 400
            };
            var centerX = dims.width / 2;
            var centerY = dims.height / 2;
            var states = getStates2(data$prime);
            var ages = getAges2(data$prime);
            var stateCount = toNumber(length4(states));
            var getStateTotal = function(state$prime) {
              return foldl7(function(acc) {
                return function(d1) {
                  return acc + d1.population;
                };
              })(0)(getStateData(state$prime)(data$prime));
            };
            var maxTotal = fromMaybe(0)(maximum8(map57(getStateTotal)(states)));
            var anglePerState = 2 * pi / stateCount;
            var anglepadding = 0.02 * anglePerState;
            var ageColors = ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"];
            var getAgeColor = function(age$prime) {
              return fromMaybe("#999999")(bind63(findIndex(function(a2) {
                return a2 === age$prime;
              })(ages))(function(i2) {
                return index2(ageColors)(i2);
              }));
            };
            return bind116(attach2(selector))(function(v) {
              return bind116(appendTo2(v)(Svg.value)([classed23("radial-stacked-bar"), width24(dims.width), height24(dims.height)]))(function(svg2) {
                return bind116(appendTo2(svg2)(Group.value)([transform([function(v1) {
                  return "translate(" + (show38(centerX) + ("," + (show38(centerY) + ")")));
                }]), classed23("chart")]))(function(chartGroup) {
                  var drawStateBar = function(stateIdx) {
                    return function(state$prime) {
                      var stateData = getStateData(state$prime)(data$prime);
                      var values2 = map57(function(v1) {
                        return v1.population;
                      })(stateData);
                      var stacked = stackData(values2);
                      var stateTotal = getStateTotal(state$prime);
                      var startAngle = toNumber(stateIdx) * anglePerState + anglepadding;
                      var endAngle = toNumber(stateIdx + 1 | 0) * anglePerState - anglepadding;
                      var drawSegment = function(ageIdx) {
                        return function(seg) {
                          var v1 = index2(stateData)(ageIdx);
                          if (v1 instanceof Nothing) {
                            return pure45(unit);
                          }
                          ;
                          if (v1 instanceof Just) {
                            var radiusScale = function(v2) {
                              return dims.innerRadius + v2 / maxTotal * (dims.outerRadius - dims.innerRadius);
                            };
                            var innerR = radiusScale(seg.start);
                            var outerR = radiusScale(seg.end);
                            var pathData = arcPath(innerR)(outerR)(startAngle)(endAngle);
                            var color2 = getAgeColor(v1.value0.age);
                            return bind116(appendTo2(chartGroup)(Path.value)([d8(pathData), fill24(color2), fillOpacity8(0.8), strokeColor19("#ffffff"), classed23("segment")]))(function() {
                              return pure45(unit);
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at D3.Viz.RadialStackedBar (line 125, column 38 - line 142, column 26): " + [v1.constructor.name]);
                        };
                      };
                      return bind116(traverse_7(function(t) {
                        return drawSegment(fst(t))(snd(t));
                      })(mapWithIndex3(Tuple.create)(stacked)))(function() {
                        return pure45(unit);
                      });
                    };
                  };
                  return bind116(traverse_7(function(t) {
                    return drawStateBar(fst(t))(snd(t));
                  })(mapWithIndex3(Tuple.create)(states)))(function() {
                    var drawStateLabel = function(stateIdx) {
                      return function(state$prime) {
                        var angle = toNumber(stateIdx) * anglePerState + anglePerState / 2 - pi / 2;
                        var labelRadius = dims.outerRadius + 30;
                        var labelX = labelRadius * cos(angle);
                        var labelY = labelRadius * sin(angle);
                        var rotation = angle * 180 / pi;
                        return bind116(appendTo2(chartGroup)(Text2.value)([x29(labelX), y27(labelY), text20(state$prime), textAnchor11("middle"), transform([function(v1) {
                          return "rotate(" + (toString2(rotation) + (" " + (toString2(labelX) + (" " + (toString2(labelY) + ")")))));
                        }]), classed23("state-label")]))(function() {
                          return pure45(unit);
                        });
                      };
                    };
                    return bind116(traverse_7(function(t) {
                      return drawStateLabel(fst(t))(snd(t));
                    })(mapWithIndex3(Tuple.create)(states)))(function() {
                      return pure45(unit);
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
  };

  // output/PSD3.Understanding.SimpleCharts2/index.js
  var bind64 = /* @__PURE__ */ bind(bindHalogenM);
  var liftEffect47 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var draw17 = /* @__PURE__ */ draw14(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var draw18 = /* @__PURE__ */ draw15(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var draw23 = /* @__PURE__ */ draw16(bindD3M)(monadEffD3M)(d3TaglessD3M);
  var pure39 = /* @__PURE__ */ pure(applicativeHalogenM);
  var slot_17 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "examplesNav";
    }
  })(ordUnit);
  var Initialize47 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var handleAction46 = function(v) {
    return bind64(liftEffect47(eval_D3M(draw17(groupedBarData)("div.grouped-bar-viz"))))(function() {
      return bind64(liftEffect47(eval_D3M(draw18(multiLineData)("div.multi-line-viz"))))(function() {
        return bind64(liftEffect47(eval_D3M(draw23(groupedBarData)("div.radial-stacked-viz"))))(function() {
          return pure39(unit);
        });
      });
    });
  };
  var _examplesNav6 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render53 = function(v) {
    return div2([classes(["explanation-page"])])([renderTOC({
      title: "Page Contents",
      items: [tocAnchor("grouped-bar")("1. Grouped Bar Chart")(0), tocAnchor("multi-line")("2. Multi-Line Chart")(0), tocAnchor("radial-stacked")("3. Radial Stacked Bar Chart")(0)],
      image: new Just("images/understanding-bookmark-trees.jpeg")
    }), slot_17(_examplesNav6)(unit)(component45)(SimpleCharts2.value), section([classes(["tutorial-section", "tutorial-intro"])])([h1([classes(["tutorial-title"])])([text5("Simple Charts")]), p_([text5(`Real-world examples of common chart types showing state-level US population data and economic indicators. These charts are "simple" not because the visualizations are trivial, but because they don't include hierarchies, animations, transitions, or physical simulations.`)]), p_([text5("Each example demonstrates best practices for scales, axes, legends, and color coding to create clear and informative visualizations.")])]), section([id2("grouped-bar"), classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("1. Grouped Bar Chart")]), p_([text5("US population by state and age group. This grouped bar chart shows population distribution across 6 states (CA, TX, FL, NY, PA, IL) broken down into 9 age groups. Each state has its own cluster of bars, with colors representing different age groups.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["grouped-bar-viz"])])([])]), p_([text5("The chart uses nested band scales: an outer scale positions each state cluster, and an inner scale positions individual bars within each cluster. The population values are scaled linearly to bar heights, with colors from the Spectral color scheme to distinguish age groups.")])]), section([id2("multi-line"), classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("2. Multi-Line Chart")]), p_([text5("Unemployment rates over time for four major US metro areas: San Francisco, New York, Detroit, and Miami. This chart shows how unemployment fluctuated from 2000 to 2013, clearly illustrating the impact of the 2008 financial crisis and subsequent recovery.")]), div2([classes(["tutorial-viz-container"])])([div2([classes(["multi-line-viz"])])([])]), p_([text5("Each city is represented by a colored line, with a legend on the right for identification. The chart uses SVG path elements for smooth lines, linear scales for time (x-axis) and unemployment percentage (y-axis), and includes axis labels for context.")])]), section([id2("radial-stacked"), classes(["tutorial-section"])])([h2([classes(["tutorial-section-title"])])([text5("3. Radial Stacked Bar Chart")]), p_([text5('The same US state population data as the grouped bar chart, but visualized in polar coordinates. Each state gets a wedge around the circle, with age groups stacked radially from the center outward. This "sunburst-like" layout efficiently uses space and creates an aesthetically pleasing circular composition.')]), div2([classes(["tutorial-viz-container"])])([div2([classes(["radial-stacked-viz"])])([])]), p_([text5("The chart uses polar coordinates with an angular scale (\u03B8) dividing the circle by states and a radial scale (r) for population. Arc paths are generated for each segment, with the same color scheme as the grouped bar chart for consistency. State labels are positioned around the perimeter.")])])]);
  };
  var component52 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return unit;
      },
      render: render53,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction46,
        initialize: new Just(Initialize47.value)
      })
    });
  })();

  // output/PSD3.WealthHealth.WealthHealth/foreign.js
  function log4(message2) {
    console.log(message2);
  }

  // output/D3.Viz.WealthHealth.Unsafe/index.js
  var datum_7 = {
    name: function(d9) {
      return d9.name;
    },
    income: function(d9) {
      return d9.income;
    },
    population: function(d9) {
      return d9.population;
    },
    lifeExpectancy: function(d9) {
      return d9.lifeExpectancy;
    },
    regionColor: function(d9) {
      return d9.regionColor;
    },
    indexNum: function(i2) {
      return i2;
    }
  };
  var coerceDatumToKey2 = function(d9) {
    return datum_7.name(d9);
  };

  // output/D3.Viz.WealthHealth.Draw/index.js
  var width25 = /* @__PURE__ */ width8(toAttrNumber);
  var height25 = /* @__PURE__ */ height8(toAttrNumber);
  var classed24 = /* @__PURE__ */ classed(toAttrString);
  var discard61 = /* @__PURE__ */ discard(discardUnit);
  var cx8 = /* @__PURE__ */ cx(toAttrNumberFnI);
  var cy8 = /* @__PURE__ */ cy(toAttrNumberFnI);
  var radius16 = /* @__PURE__ */ radius(toAttrNumberFnI);
  var fill25 = /* @__PURE__ */ fill(toAttrStringFnI);
  var fillOpacity9 = /* @__PURE__ */ fillOpacity(toAttrNumber);
  var strokeColor20 = /* @__PURE__ */ strokeColor(toAttrString);
  var strokeWidth17 = /* @__PURE__ */ strokeWidth(toAttrNumber);
  var scaleY = function(config) {
    return function(lifeExpectancy) {
      var rangeHeight = config.height - config.marginTop - config.marginBottom;
      var normalized = (lifeExpectancy - 14) / (86 - 14);
      return config.height - config.marginBottom - normalized * rangeHeight;
    };
  };
  var scaleX = function(config) {
    return function(income) {
      var rangeWidth = config.width - config.marginLeft - config.marginRight;
      var logIncome = (function() {
        var $50 = income > 0;
        if ($50) {
          return log(income);
        }
        ;
        return 5.298317;
      })();
      var normalized = (logIncome - 5.298317) / (11.512925 - 5.298317);
      return config.marginLeft + normalized * rangeWidth;
    };
  };
  var scaleRadius = function(population) {
    var normalized = population / 5e9;
    return sqrt(normalized) * 40;
  };
  var defaultConfig = {
    width: 1e3,
    height: 600,
    marginTop: 20,
    marginRight: 20,
    marginBottom: 35,
    marginLeft: 40
  };
  var draw19 = function(dictSelectionM) {
    var Monad0 = dictSelectionM.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind71 = bind(Bind1);
    var attach2 = attach(dictSelectionM);
    var appendTo2 = appendTo(dictSelectionM);
    var pure45 = pure(Monad0.Applicative0());
    var openSelection2 = openSelection(dictSelectionM);
    var updateJoin2 = updateJoin(dictSelectionM);
    var discard112 = discard61(Bind1);
    var setAttributes2 = setAttributes(dictSelectionM);
    return function(selector) {
      return bind71(attach2(selector))(function(v) {
        return bind71(appendTo2(v)(Svg.value)([viewBox(0)(0)(defaultConfig.width)(defaultConfig.height), width25(defaultConfig.width), height25(defaultConfig.height), classed24("wealth-health-viz")]))(function(svg2) {
          return bind71(appendTo2(svg2)(Group.value)([classed24("nations")]))(function(chartGroup) {
            return pure45(function(nations) {
              var calculateAttrs = function(d9) {
                return function(v1) {
                  var pop4 = datum_7.population(d9);
                  var life = datum_7.lifeExpectancy(d9);
                  var income = datum_7.income(d9);
                  var color2 = datum_7.regionColor(d9);
                  return {
                    x: scaleX(defaultConfig)(income),
                    y: scaleY(defaultConfig)(life),
                    r: scaleRadius(pop4),
                    color: color2
                  };
                };
              };
              return bind71(openSelection2(chartGroup)("circle"))(function(enterSelection) {
                return bind71(updateJoin2(enterSelection)(Circle.value)(nations)(coerceDatumToKey2))(function(updateSelections) {
                  return discard112(setAttributes2(updateSelections.exit)([classed24("exit")]))(function() {
                    return discard112(setAttributes2(updateSelections.update)([cx8(function(d9) {
                      return function(i2) {
                        return calculateAttrs(d9)(i2).x;
                      };
                    }), cy8(function(d9) {
                      return function(i2) {
                        return calculateAttrs(d9)(i2).y;
                      };
                    }), radius16(function(d9) {
                      return function(i2) {
                        return calculateAttrs(d9)(i2).r;
                      };
                    }), fill25(function(d9) {
                      return function(i2) {
                        return calculateAttrs(d9)(i2).color;
                      };
                    }), classed24("update")]))(function() {
                      return bind71(appendTo2(updateSelections.enter)(Circle.value)([]))(function(newCircles) {
                        return discard112(setAttributes2(newCircles)([cx8(function(d9) {
                          return function(i2) {
                            return calculateAttrs(d9)(i2).x;
                          };
                        }), cy8(function(d9) {
                          return function(i2) {
                            return calculateAttrs(d9)(i2).y;
                          };
                        }), radius16(function(d9) {
                          return function(i2) {
                            return calculateAttrs(d9)(i2).r;
                          };
                        }), fill25(function(d9) {
                          return function(i2) {
                            return calculateAttrs(d9)(i2).color;
                          };
                        }), fillOpacity9(0.7), strokeColor20("#333"), strokeWidth17(0.5), classed24("nation-circle enter")]))(function() {
                          return pure45(newCircles);
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    };
  };

  // output/PSD3.WealthHealth.Types/index.js
  var EastAsiaAndPacific = /* @__PURE__ */ (function() {
    function EastAsiaAndPacific2() {
    }
    ;
    EastAsiaAndPacific2.value = new EastAsiaAndPacific2();
    return EastAsiaAndPacific2;
  })();
  var Europe = /* @__PURE__ */ (function() {
    function Europe2() {
    }
    ;
    Europe2.value = new Europe2();
    return Europe2;
  })();
  var LatinAmericaAndCaribbean = /* @__PURE__ */ (function() {
    function LatinAmericaAndCaribbean2() {
    }
    ;
    LatinAmericaAndCaribbean2.value = new LatinAmericaAndCaribbean2();
    return LatinAmericaAndCaribbean2;
  })();
  var MiddleEastAndNorthAfrica = /* @__PURE__ */ (function() {
    function MiddleEastAndNorthAfrica2() {
    }
    ;
    MiddleEastAndNorthAfrica2.value = new MiddleEastAndNorthAfrica2();
    return MiddleEastAndNorthAfrica2;
  })();
  var SouthAsia = /* @__PURE__ */ (function() {
    function SouthAsia2() {
    }
    ;
    SouthAsia2.value = new SouthAsia2();
    return SouthAsia2;
  })();
  var SubSaharanAfrica = /* @__PURE__ */ (function() {
    function SubSaharanAfrica2() {
    }
    ;
    SubSaharanAfrica2.value = new SubSaharanAfrica2();
    return SubSaharanAfrica2;
  })();
  var NorthAmerica = /* @__PURE__ */ (function() {
    function NorthAmerica2() {
    }
    ;
    NorthAmerica2.value = new NorthAmerica2();
    return NorthAmerica2;
  })();
  var regionName = function(v) {
    if (v instanceof EastAsiaAndPacific) {
      return "East Asia & Pacific";
    }
    ;
    if (v instanceof Europe) {
      return "Europe & Central Asia";
    }
    ;
    if (v instanceof LatinAmericaAndCaribbean) {
      return "Latin America & Caribbean";
    }
    ;
    if (v instanceof MiddleEastAndNorthAfrica) {
      return "Middle East & North Africa";
    }
    ;
    if (v instanceof SouthAsia) {
      return "South Asia";
    }
    ;
    if (v instanceof SubSaharanAfrica) {
      return "Sub-Saharan Africa";
    }
    ;
    if (v instanceof NorthAmerica) {
      return "North America";
    }
    ;
    throw new Error("Failed pattern match at PSD3.WealthHealth.Types (line 27, column 14 - line 34, column 34): " + [v.constructor.name]);
  };
  var regionColor = function(v) {
    if (v instanceof EastAsiaAndPacific) {
      return "#e41a1c";
    }
    ;
    if (v instanceof Europe) {
      return "#377eb8";
    }
    ;
    if (v instanceof LatinAmericaAndCaribbean) {
      return "#4daf4a";
    }
    ;
    if (v instanceof MiddleEastAndNorthAfrica) {
      return "#984ea3";
    }
    ;
    if (v instanceof SouthAsia) {
      return "#ff7f00";
    }
    ;
    if (v instanceof SubSaharanAfrica) {
      return "#ffff33";
    }
    ;
    if (v instanceof NorthAmerica) {
      return "#a65628";
    }
    ;
    throw new Error("Failed pattern match at PSD3.WealthHealth.Types (line 38, column 15 - line 45, column 28): " + [v.constructor.name]);
  };

  // output/PSD3.WealthHealth.Actions/index.js
  var Initialize48 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var DataLoaded2 = /* @__PURE__ */ (function() {
    function DataLoaded3(value0) {
      this.value0 = value0;
    }
    ;
    DataLoaded3.create = function(value0) {
      return new DataLoaded3(value0);
    };
    return DataLoaded3;
  })();
  var DataLoadFailed2 = /* @__PURE__ */ (function() {
    function DataLoadFailed3(value0) {
      this.value0 = value0;
    }
    ;
    DataLoadFailed3.create = function(value0) {
      return new DataLoadFailed3(value0);
    };
    return DataLoadFailed3;
  })();
  var SetYear = /* @__PURE__ */ (function() {
    function SetYear2(value0) {
      this.value0 = value0;
    }
    ;
    SetYear2.create = function(value0) {
      return new SetYear2(value0);
    };
    return SetYear2;
  })();
  var TogglePlay = /* @__PURE__ */ (function() {
    function TogglePlay2() {
    }
    ;
    TogglePlay2.value = new TogglePlay2();
    return TogglePlay2;
  })();
  var Tick = /* @__PURE__ */ (function() {
    function Tick2() {
    }
    ;
    Tick2.value = new Tick2();
    return Tick2;
  })();
  var HoverNation = /* @__PURE__ */ (function() {
    function HoverNation2(value0) {
      this.value0 = value0;
    }
    ;
    HoverNation2.create = function(value0) {
      return new HoverNation2(value0);
    };
    return HoverNation2;
  })();
  var ToggleNationSelection = /* @__PURE__ */ (function() {
    function ToggleNationSelection2(value0) {
      this.value0 = value0;
    }
    ;
    ToggleNationSelection2.create = function(value0) {
      return new ToggleNationSelection2(value0);
    };
    return ToggleNationSelection2;
  })();
  var SetAnimationSpeed = /* @__PURE__ */ (function() {
    function SetAnimationSpeed2(value0) {
      this.value0 = value0;
    }
    ;
    SetAnimationSpeed2.create = function(value0) {
      return new SetAnimationSpeed2(value0);
    };
    return SetAnimationSpeed2;
  })();
  var Render = /* @__PURE__ */ (function() {
    function Render2() {
    }
    ;
    Render2.value = new Render2();
    return Render2;
  })();

  // output/PSD3.WealthHealth.Data/foreign.js
  function parseRegion(regionName2) {
    switch (regionName2) {
      case "East Asia & Pacific":
        return { constructor: "EastAsiaAndPacific" };
      case "Europe & Central Asia":
        return { constructor: "Europe" };
      case "Latin America & Caribbean":
        return { constructor: "LatinAmericaAndCaribbean" };
      case "Middle East & North Africa":
        return { constructor: "MiddleEastAndNorthAfrica" };
      case "South Asia":
        return { constructor: "SouthAsia" };
      case "Sub-Saharan Africa":
        return { constructor: "SubSaharanAfrica" };
      case "North America":
        return { constructor: "NorthAmerica" };
      default:
        return { constructor: "SubSaharanAfrica" };
    }
  }
  function parseNationsJSON(jsonString) {
    try {
      const rawData = JSON.parse(jsonString);
      return rawData.map((nation) => ({
        name: nation.name,
        region: parseRegion(nation.region),
        income: nation.income || [],
        population: nation.population || [],
        lifeExpectancy: nation.life_expectancy || []
      }));
    } catch (error4) {
      console.error("Failed to parse nations JSON:", error4);
      return [];
    }
  }

  // output/PSD3.WealthHealth.Data/index.js
  var comparing2 = /* @__PURE__ */ comparing(ordNumber);
  var bind65 = /* @__PURE__ */ bind(bindMaybe);
  var pure40 = /* @__PURE__ */ pure(applicativeMaybe);
  var map58 = /* @__PURE__ */ map(functorArray);
  var bind113 = /* @__PURE__ */ bind(bindArray);
  var pure113 = /* @__PURE__ */ pure(applicativeArray);
  var maximum9 = /* @__PURE__ */ maximum(ordInt)(foldableArray);
  var minimum5 = /* @__PURE__ */ minimum(ordInt)(foldableArray);
  var pure210 = /* @__PURE__ */ pure(applicativeAff);
  var nationsDataUrl = "data/nations.json";
  var findBefore = function(targetYear) {
    return function(points) {
      var candidates = find2(function(point) {
        var v = index2(point)(0);
        if (v instanceof Just) {
          return v.value0 <= targetYear;
        }
        ;
        if (v instanceof Nothing) {
          return false;
        }
        ;
        throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 104, column 7 - line 106, column 25): " + [v.constructor.name]);
      })(points);
      if (candidates instanceof Nothing) {
        return head2(points);
      }
      ;
      if (candidates instanceof Just) {
        return new Just(candidates.value0);
      }
      ;
      throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 110, column 5 - line 112, column 23): " + [candidates.constructor.name]);
    };
  };
  var findAfter = function(targetYear) {
    return function(points) {
      var candidates = find2(function(point) {
        var v = index2(point)(0);
        if (v instanceof Just) {
          return v.value0 >= targetYear;
        }
        ;
        if (v instanceof Nothing) {
          return false;
        }
        ;
        throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 119, column 7 - line 121, column 25): " + [v.constructor.name]);
      })(points);
      if (candidates instanceof Nothing) {
        return last(points);
      }
      ;
      if (candidates instanceof Just) {
        return new Just(candidates.value0);
      }
      ;
      throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 125, column 5 - line 127, column 23): " + [candidates.constructor.name]);
    };
  };
  var interpolateValue = function(targetYear) {
    return function(dataPoints) {
      var v = sortBy(comparing2(function(arr) {
        return fromMaybe(0)(index2(arr)(0));
      }))(dataPoints);
      if (v.length === 0) {
        return Nothing.value;
      }
      ;
      var yearNum = toNumber(targetYear);
      var before = findBefore(yearNum)(v);
      var after = findAfter(yearNum)(v);
      if (before instanceof Just && (after instanceof Just && fromMaybe(0)(index2(before.value0)(0)) === yearNum)) {
        return index2(before.value0)(1);
      }
      ;
      if (before instanceof Just && after instanceof Just) {
        return bind65(index2(before.value0)(0))(function(y0) {
          return bind65(index2(after.value0)(0))(function(y111) {
            return bind65(index2(before.value0)(1))(function(v0) {
              return bind65(index2(after.value0)(1))(function(v1) {
                var t = (yearNum - y0) / (y111 - y0);
                return pure40(v0 + t * (v1 - v0));
              });
            });
          });
        });
      }
      ;
      if (before instanceof Just && after instanceof Nothing) {
        return index2(before.value0)(1);
      }
      ;
      if (before instanceof Nothing && after instanceof Just) {
        return index2(after.value0)(1);
      }
      ;
      if (before instanceof Nothing && after instanceof Nothing) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 80, column 7 - line 97, column 36): " + [before.constructor.name, after.constructor.name]);
    };
  };
  var getNationAtYear = function(year) {
    return function(nation) {
      return bind65(interpolateValue(year)(nation.income))(function(income) {
        return bind65(interpolateValue(year)(nation.population))(function(population) {
          return bind65(interpolateValue(year)(nation.lifeExpectancy))(function(lifeExpectancy) {
            return pure40({
              name: nation.name,
              region: nation.region,
              year,
              income,
              population,
              lifeExpectancy
            });
          });
        });
      });
    };
  };
  var dummyNationPoint = function(year) {
    return {
      name: "Unknown",
      region: SubSaharanAfrica.value,
      year,
      income: 1e3,
      population: 1e6,
      lifeExpectancy: 50
    };
  };
  var getAllNationsAtYear = function(year) {
    return function(model) {
      return map58(fromMaybe(dummyNationPoint(year)))(map58(getNationAtYear(year))(model.nations));
    };
  };
  var calculateYearRange = function(nations) {
    var allYears = bind113(nations)(function(nation) {
      return bind113(nation.income)(function(yearValue) {
        var v = index2(yearValue)(0);
        if (v instanceof Just) {
          return pure113(floor2(v.value0));
        }
        ;
        if (v instanceof Nothing) {
          return [];
        }
        ;
        throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 42, column 7 - line 44, column 22): " + [v.constructor.name]);
      });
    });
    var maxYear = fromMaybe(2009)(maximum9(allYears));
    var minYear = fromMaybe(1800)(minimum5(allYears));
    return {
      min: minYear,
      max: maxYear
    };
  };
  var loadNationsData = /* @__PURE__ */ bind(bindAff)(/* @__PURE__ */ get3(string)(nationsDataUrl))(function(result) {
    return pure210((function() {
      if (result instanceof Left) {
        return new Left("Failed to load nations data: " + printError(result.value0));
      }
      ;
      if (result instanceof Right) {
        var nations = parseNationsJSON(result.value0.body);
        var yearRange = calculateYearRange(nations);
        return new Right({
          nations,
          yearRange
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.WealthHealth.Data (line 27, column 8 - line 33, column 35): " + [result.constructor.name]);
    })());
  });

  // output/PSD3.WealthHealth.HTML/index.js
  var map59 = /* @__PURE__ */ map(functorMaybe);
  var show39 = /* @__PURE__ */ show(showInt);
  var type_24 = /* @__PURE__ */ type_17(isPropInputType);
  var value17 = /* @__PURE__ */ value12(isPropString);
  var show112 = /* @__PURE__ */ show(showNumber);
  var renderLegendItem = function(region) {
    return div2([classes(["wealth-health-legend__item"])])([span3([classes(["wealth-health-legend__color"]), style("background-color: " + regionColor(region))])([]), span3([classes(["wealth-health-legend__label"])])([text5(regionName(region))])]);
  };
  var renderControlPanel = function(state3) {
    var toNum = function(s) {
      return fromString(s);
    };
    var toInt = function(s) {
      return map59(floor2)(toNum(s));
    };
    return div2([classes(["wealth-health-controls"])])([div2([classes(["wealth-health-year-display"])])([text5(show39(state3.currentYear))]), div2([classes(["wealth-health-scrubber"])])([label_([text5("Year")]), input2([type_24(InputRange.value), min5(toNumber(fromMaybe(1800)(map59(function(v) {
      return v.yearRange.min;
    })(state3.model)))), max6(toNumber(fromMaybe(2009)(map59(function(v) {
      return v.yearRange.max;
    })(state3.model)))), value17(show39(state3.currentYear)), step4(new Step(1)), onValueInput(function(val) {
      return new SetYear(fromMaybe(state3.currentYear)(toInt(val)));
    }), classes(["wealth-health-scrubber__slider"])])]), div2([classes(["wealth-health-playback"])])([button([classes(["wealth-health-playback__button"]), onClick(function(v) {
      return TogglePlay.value;
    })])([text5((function() {
      if (state3.playing) {
        return "\u23F8 Pause";
      }
      ;
      return "\u25B6 Play";
    })())])]), div2([classes(["wealth-health-speed"])])([label_([text5("Speed")]), input2([type_24(InputRange.value), min5(1), max6(10), value17(show112(state3.animationSpeed)), step4(new Step(0.5)), onValueInput(function(val) {
      return new SetAnimationSpeed(fromMaybe(5)(toNum(val)));
    }), classes(["wealth-health-speed__slider"])]), span3([classes(["wealth-health-speed__value"])])([text5(show112(state3.animationSpeed) + " years/sec")])])]);
  };
  var allRegions = /* @__PURE__ */ (function() {
    return [EastAsiaAndPacific.value, Europe.value, LatinAmericaAndCaribbean.value, MiddleEastAndNorthAfrica.value, SouthAsia.value, SubSaharanAfrica.value, NorthAmerica.value];
  })();
  var renderLegend = /* @__PURE__ */ div2([/* @__PURE__ */ classes(["wealth-health-legend"])])([/* @__PURE__ */ h3_([/* @__PURE__ */ text5("Regions")]), /* @__PURE__ */ div2([/* @__PURE__ */ classes(["wealth-health-legend__items"])])(/* @__PURE__ */ map(functorArray)(renderLegendItem)(allRegions))]);

  // output/PSD3.WealthHealth.State/index.js
  var initialState2 = function(v) {
    return {
      model: Nothing.value,
      currentYear: 1800,
      playing: false,
      hoveredNation: Nothing.value,
      selectedNations: empty7,
      animationSpeed: 5,
      animationSubscriptionId: Nothing.value,
      vizUpdateFn: Nothing.value
    };
  };

  // output/PSD3.WealthHealth.WealthHealth/index.js
  var bind66 = /* @__PURE__ */ bind(bindHalogenM);
  var discard62 = /* @__PURE__ */ discard(discardUnit);
  var discard111 = /* @__PURE__ */ discard62(bindHalogenM);
  var pure41 = /* @__PURE__ */ pure(applicativeHalogenM);
  var show40 = /* @__PURE__ */ show(showInt);
  var modify_42 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var draw20 = /* @__PURE__ */ draw19(d3TaglessD3M);
  var get11 = /* @__PURE__ */ get(monadStateHalogenM);
  var when5 = /* @__PURE__ */ when(applicativeHalogenM);
  var $$void11 = /* @__PURE__ */ $$void(functorHalogenM);
  var forever3 = /* @__PURE__ */ forever(monadRecAff);
  var discard210 = /* @__PURE__ */ discard62(bindAff);
  var liftEffect48 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var member5 = /* @__PURE__ */ member2(ordString);
  var $$delete8 = /* @__PURE__ */ $$delete5(ordString);
  var insert16 = /* @__PURE__ */ insert6(ordString);
  var map60 = /* @__PURE__ */ map(functorArray);
  var bind114 = /* @__PURE__ */ bind(bindMaybe);
  var nationPointToDrawData = function(np) {
    return {
      name: np.name,
      income: np.income,
      population: np.population,
      lifeExpectancy: np.lifeExpectancy,
      regionColor: regionColor(np.region)
    };
  };
  var handleAction47 = function(dictMonadAff) {
    var liftAff36 = liftAff(monadAffHalogenM(dictMonadAff));
    var MonadEffect0 = dictMonadAff.MonadEffect0();
    var liftEffect110 = liftEffect(monadEffectHalogenM(MonadEffect0));
    return function(dictMonadEffect) {
      return function(v) {
        if (v instanceof Initialize48) {
          return bind66(liftAff36(loadNationsData))(function(result) {
            if (result instanceof Left) {
              return discard111(liftEffect110(log4("Error loading data: " + result.value0)))(function() {
                return pure41(unit);
              });
            }
            ;
            if (result instanceof Right) {
              return handleAction47(dictMonadAff)(MonadEffect0)(new DataLoaded2(result.value0));
            }
            ;
            throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 135, column 5 - line 140, column 40): " + [result.constructor.name]);
          });
        }
        ;
        if (v instanceof DataLoaded2) {
          return discard111(liftEffect110(log4("Data loaded: " + (show40(length4(v.value0.nations)) + (" nations, years " + (show40(v.value0.yearRange.min) + ("-" + show40(v.value0.yearRange.max))))))))(function() {
            return discard111(modify_42(function(v1) {
              var $57 = {};
              for (var $58 in v1) {
                if ({}.hasOwnProperty.call(v1, $58)) {
                  $57[$58] = v1[$58];
                }
                ;
              }
              ;
              $57.model = new Just(v.value0);
              return $57;
            }))(function() {
              return discard111(modify_42(function(v1) {
                var $60 = {};
                for (var $61 in v1) {
                  if ({}.hasOwnProperty.call(v1, $61)) {
                    $60[$61] = v1[$61];
                  }
                  ;
                }
                ;
                $60.currentYear = v.value0.yearRange.min;
                return $60;
              }))(function() {
                return discard111(liftAff36(delay(100)))(function() {
                  return discard111(liftEffect110(log4("Initializing visualization...")))(function() {
                    return bind66(liftEffect110(eval_D3M(draw20("#wealth-health-viz"))))(function(v1) {
                      return discard111(modify_42(function(v2) {
                        var $64 = {};
                        for (var $65 in v2) {
                          if ({}.hasOwnProperty.call(v2, $65)) {
                            $64[$65] = v2[$65];
                          }
                          ;
                        }
                        ;
                        $64.vizUpdateFn = new Just(v1);
                        return $64;
                      }))(function() {
                        return discard111(liftEffect110(log4("Visualization initialized, rendering initial frame...")))(function() {
                          return handleAction47(dictMonadAff)(MonadEffect0)(Render.value);
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        }
        ;
        if (v instanceof DataLoadFailed2) {
          return discard111(liftEffect110(log4("Data load failed: " + v.value0)))(function() {
            return pure41(unit);
          });
        }
        ;
        if (v instanceof SetYear) {
          return discard111(modify_42(function(v1) {
            var $69 = {};
            for (var $70 in v1) {
              if ({}.hasOwnProperty.call(v1, $70)) {
                $69[$70] = v1[$70];
              }
              ;
            }
            ;
            $69.currentYear = v.value0;
            return $69;
          }))(function() {
            return handleAction47(dictMonadAff)(MonadEffect0)(Render.value);
          });
        }
        ;
        if (v instanceof TogglePlay) {
          return bind66(get11)(function(state3) {
            var newPlaying = !state3.playing;
            return discard111(modify_42(function(v1) {
              var $73 = {};
              for (var $74 in v1) {
                if ({}.hasOwnProperty.call(v1, $74)) {
                  $73[$74] = v1[$74];
                }
                ;
              }
              ;
              $73.playing = newPlaying;
              return $73;
            }))(function() {
              return discard111(when5(newPlaying)((function() {
                var intervalMs = 1e3 / state3.animationSpeed;
                return bind66(liftEffect110(create3))(function(v1) {
                  return bind66(subscribe2(v1.emitter))(function(subscriptionId) {
                    return discard111(modify_42(function(v2) {
                      var $77 = {};
                      for (var $78 in v2) {
                        if ({}.hasOwnProperty.call(v2, $78)) {
                          $77[$78] = v2[$78];
                        }
                        ;
                      }
                      ;
                      $77.animationSubscriptionId = new Just(subscriptionId);
                      return $77;
                    }))(function() {
                      return $$void11(liftAff36(forkAff(forever3(discard210(delay(intervalMs))(function() {
                        return liftEffect48(notify(v1.listener)(Tick.value));
                      })))));
                    });
                  });
                });
              })()))(function() {
                return when5(!newPlaying)(bind66(get11)(function(state$prime) {
                  if (state$prime.animationSubscriptionId instanceof Nothing) {
                    return pure41(unit);
                  }
                  ;
                  if (state$prime.animationSubscriptionId instanceof Just) {
                    return discard111(unsubscribe2(state$prime.animationSubscriptionId.value0))(function() {
                      return modify_42(function(v1) {
                        var $83 = {};
                        for (var $84 in v1) {
                          if ({}.hasOwnProperty.call(v1, $84)) {
                            $83[$84] = v1[$84];
                          }
                          ;
                        }
                        ;
                        $83.animationSubscriptionId = Nothing.value;
                        return $83;
                      });
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 184, column 7 - line 188, column 60): " + [state$prime.animationSubscriptionId.constructor.name]);
                }));
              });
            });
          });
        }
        ;
        if (v instanceof Tick) {
          return bind66(get11)(function(state3) {
            if (state3.model instanceof Nothing) {
              return pure41(unit);
            }
            ;
            if (state3.model instanceof Just) {
              var nextYear = state3.currentYear + 1 | 0;
              return discard111((function() {
                var $88 = nextYear > state3.model.value0.yearRange.max;
                if ($88) {
                  return modify_42(function(v1) {
                    var $89 = {};
                    for (var $90 in v1) {
                      if ({}.hasOwnProperty.call(v1, $90)) {
                        $89[$90] = v1[$90];
                      }
                      ;
                    }
                    ;
                    $89.currentYear = state3.model.value0.yearRange.min;
                    return $89;
                  });
                }
                ;
                return modify_42(function(v1) {
                  var $92 = {};
                  for (var $93 in v1) {
                    if ({}.hasOwnProperty.call(v1, $93)) {
                      $92[$93] = v1[$93];
                    }
                    ;
                  }
                  ;
                  $92.currentYear = nextYear;
                  return $92;
                });
              })())(function() {
                return handleAction47(dictMonadAff)(MonadEffect0)(Render.value);
              });
            }
            ;
            throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 192, column 5 - line 201, column 28): " + [state3.model.constructor.name]);
          });
        }
        ;
        if (v instanceof HoverNation) {
          return modify_42(function(v1) {
            var $96 = {};
            for (var $97 in v1) {
              if ({}.hasOwnProperty.call(v1, $97)) {
                $96[$97] = v1[$97];
              }
              ;
            }
            ;
            $96.hoveredNation = v.value0;
            return $96;
          });
        }
        ;
        if (v instanceof ToggleNationSelection) {
          return modify_42(function(s) {
            var newSelected = (function() {
              var $100 = member5(v.value0)(s.selectedNations);
              if ($100) {
                return $$delete8(v.value0)(s.selectedNations);
              }
              ;
              return insert16(v.value0)(s.selectedNations);
            })();
            var $101 = {};
            for (var $102 in s) {
              if ({}.hasOwnProperty.call(s, $102)) {
                $101[$102] = s[$102];
              }
              ;
            }
            ;
            $101.selectedNations = newSelected;
            return $101;
          });
        }
        ;
        if (v instanceof SetAnimationSpeed) {
          return modify_42(function(v1) {
            var $105 = {};
            for (var $106 in v1) {
              if ({}.hasOwnProperty.call(v1, $106)) {
                $105[$106] = v1[$106];
              }
              ;
            }
            ;
            $105.animationSpeed = v.value0;
            return $105;
          });
        }
        ;
        if (v instanceof Render) {
          return bind66(get11)(function(state3) {
            if (state3.model instanceof Just && state3.vizUpdateFn instanceof Just) {
              var nations = getAllNationsAtYear(state3.currentYear)(state3.model.value0);
              return discard111(liftEffect110(log4("Rendering " + (show40(length4(nations)) + (" nations for year " + show40(state3.currentYear))))))(function() {
                var drawData = map60(nationPointToDrawData)(nations);
                return bind66(liftEffect110(eval_D3M(state3.vizUpdateFn.value0(drawData))))(function() {
                  return pure41(unit);
                });
              });
            }
            ;
            if (state3.model instanceof Nothing) {
              return liftEffect110(log4("No model available for rendering"));
            }
            ;
            if (state3.vizUpdateFn instanceof Nothing) {
              return liftEffect110(log4("No update function available"));
            }
            ;
            throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 221, column 5 - line 229, column 68): " + [state3.model.constructor.name, state3.vizUpdateFn.constructor.name]);
          });
        }
        ;
        throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 131, column 16 - line 229, column 68): " + [v.constructor.name]);
      };
    };
  };
  var getNationData = function(nationName) {
    return function(year) {
      return function(model) {
        return bind114(find2(function(n) {
          return n.name === nationName;
        })(model.nations))(function(nationRawData) {
          return getNationAtYear(year)(nationRawData);
        });
      };
    };
  };
  var formatPopulation = function(n) {
    var millions = n / 1e6;
    return show40(floor2(millions)) + "M";
  };
  var formatNumber = function(n) {
    return show40(floor2(n));
  };
  var renderTooltip = function(state3) {
    return function(model) {
      if (state3.hoveredNation instanceof Nothing) {
        return text5("");
      }
      ;
      if (state3.hoveredNation instanceof Just) {
        var v = getNationData(state3.hoveredNation.value0)(state3.currentYear)(model);
        if (v instanceof Nothing) {
          return text5("");
        }
        ;
        if (v instanceof Just) {
          return div2([classes(["wealth-health-tooltip"])])([h4_([text5(v.value0.name)]), div_([text5("Region: " + regionName(v.value0.region))]), div_([text5("Income: $" + formatNumber(v.value0.income))]), div_([text5("Population: " + formatPopulation(v.value0.population))]), div_([text5("Life Expectancy: " + (formatNumber(v.value0.lifeExpectancy) + " years"))])]);
        }
        ;
        throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 90, column 7 - line 100, column 14): " + [v.constructor.name]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 86, column 3 - line 100, column 14): " + [state3.hoveredNation.constructor.name]);
    };
  };
  var render54 = function(state3) {
    return div2([classes(["wealth-health-page"])])([header([classes(["wealth-health-header"])])([h1_([text5("The Wealth & Health of Nations")]), p_([text5("An animated exploration of income, life expectancy, and population across 180 nations from 1800 to 2009")])]), div2([classes(["wealth-health-content"])])([aside([classes(["wealth-health-sidebar"])])([renderControlPanel(state3), renderLegend]), main([classes(["wealth-health-visualization"])])([(function() {
      if (state3.model instanceof Nothing) {
        return div2([classes(["wealth-health-loading"])])([text5("Loading data...")]);
      }
      ;
      if (state3.model instanceof Just) {
        return div2([classes(["wealth-health-viz-wrapper"])])([div2([id2("wealth-health-viz"), classes(["wealth-health-viz-container"])])([]), renderTooltip(state3)(state3.model.value0)]);
      }
      ;
      throw new Error("Failed pattern match at PSD3.WealthHealth.WealthHealth (line 65, column 15 - line 78, column 22): " + [state3.model.constructor.name]);
    })()])])]);
  };
  var component53 = function(dictMonadAff) {
    var handleAction1 = handleAction47(dictMonadAff)(dictMonadAff.MonadEffect0());
    return function(dictMonadEffect) {
      return mkComponent({
        initialState: initialState2,
        render: render54,
        "eval": mkEval({
          handleQuery: defaultEval.handleQuery,
          receive: defaultEval.receive,
          finalize: defaultEval.finalize,
          handleAction: handleAction1,
          initialize: new Just(Initialize48.value)
        })
      });
    };
  };

  // output/PSD3.WealthHealth.WealthHealthWrapper/index.js
  var slot_18 = /* @__PURE__ */ slot_()({
    reflectSymbol: function() {
      return "wealthHealth";
    }
  })(ordUnit);
  var _wealthHealth = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var render55 = function(dictMonadAff) {
    var component110 = component53(dictMonadAff)(dictMonadAff.MonadEffect0());
    return function(dictMonadEffect) {
      return function(v) {
        return div2([classes(["wealth-health-wrapper"])])([slot_18(_wealthHealth)(unit)(component110)(unit)]);
      };
    };
  };
  var component54 = function(dictMonadAff) {
    var render1 = render55(dictMonadAff)(dictMonadAff.MonadEffect0());
    return function(dictMonadEffect) {
      return mkComponent({
        initialState: function(v) {
          return unit;
        },
        render: render1,
        "eval": mkEval(defaultEval)
      });
    };
  };

  // output/Data.Char/index.js
  var toCharCode2 = /* @__PURE__ */ fromEnum(boundedEnumChar);
  var fromCharCode3 = /* @__PURE__ */ toEnum(boundedEnumChar);

  // output/PSD3.Wizard.Datasets/index.js
  var Beginner = /* @__PURE__ */ (function() {
    function Beginner2() {
    }
    ;
    Beginner2.value = new Beginner2();
    return Beginner2;
  })();
  var Intermediate = /* @__PURE__ */ (function() {
    function Intermediate2() {
    }
    ;
    Intermediate2.value = new Intermediate2();
    return Intermediate2;
  })();
  var Advanced = /* @__PURE__ */ (function() {
    function Advanced2() {
    }
    ;
    Advanced2.value = new Advanced2();
    return Advanced2;
  })();
  var sineWaveDataset = /* @__PURE__ */ (function() {
    return {
      id: "sinewave",
      name: "Sine Wave",
      description: "Smooth wave pattern - great for line charts and transitions",
      difficulty: Beginner.value,
      fields: [{
        name: "x",
        fieldType: "Number"
      }, {
        name: "y",
        fieldType: "Number"
      }],
      dataPreview: ["{ x: 0.0, y: 100.0 }", "{ x: 5.0, y: 125.0 }", "{ x: 10.0, y: 145.0 }", "..."],
      suggestedViz: "Line chart or area chart",
      educationalNote: "Demonstrates smooth continuous data - perfect for learning line generators and paths."
    };
  })();
  var showDifficulty = {
    show: function(v) {
      if (v instanceof Beginner) {
        return "Beginner";
      }
      ;
      if (v instanceof Intermediate) {
        return "Intermediate";
      }
      ;
      if (v instanceof Advanced) {
        return "Advanced";
      }
      ;
      throw new Error("Failed pattern match at PSD3.Wizard.Datasets (line 32, column 1 - line 35, column 29): " + [v.constructor.name]);
    }
  };
  var scatterDataset = /* @__PURE__ */ (function() {
    return {
      id: "scatter",
      name: "Scatter Plot",
      description: "Random points in 2D space - perfect for your first visualization",
      difficulty: Beginner.value,
      fields: [{
        name: "x",
        fieldType: "Number"
      }, {
        name: "y",
        fieldType: "Number"
      }],
      dataPreview: ["{ x: 10.0, y: 20.0 }", "{ x: 25.0, y: 45.0 }", "{ x: 40.0, y: 30.0 }", "..."],
      suggestedViz: "Scatter plot with circles",
      educationalNote: "Start here! Simple 2D data is the easiest way to learn PSD3's data binding patterns."
    };
  })();
  var multiLineDataset = /* @__PURE__ */ (function() {
    return {
      id: "multiline",
      name: "Unemployment Rates",
      description: "Unemployment rates for 4 cities over time - multi-series data",
      difficulty: Intermediate.value,
      fields: [{
        name: "series",
        fieldType: "String"
      }, {
        name: "date",
        fieldType: "String"
      }, {
        name: "value",
        fieldType: "Number"
      }],
      dataPreview: ['{ series: "San Francisco", date: "2000-01", value: 3.5 }', '{ series: "San Francisco", date: "2002-01", value: 5.2 }', '{ series: "New York", date: "2000-01", value: 5.3 }', "..."],
      suggestedViz: "Multi-line chart with legend",
      educationalNote: "Time-series data with multiple series - demonstrates data grouping by series and line generators."
    };
  })();
  var groupedBarDataset = /* @__PURE__ */ (function() {
    return {
      id: "groupedbar",
      name: "State Demographics",
      description: "Population by state and age group - for grouped/stacked visualizations",
      difficulty: Intermediate.value,
      fields: [{
        name: "state",
        fieldType: "String"
      }, {
        name: "age",
        fieldType: "String"
      }, {
        name: "population",
        fieldType: "Number"
      }],
      dataPreview: ['{ state: "CA", age: "<10", population: 5038433.0 }', '{ state: "CA", age: "10-19", population: 5055706.0 }', '{ state: "TX", age: "<10", population: 4131018.0 }', "..."],
      suggestedViz: "Grouped bar chart or stacked bar chart",
      educationalNote: "Multi-dimensional data with categorical and numerical fields - great for learning data nesting and grouping patterns."
    };
  })();
  var eqDifficulty = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof Beginner && y28 instanceof Beginner) {
          return true;
        }
        ;
        if (x30 instanceof Intermediate && y28 instanceof Intermediate) {
          return true;
        }
        ;
        if (x30 instanceof Advanced && y28 instanceof Advanced) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var barChartDataset = /* @__PURE__ */ (function() {
    return {
      id: "barchart",
      name: "Monthly Sales",
      description: "12 months of sales data - classic bar chart material",
      difficulty: Beginner.value,
      fields: [{
        name: "x",
        fieldType: "Number"
      }, {
        name: "y",
        fieldType: "Number"
      }],
      dataPreview: ["{ x: 0.0, y: 30.0 }", "{ x: 1.0, y: 45.0 }", "{ x: 2.0, y: 60.0 }", "..."],
      suggestedViz: "Bar chart or column chart",
      educationalNote: "Perfect for learning data joins - each bar represents one data point."
    };
  })();
  var anscombeDataset = /* @__PURE__ */ (function() {
    return {
      id: "anscombe",
      name: "Anscombe's Quartet",
      description: "Four datasets with identical statistics but very different patterns",
      difficulty: Beginner.value,
      fields: [{
        name: "x",
        fieldType: "Number"
      }, {
        name: "y",
        fieldType: "Number"
      }],
      dataPreview: ["-- Dataset 1:", "{ x: 10.0, y: 8.04 }", "{ x: 8.0, y: 6.95 }", "..."],
      suggestedViz: "Four small multiples scatter plots",
      educationalNote: "Famous dataset showing why visualization matters - all four have identical mean, variance, and correlation, but look completely different when plotted!"
    };
  })();
  var allDatasets = [scatterDataset, sineWaveDataset, barChartDataset, anscombeDataset, groupedBarDataset, multiLineDataset];

  // output/PSD3.Wizard.FileDownload/foreign.js
  var createZip = function() {
    return new JSZip();
  };
  var addFile = function(zip2) {
    return function(filename) {
      return function(content3) {
        return function() {
          zip2.file(filename, content3);
        };
      };
    };
  };
  var downloadZipImpl = function(zip2) {
    return function(zipFilename) {
      return function(onError, onSuccess) {
        zip2.generateAsync({ type: "blob" }).then(function(blob) {
          const url = URL.createObjectURL(blob);
          const link4 = document.createElement("a");
          link4.href = url;
          link4.download = zipFilename;
          document.body.appendChild(link4);
          link4.click();
          document.body.removeChild(link4);
          setTimeout(function() {
            URL.revokeObjectURL(url);
          }, 100);
          onSuccess();
        }).catch(function(error4) {
          onError(error4);
        });
        return function(cancelError, onCancelerError, onCancelerSuccess) {
          onCancelerSuccess();
        };
      };
    };
  };
  var copyToClipboard = function(text21) {
    return function() {
      try {
        if (navigator.clipboard && window.isSecureContext) {
          navigator.clipboard.writeText(text21);
          return true;
        } else {
          const textArea = document.createElement("textarea");
          textArea.value = text21;
          textArea.style.position = "fixed";
          textArea.style.left = "-999999px";
          textArea.style.top = "-999999px";
          document.body.appendChild(textArea);
          textArea.focus();
          textArea.select();
          const success = document.execCommand("copy");
          document.body.removeChild(textArea);
          return success;
        }
      } catch (error4) {
        console.error("Failed to copy to clipboard:", error4);
        return false;
      }
    };
  };

  // output/PSD3.Wizard.FileDownload/index.js
  var append21 = /* @__PURE__ */ append(semigroupArray);
  var eq16 = /* @__PURE__ */ eq(/* @__PURE__ */ eqArray(eqString));
  var append110 = /* @__PURE__ */ append(semigroupString);
  var map61 = /* @__PURE__ */ map(functorArray);
  var bind67 = /* @__PURE__ */ bind(bindAff);
  var liftEffect49 = /* @__PURE__ */ liftEffect(monadEffectAff);
  var discard63 = /* @__PURE__ */ discard(discardUnit)(bindAff);
  var for_3 = /* @__PURE__ */ for_(applicativeEffect)(foldableArray);
  var formatFilesForClipboard = function(files2) {
    var replicateArray = function(n) {
      return function(x30) {
        var $14 = n <= 0;
        if ($14) {
          return [];
        }
        ;
        return append21([x30])(replicateArray(n - 1 | 0)(x30));
      };
    };
    var intercalateArray = function(sep) {
      return function(arr) {
        return maybe("")(function(v) {
          var $16 = eq16(v.tail)([]);
          if ($16) {
            return v.head;
          }
          ;
          return v.head + (sep + intercalateArray(sep)(v.tail));
        })(uncons2(arr));
      };
    };
    var repeatString = function(str2) {
      return function(n) {
        return foldl2(append110)("")(replicateArray(n)(str2));
      };
    };
    var separator = "\n" + (repeatString("=")(80) + "\n");
    var formatFile = function(file) {
      return "File: " + (file.filename + ("\n" + (repeatString("-")(80) + ("\n" + file.content))));
    };
    var fileTexts = map61(formatFile)(files2);
    return intercalateArray(separator)(fileTexts);
  };
  var downloadAsZip = function(projectName) {
    return function(files2) {
      return bind67(liftEffect49(createZip))(function(zip2) {
        return discard63(liftEffect49(for_3(files2)(function(file) {
          return addFile(zip2)(file.filename)(file.content);
        })))(function() {
          return fromEffectFnAff(downloadZipImpl(zip2)(projectName + ".zip"));
        });
      });
    };
  };
  var copyFilesToClipboard = function(files2) {
    var formatted = formatFilesForClipboard(files2);
    return copyToClipboard(formatted);
  };

  // output/PSD3.Wizard.Templates/index.js
  var map62 = /* @__PURE__ */ map(functorArray);
  var map117 = /* @__PURE__ */ map(functorMaybe);
  var intercalate7 = /* @__PURE__ */ intercalate3(monoidString);
  var generateRecordType = function(fields) {
    var fieldLines = map62(function(f) {
      return f.name + (" :: " + f.fieldType);
    })(fields);
    return joinWith("\n  , ")(fieldLines);
  };
  var generateUnsafe = function(vizName) {
    return function(dataTypeName) {
      return function(fields) {
        var recordType = generateRecordType(fields);
        return "module " + (vizName + (".Unsafe where\n\nimport PSD3.Internal.Types (Datum_, Index_)\nimport Unsafe.Coerce (unsafeCoerce)\n\n-- | Data type for this visualization\ntype " + (dataTypeName + (" =\n  { " + (recordType + ("\n  }\n\n-- | Coerce Datum_ to " + (dataTypeName + ("\n-- This is safe because D3's data join ensures Datum_ contains\n-- the data we originally passed to simpleJoin/updateJoin\ncoerceTo" + (dataTypeName + (" :: Datum_ -> " + (dataTypeName + ("\ncoerceTo" + (dataTypeName + " = unsafeCoerce\n\n-- | Coerce Index_ to Int (always provided by D3)\ncoerceIndex :: Index_ -> Int\ncoerceIndex = unsafeCoerce\n")))))))))))));
      };
    };
  };
  var generateModel = function(vizName) {
    return function(dataTypeName) {
      return function(fields) {
        return function(exampleData) {
          var recordType = generateRecordType(fields);
          return "module " + (vizName + (".Model where\n\n-- | Data type for this visualization\n-- Re-exported from Unsafe for use in type signatures\ntype " + (dataTypeName + (" =\n  { " + (recordType + ("\n  }\n\n-- | Example data for testing\nexampleData :: Array " + (dataTypeName + ("\nexampleData =\n  " + (exampleData + "\n")))))))));
        };
      };
    };
  };
  var generateMain = function(vizName) {
    return function(dataTypeName) {
      return "module Main where\n\nimport Prelude\nimport Effect (Effect)\nimport " + (vizName + (".Draw (run)\nimport " + (vizName + ".Model (exampleData)\n\nmain :: Effect Unit\nmain = run exampleData\n")));
    };
  };
  var generateHTML = function(vizName) {
    return '<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>' + (vizName + (' - PSD3 Visualization</title>\n  <style>\n    body {\n      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      background-color: #f5f5f5;\n    }\n    .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      background-color: white;\n      padding: 30px;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    h1 {\n      color: #333;\n      margin-top: 0;\n    }\n    #chart {\n      margin: 20px 0;\n      border: 1px solid #e0e0e0;\n      border-radius: 4px;\n      background-color: #fafafa;\n    }\n    svg {\n      display: block;\n    }\n  </style>\n</head>\n<body>\n  <div class="container">\n    <h1>' + (vizName + `</h1>
    <div id="chart"></div>
  </div>

  <!-- D3.js from CDN -->
  <script src="https://cdn.jsdelivr.net/npm/d3@7.9.0/dist/d3.min.js"><\/script>

  <!-- Your bundled PureScript code -->
  <!-- After building with 'spago bundle', include your bundle here: -->
  <!-- <script src="./bundle.js"><\/script> -->
</body>
</html>
`)));
  };
  var generateDatumType = function(fields) {
    var typeLines = map62(function(f) {
      return f.name + (" :: Datum_ -> " + f.fieldType);
    })(fields);
    return joinWith("\n  , ")(typeLines);
  };
  var generateREADME = function(vizName) {
    return function(dataTypeName) {
      return function(fields) {
        var firstField = fromMaybe("x")(map117(function(f) {
          return f.name;
        })(head2(fields)));
        var fieldList = intercalate7("\n")(map62(function(f) {
          return "- " + (f.name + (": " + f.fieldType));
        })(fields));
        var exampleFields = intercalate7(", ")(map62(function(f) {
          return f.name + ": 0.0";
        })(fields));
        var datumType = generateDatumType(fields);
        return "# " + (vizName + ("\n\nPSD3 visualization scaffold generated by the web wizard.\n\n## Files Generated\n\n- **Unsafe.purs** - Type coercion functions (isolates all unsafeCoerce calls)\n- **Model.purs** - Data type definitions\n- **Draw.purs** - Main visualization code\n- **index.html** - HTML page with D3.js loaded from CDN\n\n## Data Type\n\n```purescript\ntype " + (dataTypeName + (" =\n  { " + (fieldList + ("\n  }\n```\n\n## Quick Start\n\n1. **Add your data** in `Model.purs`:\n   ```purescript\n   exampleData :: Array " + (dataTypeName + ("\n   exampleData =\n     [ { " + (exampleFields + (" }\n     -- Add more data points\n     ]\n   ```\n\n2. **Customize the visualization** in `Draw.purs`\n   - Modify the `draw` function to create your desired chart\n   - Use the `datum_` accessor to work with your data safely\n   - See the commented examples for using data fields in attributes\n\n3. **Build and run**:\n   ```bash\n   # Compile the PureScript\n   spago build\n\n   # Bundle for the browser (if you created Main.purs)\n   spago bundle --module Main --outfile bundle.js\n\n   # Open index.html in your browser\n   open index.html\n   ```\n\n## The datum_ Pattern\n\nThe `datum_` accessor record provides type-safe access to your data:\n\n```purescript\ndatum_ ::\n  { " + (datumType + ("\n  , index :: Index_ -> Int\n  }\n```\n\nUse it in attributes like this:\n```purescript\nA.cx (\\\\(d :: Datum_) _ -> datum_." + (firstField + " d)\n```\n\nThe type annotations `(d :: Datum_)` and `(i :: Index_)` help PureScript's type checker\nfind the correct ToAttr instance.\n\n## Learn More\n\n- [PSD3 Documentation](https://github.com/afcondon/PureScript-Tagless-D3)\n- [Wizard Guide](../../docs/wizard-guide.md)\n")))))))))))));
      };
    };
  };
  var generateAccessors = function(fields) {
    return function(coerceFnName) {
      var accessorLines = map62(function(f) {
        return f.name + (": _." + (f.name + (" <<< " + coerceFnName)));
      })(fields);
      return joinWith("\n  , ")(accessorLines);
    };
  };
  var generateDraw = function(vizName) {
    return function(dataTypeName) {
      return function(fields) {
        return function(coerceFnName) {
          var firstField = fromMaybe("x")(map117(function(f) {
            return f.name;
          })(head2(fields)));
          var datumType = generateDatumType(fields);
          var accessors = generateAccessors(fields)(coerceFnName);
          return "module " + (vizName + (".Draw where\n\nimport Prelude\n\nimport PSD3\nimport PSD3.Attributes as A\nimport PSD3.Internal.FFI (keyIsID_)\nimport " + (vizName + (".Unsafe (" + (coerceFnName + (", coerceIndex)\nimport " + (vizName + (".Model (" + (dataTypeName + (")\nimport Data.Int (toNumber)\nimport Effect (Effect)\n\n-- | Accessor record for working with bound data\ndatum_ ::\n  { " + (datumType + ("\n  , index :: Index_ -> Int\n  }\ndatum_ =\n  { " + (accessors + ("\n  , index: coerceIndex\n  }\n\n-- | Main drawing function\ndraw :: forall m. SelectionM D3Selection_ m => Array " + (dataTypeName + (' -> Selector D3Selection_ -> m Unit\ndraw dataPoints selector = do\n  (root :: D3Selection_) <- attach selector\n  svg <- appendTo root Svg\n    [ A.width 800.0\n    , A.height 600.0\n    , A.viewBox 0.0 0.0 800.0 600.0\n    ]\n\n  -- Example: Simple data join\n  -- Replace this with your visualization logic\n  circles <- simpleJoin svg Circle dataPoints keyIsID_\n  setAttributes circles\n    [ A.cx (\\\\(_ :: Datum_) (i :: Index_) -> toNumber (datum_.index i) * 50.0)\n    , A.cy 300.0\n    , A.radius 20.0\n    , A.fill "steelblue"\n    ]\n\n  -- Examples of using your data fields in attributes:\n  -- A.cx (\\\\(d :: Datum_) _ -> datum_.' + (firstField + (' d)  -- Use first data field\n  -- A.fill (\\\\(d :: Datum_) (i :: Index_) -> if datum_.index i > 5 then "red" else "blue")\n  -- A.radius (\\\\(d :: Datum_) _ -> datum_.' + (firstField + (" d * 2.0)  -- Scale by data\n\n  pure unit\n\n-- | Entry point\nrun :: Array " + (dataTypeName + ' -> Effect Unit\nrun dataPoints = eval_D3M $ draw dataPoints "#chart"\n')))))))))))))))))))));
        };
      };
    };
  };

  // output/PSD3.Wizard.Generator/index.js
  var intercalate8 = /* @__PURE__ */ intercalate3(monoidString);
  var map63 = /* @__PURE__ */ map(functorArray);
  var append111 = /* @__PURE__ */ append(semigroupArray);
  var sineWaveData2 = "[ { x: 0.0, y: 100.0 }\n  , { x: 5.0, y: 125.0 }\n  , { x: 10.0, y: 145.0 }\n  , { x: 15.0, y: 159.0 }\n  , { x: 20.0, y: 165.0 }\n  , { x: 25.0, y: 159.0 }\n  , { x: 30.0, y: 145.0 }\n  , { x: 35.0, y: 125.0 }\n  , { x: 40.0, y: 100.0 }\n  , { x: 45.0, y: 75.0 }\n  , { x: 50.0, y: 55.0 }\n  , { x: 55.0, y: 41.0 }\n  , { x: 60.0, y: 35.0 }\n  , { x: 65.0, y: 41.0 }\n  , { x: 70.0, y: 55.0 }\n  , { x: 75.0, y: 75.0 }\n  , { x: 80.0, y: 100.0 }\n  ]";
  var scatterData = "[ { x: 10.0, y: 20.0 }\n  , { x: 25.0, y: 45.0 }\n  , { x: 40.0, y: 30.0 }\n  , { x: 55.0, y: 60.0 }\n  , { x: 70.0, y: 40.0 }\n  , { x: 85.0, y: 70.0 }\n  , { x: 100.0, y: 55.0 }\n  , { x: 115.0, y: 80.0 }\n  , { x: 130.0, y: 65.0 }\n  , { x: 145.0, y: 90.0 }\n  ]";
  var multiLineData2 = '[ { series: "San Francisco", date: "2000-01", value: 3.5 }\n  , { series: "San Francisco", date: "2002-01", value: 5.2 }\n  , { series: "San Francisco", date: "2004-01", value: 4.8 }\n  , { series: "San Francisco", date: "2006-01", value: 3.9 }\n  , { series: "San Francisco", date: "2008-01", value: 4.2 }\n  , { series: "San Francisco", date: "2010-01", value: 8.4 }\n  , { series: "San Francisco", date: "2012-01", value: 6.8 }\n  , { series: "New York", date: "2000-01", value: 5.3 }\n  , { series: "New York", date: "2002-01", value: 7.2 }\n  , { series: "New York", date: "2004-01", value: 6.1 }\n  , { series: "New York", date: "2006-01", value: 4.9 }\n  , { series: "New York", date: "2008-01", value: 5.3 }\n  , { series: "New York", date: "2010-01", value: 9.2 }\n  , { series: "New York", date: "2012-01", value: 7.8 }\n  , { series: "Austin", date: "2000-01", value: 2.9 }\n  , { series: "Austin", date: "2002-01", value: 4.8 }\n  , { series: "Austin", date: "2004-01", value: 4.2 }\n  , { series: "Austin", date: "2006-01", value: 3.5 }\n  , { series: "Austin", date: "2008-01", value: 3.8 }\n  , { series: "Austin", date: "2010-01", value: 6.5 }\n  , { series: "Austin", date: "2012-01", value: 5.1 }\n  , { series: "Seattle", date: "2000-01", value: 4.1 }\n  , { series: "Seattle", date: "2002-01", value: 6.3 }\n  , { series: "Seattle", date: "2004-01", value: 5.5 }\n  , { series: "Seattle", date: "2006-01", value: 4.2 }\n  , { series: "Seattle", date: "2008-01", value: 4.5 }\n  , { series: "Seattle", date: "2010-01", value: 7.8 }\n  , { series: "Seattle", date: "2012-01", value: 6.2 }\n  ]';
  var groupedBarData2 = '[ { state: "CA", age: "<10", population: 5038433.0 }\n  , { state: "CA", age: "10-19", population: 5055706.0 }\n  , { state: "CA", age: "20-29", population: 5310481.0 }\n  , { state: "CA", age: "30-39", population: 5354112.0 }\n  , { state: "TX", age: "<10", population: 4131018.0 }\n  , { state: "TX", age: "10-19", population: 3770007.0 }\n  , { state: "TX", age: "20-29", population: 3863019.0 }\n  , { state: "TX", age: "30-39", population: 3696647.0 }\n  , { state: "NY", age: "<10", population: 2275293.0 }\n  , { state: "NY", age: "10-19", population: 2363801.0 }\n  , { state: "NY", age: "20-29", population: 2885845.0 }\n  , { state: "NY", age: "30-39", population: 2754048.0 }\n  ]';
  var fallbackData = function(fields) {
    var generateFieldValue = function(field) {
      if (field.fieldType === "Number") {
        return field.name + ": 0.0";
      }
      ;
      if (field.fieldType === "String") {
        return field.name + (': "' + (field.name + '"'));
      }
      ;
      if (field.fieldType === "Int") {
        return field.name + ": 0";
      }
      ;
      return field.name + ": 0.0";
    };
    var sampleRow = "{ " + (intercalate8(", ")(map63(generateFieldValue)(fields)) + " }");
    var rows4 = intercalate8("\n  , ")([sampleRow, sampleRow, sampleRow]);
    return "[ " + (rows4 + "\n  ]");
  };
  var barChartData = "[ { x: 0.0, y: 30.0 }\n  , { x: 1.0, y: 45.0 }\n  , { x: 2.0, y: 60.0 }\n  , { x: 3.0, y: 55.0 }\n  , { x: 4.0, y: 70.0 }\n  , { x: 5.0, y: 65.0 }\n  , { x: 6.0, y: 80.0 }\n  , { x: 7.0, y: 75.0 }\n  , { x: 8.0, y: 90.0 }\n  , { x: 9.0, y: 85.0 }\n  , { x: 10.0, y: 95.0 }\n  , { x: 11.0, y: 100.0 }\n  ]";
  var anscombeData = "[ { x: 10.0, y: 8.04 }\n  , { x: 8.0, y: 6.95 }\n  , { x: 13.0, y: 7.58 }\n  , { x: 9.0, y: 8.81 }\n  , { x: 11.0, y: 8.33 }\n  , { x: 14.0, y: 9.96 }\n  , { x: 6.0, y: 7.24 }\n  , { x: 4.0, y: 4.26 }\n  , { x: 12.0, y: 10.84 }\n  , { x: 7.0, y: 4.82 }\n  , { x: 5.0, y: 5.68 }\n  ]";
  var generateExampleData = function(dataset) {
    if (dataset.id === "scatter") {
      return scatterData;
    }
    ;
    if (dataset.id === "sinewave") {
      return sineWaveData2;
    }
    ;
    if (dataset.id === "barchart") {
      return barChartData;
    }
    ;
    if (dataset.id === "anscombe") {
      return anscombeData;
    }
    ;
    if (dataset.id === "groupedbar") {
      return groupedBarData2;
    }
    ;
    if (dataset.id === "multiline") {
      return multiLineData2;
    }
    ;
    return fallbackData(dataset.fields);
  };
  var generateProject = function(config) {
    var exampleData = generateExampleData(config.dataset);
    var dataTypeName = config.vizName + "Data";
    var mainFile = (function() {
      if (config.includeMain) {
        return [{
          filename: "Main.purs",
          content: generateMain(config.vizName)(dataTypeName)
        }];
      }
      ;
      return [];
    })();
    var coerceFnName = "coerceTo" + dataTypeName;
    var baseFiles = [{
      filename: config.vizName + "/Unsafe.purs",
      content: generateUnsafe(config.vizName)(dataTypeName)(config.dataset.fields)
    }, {
      filename: config.vizName + "/Model.purs",
      content: generateModel(config.vizName)(dataTypeName)(config.dataset.fields)(exampleData)
    }, {
      filename: config.vizName + "/Draw.purs",
      content: generateDraw(config.vizName)(dataTypeName)(config.dataset.fields)(coerceFnName)
    }, {
      filename: config.vizName + "/index.html",
      content: generateHTML(config.vizName)
    }, {
      filename: config.vizName + "/README.md",
      content: generateREADME(config.vizName)(dataTypeName)(config.dataset.fields)
    }];
    return append111(baseFiles)(mainFile);
  };

  // output/PSD3.Wizard.Wizard/index.js
  var map64 = /* @__PURE__ */ map(functorArray);
  var eq17 = /* @__PURE__ */ eq(/* @__PURE__ */ eqArray(eqString));
  var show41 = /* @__PURE__ */ show(showDifficulty);
  var eq24 = /* @__PURE__ */ eq(eqDifficulty);
  var eq33 = /* @__PURE__ */ eq(/* @__PURE__ */ eqMaybe(eqDifficulty));
  var bind68 = /* @__PURE__ */ bind(bindMaybe);
  var pure42 = /* @__PURE__ */ pure(applicativeMaybe);
  var type_25 = /* @__PURE__ */ type_17(isPropInputType);
  var value18 = /* @__PURE__ */ value12(isPropString);
  var modify_43 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var bind115 = /* @__PURE__ */ bind(bindHalogenM);
  var get12 = /* @__PURE__ */ get(monadStateHalogenM);
  var discard64 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var pure114 = /* @__PURE__ */ pure(applicativeHalogenM);
  var when6 = /* @__PURE__ */ when(applicativeHalogenM);
  var ChooseDataset = /* @__PURE__ */ (function() {
    function ChooseDataset2() {
    }
    ;
    ChooseDataset2.value = new ChooseDataset2();
    return ChooseDataset2;
  })();
  var NameModule = /* @__PURE__ */ (function() {
    function NameModule2() {
    }
    ;
    NameModule2.value = new NameModule2();
    return NameModule2;
  })();
  var ReviewFiles = /* @__PURE__ */ (function() {
    function ReviewFiles2() {
    }
    ;
    ReviewFiles2.value = new ReviewFiles2();
    return ReviewFiles2;
  })();
  var Download = /* @__PURE__ */ (function() {
    function Download2() {
    }
    ;
    Download2.value = new Download2();
    return Download2;
  })();
  var SelectDataset = /* @__PURE__ */ (function() {
    function SelectDataset2(value0) {
      this.value0 = value0;
    }
    ;
    SelectDataset2.create = function(value0) {
      return new SelectDataset2(value0);
    };
    return SelectDataset2;
  })();
  var SetVizName = /* @__PURE__ */ (function() {
    function SetVizName2(value0) {
      this.value0 = value0;
    }
    ;
    SetVizName2.create = function(value0) {
      return new SetVizName2(value0);
    };
    return SetVizName2;
  })();
  var ToggleIncludeMain = /* @__PURE__ */ (function() {
    function ToggleIncludeMain2() {
    }
    ;
    ToggleIncludeMain2.value = new ToggleIncludeMain2();
    return ToggleIncludeMain2;
  })();
  var NextStep = /* @__PURE__ */ (function() {
    function NextStep2() {
    }
    ;
    NextStep2.value = new NextStep2();
    return NextStep2;
  })();
  var PreviousStep = /* @__PURE__ */ (function() {
    function PreviousStep2() {
    }
    ;
    PreviousStep2.value = new PreviousStep2();
    return PreviousStep2;
  })();
  var GoToStep = /* @__PURE__ */ (function() {
    function GoToStep2(value0) {
      this.value0 = value0;
    }
    ;
    GoToStep2.create = function(value0) {
      return new GoToStep2(value0);
    };
    return GoToStep2;
  })();
  var GenerateFiles = /* @__PURE__ */ (function() {
    function GenerateFiles2() {
    }
    ;
    GenerateFiles2.value = new GenerateFiles2();
    return GenerateFiles2;
  })();
  var DownloadZip = /* @__PURE__ */ (function() {
    function DownloadZip2() {
    }
    ;
    DownloadZip2.value = new DownloadZip2();
    return DownloadZip2;
  })();
  var CopyToClipboard = /* @__PURE__ */ (function() {
    function CopyToClipboard2() {
    }
    ;
    CopyToClipboard2.value = new CopyToClipboard2();
    return CopyToClipboard2;
  })();
  var SetDifficultyFilter = /* @__PURE__ */ (function() {
    function SetDifficultyFilter2(value0) {
      this.value0 = value0;
    }
    ;
    SetDifficultyFilter2.create = function(value0) {
      return new SetDifficultyFilter2(value0);
    };
    return SetDifficultyFilter2;
  })();
  var renderReviewFiles = function(state3) {
    var renderFile = function(file) {
      return details([classes(["wizard__file"])])([summary_([text5(file.filename)]), pre([classes(["wizard__code"])])([code_([text5(file.content)])])]);
    };
    return div2([classes(["wizard__step-content"])])([h2_([text5("Review Generated Files")]), p_([text5("Preview the files that will be generated for your project.")]), div2([classes(["wizard__file-list"])])(map64(renderFile)(state3.generatedFiles))]);
  };
  var renderHeader = function(state3) {
    return header([classes(["wizard__header"])])([h1_([text5("PSD3 Visualization Wizard")]), p([classes(["wizard__subtitle"])])([text5("Create a new PSD3 visualization project in 4 easy steps")])]);
  };
  var renderDownload = function(state3) {
    return div2([classes(["wizard__step-content wizard__step-content--centered"])])([h2_([text5("Download Your Project")]), p_([text5("Your visualization project is ready! Download it as a zip file or copy the code to your clipboard.")]), div2([classes(["wizard__download-options"])])([button([classes(["wizard__btn wizard__btn--primary wizard__btn--large"]), onClick(function(v) {
      return DownloadZip.value;
    })])([text5("\u{1F4E6} Download " + (state3.vizName + ".zip"))]), button([classes(["wizard__btn wizard__btn--secondary wizard__btn--large"]), onClick(function(v) {
      return CopyToClipboard.value;
    })])([text5("\u{1F4CB} Copy to Clipboard")])]), div2([classes(["wizard__next-steps"])])([h3_([text5("Next Steps")]), ol_([li_([text5("Extract the zip file to your project directory")]), li_([text5("Add your dependencies to spago.dhall or package.json")]), li_([text5("Customize the visualization in Draw.purs")]), li_([text5("Build with 'spago build'")]), li_([text5("Open index.html in your browser")])])])]);
  };
  var renderChooseDataset = function(state3) {
    var toLowerCase = (function() {
      var toLower2 = function(c) {
        var $73 = c >= "A" && c <= "Z";
        if ($73) {
          return fromMaybe(c)(fromCharCode3(toCharCode2(c) + 32 | 0));
        }
        ;
        return c;
      };
      var $151 = map64(toLower2);
      return function($152) {
        return fromCharArray($151(toCharArray($152)));
      };
    })();
    var intercalate9 = function(sep) {
      return function(arr) {
        return maybe("")(function(v) {
          var $75 = eq17(v.tail)([]);
          if ($75) {
            return v.head;
          }
          ;
          return v.head + (sep + intercalate9(sep)(v.tail));
        })(uncons2(arr));
      };
    };
    var renderDatasetCard = function(dataset) {
      var isSelected = (function() {
        if (state3.selectedDataset instanceof Just) {
          return state3.selectedDataset.value0.id === dataset.id;
        }
        ;
        if (state3.selectedDataset instanceof Nothing) {
          return false;
        }
        ;
        throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 180, column 22 - line 182, column 27): " + [state3.selectedDataset.constructor.name]);
      })();
      var cardClass = "dataset-card" + (function() {
        if (isSelected) {
          return " dataset-card--selected";
        }
        ;
        return "";
      })();
      return div2([classes([cardClass]), onClick(function(v) {
        return new SelectDataset(dataset);
      })])([div2([classes(["dataset-card__header"])])([h3_([text5(dataset.name)]), span3([classes(["difficulty-badge difficulty-badge--" + toLowerCase(show41(dataset.difficulty))])])([text5(show41(dataset.difficulty))])]), p([classes(["dataset-card__description"])])([text5(dataset.description)]), div2([classes(["dataset-card__info"])])([strong_([text5("Fields: ")]), text5(intercalate9(", ")(map64(function(f) {
        return f.name + (": " + f.fieldType);
      })(dataset.fields)))]), div2([classes(["dataset-card__viz"])])([strong_([text5("Suggested: ")]), text5(dataset.suggestedViz)]), div2([classes(["dataset-card__note"])])([text5(dataset.educationalNote)])]);
    };
    var filteredDatasets = (function() {
      if (state3.filterDifficulty instanceof Nothing) {
        return allDatasets;
      }
      ;
      if (state3.filterDifficulty instanceof Just) {
        return filter2(function(d9) {
          return eq24(d9.difficulty)(state3.filterDifficulty.value0);
        })(allDatasets);
      }
      ;
      throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 173, column 24 - line 175, column 79): " + [state3.filterDifficulty.constructor.name]);
    })();
    return div2([classes(["wizard__step-content"])])([h2_([text5("Choose a Dataset")]), p_([text5("Select an example dataset to get started. Each dataset includes sample data and suggestions for visualizations.")]), div2([classes(["wizard__filters"])])([label_([text5("Filter by difficulty:")]), button([classes(["filter-btn" + (function() {
      var $83 = eq33(state3.filterDifficulty)(Nothing.value);
      if ($83) {
        return " filter-btn--active";
      }
      ;
      return "";
    })()]), onClick(function(v) {
      return new SetDifficultyFilter(Nothing.value);
    })])([text5("All")]), button([classes(["filter-btn" + (function() {
      var $84 = eq33(state3.filterDifficulty)(new Just(Beginner.value));
      if ($84) {
        return " filter-btn--active";
      }
      ;
      return "";
    })()]), onClick(function(v) {
      return new SetDifficultyFilter(new Just(Beginner.value));
    })])([text5("Beginner")]), button([classes(["filter-btn" + (function() {
      var $85 = eq33(state3.filterDifficulty)(new Just(Intermediate.value));
      if ($85) {
        return " filter-btn--active";
      }
      ;
      return "";
    })()]), onClick(function(v) {
      return new SetDifficultyFilter(new Just(Intermediate.value));
    })])([text5("Intermediate")])]), div2([classes(["wizard__dataset-grid"])])(map64(renderDatasetCard)(filteredDatasets))]);
  };
  var isValidModuleName = function(name16) {
    var all4 = function(pred) {
      return function(arr) {
        var v = uncons2(arr);
        if (v instanceof Nothing) {
          return true;
        }
        ;
        if (v instanceof Just) {
          return pred(v.value0.head) && all4(pred)(v.value0.tail);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 458, column 20 - line 460, column 58): " + [v.constructor.name]);
      };
    };
    var isUpperCase = function(c) {
      var code2 = toCharCode2(c);
      return code2 >= 65 && code2 <= 90;
    };
    var isLowerCase = function(c) {
      var code2 = toCharCode2(c);
      return code2 >= 97 && code2 <= 122;
    };
    var isDigitChar = function(c) {
      var code2 = toCharCode2(c);
      return code2 >= 48 && code2 <= 57;
    };
    var isAlphaNum = function(c) {
      return isUpperCase(c) || (isLowerCase(c) || isDigitChar(c));
    };
    var chars = toCharArray(name16);
    if (chars.length === 0) {
      return false;
    }
    ;
    return fromMaybe(false)(bind68(head2(chars))(function(first2) {
      return pure42(isUpperCase(first2) && all4(isAlphaNum)(chars));
    }));
  };
  var renderNameModule = function(state3) {
    return div2([classes(["wizard__step-content"])])([h2_([text5("Name Your Visualization")]), p_([text5("Choose a name for your visualization module. It should be a valid PureScript module name (CamelCase, starting with uppercase).")]), div2([classes(["wizard__form-group"])])([label4([$$for("viz-name")])([text5("Visualization Name")]), input2([type_25(InputText.value), id2("viz-name"), value18(state3.vizName), placeholder3("e.g., MyScatterPlot"), onValueInput(SetVizName.create), classes(["wizard__input"])]), (function() {
      var $91 = isValidModuleName(state3.vizName) || state3.vizName === "";
      if ($91) {
        return div_([]);
      }
      ;
      return div2([classes(["wizard__error"])])([text5("Module name must start with uppercase and contain only letters and numbers")]);
    })()]), div2([classes(["wizard__form-group"])])([label_([input2([type_25(InputCheckbox.value), checked2(state3.includeMain), onChecked(function(v) {
      return ToggleIncludeMain.value;
    })]), text5(" Include Main.purs (for bundling with spago)")]), p([classes(["wizard__help-text"])])([text5("Main.purs provides an entry point for bundling your visualization. Check this if you plan to use 'spago bundle'.")])]), (function() {
      var $92 = state3.vizName !== "" && isValidModuleName(state3.vizName);
      if ($92) {
        return div2([classes(["wizard__preview"])])([h3_([text5("Files that will be generated:")]), ul_([li_([text5(state3.vizName + "/Unsafe.purs")]), li_([text5(state3.vizName + "/Model.purs")]), li_([text5(state3.vizName + "/Draw.purs")]), li_([text5(state3.vizName + "/index.html")]), li_([text5(state3.vizName + "/README.md")]), (function() {
          if (state3.includeMain) {
            return li_([text5("Main.purs")]);
          }
          ;
          return text5("");
        })()])]);
      }
      ;
      return div_([]);
    })()]);
  };
  var renderStepContent = function(dictMonadAff) {
    return function(state3) {
      return div2([classes(["wizard__content"])])([(function() {
        if (state3.currentStep instanceof ChooseDataset) {
          return renderChooseDataset(state3);
        }
        ;
        if (state3.currentStep instanceof NameModule) {
          return renderNameModule(state3);
        }
        ;
        if (state3.currentStep instanceof ReviewFiles) {
          return renderReviewFiles(state3);
        }
        ;
        if (state3.currentStep instanceof Download) {
          return renderDownload(state3);
        }
        ;
        throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 131, column 7 - line 135, column 41): " + [state3.currentStep.constructor.name]);
      })()]);
    };
  };
  var initialState3 = /* @__PURE__ */ (function() {
    return {
      currentStep: ChooseDataset.value,
      selectedDataset: Nothing.value,
      vizName: "",
      includeMain: true,
      generatedFiles: [],
      filterDifficulty: Nothing.value
    };
  })();
  var eqWizardStep = {
    eq: function(x30) {
      return function(y28) {
        if (x30 instanceof ChooseDataset && y28 instanceof ChooseDataset) {
          return true;
        }
        ;
        if (x30 instanceof NameModule && y28 instanceof NameModule) {
          return true;
        }
        ;
        if (x30 instanceof ReviewFiles && y28 instanceof ReviewFiles) {
          return true;
        }
        ;
        if (x30 instanceof Download && y28 instanceof Download) {
          return true;
        }
        ;
        return false;
      };
    }
  };
  var eq42 = /* @__PURE__ */ eq(eqWizardStep);
  var renderNavigation = function(state3) {
    var canProceed = (function() {
      if (state3.currentStep instanceof ChooseDataset) {
        return isJust(state3.selectedDataset);
      }
      ;
      if (state3.currentStep instanceof NameModule) {
        return state3.vizName !== "" && isValidModuleName(state3.vizName);
      }
      ;
      if (state3.currentStep instanceof ReviewFiles) {
        return true;
      }
      ;
      if (state3.currentStep instanceof Download) {
        return true;
      }
      ;
      throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 363, column 18 - line 367, column 23): " + [state3.currentStep.constructor.name]);
    })();
    return div2([classes(["wizard__navigation"])])([button([classes(["wizard__btn wizard__btn--secondary"]), onClick(function(v) {
      return PreviousStep.value;
    }), disabled10(eq42(state3.currentStep)(ChooseDataset.value))])([text5("\u2190 Previous")]), button([classes(["wizard__btn wizard__btn--primary"]), onClick(function(v) {
      return NextStep.value;
    }), disabled10(!canProceed)])([text5((function() {
      var $98 = eq42(state3.currentStep)(Download.value);
      if ($98) {
        return "Restart";
      }
      ;
      return "Next \u2192";
    })())])]);
  };
  var renderProgressBar = function(state3) {
    var stepIndex = function(v) {
      if (v instanceof ChooseDataset) {
        return 0;
      }
      ;
      if (v instanceof NameModule) {
        return 1;
      }
      ;
      if (v instanceof ReviewFiles) {
        return 2;
      }
      ;
      if (v instanceof Download) {
        return 3;
      }
      ;
      throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 120, column 5 - line 120, column 35): " + [v.constructor.name]);
    };
    var renderStep = function(step5) {
      return function(num) {
        return function(label5) {
          var isCompleted = stepIndex(state3.currentStep) > stepIndex(step5);
          var isActive = eq42(state3.currentStep)(step5);
          var classes2 = "wizard__step" + ((function() {
            if (isActive) {
              return " wizard__step--active";
            }
            ;
            return "";
          })() + (function() {
            if (isCompleted) {
              return " wizard__step--completed";
            }
            ;
            return "";
          })());
          return div2([classes([classes2]), onClick(function(v) {
            return new GoToStep(step5);
          })])([div2([classes(["wizard__step-number"])])([text5(num)]), div2([classes(["wizard__step-label"])])([text5(label5)])]);
        };
      };
    };
    return div2([classes(["wizard__progress"])])([renderStep(ChooseDataset.value)("1")("Choose Dataset"), renderStep(NameModule.value)("2")("Name Module"), renderStep(ReviewFiles.value)("3")("Review Files"), renderStep(Download.value)("4")("Download")]);
  };
  var render56 = function(dictMonadAff) {
    var renderStepContent1 = renderStepContent(dictMonadAff);
    return function(state3) {
      return div2([classes(["wizard"])])([renderHeader(state3), renderProgressBar(state3), renderStepContent1(state3), renderNavigation(state3)]);
    };
  };
  var canGoToStep = function(state3) {
    return function(step5) {
      if (step5 instanceof ChooseDataset) {
        return true;
      }
      ;
      if (step5 instanceof NameModule) {
        return isJust(state3.selectedDataset);
      }
      ;
      if (step5 instanceof ReviewFiles) {
        return isJust(state3.selectedDataset) && (state3.vizName !== "" && isValidModuleName(state3.vizName));
      }
      ;
      if (step5 instanceof Download) {
        return isJust(state3.selectedDataset) && (state3.vizName !== "" && isValidModuleName(state3.vizName));
      }
      ;
      throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 435, column 26 - line 439, column 101): " + [step5.constructor.name]);
    };
  };
  var handleAction48 = function(dictMonadAff) {
    var liftAff36 = liftAff(monadAffHalogenM(dictMonadAff));
    var liftEffect51 = liftEffect(monadEffectHalogenM(dictMonadAff.MonadEffect0()));
    return function(v) {
      if (v instanceof SelectDataset) {
        return modify_43(function(v1) {
          var $104 = {};
          for (var $105 in v1) {
            if ({}.hasOwnProperty.call(v1, $105)) {
              $104[$105] = v1[$105];
            }
            ;
          }
          ;
          $104.selectedDataset = new Just(v.value0);
          return $104;
        });
      }
      ;
      if (v instanceof SetVizName) {
        return modify_43(function(v1) {
          var $108 = {};
          for (var $109 in v1) {
            if ({}.hasOwnProperty.call(v1, $109)) {
              $108[$109] = v1[$109];
            }
            ;
          }
          ;
          $108.vizName = trim(v.value0);
          return $108;
        });
      }
      ;
      if (v instanceof ToggleIncludeMain) {
        return modify_43(function(s) {
          var $112 = {};
          for (var $113 in s) {
            if ({}.hasOwnProperty.call(s, $113)) {
              $112[$113] = s[$113];
            }
            ;
          }
          ;
          $112.includeMain = !s.includeMain;
          return $112;
        });
      }
      ;
      if (v instanceof NextStep) {
        return bind115(get12)(function(state3) {
          if (state3.currentStep instanceof ChooseDataset) {
            return modify_43(function(v1) {
              var $116 = {};
              for (var $117 in v1) {
                if ({}.hasOwnProperty.call(v1, $117)) {
                  $116[$117] = v1[$117];
                }
                ;
              }
              ;
              $116.currentStep = NameModule.value;
              return $116;
            });
          }
          ;
          if (state3.currentStep instanceof NameModule) {
            return discard64(handleAction48(dictMonadAff)(GenerateFiles.value))(function() {
              return modify_43(function(v1) {
                var $119 = {};
                for (var $120 in v1) {
                  if ({}.hasOwnProperty.call(v1, $120)) {
                    $119[$120] = v1[$120];
                  }
                  ;
                }
                ;
                $119.currentStep = ReviewFiles.value;
                return $119;
              });
            });
          }
          ;
          if (state3.currentStep instanceof ReviewFiles) {
            return modify_43(function(v1) {
              var $122 = {};
              for (var $123 in v1) {
                if ({}.hasOwnProperty.call(v1, $123)) {
                  $122[$123] = v1[$123];
                }
                ;
              }
              ;
              $122.currentStep = Download.value;
              return $122;
            });
          }
          ;
          if (state3.currentStep instanceof Download) {
            return modify_43(function(v1) {
              var $125 = {};
              for (var $126 in v1) {
                if ({}.hasOwnProperty.call(v1, $126)) {
                  $125[$126] = v1[$126];
                }
                ;
              }
              ;
              $125.currentStep = ChooseDataset.value;
              return $125;
            });
          }
          ;
          throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 383, column 5 - line 389, column 62): " + [state3.currentStep.constructor.name]);
        });
      }
      ;
      if (v instanceof PreviousStep) {
        return bind115(get12)(function(state3) {
          if (state3.currentStep instanceof NameModule) {
            return modify_43(function(v1) {
              var $129 = {};
              for (var $130 in v1) {
                if ({}.hasOwnProperty.call(v1, $130)) {
                  $129[$130] = v1[$130];
                }
                ;
              }
              ;
              $129.currentStep = ChooseDataset.value;
              return $129;
            });
          }
          ;
          if (state3.currentStep instanceof ReviewFiles) {
            return modify_43(function(v1) {
              var $132 = {};
              for (var $133 in v1) {
                if ({}.hasOwnProperty.call(v1, $133)) {
                  $132[$133] = v1[$133];
                }
                ;
              }
              ;
              $132.currentStep = NameModule.value;
              return $132;
            });
          }
          ;
          if (state3.currentStep instanceof Download) {
            return modify_43(function(v1) {
              var $135 = {};
              for (var $136 in v1) {
                if ({}.hasOwnProperty.call(v1, $136)) {
                  $135[$136] = v1[$136];
                }
                ;
              }
              ;
              $135.currentStep = ReviewFiles.value;
              return $135;
            });
          }
          ;
          if (state3.currentStep instanceof ChooseDataset) {
            return pure114(unit);
          }
          ;
          throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 393, column 5 - line 397, column 33): " + [state3.currentStep.constructor.name]);
        });
      }
      ;
      if (v instanceof GoToStep) {
        return bind115(get12)(function(state3) {
          return when6(canGoToStep(state3)(v.value0))(modify_43(function(v1) {
            var $138 = {};
            for (var $139 in v1) {
              if ({}.hasOwnProperty.call(v1, $139)) {
                $138[$139] = v1[$139];
              }
              ;
            }
            ;
            $138.currentStep = v.value0;
            return $138;
          }));
        });
      }
      ;
      if (v instanceof GenerateFiles) {
        return bind115(get12)(function(state3) {
          if (state3.selectedDataset instanceof Just) {
            var config = {
              vizName: state3.vizName,
              dataset: state3.selectedDataset.value0,
              includeMain: state3.includeMain
            };
            var files2 = generateProject(config);
            return modify_43(function(v1) {
              var $143 = {};
              for (var $144 in v1) {
                if ({}.hasOwnProperty.call(v1, $144)) {
                  $143[$144] = v1[$144];
                }
                ;
              }
              ;
              $143.generatedFiles = files2;
              return $143;
            });
          }
          ;
          if (state3.selectedDataset instanceof Nothing) {
            return pure114(unit);
          }
          ;
          throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 407, column 5 - line 418, column 27): " + [state3.selectedDataset.constructor.name]);
        });
      }
      ;
      if (v instanceof DownloadZip) {
        return bind115(get12)(function(state3) {
          return liftAff36(downloadAsZip(state3.vizName)(state3.generatedFiles));
        });
      }
      ;
      if (v instanceof CopyToClipboard) {
        return bind115(get12)(function(state3) {
          return bind115(liftEffect51(copyFilesToClipboard(state3.generatedFiles)))(function(success) {
            return pure114(unit);
          });
        });
      }
      ;
      if (v instanceof SetDifficultyFilter) {
        return modify_43(function(v1) {
          var $147 = {};
          for (var $148 in v1) {
            if ({}.hasOwnProperty.call(v1, $148)) {
              $147[$148] = v1[$148];
            }
            ;
          }
          ;
          $147.filterDifficulty = v.value0;
          return $147;
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Wizard.Wizard (line 371, column 16 - line 431, column 50): " + [v.constructor.name]);
    };
  };
  var component55 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: $$const(initialState3),
      render: render56(monadAffAff),
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        initialize: defaultEval.initialize,
        finalize: defaultEval.finalize,
        handleAction: handleAction48(monadAffAff)
      })
    });
  })();

  // output/Routing.Parser/index.js
  var map65 = /* @__PURE__ */ map(functorArray);
  var discard65 = /* @__PURE__ */ discard(discardUnit)(bindMaybe);
  var guard2 = /* @__PURE__ */ guard(alternativeMaybe);
  var apply4 = /* @__PURE__ */ apply(applyMaybe);
  var map118 = /* @__PURE__ */ map(functorMaybe);
  var fromFoldable29 = /* @__PURE__ */ fromFoldable2(ordString)(foldableArray);
  var traverse4 = /* @__PURE__ */ traverse(traversableArray)(applicativeMaybe);
  var fromFoldable113 = /* @__PURE__ */ fromFoldable(foldableArray);
  var append22 = /* @__PURE__ */ append(semigroupList);
  var map210 = /* @__PURE__ */ map(functorList);
  var fromFoldable210 = /* @__PURE__ */ fromFoldable(foldableMaybe);
  var parseQueryPart = function(decoder) {
    var part2tuple = function(input3) {
      var keyVal = map65(decoder)(split("=")(input3));
      return discard65(guard2(length4(keyVal) <= 2))(function() {
        return apply4(map118(Tuple.create)(head2(keyVal)))(index2(keyVal)(1));
      });
    };
    var $27 = map118(fromFoldable29);
    var $28 = traverse4(part2tuple);
    var $29 = split("&");
    return function($30) {
      return $27($28($29($30)));
    };
  };
  var parse7 = function(decoder) {
    return function(hash2) {
      var pathParts = function(str2) {
        var parts = fromFoldable113(map65(function($31) {
          return Path4.create(decoder($31));
        })(split("/")(str2)));
        var v2 = unsnoc(parts);
        if (v2 instanceof Just && (v2.value0.last instanceof Path4 && v2.value0.last.value0 === "")) {
          return v2.value0.init;
        }
        ;
        return parts;
      };
      var v = map118(flip(splitAt2)(hash2))(indexOf2("?")(hash2));
      if (v instanceof Just) {
        return append22(pathParts(v.value0.before))(map210(Query2.create)(fromFoldable210(parseQueryPart(decoder)(drop4(1)(v.value0.after)))));
      }
      ;
      if (v instanceof Nothing) {
        return pathParts(hash2);
      }
      ;
      throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [v.constructor.name]);
    };
  };

  // output/Routing/index.js
  var fromJust6 = /* @__PURE__ */ fromJust();
  var matchWith = function(decoder) {
    return function(matcher) {
      var $2 = runMatch(matcher);
      var $3 = parse7(decoder);
      return function($4) {
        return $2($3($4));
      };
    };
  };
  var match = /* @__PURE__ */ matchWith(function($6) {
    return fromJust6($$decodeURIComponent($6));
  });

  // output/Web.HTML.Event.HashChangeEvent.EventTypes/index.js
  var hashchange = "hashchange";

  // output/Routing.Hash/index.js
  var bind69 = /* @__PURE__ */ bind(bindEffect);
  var map66 = /* @__PURE__ */ map(functorEffect);
  var bindFlipped10 = /* @__PURE__ */ bindFlipped(bindEffect);
  var join3 = /* @__PURE__ */ join(bindEffect);
  var apply5 = /* @__PURE__ */ apply(applyEffect);
  var pure43 = /* @__PURE__ */ pure(applicativeEffect);
  var voidRight3 = /* @__PURE__ */ voidRight(functorEffect);
  var setHash2 = function(h) {
    return bind69(bind69(windowImpl)(location))(setHash(h));
  };
  var getHash = /* @__PURE__ */ bind69(/* @__PURE__ */ bind69(windowImpl)(location))(/* @__PURE__ */ (function() {
    var $16 = map66((function() {
      var $18 = fromMaybe("");
      var $19 = stripPrefix("#");
      return function($20) {
        return $18($19($20));
      };
    })());
    return function($17) {
      return $16(hash($17));
    };
  })());
  var foldHashes = function(cb) {
    return function(init5) {
      return function __do4() {
        var ref2 = bindFlipped10($$new)(bindFlipped10(init5)(getHash))();
        var win = map66(toEventTarget)(windowImpl)();
        var listener = eventListener(function(v) {
          return bindFlipped10(flip(write)(ref2))(join3(apply5(map66(cb)(read(ref2)))(getHash)));
        })();
        addEventListener(hashchange)(listener)(false)(win)();
        return removeEventListener(hashchange)(listener)(false)(win);
      };
    };
  };
  var matchesWith = function(dictFoldable) {
    var indexl2 = indexl(dictFoldable);
    return function(parser) {
      return function(cb) {
        var go2 = function(a2) {
          var $21 = maybe(pure43(a2))(function(b2) {
            return voidRight3(new Just(b2))(cb(a2)(b2));
          });
          var $22 = indexl2(0);
          return function($23) {
            return $21($22(parser($23)));
          };
        };
        return foldHashes(go2)(go2(Nothing.value));
      };
    };
  };
  var matches2 = /* @__PURE__ */ (function() {
    var $24 = matchesWith(foldableEither);
    return function($25) {
      return $24(match($25));
    };
  })();

  // output/PSD3.Main/index.js
  var bind70 = /* @__PURE__ */ bind(bindHalogenM);
  var liftEffect50 = /* @__PURE__ */ liftEffect(/* @__PURE__ */ monadEffectHalogenM(monadEffectAff));
  var discard66 = /* @__PURE__ */ discard(discardUnit)(bindHalogenM);
  var when7 = /* @__PURE__ */ when(applicativeHalogenM);
  var pure44 = /* @__PURE__ */ pure(applicativeHalogenM);
  var modify_44 = /* @__PURE__ */ modify_(monadStateHalogenM);
  var spy6 = /* @__PURE__ */ spy();
  var slot_19 = /* @__PURE__ */ slot_();
  var slot_110 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "home";
    }
  })(ordUnit);
  var slot_25 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "gettingStarted";
    }
  })(ordUnit);
  var slot_32 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "wizard";
    }
  })(ordUnit);
  var slot_42 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "howtoIndex";
    }
  })(ordUnit);
  var slot_52 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "reference";
    }
  })(ordUnit);
  var slot_62 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "about";
    }
  })(ordUnit);
  var slot_72 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "concepts";
    }
  })(ordUnit);
  var slot_82 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "patterns";
    }
  })(ordUnit);
  var slot_92 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "simpleCharts1";
    }
  })(ordUnit);
  var slot_102 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "simpleCharts2";
    }
  })(ordUnit);
  var slot_112 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "dataFlowViz";
    }
  })(ordUnit);
  var slot_122 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "movement";
    }
  })(ordUnit);
  var slot_132 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "hierarchies";
    }
  })(ordUnit);
  var slot_142 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "interpreters";
    }
  })(ordUnit);
  var slot_152 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "codeExplorer";
    }
  })(ordUnit);
  var component1 = /* @__PURE__ */ component6(monadAffAff);
  var slot_162 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "codeExploration";
    }
  })(ordUnit);
  var slot_172 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "wealthHealth";
    }
  })(ordUnit);
  var component210 = /* @__PURE__ */ component54(monadAffAff)(monadEffectAff);
  var slot_182 = /* @__PURE__ */ slot_19({
    reflectSymbol: function() {
      return "codeAtlas";
    }
  })(ordUnit);
  var Initialize49 = /* @__PURE__ */ (function() {
    function Initialize50() {
    }
    ;
    Initialize50.value = new Initialize50();
    return Initialize50;
  })();
  var Navigate = /* @__PURE__ */ (function() {
    function Navigate2(value0) {
      this.value0 = value0;
    }
    ;
    Navigate2.create = function(value0) {
      return new Navigate2(value0);
    };
    return Navigate2;
  })();
  var RouteChanged = /* @__PURE__ */ (function() {
    function RouteChanged2(value0) {
      this.value0 = value0;
    }
    ;
    RouteChanged2.create = function(value0) {
      return new RouteChanged2(value0);
    };
    return RouteChanged2;
  })();
  var handleAction49 = function(v) {
    if (v instanceof Initialize49) {
      return bind70(liftEffect50(function __do4() {
        var w = windowImpl();
        var loc = location(w)();
        return hash(loc)();
      }))(function(currentHash) {
        return discard66(when7(currentHash === "" || (currentHash === "#" || currentHash === "#/"))(liftEffect50(setHash2(routeToPath(Home.value)))))(function() {
          return bind70(subscribe2(makeEmitter(function(push2) {
            return matches2(routing)(function(v1) {
              return function(newRoute) {
                return push2(new RouteChanged(new Just(newRoute)));
              };
            });
          })))(function() {
            return pure44(unit);
          });
        });
      });
    }
    ;
    if (v instanceof Navigate) {
      return liftEffect50(setHash2(routeToPath(v.value0)));
    }
    ;
    if (v instanceof RouteChanged) {
      if (v.value0 instanceof Just) {
        return modify_44(function(v1) {
          var $82 = {};
          for (var $83 in v1) {
            if ({}.hasOwnProperty.call(v1, $83)) {
              $82[$83] = v1[$83];
            }
            ;
          }
          ;
          $82.currentRoute = v.value0.value0;
          return $82;
        });
      }
      ;
      if (v.value0 instanceof Nothing) {
        return modify_44(function(v1) {
          var $86 = {};
          for (var $87 in v1) {
            if ({}.hasOwnProperty.call(v1, $87)) {
              $86[$87] = v1[$87];
            }
            ;
          }
          ;
          $86.currentRoute = NotFound.value;
          return $86;
        });
      }
      ;
      throw new Error("Failed pattern match at PSD3.Main (line 212, column 5 - line 215, column 57): " + [v.value0.constructor.name]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Main (line 188, column 16 - line 215, column 57): " + [v.constructor.name]);
  };
  var _wizard = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _wealthHealth2 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _simpleCharts2 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _simpleCharts1 = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _reference = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _patterns = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _movement = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _interpreters = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _howtoIndex = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _home = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _hierarchies = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _gettingStarted = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _dataFlowViz = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _concepts = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _codeExplorer = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _codeExploration = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _codeAtlas = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var _about = /* @__PURE__ */ (function() {
    return $$Proxy.value;
  })();
  var renderPage = function(route) {
    var v = spy6("Route is")(route);
    if (v instanceof Home) {
      return slot_110(_home)(unit)(component7)(unit);
    }
    ;
    if (v instanceof GettingStarted) {
      return slot_25(_gettingStarted)(unit)(component41)(unit);
    }
    ;
    if (v instanceof Wizard) {
      return slot_32(_wizard)(unit)(component55)(unit);
    }
    ;
    if (v instanceof HowtoIndex) {
      return slot_42(_howtoIndex)(unit)(component9)(unit);
    }
    ;
    if (v instanceof Reference) {
      return slot_52(_reference)(unit)(component40)(Reference.value);
    }
    ;
    if (v instanceof ReferenceModule) {
      return slot_52(_reference)(unit)(component40)(new ReferenceModule(v.value0));
    }
    ;
    if (v instanceof About) {
      return slot_62(_about)(unit)(component43)(unit);
    }
    ;
    if (v instanceof UnderstandingConcepts) {
      return slot_72(_concepts)(unit)(component44)(unit);
    }
    ;
    if (v instanceof UnderstandingPatterns) {
      return slot_82(_patterns)(unit)(component50)(unit);
    }
    ;
    if (v instanceof UnderstandingPhilosophy) {
      return slot_62(_about)(unit)(component43)(unit);
    }
    ;
    if (v instanceof SimpleCharts1) {
      return slot_92(_simpleCharts1)(unit)(component51)(unit);
    }
    ;
    if (v instanceof SimpleCharts2) {
      return slot_102(_simpleCharts2)(unit)(component52)(unit);
    }
    ;
    if (v instanceof DataFlowViz) {
      return slot_112(_dataFlowViz)(unit)(component46)(unit);
    }
    ;
    if (v instanceof Movement) {
      return slot_122(_movement)(unit)(component49)(unit);
    }
    ;
    if (v instanceof Hierarchies) {
      return slot_132(_hierarchies)(unit)(component47)(unit);
    }
    ;
    if (v instanceof Interpreters) {
      return slot_142(_interpreters)(unit)(component48)(unit);
    }
    ;
    if (v instanceof CodeExplorer) {
      return slot_152(_codeExplorer)(unit)(component1)(unit);
    }
    ;
    if (v instanceof Explore) {
      return slot_162(_codeExploration)(unit)(component4)(v.value0);
    }
    ;
    if (v instanceof WealthHealth) {
      return slot_172(_wealthHealth2)(unit)(component210)(unit);
    }
    ;
    if (v instanceof CodeAtlas) {
      return slot_182(_codeAtlas)(unit)(component2)(unit);
    }
    ;
    if (v instanceof NotFound) {
      return div2([classes(["not-found"])])([h1_([text5("404 - Page Not Found")]), p_([text5("The page you're looking for doesn't exist.")]), a([href4("#" + routeToPath(Home.value))])([text5("Go to Home")])]);
    }
    ;
    throw new Error("Failed pattern match at PSD3.Main (line 116, column 20 - line 185, column 8): " + [v.constructor.name]);
  };
  var render57 = function(state3) {
    return div2([classes(["app"])])([main([classes(["app__main"])])([renderPage(state3.currentRoute)])]);
  };
  var component56 = /* @__PURE__ */ (function() {
    return mkComponent({
      initialState: function(v) {
        return {
          currentRoute: Home.value
        };
      },
      render: render57,
      "eval": mkEval({
        handleQuery: defaultEval.handleQuery,
        receive: defaultEval.receive,
        finalize: defaultEval.finalize,
        handleAction: handleAction49,
        initialize: new Just(Initialize49.value)
      })
    });
  })();
  var main2 = /* @__PURE__ */ runHalogenAff(/* @__PURE__ */ bind(bindAff)(awaitBody)(function(body2) {
    return runUI2(component56)(unit)(body2);
  }));

  // <stdin>
  main2();
})();
